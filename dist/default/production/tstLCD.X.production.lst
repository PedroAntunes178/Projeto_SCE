

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Oct 14 15:55:03 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.30
    40                           ; Generated 15/09/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F18875 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001C                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  008C                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008E                     	;# 
   112  008F                     	;# 
   113  0090                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0110                     	;# 
   134  0110                     	;# 
   135  0111                     	;# 
   136  0112                     	;# 
   137  0112                     	;# 
   138  0113                     	;# 
   139  0114                     	;# 
   140  0114                     	;# 
   141  0115                     	;# 
   142  0116                     	;# 
   143  0116                     	;# 
   144  0117                     	;# 
   145  0119                     	;# 
   146  0119                     	;# 
   147  0119                     	;# 
   148  011A                     	;# 
   149  011A                     	;# 
   150  011A                     	;# 
   151  011B                     	;# 
   152  011B                     	;# 
   153  011B                     	;# 
   154  011B                     	;# 
   155  011B                     	;# 
   156  011C                     	;# 
   157  011C                     	;# 
   158  011C                     	;# 
   159  011D                     	;# 
   160  011D                     	;# 
   161  011D                     	;# 
   162  011E                     	;# 
   163  011E                     	;# 
   164  011E                     	;# 
   165  011F                     	;# 
   166  011F                     	;# 
   167  011F                     	;# 
   168  011F                     	;# 
   169  011F                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172  018E                     	;# 
   173  018F                     	;# 
   174  0190                     	;# 
   175  0191                     	;# 
   176  0192                     	;# 
   177  0196                     	;# 
   178  0197                     	;# 
   179  0198                     	;# 
   180  0199                     	;# 
   181  019A                     	;# 
   182  019B                     	;# 
   183  019C                     	;# 
   184  020C                     	;# 
   185  020C                     	;# 
   186  020D                     	;# 
   187  020E                     	;# 
   188  020F                     	;# 
   189  020F                     	;# 
   190  0210                     	;# 
   191  0210                     	;# 
   192  0211                     	;# 
   193  0211                     	;# 
   194  0212                     	;# 
   195  0212                     	;# 
   196  0213                     	;# 
   197  0214                     	;# 
   198  0215                     	;# 
   199  0215                     	;# 
   200  0216                     	;# 
   201  0216                     	;# 
   202  0217                     	;# 
   203  0217                     	;# 
   204  0218                     	;# 
   205  0218                     	;# 
   206  0219                     	;# 
   207  021A                     	;# 
   208  021B                     	;# 
   209  021B                     	;# 
   210  021C                     	;# 
   211  021C                     	;# 
   212  021D                     	;# 
   213  021D                     	;# 
   214  021E                     	;# 
   215  021F                     	;# 
   216  028C                     	;# 
   217  028C                     	;# 
   218  028D                     	;# 
   219  028D                     	;# 
   220  028E                     	;# 
   221  028F                     	;# 
   222  0290                     	;# 
   223  0290                     	;# 
   224  0291                     	;# 
   225  0292                     	;# 
   226  0292                     	;# 
   227  0293                     	;# 
   228  0293                     	;# 
   229  0294                     	;# 
   230  0295                     	;# 
   231  0296                     	;# 
   232  0296                     	;# 
   233  0297                     	;# 
   234  0298                     	;# 
   235  0298                     	;# 
   236  0299                     	;# 
   237  0299                     	;# 
   238  029A                     	;# 
   239  029B                     	;# 
   240  029C                     	;# 
   241  029C                     	;# 
   242  029D                     	;# 
   243  030C                     	;# 
   244  030C                     	;# 
   245  030D                     	;# 
   246  030E                     	;# 
   247  030F                     	;# 
   248  0310                     	;# 
   249  0310                     	;# 
   250  0311                     	;# 
   251  0312                     	;# 
   252  0313                     	;# 
   253  0314                     	;# 
   254  0314                     	;# 
   255  0315                     	;# 
   256  0316                     	;# 
   257  0317                     	;# 
   258  0318                     	;# 
   259  0318                     	;# 
   260  0319                     	;# 
   261  031A                     	;# 
   262  031B                     	;# 
   263  031C                     	;# 
   264  031C                     	;# 
   265  031D                     	;# 
   266  031E                     	;# 
   267  031F                     	;# 
   268  038C                     	;# 
   269  038C                     	;# 
   270  038D                     	;# 
   271  038E                     	;# 
   272  0390                     	;# 
   273  0390                     	;# 
   274  0391                     	;# 
   275  0392                     	;# 
   276  040C                     	;# 
   277  040D                     	;# 
   278  040E                     	;# 
   279  040F                     	;# 
   280  0410                     	;# 
   281  0411                     	;# 
   282  0416                     	;# 
   283  0416                     	;# 
   284  0417                     	;# 
   285  0418                     	;# 
   286  0418                     	;# 
   287  0419                     	;# 
   288  041A                     	;# 
   289  041A                     	;# 
   290  041B                     	;# 
   291  041C                     	;# 
   292  041C                     	;# 
   293  041D                     	;# 
   294  041E                     	;# 
   295  041F                     	;# 
   296  048C                     	;# 
   297  048C                     	;# 
   298  048D                     	;# 
   299  048E                     	;# 
   300  048F                     	;# 
   301  048F                     	;# 
   302  0490                     	;# 
   303  0491                     	;# 
   304  0492                     	;# 
   305  0492                     	;# 
   306  0493                     	;# 
   307  0494                     	;# 
   308  0495                     	;# 
   309  0495                     	;# 
   310  0496                     	;# 
   311  0497                     	;# 
   312  0498                     	;# 
   313  0499                     	;# 
   314  049A                     	;# 
   315  049B                     	;# 
   316  049C                     	;# 
   317  049D                     	;# 
   318  050C                     	;# 
   319  050C                     	;# 
   320  050D                     	;# 
   321  050E                     	;# 
   322  050F                     	;# 
   323  050F                     	;# 
   324  0510                     	;# 
   325  0511                     	;# 
   326  0512                     	;# 
   327  0512                     	;# 
   328  0513                     	;# 
   329  0514                     	;# 
   330  0515                     	;# 
   331  0515                     	;# 
   332  0516                     	;# 
   333  0517                     	;# 
   334  0518                     	;# 
   335  0519                     	;# 
   336  051A                     	;# 
   337  051B                     	;# 
   338  051C                     	;# 
   339  051D                     	;# 
   340  058C                     	;# 
   341  058C                     	;# 
   342  058D                     	;# 
   343  058E                     	;# 
   344  058F                     	;# 
   345  058F                     	;# 
   346  0590                     	;# 
   347  0591                     	;# 
   348  0592                     	;# 
   349  0593                     	;# 
   350  060C                     	;# 
   351  060D                     	;# 
   352  060E                     	;# 
   353  060F                     	;# 
   354  0610                     	;# 
   355  0611                     	;# 
   356  0612                     	;# 
   357  0613                     	;# 
   358  0614                     	;# 
   359  0616                     	;# 
   360  0617                     	;# 
   361  0618                     	;# 
   362  0619                     	;# 
   363  061A                     	;# 
   364  061B                     	;# 
   365  061C                     	;# 
   366  061D                     	;# 
   367  061E                     	;# 
   368  068C                     	;# 
   369  068D                     	;# 
   370  068E                     	;# 
   371  068F                     	;# 
   372  0690                     	;# 
   373  0691                     	;# 
   374  0692                     	;# 
   375  0693                     	;# 
   376  0694                     	;# 
   377  070C                     	;# 
   378  070D                     	;# 
   379  070E                     	;# 
   380  070F                     	;# 
   381  0710                     	;# 
   382  0711                     	;# 
   383  0712                     	;# 
   384  0713                     	;# 
   385  0714                     	;# 
   386  0716                     	;# 
   387  0717                     	;# 
   388  0718                     	;# 
   389  0719                     	;# 
   390  071A                     	;# 
   391  071B                     	;# 
   392  071C                     	;# 
   393  071D                     	;# 
   394  071E                     	;# 
   395  0796                     	;# 
   396  0797                     	;# 
   397  0798                     	;# 
   398  0799                     	;# 
   399  079A                     	;# 
   400  079B                     	;# 
   401  080C                     	;# 
   402  080D                     	;# 
   403  080E                     	;# 
   404  080F                     	;# 
   405  0810                     	;# 
   406  0811                     	;# 
   407  0812                     	;# 
   408  0813                     	;# 
   409  0814                     	;# 
   410  081A                     	;# 
   411  081B                     	;# 
   412  081C                     	;# 
   413  081D                     	;# 
   414  081E                     	;# 
   415  081F                     	;# 
   416  088C                     	;# 
   417  088D                     	;# 
   418  088E                     	;# 
   419  088F                     	;# 
   420  0890                     	;# 
   421  0891                     	;# 
   422  0892                     	;# 
   423  0893                     	;# 
   424  0895                     	;# 
   425  0896                     	;# 
   426  0897                     	;# 
   427  0898                     	;# 
   428  0899                     	;# 
   429  089A                     	;# 
   430  089B                     	;# 
   431  090C                     	;# 
   432  090E                     	;# 
   433  090F                     	;# 
   434  091F                     	;# 
   435  091F                     	;# 
   436  098F                     	;# 
   437  098F                     	;# 
   438  0990                     	;# 
   439  0991                     	;# 
   440  0992                     	;# 
   441  0993                     	;# 
   442  0994                     	;# 
   443  0995                     	;# 
   444  0996                     	;# 
   445  0997                     	;# 
   446  0E0F                     	;# 
   447  0E10                     	;# 
   448  0E11                     	;# 
   449  0E12                     	;# 
   450  0E13                     	;# 
   451  0E14                     	;# 
   452  0E15                     	;# 
   453  0E16                     	;# 
   454  0E17                     	;# 
   455  0E18                     	;# 
   456  0E19                     	;# 
   457  0E1A                     	;# 
   458  0E1B                     	;# 
   459  0E1C                     	;# 
   460  0E1D                     	;# 
   461  0E1E                     	;# 
   462  0E1F                     	;# 
   463  0E20                     	;# 
   464  0E21                     	;# 
   465  0E22                     	;# 
   466  0E23                     	;# 
   467  0E24                     	;# 
   468  0E25                     	;# 
   469  0E26                     	;# 
   470  0E27                     	;# 
   471  0E28                     	;# 
   472  0E29                     	;# 
   473  0E2A                     	;# 
   474  0E2B                     	;# 
   475  0E2C                     	;# 
   476  0E2D                     	;# 
   477  0E2E                     	;# 
   478  0E2F                     	;# 
   479  0E30                     	;# 
   480  0E31                     	;# 
   481  0E32                     	;# 
   482  0E33                     	;# 
   483  0E34                     	;# 
   484  0E35                     	;# 
   485  0E36                     	;# 
   486  0E37                     	;# 
   487  0E8F                     	;# 
   488  0E90                     	;# 
   489  0E91                     	;# 
   490  0E92                     	;# 
   491  0E93                     	;# 
   492  0E94                     	;# 
   493  0E95                     	;# 
   494  0E96                     	;# 
   495  0E97                     	;# 
   496  0E9C                     	;# 
   497  0E9D                     	;# 
   498  0E9E                     	;# 
   499  0EA1                     	;# 
   500  0EA2                     	;# 
   501  0EA3                     	;# 
   502  0EA4                     	;# 
   503  0EA5                     	;# 
   504  0EA9                     	;# 
   505  0EAA                     	;# 
   506  0EAB                     	;# 
   507  0EAC                     	;# 
   508  0EB1                     	;# 
   509  0EB2                     	;# 
   510  0EB3                     	;# 
   511  0EB8                     	;# 
   512  0EB9                     	;# 
   513  0EBA                     	;# 
   514  0EBB                     	;# 
   515  0EBC                     	;# 
   516  0EBD                     	;# 
   517  0EBE                     	;# 
   518  0EC3                     	;# 
   519  0EC5                     	;# 
   520  0EC6                     	;# 
   521  0EC7                     	;# 
   522  0EC8                     	;# 
   523  0EC9                     	;# 
   524  0ECA                     	;# 
   525  0ECB                     	;# 
   526  0ECC                     	;# 
   527  0F10                     	;# 
   528  0F11                     	;# 
   529  0F12                     	;# 
   530  0F13                     	;# 
   531  0F14                     	;# 
   532  0F15                     	;# 
   533  0F16                     	;# 
   534  0F17                     	;# 
   535  0F18                     	;# 
   536  0F19                     	;# 
   537  0F1A                     	;# 
   538  0F1B                     	;# 
   539  0F1C                     	;# 
   540  0F1D                     	;# 
   541  0F1E                     	;# 
   542  0F1F                     	;# 
   543  0F20                     	;# 
   544  0F21                     	;# 
   545  0F22                     	;# 
   546  0F23                     	;# 
   547  0F24                     	;# 
   548  0F25                     	;# 
   549  0F26                     	;# 
   550  0F27                     	;# 
   551  0F28                     	;# 
   552  0F29                     	;# 
   553  0F2A                     	;# 
   554  0F2B                     	;# 
   555  0F2C                     	;# 
   556  0F2D                     	;# 
   557  0F2E                     	;# 
   558  0F2F                     	;# 
   559  0F30                     	;# 
   560  0F31                     	;# 
   561  0F32                     	;# 
   562  0F38                     	;# 
   563  0F39                     	;# 
   564  0F3A                     	;# 
   565  0F3B                     	;# 
   566  0F3C                     	;# 
   567  0F3D                     	;# 
   568  0F3E                     	;# 
   569  0F3F                     	;# 
   570  0F40                     	;# 
   571  0F41                     	;# 
   572  0F43                     	;# 
   573  0F44                     	;# 
   574  0F45                     	;# 
   575  0F46                     	;# 
   576  0F47                     	;# 
   577  0F48                     	;# 
   578  0F49                     	;# 
   579  0F4A                     	;# 
   580  0F4B                     	;# 
   581  0F4C                     	;# 
   582  0F4E                     	;# 
   583  0F4F                     	;# 
   584  0F50                     	;# 
   585  0F51                     	;# 
   586  0F52                     	;# 
   587  0F53                     	;# 
   588  0F54                     	;# 
   589  0F55                     	;# 
   590  0F56                     	;# 
   591  0F57                     	;# 
   592  0F59                     	;# 
   593  0F5A                     	;# 
   594  0F5B                     	;# 
   595  0F5C                     	;# 
   596  0F5D                     	;# 
   597  0F61                     	;# 
   598  0F62                     	;# 
   599  0F64                     	;# 
   600  0F65                     	;# 
   601  0F66                     	;# 
   602  0F67                     	;# 
   603  0F68                     	;# 
   604  0F69                     	;# 
   605  0F6A                     	;# 
   606  0F6B                     	;# 
   607  0F6C                     	;# 
   608  0F6D                     	;# 
   609  0FE4                     	;# 
   610  0FE5                     	;# 
   611  0FE6                     	;# 
   612  0FE7                     	;# 
   613  0FE8                     	;# 
   614  0FE9                     	;# 
   615  0FEA                     	;# 
   616  0FEB                     	;# 
   617  0FED                     	;# 
   618  0FEE                     	;# 
   619  0FEF                     	;# 
   620  0000                     	;# 
   621  0001                     	;# 
   622  0002                     	;# 
   623  0003                     	;# 
   624  0004                     	;# 
   625  0005                     	;# 
   626  0006                     	;# 
   627  0007                     	;# 
   628  0008                     	;# 
   629  0009                     	;# 
   630  000A                     	;# 
   631  000B                     	;# 
   632  000C                     	;# 
   633  000D                     	;# 
   634  000E                     	;# 
   635  000F                     	;# 
   636  0010                     	;# 
   637  0011                     	;# 
   638  0012                     	;# 
   639  0013                     	;# 
   640  0014                     	;# 
   641  0015                     	;# 
   642  0016                     	;# 
   643  0017                     	;# 
   644  0018                     	;# 
   645  0019                     	;# 
   646  001A                     	;# 
   647  001C                     	;# 
   648  001C                     	;# 
   649  001D                     	;# 
   650  001D                     	;# 
   651  001E                     	;# 
   652  001F                     	;# 
   653  008C                     	;# 
   654  008C                     	;# 
   655  008D                     	;# 
   656  008E                     	;# 
   657  008E                     	;# 
   658  008F                     	;# 
   659  0090                     	;# 
   660  0090                     	;# 
   661  0091                     	;# 
   662  0093                     	;# 
   663  0094                     	;# 
   664  0095                     	;# 
   665  0096                     	;# 
   666  0097                     	;# 
   667  0098                     	;# 
   668  0099                     	;# 
   669  009A                     	;# 
   670  009B                     	;# 
   671  009C                     	;# 
   672  009D                     	;# 
   673  009E                     	;# 
   674  010C                     	;# 
   675  010D                     	;# 
   676  010E                     	;# 
   677  010E                     	;# 
   678  010F                     	;# 
   679  0110                     	;# 
   680  0110                     	;# 
   681  0111                     	;# 
   682  0112                     	;# 
   683  0112                     	;# 
   684  0113                     	;# 
   685  0114                     	;# 
   686  0114                     	;# 
   687  0115                     	;# 
   688  0116                     	;# 
   689  0116                     	;# 
   690  0117                     	;# 
   691  0119                     	;# 
   692  0119                     	;# 
   693  0119                     	;# 
   694  011A                     	;# 
   695  011A                     	;# 
   696  011A                     	;# 
   697  011B                     	;# 
   698  011B                     	;# 
   699  011B                     	;# 
   700  011B                     	;# 
   701  011B                     	;# 
   702  011C                     	;# 
   703  011C                     	;# 
   704  011C                     	;# 
   705  011D                     	;# 
   706  011D                     	;# 
   707  011D                     	;# 
   708  011E                     	;# 
   709  011E                     	;# 
   710  011E                     	;# 
   711  011F                     	;# 
   712  011F                     	;# 
   713  011F                     	;# 
   714  011F                     	;# 
   715  011F                     	;# 
   716  018C                     	;# 
   717  018D                     	;# 
   718  018E                     	;# 
   719  018F                     	;# 
   720  0190                     	;# 
   721  0191                     	;# 
   722  0192                     	;# 
   723  0196                     	;# 
   724  0197                     	;# 
   725  0198                     	;# 
   726  0199                     	;# 
   727  019A                     	;# 
   728  019B                     	;# 
   729  019C                     	;# 
   730  020C                     	;# 
   731  020C                     	;# 
   732  020D                     	;# 
   733  020E                     	;# 
   734  020F                     	;# 
   735  020F                     	;# 
   736  0210                     	;# 
   737  0210                     	;# 
   738  0211                     	;# 
   739  0211                     	;# 
   740  0212                     	;# 
   741  0212                     	;# 
   742  0213                     	;# 
   743  0214                     	;# 
   744  0215                     	;# 
   745  0215                     	;# 
   746  0216                     	;# 
   747  0216                     	;# 
   748  0217                     	;# 
   749  0217                     	;# 
   750  0218                     	;# 
   751  0218                     	;# 
   752  0219                     	;# 
   753  021A                     	;# 
   754  021B                     	;# 
   755  021B                     	;# 
   756  021C                     	;# 
   757  021C                     	;# 
   758  021D                     	;# 
   759  021D                     	;# 
   760  021E                     	;# 
   761  021F                     	;# 
   762  028C                     	;# 
   763  028C                     	;# 
   764  028D                     	;# 
   765  028D                     	;# 
   766  028E                     	;# 
   767  028F                     	;# 
   768  0290                     	;# 
   769  0290                     	;# 
   770  0291                     	;# 
   771  0292                     	;# 
   772  0292                     	;# 
   773  0293                     	;# 
   774  0293                     	;# 
   775  0294                     	;# 
   776  0295                     	;# 
   777  0296                     	;# 
   778  0296                     	;# 
   779  0297                     	;# 
   780  0298                     	;# 
   781  0298                     	;# 
   782  0299                     	;# 
   783  0299                     	;# 
   784  029A                     	;# 
   785  029B                     	;# 
   786  029C                     	;# 
   787  029C                     	;# 
   788  029D                     	;# 
   789  030C                     	;# 
   790  030C                     	;# 
   791  030D                     	;# 
   792  030E                     	;# 
   793  030F                     	;# 
   794  0310                     	;# 
   795  0310                     	;# 
   796  0311                     	;# 
   797  0312                     	;# 
   798  0313                     	;# 
   799  0314                     	;# 
   800  0314                     	;# 
   801  0315                     	;# 
   802  0316                     	;# 
   803  0317                     	;# 
   804  0318                     	;# 
   805  0318                     	;# 
   806  0319                     	;# 
   807  031A                     	;# 
   808  031B                     	;# 
   809  031C                     	;# 
   810  031C                     	;# 
   811  031D                     	;# 
   812  031E                     	;# 
   813  031F                     	;# 
   814  038C                     	;# 
   815  038C                     	;# 
   816  038D                     	;# 
   817  038E                     	;# 
   818  0390                     	;# 
   819  0390                     	;# 
   820  0391                     	;# 
   821  0392                     	;# 
   822  040C                     	;# 
   823  040D                     	;# 
   824  040E                     	;# 
   825  040F                     	;# 
   826  0410                     	;# 
   827  0411                     	;# 
   828  0416                     	;# 
   829  0416                     	;# 
   830  0417                     	;# 
   831  0418                     	;# 
   832  0418                     	;# 
   833  0419                     	;# 
   834  041A                     	;# 
   835  041A                     	;# 
   836  041B                     	;# 
   837  041C                     	;# 
   838  041C                     	;# 
   839  041D                     	;# 
   840  041E                     	;# 
   841  041F                     	;# 
   842  048C                     	;# 
   843  048C                     	;# 
   844  048D                     	;# 
   845  048E                     	;# 
   846  048F                     	;# 
   847  048F                     	;# 
   848  0490                     	;# 
   849  0491                     	;# 
   850  0492                     	;# 
   851  0492                     	;# 
   852  0493                     	;# 
   853  0494                     	;# 
   854  0495                     	;# 
   855  0495                     	;# 
   856  0496                     	;# 
   857  0497                     	;# 
   858  0498                     	;# 
   859  0499                     	;# 
   860  049A                     	;# 
   861  049B                     	;# 
   862  049C                     	;# 
   863  049D                     	;# 
   864  050C                     	;# 
   865  050C                     	;# 
   866  050D                     	;# 
   867  050E                     	;# 
   868  050F                     	;# 
   869  050F                     	;# 
   870  0510                     	;# 
   871  0511                     	;# 
   872  0512                     	;# 
   873  0512                     	;# 
   874  0513                     	;# 
   875  0514                     	;# 
   876  0515                     	;# 
   877  0515                     	;# 
   878  0516                     	;# 
   879  0517                     	;# 
   880  0518                     	;# 
   881  0519                     	;# 
   882  051A                     	;# 
   883  051B                     	;# 
   884  051C                     	;# 
   885  051D                     	;# 
   886  058C                     	;# 
   887  058C                     	;# 
   888  058D                     	;# 
   889  058E                     	;# 
   890  058F                     	;# 
   891  058F                     	;# 
   892  0590                     	;# 
   893  0591                     	;# 
   894  0592                     	;# 
   895  0593                     	;# 
   896  060C                     	;# 
   897  060D                     	;# 
   898  060E                     	;# 
   899  060F                     	;# 
   900  0610                     	;# 
   901  0611                     	;# 
   902  0612                     	;# 
   903  0613                     	;# 
   904  0614                     	;# 
   905  0616                     	;# 
   906  0617                     	;# 
   907  0618                     	;# 
   908  0619                     	;# 
   909  061A                     	;# 
   910  061B                     	;# 
   911  061C                     	;# 
   912  061D                     	;# 
   913  061E                     	;# 
   914  068C                     	;# 
   915  068D                     	;# 
   916  068E                     	;# 
   917  068F                     	;# 
   918  0690                     	;# 
   919  0691                     	;# 
   920  0692                     	;# 
   921  0693                     	;# 
   922  0694                     	;# 
   923  070C                     	;# 
   924  070D                     	;# 
   925  070E                     	;# 
   926  070F                     	;# 
   927  0710                     	;# 
   928  0711                     	;# 
   929  0712                     	;# 
   930  0713                     	;# 
   931  0714                     	;# 
   932  0716                     	;# 
   933  0717                     	;# 
   934  0718                     	;# 
   935  0719                     	;# 
   936  071A                     	;# 
   937  071B                     	;# 
   938  071C                     	;# 
   939  071D                     	;# 
   940  071E                     	;# 
   941  0796                     	;# 
   942  0797                     	;# 
   943  0798                     	;# 
   944  0799                     	;# 
   945  079A                     	;# 
   946  079B                     	;# 
   947  080C                     	;# 
   948  080D                     	;# 
   949  080E                     	;# 
   950  080F                     	;# 
   951  0810                     	;# 
   952  0811                     	;# 
   953  0812                     	;# 
   954  0813                     	;# 
   955  0814                     	;# 
   956  081A                     	;# 
   957  081B                     	;# 
   958  081C                     	;# 
   959  081D                     	;# 
   960  081E                     	;# 
   961  081F                     	;# 
   962  088C                     	;# 
   963  088D                     	;# 
   964  088E                     	;# 
   965  088F                     	;# 
   966  0890                     	;# 
   967  0891                     	;# 
   968  0892                     	;# 
   969  0893                     	;# 
   970  0895                     	;# 
   971  0896                     	;# 
   972  0897                     	;# 
   973  0898                     	;# 
   974  0899                     	;# 
   975  089A                     	;# 
   976  089B                     	;# 
   977  090C                     	;# 
   978  090E                     	;# 
   979  090F                     	;# 
   980  091F                     	;# 
   981  091F                     	;# 
   982  098F                     	;# 
   983  098F                     	;# 
   984  0990                     	;# 
   985  0991                     	;# 
   986  0992                     	;# 
   987  0993                     	;# 
   988  0994                     	;# 
   989  0995                     	;# 
   990  0996                     	;# 
   991  0997                     	;# 
   992  0E0F                     	;# 
   993  0E10                     	;# 
   994  0E11                     	;# 
   995  0E12                     	;# 
   996  0E13                     	;# 
   997  0E14                     	;# 
   998  0E15                     	;# 
   999  0E16                     	;# 
  1000  0E17                     	;# 
  1001  0E18                     	;# 
  1002  0E19                     	;# 
  1003  0E1A                     	;# 
  1004  0E1B                     	;# 
  1005  0E1C                     	;# 
  1006  0E1D                     	;# 
  1007  0E1E                     	;# 
  1008  0E1F                     	;# 
  1009  0E20                     	;# 
  1010  0E21                     	;# 
  1011  0E22                     	;# 
  1012  0E23                     	;# 
  1013  0E24                     	;# 
  1014  0E25                     	;# 
  1015  0E26                     	;# 
  1016  0E27                     	;# 
  1017  0E28                     	;# 
  1018  0E29                     	;# 
  1019  0E2A                     	;# 
  1020  0E2B                     	;# 
  1021  0E2C                     	;# 
  1022  0E2D                     	;# 
  1023  0E2E                     	;# 
  1024  0E2F                     	;# 
  1025  0E30                     	;# 
  1026  0E31                     	;# 
  1027  0E32                     	;# 
  1028  0E33                     	;# 
  1029  0E34                     	;# 
  1030  0E35                     	;# 
  1031  0E36                     	;# 
  1032  0E37                     	;# 
  1033  0E8F                     	;# 
  1034  0E90                     	;# 
  1035  0E91                     	;# 
  1036  0E92                     	;# 
  1037  0E93                     	;# 
  1038  0E94                     	;# 
  1039  0E95                     	;# 
  1040  0E96                     	;# 
  1041  0E97                     	;# 
  1042  0E9C                     	;# 
  1043  0E9D                     	;# 
  1044  0E9E                     	;# 
  1045  0EA1                     	;# 
  1046  0EA2                     	;# 
  1047  0EA3                     	;# 
  1048  0EA4                     	;# 
  1049  0EA5                     	;# 
  1050  0EA9                     	;# 
  1051  0EAA                     	;# 
  1052  0EAB                     	;# 
  1053  0EAC                     	;# 
  1054  0EB1                     	;# 
  1055  0EB2                     	;# 
  1056  0EB3                     	;# 
  1057  0EB8                     	;# 
  1058  0EB9                     	;# 
  1059  0EBA                     	;# 
  1060  0EBB                     	;# 
  1061  0EBC                     	;# 
  1062  0EBD                     	;# 
  1063  0EBE                     	;# 
  1064  0EC3                     	;# 
  1065  0EC5                     	;# 
  1066  0EC6                     	;# 
  1067  0EC7                     	;# 
  1068  0EC8                     	;# 
  1069  0EC9                     	;# 
  1070  0ECA                     	;# 
  1071  0ECB                     	;# 
  1072  0ECC                     	;# 
  1073  0F10                     	;# 
  1074  0F11                     	;# 
  1075  0F12                     	;# 
  1076  0F13                     	;# 
  1077  0F14                     	;# 
  1078  0F15                     	;# 
  1079  0F16                     	;# 
  1080  0F17                     	;# 
  1081  0F18                     	;# 
  1082  0F19                     	;# 
  1083  0F1A                     	;# 
  1084  0F1B                     	;# 
  1085  0F1C                     	;# 
  1086  0F1D                     	;# 
  1087  0F1E                     	;# 
  1088  0F1F                     	;# 
  1089  0F20                     	;# 
  1090  0F21                     	;# 
  1091  0F22                     	;# 
  1092  0F23                     	;# 
  1093  0F24                     	;# 
  1094  0F25                     	;# 
  1095  0F26                     	;# 
  1096  0F27                     	;# 
  1097  0F28                     	;# 
  1098  0F29                     	;# 
  1099  0F2A                     	;# 
  1100  0F2B                     	;# 
  1101  0F2C                     	;# 
  1102  0F2D                     	;# 
  1103  0F2E                     	;# 
  1104  0F2F                     	;# 
  1105  0F30                     	;# 
  1106  0F31                     	;# 
  1107  0F32                     	;# 
  1108  0F38                     	;# 
  1109  0F39                     	;# 
  1110  0F3A                     	;# 
  1111  0F3B                     	;# 
  1112  0F3C                     	;# 
  1113  0F3D                     	;# 
  1114  0F3E                     	;# 
  1115  0F3F                     	;# 
  1116  0F40                     	;# 
  1117  0F41                     	;# 
  1118  0F43                     	;# 
  1119  0F44                     	;# 
  1120  0F45                     	;# 
  1121  0F46                     	;# 
  1122  0F47                     	;# 
  1123  0F48                     	;# 
  1124  0F49                     	;# 
  1125  0F4A                     	;# 
  1126  0F4B                     	;# 
  1127  0F4C                     	;# 
  1128  0F4E                     	;# 
  1129  0F4F                     	;# 
  1130  0F50                     	;# 
  1131  0F51                     	;# 
  1132  0F52                     	;# 
  1133  0F53                     	;# 
  1134  0F54                     	;# 
  1135  0F55                     	;# 
  1136  0F56                     	;# 
  1137  0F57                     	;# 
  1138  0F59                     	;# 
  1139  0F5A                     	;# 
  1140  0F5B                     	;# 
  1141  0F5C                     	;# 
  1142  0F5D                     	;# 
  1143  0F61                     	;# 
  1144  0F62                     	;# 
  1145  0F64                     	;# 
  1146  0F65                     	;# 
  1147  0F66                     	;# 
  1148  0F67                     	;# 
  1149  0F68                     	;# 
  1150  0F69                     	;# 
  1151  0F6A                     	;# 
  1152  0F6B                     	;# 
  1153  0F6C                     	;# 
  1154  0F6D                     	;# 
  1155  0FE4                     	;# 
  1156  0FE5                     	;# 
  1157  0FE6                     	;# 
  1158  0FE7                     	;# 
  1159  0FE8                     	;# 
  1160  0FE9                     	;# 
  1161  0FEA                     	;# 
  1162  0FEB                     	;# 
  1163  0FED                     	;# 
  1164  0FEE                     	;# 
  1165  0FEF                     	;# 
  1166  0000                     	;# 
  1167  0001                     	;# 
  1168  0002                     	;# 
  1169  0003                     	;# 
  1170  0004                     	;# 
  1171  0005                     	;# 
  1172  0006                     	;# 
  1173  0007                     	;# 
  1174  0008                     	;# 
  1175  0009                     	;# 
  1176  000A                     	;# 
  1177  000B                     	;# 
  1178  000C                     	;# 
  1179  000D                     	;# 
  1180  000E                     	;# 
  1181  000F                     	;# 
  1182  0010                     	;# 
  1183  0011                     	;# 
  1184  0012                     	;# 
  1185  0013                     	;# 
  1186  0014                     	;# 
  1187  0015                     	;# 
  1188  0016                     	;# 
  1189  0017                     	;# 
  1190  0018                     	;# 
  1191  0019                     	;# 
  1192  001A                     	;# 
  1193  001C                     	;# 
  1194  001C                     	;# 
  1195  001D                     	;# 
  1196  001D                     	;# 
  1197  001E                     	;# 
  1198  001F                     	;# 
  1199  008C                     	;# 
  1200  008C                     	;# 
  1201  008D                     	;# 
  1202  008E                     	;# 
  1203  008E                     	;# 
  1204  008F                     	;# 
  1205  0090                     	;# 
  1206  0090                     	;# 
  1207  0091                     	;# 
  1208  0093                     	;# 
  1209  0094                     	;# 
  1210  0095                     	;# 
  1211  0096                     	;# 
  1212  0097                     	;# 
  1213  0098                     	;# 
  1214  0099                     	;# 
  1215  009A                     	;# 
  1216  009B                     	;# 
  1217  009C                     	;# 
  1218  009D                     	;# 
  1219  009E                     	;# 
  1220  010C                     	;# 
  1221  010D                     	;# 
  1222  010E                     	;# 
  1223  010E                     	;# 
  1224  010F                     	;# 
  1225  0110                     	;# 
  1226  0110                     	;# 
  1227  0111                     	;# 
  1228  0112                     	;# 
  1229  0112                     	;# 
  1230  0113                     	;# 
  1231  0114                     	;# 
  1232  0114                     	;# 
  1233  0115                     	;# 
  1234  0116                     	;# 
  1235  0116                     	;# 
  1236  0117                     	;# 
  1237  0119                     	;# 
  1238  0119                     	;# 
  1239  0119                     	;# 
  1240  011A                     	;# 
  1241  011A                     	;# 
  1242  011A                     	;# 
  1243  011B                     	;# 
  1244  011B                     	;# 
  1245  011B                     	;# 
  1246  011B                     	;# 
  1247  011B                     	;# 
  1248  011C                     	;# 
  1249  011C                     	;# 
  1250  011C                     	;# 
  1251  011D                     	;# 
  1252  011D                     	;# 
  1253  011D                     	;# 
  1254  011E                     	;# 
  1255  011E                     	;# 
  1256  011E                     	;# 
  1257  011F                     	;# 
  1258  011F                     	;# 
  1259  011F                     	;# 
  1260  011F                     	;# 
  1261  011F                     	;# 
  1262  018C                     	;# 
  1263  018D                     	;# 
  1264  018E                     	;# 
  1265  018F                     	;# 
  1266  0190                     	;# 
  1267  0191                     	;# 
  1268  0192                     	;# 
  1269  0196                     	;# 
  1270  0197                     	;# 
  1271  0198                     	;# 
  1272  0199                     	;# 
  1273  019A                     	;# 
  1274  019B                     	;# 
  1275  019C                     	;# 
  1276  020C                     	;# 
  1277  020C                     	;# 
  1278  020D                     	;# 
  1279  020E                     	;# 
  1280  020F                     	;# 
  1281  020F                     	;# 
  1282  0210                     	;# 
  1283  0210                     	;# 
  1284  0211                     	;# 
  1285  0211                     	;# 
  1286  0212                     	;# 
  1287  0212                     	;# 
  1288  0213                     	;# 
  1289  0214                     	;# 
  1290  0215                     	;# 
  1291  0215                     	;# 
  1292  0216                     	;# 
  1293  0216                     	;# 
  1294  0217                     	;# 
  1295  0217                     	;# 
  1296  0218                     	;# 
  1297  0218                     	;# 
  1298  0219                     	;# 
  1299  021A                     	;# 
  1300  021B                     	;# 
  1301  021B                     	;# 
  1302  021C                     	;# 
  1303  021C                     	;# 
  1304  021D                     	;# 
  1305  021D                     	;# 
  1306  021E                     	;# 
  1307  021F                     	;# 
  1308  028C                     	;# 
  1309  028C                     	;# 
  1310  028D                     	;# 
  1311  028D                     	;# 
  1312  028E                     	;# 
  1313  028F                     	;# 
  1314  0290                     	;# 
  1315  0290                     	;# 
  1316  0291                     	;# 
  1317  0292                     	;# 
  1318  0292                     	;# 
  1319  0293                     	;# 
  1320  0293                     	;# 
  1321  0294                     	;# 
  1322  0295                     	;# 
  1323  0296                     	;# 
  1324  0296                     	;# 
  1325  0297                     	;# 
  1326  0298                     	;# 
  1327  0298                     	;# 
  1328  0299                     	;# 
  1329  0299                     	;# 
  1330  029A                     	;# 
  1331  029B                     	;# 
  1332  029C                     	;# 
  1333  029C                     	;# 
  1334  029D                     	;# 
  1335  030C                     	;# 
  1336  030C                     	;# 
  1337  030D                     	;# 
  1338  030E                     	;# 
  1339  030F                     	;# 
  1340  0310                     	;# 
  1341  0310                     	;# 
  1342  0311                     	;# 
  1343  0312                     	;# 
  1344  0313                     	;# 
  1345  0314                     	;# 
  1346  0314                     	;# 
  1347  0315                     	;# 
  1348  0316                     	;# 
  1349  0317                     	;# 
  1350  0318                     	;# 
  1351  0318                     	;# 
  1352  0319                     	;# 
  1353  031A                     	;# 
  1354  031B                     	;# 
  1355  031C                     	;# 
  1356  031C                     	;# 
  1357  031D                     	;# 
  1358  031E                     	;# 
  1359  031F                     	;# 
  1360  038C                     	;# 
  1361  038C                     	;# 
  1362  038D                     	;# 
  1363  038E                     	;# 
  1364  0390                     	;# 
  1365  0390                     	;# 
  1366  0391                     	;# 
  1367  0392                     	;# 
  1368  040C                     	;# 
  1369  040D                     	;# 
  1370  040E                     	;# 
  1371  040F                     	;# 
  1372  0410                     	;# 
  1373  0411                     	;# 
  1374  0416                     	;# 
  1375  0416                     	;# 
  1376  0417                     	;# 
  1377  0418                     	;# 
  1378  0418                     	;# 
  1379  0419                     	;# 
  1380  041A                     	;# 
  1381  041A                     	;# 
  1382  041B                     	;# 
  1383  041C                     	;# 
  1384  041C                     	;# 
  1385  041D                     	;# 
  1386  041E                     	;# 
  1387  041F                     	;# 
  1388  048C                     	;# 
  1389  048C                     	;# 
  1390  048D                     	;# 
  1391  048E                     	;# 
  1392  048F                     	;# 
  1393  048F                     	;# 
  1394  0490                     	;# 
  1395  0491                     	;# 
  1396  0492                     	;# 
  1397  0492                     	;# 
  1398  0493                     	;# 
  1399  0494                     	;# 
  1400  0495                     	;# 
  1401  0495                     	;# 
  1402  0496                     	;# 
  1403  0497                     	;# 
  1404  0498                     	;# 
  1405  0499                     	;# 
  1406  049A                     	;# 
  1407  049B                     	;# 
  1408  049C                     	;# 
  1409  049D                     	;# 
  1410  050C                     	;# 
  1411  050C                     	;# 
  1412  050D                     	;# 
  1413  050E                     	;# 
  1414  050F                     	;# 
  1415  050F                     	;# 
  1416  0510                     	;# 
  1417  0511                     	;# 
  1418  0512                     	;# 
  1419  0512                     	;# 
  1420  0513                     	;# 
  1421  0514                     	;# 
  1422  0515                     	;# 
  1423  0515                     	;# 
  1424  0516                     	;# 
  1425  0517                     	;# 
  1426  0518                     	;# 
  1427  0519                     	;# 
  1428  051A                     	;# 
  1429  051B                     	;# 
  1430  051C                     	;# 
  1431  051D                     	;# 
  1432  058C                     	;# 
  1433  058C                     	;# 
  1434  058D                     	;# 
  1435  058E                     	;# 
  1436  058F                     	;# 
  1437  058F                     	;# 
  1438  0590                     	;# 
  1439  0591                     	;# 
  1440  0592                     	;# 
  1441  0593                     	;# 
  1442  060C                     	;# 
  1443  060D                     	;# 
  1444  060E                     	;# 
  1445  060F                     	;# 
  1446  0610                     	;# 
  1447  0611                     	;# 
  1448  0612                     	;# 
  1449  0613                     	;# 
  1450  0614                     	;# 
  1451  0616                     	;# 
  1452  0617                     	;# 
  1453  0618                     	;# 
  1454  0619                     	;# 
  1455  061A                     	;# 
  1456  061B                     	;# 
  1457  061C                     	;# 
  1458  061D                     	;# 
  1459  061E                     	;# 
  1460  068C                     	;# 
  1461  068D                     	;# 
  1462  068E                     	;# 
  1463  068F                     	;# 
  1464  0690                     	;# 
  1465  0691                     	;# 
  1466  0692                     	;# 
  1467  0693                     	;# 
  1468  0694                     	;# 
  1469  070C                     	;# 
  1470  070D                     	;# 
  1471  070E                     	;# 
  1472  070F                     	;# 
  1473  0710                     	;# 
  1474  0711                     	;# 
  1475  0712                     	;# 
  1476  0713                     	;# 
  1477  0714                     	;# 
  1478  0716                     	;# 
  1479  0717                     	;# 
  1480  0718                     	;# 
  1481  0719                     	;# 
  1482  071A                     	;# 
  1483  071B                     	;# 
  1484  071C                     	;# 
  1485  071D                     	;# 
  1486  071E                     	;# 
  1487  0796                     	;# 
  1488  0797                     	;# 
  1489  0798                     	;# 
  1490  0799                     	;# 
  1491  079A                     	;# 
  1492  079B                     	;# 
  1493  080C                     	;# 
  1494  080D                     	;# 
  1495  080E                     	;# 
  1496  080F                     	;# 
  1497  0810                     	;# 
  1498  0811                     	;# 
  1499  0812                     	;# 
  1500  0813                     	;# 
  1501  0814                     	;# 
  1502  081A                     	;# 
  1503  081B                     	;# 
  1504  081C                     	;# 
  1505  081D                     	;# 
  1506  081E                     	;# 
  1507  081F                     	;# 
  1508  088C                     	;# 
  1509  088D                     	;# 
  1510  088E                     	;# 
  1511  088F                     	;# 
  1512  0890                     	;# 
  1513  0891                     	;# 
  1514  0892                     	;# 
  1515  0893                     	;# 
  1516  0895                     	;# 
  1517  0896                     	;# 
  1518  0897                     	;# 
  1519  0898                     	;# 
  1520  0899                     	;# 
  1521  089A                     	;# 
  1522  089B                     	;# 
  1523  090C                     	;# 
  1524  090E                     	;# 
  1525  090F                     	;# 
  1526  091F                     	;# 
  1527  091F                     	;# 
  1528  098F                     	;# 
  1529  098F                     	;# 
  1530  0990                     	;# 
  1531  0991                     	;# 
  1532  0992                     	;# 
  1533  0993                     	;# 
  1534  0994                     	;# 
  1535  0995                     	;# 
  1536  0996                     	;# 
  1537  0997                     	;# 
  1538  0E0F                     	;# 
  1539  0E10                     	;# 
  1540  0E11                     	;# 
  1541  0E12                     	;# 
  1542  0E13                     	;# 
  1543  0E14                     	;# 
  1544  0E15                     	;# 
  1545  0E16                     	;# 
  1546  0E17                     	;# 
  1547  0E18                     	;# 
  1548  0E19                     	;# 
  1549  0E1A                     	;# 
  1550  0E1B                     	;# 
  1551  0E1C                     	;# 
  1552  0E1D                     	;# 
  1553  0E1E                     	;# 
  1554  0E1F                     	;# 
  1555  0E20                     	;# 
  1556  0E21                     	;# 
  1557  0E22                     	;# 
  1558  0E23                     	;# 
  1559  0E24                     	;# 
  1560  0E25                     	;# 
  1561  0E26                     	;# 
  1562  0E27                     	;# 
  1563  0E28                     	;# 
  1564  0E29                     	;# 
  1565  0E2A                     	;# 
  1566  0E2B                     	;# 
  1567  0E2C                     	;# 
  1568  0E2D                     	;# 
  1569  0E2E                     	;# 
  1570  0E2F                     	;# 
  1571  0E30                     	;# 
  1572  0E31                     	;# 
  1573  0E32                     	;# 
  1574  0E33                     	;# 
  1575  0E34                     	;# 
  1576  0E35                     	;# 
  1577  0E36                     	;# 
  1578  0E37                     	;# 
  1579  0E8F                     	;# 
  1580  0E90                     	;# 
  1581  0E91                     	;# 
  1582  0E92                     	;# 
  1583  0E93                     	;# 
  1584  0E94                     	;# 
  1585  0E95                     	;# 
  1586  0E96                     	;# 
  1587  0E97                     	;# 
  1588  0E9C                     	;# 
  1589  0E9D                     	;# 
  1590  0E9E                     	;# 
  1591  0EA1                     	;# 
  1592  0EA2                     	;# 
  1593  0EA3                     	;# 
  1594  0EA4                     	;# 
  1595  0EA5                     	;# 
  1596  0EA9                     	;# 
  1597  0EAA                     	;# 
  1598  0EAB                     	;# 
  1599  0EAC                     	;# 
  1600  0EB1                     	;# 
  1601  0EB2                     	;# 
  1602  0EB3                     	;# 
  1603  0EB8                     	;# 
  1604  0EB9                     	;# 
  1605  0EBA                     	;# 
  1606  0EBB                     	;# 
  1607  0EBC                     	;# 
  1608  0EBD                     	;# 
  1609  0EBE                     	;# 
  1610  0EC3                     	;# 
  1611  0EC5                     	;# 
  1612  0EC6                     	;# 
  1613  0EC7                     	;# 
  1614  0EC8                     	;# 
  1615  0EC9                     	;# 
  1616  0ECA                     	;# 
  1617  0ECB                     	;# 
  1618  0ECC                     	;# 
  1619  0F10                     	;# 
  1620  0F11                     	;# 
  1621  0F12                     	;# 
  1622  0F13                     	;# 
  1623  0F14                     	;# 
  1624  0F15                     	;# 
  1625  0F16                     	;# 
  1626  0F17                     	;# 
  1627  0F18                     	;# 
  1628  0F19                     	;# 
  1629  0F1A                     	;# 
  1630  0F1B                     	;# 
  1631  0F1C                     	;# 
  1632  0F1D                     	;# 
  1633  0F1E                     	;# 
  1634  0F1F                     	;# 
  1635  0F20                     	;# 
  1636  0F21                     	;# 
  1637  0F22                     	;# 
  1638  0F23                     	;# 
  1639  0F24                     	;# 
  1640  0F25                     	;# 
  1641  0F26                     	;# 
  1642  0F27                     	;# 
  1643  0F28                     	;# 
  1644  0F29                     	;# 
  1645  0F2A                     	;# 
  1646  0F2B                     	;# 
  1647  0F2C                     	;# 
  1648  0F2D                     	;# 
  1649  0F2E                     	;# 
  1650  0F2F                     	;# 
  1651  0F30                     	;# 
  1652  0F31                     	;# 
  1653  0F32                     	;# 
  1654  0F38                     	;# 
  1655  0F39                     	;# 
  1656  0F3A                     	;# 
  1657  0F3B                     	;# 
  1658  0F3C                     	;# 
  1659  0F3D                     	;# 
  1660  0F3E                     	;# 
  1661  0F3F                     	;# 
  1662  0F40                     	;# 
  1663  0F41                     	;# 
  1664  0F43                     	;# 
  1665  0F44                     	;# 
  1666  0F45                     	;# 
  1667  0F46                     	;# 
  1668  0F47                     	;# 
  1669  0F48                     	;# 
  1670  0F49                     	;# 
  1671  0F4A                     	;# 
  1672  0F4B                     	;# 
  1673  0F4C                     	;# 
  1674  0F4E                     	;# 
  1675  0F4F                     	;# 
  1676  0F50                     	;# 
  1677  0F51                     	;# 
  1678  0F52                     	;# 
  1679  0F53                     	;# 
  1680  0F54                     	;# 
  1681  0F55                     	;# 
  1682  0F56                     	;# 
  1683  0F57                     	;# 
  1684  0F59                     	;# 
  1685  0F5A                     	;# 
  1686  0F5B                     	;# 
  1687  0F5C                     	;# 
  1688  0F5D                     	;# 
  1689  0F61                     	;# 
  1690  0F62                     	;# 
  1691  0F64                     	;# 
  1692  0F65                     	;# 
  1693  0F66                     	;# 
  1694  0F67                     	;# 
  1695  0F68                     	;# 
  1696  0F69                     	;# 
  1697  0F6A                     	;# 
  1698  0F6B                     	;# 
  1699  0F6C                     	;# 
  1700  0F6D                     	;# 
  1701  0FE4                     	;# 
  1702  0FE5                     	;# 
  1703  0FE6                     	;# 
  1704  0FE7                     	;# 
  1705  0FE8                     	;# 
  1706  0FE9                     	;# 
  1707  0FEA                     	;# 
  1708  0FEB                     	;# 
  1709  0FED                     	;# 
  1710  0FEE                     	;# 
  1711  0FEF                     	;# 
  1712  0000                     	;# 
  1713  0001                     	;# 
  1714  0002                     	;# 
  1715  0003                     	;# 
  1716  0004                     	;# 
  1717  0005                     	;# 
  1718  0006                     	;# 
  1719  0007                     	;# 
  1720  0008                     	;# 
  1721  0009                     	;# 
  1722  000A                     	;# 
  1723  000B                     	;# 
  1724  000C                     	;# 
  1725  000D                     	;# 
  1726  000E                     	;# 
  1727  000F                     	;# 
  1728  0010                     	;# 
  1729  0011                     	;# 
  1730  0012                     	;# 
  1731  0013                     	;# 
  1732  0014                     	;# 
  1733  0015                     	;# 
  1734  0016                     	;# 
  1735  0017                     	;# 
  1736  0018                     	;# 
  1737  0019                     	;# 
  1738  001A                     	;# 
  1739  001C                     	;# 
  1740  001C                     	;# 
  1741  001D                     	;# 
  1742  001D                     	;# 
  1743  001E                     	;# 
  1744  001F                     	;# 
  1745  008C                     	;# 
  1746  008C                     	;# 
  1747  008D                     	;# 
  1748  008E                     	;# 
  1749  008E                     	;# 
  1750  008F                     	;# 
  1751  0090                     	;# 
  1752  0090                     	;# 
  1753  0091                     	;# 
  1754  0093                     	;# 
  1755  0094                     	;# 
  1756  0095                     	;# 
  1757  0096                     	;# 
  1758  0097                     	;# 
  1759  0098                     	;# 
  1760  0099                     	;# 
  1761  009A                     	;# 
  1762  009B                     	;# 
  1763  009C                     	;# 
  1764  009D                     	;# 
  1765  009E                     	;# 
  1766  010C                     	;# 
  1767  010D                     	;# 
  1768  010E                     	;# 
  1769  010E                     	;# 
  1770  010F                     	;# 
  1771  0110                     	;# 
  1772  0110                     	;# 
  1773  0111                     	;# 
  1774  0112                     	;# 
  1775  0112                     	;# 
  1776  0113                     	;# 
  1777  0114                     	;# 
  1778  0114                     	;# 
  1779  0115                     	;# 
  1780  0116                     	;# 
  1781  0116                     	;# 
  1782  0117                     	;# 
  1783  0119                     	;# 
  1784  0119                     	;# 
  1785  0119                     	;# 
  1786  011A                     	;# 
  1787  011A                     	;# 
  1788  011A                     	;# 
  1789  011B                     	;# 
  1790  011B                     	;# 
  1791  011B                     	;# 
  1792  011B                     	;# 
  1793  011B                     	;# 
  1794  011C                     	;# 
  1795  011C                     	;# 
  1796  011C                     	;# 
  1797  011D                     	;# 
  1798  011D                     	;# 
  1799  011D                     	;# 
  1800  011E                     	;# 
  1801  011E                     	;# 
  1802  011E                     	;# 
  1803  011F                     	;# 
  1804  011F                     	;# 
  1805  011F                     	;# 
  1806  011F                     	;# 
  1807  011F                     	;# 
  1808  018C                     	;# 
  1809  018D                     	;# 
  1810  018E                     	;# 
  1811  018F                     	;# 
  1812  0190                     	;# 
  1813  0191                     	;# 
  1814  0192                     	;# 
  1815  0196                     	;# 
  1816  0197                     	;# 
  1817  0198                     	;# 
  1818  0199                     	;# 
  1819  019A                     	;# 
  1820  019B                     	;# 
  1821  019C                     	;# 
  1822  020C                     	;# 
  1823  020C                     	;# 
  1824  020D                     	;# 
  1825  020E                     	;# 
  1826  020F                     	;# 
  1827  020F                     	;# 
  1828  0210                     	;# 
  1829  0210                     	;# 
  1830  0211                     	;# 
  1831  0211                     	;# 
  1832  0212                     	;# 
  1833  0212                     	;# 
  1834  0213                     	;# 
  1835  0214                     	;# 
  1836  0215                     	;# 
  1837  0215                     	;# 
  1838  0216                     	;# 
  1839  0216                     	;# 
  1840  0217                     	;# 
  1841  0217                     	;# 
  1842  0218                     	;# 
  1843  0218                     	;# 
  1844  0219                     	;# 
  1845  021A                     	;# 
  1846  021B                     	;# 
  1847  021B                     	;# 
  1848  021C                     	;# 
  1849  021C                     	;# 
  1850  021D                     	;# 
  1851  021D                     	;# 
  1852  021E                     	;# 
  1853  021F                     	;# 
  1854  028C                     	;# 
  1855  028C                     	;# 
  1856  028D                     	;# 
  1857  028D                     	;# 
  1858  028E                     	;# 
  1859  028F                     	;# 
  1860  0290                     	;# 
  1861  0290                     	;# 
  1862  0291                     	;# 
  1863  0292                     	;# 
  1864  0292                     	;# 
  1865  0293                     	;# 
  1866  0293                     	;# 
  1867  0294                     	;# 
  1868  0295                     	;# 
  1869  0296                     	;# 
  1870  0296                     	;# 
  1871  0297                     	;# 
  1872  0298                     	;# 
  1873  0298                     	;# 
  1874  0299                     	;# 
  1875  0299                     	;# 
  1876  029A                     	;# 
  1877  029B                     	;# 
  1878  029C                     	;# 
  1879  029C                     	;# 
  1880  029D                     	;# 
  1881  030C                     	;# 
  1882  030C                     	;# 
  1883  030D                     	;# 
  1884  030E                     	;# 
  1885  030F                     	;# 
  1886  0310                     	;# 
  1887  0310                     	;# 
  1888  0311                     	;# 
  1889  0312                     	;# 
  1890  0313                     	;# 
  1891  0314                     	;# 
  1892  0314                     	;# 
  1893  0315                     	;# 
  1894  0316                     	;# 
  1895  0317                     	;# 
  1896  0318                     	;# 
  1897  0318                     	;# 
  1898  0319                     	;# 
  1899  031A                     	;# 
  1900  031B                     	;# 
  1901  031C                     	;# 
  1902  031C                     	;# 
  1903  031D                     	;# 
  1904  031E                     	;# 
  1905  031F                     	;# 
  1906  038C                     	;# 
  1907  038C                     	;# 
  1908  038D                     	;# 
  1909  038E                     	;# 
  1910  0390                     	;# 
  1911  0390                     	;# 
  1912  0391                     	;# 
  1913  0392                     	;# 
  1914  040C                     	;# 
  1915  040D                     	;# 
  1916  040E                     	;# 
  1917  040F                     	;# 
  1918  0410                     	;# 
  1919  0411                     	;# 
  1920  0416                     	;# 
  1921  0416                     	;# 
  1922  0417                     	;# 
  1923  0418                     	;# 
  1924  0418                     	;# 
  1925  0419                     	;# 
  1926  041A                     	;# 
  1927  041A                     	;# 
  1928  041B                     	;# 
  1929  041C                     	;# 
  1930  041C                     	;# 
  1931  041D                     	;# 
  1932  041E                     	;# 
  1933  041F                     	;# 
  1934  048C                     	;# 
  1935  048C                     	;# 
  1936  048D                     	;# 
  1937  048E                     	;# 
  1938  048F                     	;# 
  1939  048F                     	;# 
  1940  0490                     	;# 
  1941  0491                     	;# 
  1942  0492                     	;# 
  1943  0492                     	;# 
  1944  0493                     	;# 
  1945  0494                     	;# 
  1946  0495                     	;# 
  1947  0495                     	;# 
  1948  0496                     	;# 
  1949  0497                     	;# 
  1950  0498                     	;# 
  1951  0499                     	;# 
  1952  049A                     	;# 
  1953  049B                     	;# 
  1954  049C                     	;# 
  1955  049D                     	;# 
  1956  050C                     	;# 
  1957  050C                     	;# 
  1958  050D                     	;# 
  1959  050E                     	;# 
  1960  050F                     	;# 
  1961  050F                     	;# 
  1962  0510                     	;# 
  1963  0511                     	;# 
  1964  0512                     	;# 
  1965  0512                     	;# 
  1966  0513                     	;# 
  1967  0514                     	;# 
  1968  0515                     	;# 
  1969  0515                     	;# 
  1970  0516                     	;# 
  1971  0517                     	;# 
  1972  0518                     	;# 
  1973  0519                     	;# 
  1974  051A                     	;# 
  1975  051B                     	;# 
  1976  051C                     	;# 
  1977  051D                     	;# 
  1978  058C                     	;# 
  1979  058C                     	;# 
  1980  058D                     	;# 
  1981  058E                     	;# 
  1982  058F                     	;# 
  1983  058F                     	;# 
  1984  0590                     	;# 
  1985  0591                     	;# 
  1986  0592                     	;# 
  1987  0593                     	;# 
  1988  060C                     	;# 
  1989  060D                     	;# 
  1990  060E                     	;# 
  1991  060F                     	;# 
  1992  0610                     	;# 
  1993  0611                     	;# 
  1994  0612                     	;# 
  1995  0613                     	;# 
  1996  0614                     	;# 
  1997  0616                     	;# 
  1998  0617                     	;# 
  1999  0618                     	;# 
  2000  0619                     	;# 
  2001  061A                     	;# 
  2002  061B                     	;# 
  2003  061C                     	;# 
  2004  061D                     	;# 
  2005  061E                     	;# 
  2006  068C                     	;# 
  2007  068D                     	;# 
  2008  068E                     	;# 
  2009  068F                     	;# 
  2010  0690                     	;# 
  2011  0691                     	;# 
  2012  0692                     	;# 
  2013  0693                     	;# 
  2014  0694                     	;# 
  2015  070C                     	;# 
  2016  070D                     	;# 
  2017  070E                     	;# 
  2018  070F                     	;# 
  2019  0710                     	;# 
  2020  0711                     	;# 
  2021  0712                     	;# 
  2022  0713                     	;# 
  2023  0714                     	;# 
  2024  0716                     	;# 
  2025  0717                     	;# 
  2026  0718                     	;# 
  2027  0719                     	;# 
  2028  071A                     	;# 
  2029  071B                     	;# 
  2030  071C                     	;# 
  2031  071D                     	;# 
  2032  071E                     	;# 
  2033  0796                     	;# 
  2034  0797                     	;# 
  2035  0798                     	;# 
  2036  0799                     	;# 
  2037  079A                     	;# 
  2038  079B                     	;# 
  2039  080C                     	;# 
  2040  080D                     	;# 
  2041  080E                     	;# 
  2042  080F                     	;# 
  2043  0810                     	;# 
  2044  0811                     	;# 
  2045  0812                     	;# 
  2046  0813                     	;# 
  2047  0814                     	;# 
  2048  081A                     	;# 
  2049  081B                     	;# 
  2050  081C                     	;# 
  2051  081D                     	;# 
  2052  081E                     	;# 
  2053  081F                     	;# 
  2054  088C                     	;# 
  2055  088D                     	;# 
  2056  088E                     	;# 
  2057  088F                     	;# 
  2058  0890                     	;# 
  2059  0891                     	;# 
  2060  0892                     	;# 
  2061  0893                     	;# 
  2062  0895                     	;# 
  2063  0896                     	;# 
  2064  0897                     	;# 
  2065  0898                     	;# 
  2066  0899                     	;# 
  2067  089A                     	;# 
  2068  089B                     	;# 
  2069  090C                     	;# 
  2070  090E                     	;# 
  2071  090F                     	;# 
  2072  091F                     	;# 
  2073  091F                     	;# 
  2074  098F                     	;# 
  2075  098F                     	;# 
  2076  0990                     	;# 
  2077  0991                     	;# 
  2078  0992                     	;# 
  2079  0993                     	;# 
  2080  0994                     	;# 
  2081  0995                     	;# 
  2082  0996                     	;# 
  2083  0997                     	;# 
  2084  0E0F                     	;# 
  2085  0E10                     	;# 
  2086  0E11                     	;# 
  2087  0E12                     	;# 
  2088  0E13                     	;# 
  2089  0E14                     	;# 
  2090  0E15                     	;# 
  2091  0E16                     	;# 
  2092  0E17                     	;# 
  2093  0E18                     	;# 
  2094  0E19                     	;# 
  2095  0E1A                     	;# 
  2096  0E1B                     	;# 
  2097  0E1C                     	;# 
  2098  0E1D                     	;# 
  2099  0E1E                     	;# 
  2100  0E1F                     	;# 
  2101  0E20                     	;# 
  2102  0E21                     	;# 
  2103  0E22                     	;# 
  2104  0E23                     	;# 
  2105  0E24                     	;# 
  2106  0E25                     	;# 
  2107  0E26                     	;# 
  2108  0E27                     	;# 
  2109  0E28                     	;# 
  2110  0E29                     	;# 
  2111  0E2A                     	;# 
  2112  0E2B                     	;# 
  2113  0E2C                     	;# 
  2114  0E2D                     	;# 
  2115  0E2E                     	;# 
  2116  0E2F                     	;# 
  2117  0E30                     	;# 
  2118  0E31                     	;# 
  2119  0E32                     	;# 
  2120  0E33                     	;# 
  2121  0E34                     	;# 
  2122  0E35                     	;# 
  2123  0E36                     	;# 
  2124  0E37                     	;# 
  2125  0E8F                     	;# 
  2126  0E90                     	;# 
  2127  0E91                     	;# 
  2128  0E92                     	;# 
  2129  0E93                     	;# 
  2130  0E94                     	;# 
  2131  0E95                     	;# 
  2132  0E96                     	;# 
  2133  0E97                     	;# 
  2134  0E9C                     	;# 
  2135  0E9D                     	;# 
  2136  0E9E                     	;# 
  2137  0EA1                     	;# 
  2138  0EA2                     	;# 
  2139  0EA3                     	;# 
  2140  0EA4                     	;# 
  2141  0EA5                     	;# 
  2142  0EA9                     	;# 
  2143  0EAA                     	;# 
  2144  0EAB                     	;# 
  2145  0EAC                     	;# 
  2146  0EB1                     	;# 
  2147  0EB2                     	;# 
  2148  0EB3                     	;# 
  2149  0EB8                     	;# 
  2150  0EB9                     	;# 
  2151  0EBA                     	;# 
  2152  0EBB                     	;# 
  2153  0EBC                     	;# 
  2154  0EBD                     	;# 
  2155  0EBE                     	;# 
  2156  0EC3                     	;# 
  2157  0EC5                     	;# 
  2158  0EC6                     	;# 
  2159  0EC7                     	;# 
  2160  0EC8                     	;# 
  2161  0EC9                     	;# 
  2162  0ECA                     	;# 
  2163  0ECB                     	;# 
  2164  0ECC                     	;# 
  2165  0F10                     	;# 
  2166  0F11                     	;# 
  2167  0F12                     	;# 
  2168  0F13                     	;# 
  2169  0F14                     	;# 
  2170  0F15                     	;# 
  2171  0F16                     	;# 
  2172  0F17                     	;# 
  2173  0F18                     	;# 
  2174  0F19                     	;# 
  2175  0F1A                     	;# 
  2176  0F1B                     	;# 
  2177  0F1C                     	;# 
  2178  0F1D                     	;# 
  2179  0F1E                     	;# 
  2180  0F1F                     	;# 
  2181  0F20                     	;# 
  2182  0F21                     	;# 
  2183  0F22                     	;# 
  2184  0F23                     	;# 
  2185  0F24                     	;# 
  2186  0F25                     	;# 
  2187  0F26                     	;# 
  2188  0F27                     	;# 
  2189  0F28                     	;# 
  2190  0F29                     	;# 
  2191  0F2A                     	;# 
  2192  0F2B                     	;# 
  2193  0F2C                     	;# 
  2194  0F2D                     	;# 
  2195  0F2E                     	;# 
  2196  0F2F                     	;# 
  2197  0F30                     	;# 
  2198  0F31                     	;# 
  2199  0F32                     	;# 
  2200  0F38                     	;# 
  2201  0F39                     	;# 
  2202  0F3A                     	;# 
  2203  0F3B                     	;# 
  2204  0F3C                     	;# 
  2205  0F3D                     	;# 
  2206  0F3E                     	;# 
  2207  0F3F                     	;# 
  2208  0F40                     	;# 
  2209  0F41                     	;# 
  2210  0F43                     	;# 
  2211  0F44                     	;# 
  2212  0F45                     	;# 
  2213  0F46                     	;# 
  2214  0F47                     	;# 
  2215  0F48                     	;# 
  2216  0F49                     	;# 
  2217  0F4A                     	;# 
  2218  0F4B                     	;# 
  2219  0F4C                     	;# 
  2220  0F4E                     	;# 
  2221  0F4F                     	;# 
  2222  0F50                     	;# 
  2223  0F51                     	;# 
  2224  0F52                     	;# 
  2225  0F53                     	;# 
  2226  0F54                     	;# 
  2227  0F55                     	;# 
  2228  0F56                     	;# 
  2229  0F57                     	;# 
  2230  0F59                     	;# 
  2231  0F5A                     	;# 
  2232  0F5B                     	;# 
  2233  0F5C                     	;# 
  2234  0F5D                     	;# 
  2235  0F61                     	;# 
  2236  0F62                     	;# 
  2237  0F64                     	;# 
  2238  0F65                     	;# 
  2239  0F66                     	;# 
  2240  0F67                     	;# 
  2241  0F68                     	;# 
  2242  0F69                     	;# 
  2243  0F6A                     	;# 
  2244  0F6B                     	;# 
  2245  0F6C                     	;# 
  2246  0F6D                     	;# 
  2247  0FE4                     	;# 
  2248  0FE5                     	;# 
  2249  0FE6                     	;# 
  2250  0FE7                     	;# 
  2251  0FE8                     	;# 
  2252  0FE9                     	;# 
  2253  0FEA                     	;# 
  2254  0FEB                     	;# 
  2255  0FED                     	;# 
  2256  0FEE                     	;# 
  2257  0FEF                     	;# 
  2258  0000                     	;# 
  2259  0001                     	;# 
  2260  0002                     	;# 
  2261  0003                     	;# 
  2262  0004                     	;# 
  2263  0005                     	;# 
  2264  0006                     	;# 
  2265  0007                     	;# 
  2266  0008                     	;# 
  2267  0009                     	;# 
  2268  000A                     	;# 
  2269  000B                     	;# 
  2270  000C                     	;# 
  2271  000D                     	;# 
  2272  000E                     	;# 
  2273  000F                     	;# 
  2274  0010                     	;# 
  2275  0011                     	;# 
  2276  0012                     	;# 
  2277  0013                     	;# 
  2278  0014                     	;# 
  2279  0015                     	;# 
  2280  0016                     	;# 
  2281  0017                     	;# 
  2282  0018                     	;# 
  2283  0019                     	;# 
  2284  001A                     	;# 
  2285  001C                     	;# 
  2286  001C                     	;# 
  2287  001D                     	;# 
  2288  001D                     	;# 
  2289  001E                     	;# 
  2290  001F                     	;# 
  2291  008C                     	;# 
  2292  008C                     	;# 
  2293  008D                     	;# 
  2294  008E                     	;# 
  2295  008E                     	;# 
  2296  008F                     	;# 
  2297  0090                     	;# 
  2298  0090                     	;# 
  2299  0091                     	;# 
  2300  0093                     	;# 
  2301  0094                     	;# 
  2302  0095                     	;# 
  2303  0096                     	;# 
  2304  0097                     	;# 
  2305  0098                     	;# 
  2306  0099                     	;# 
  2307  009A                     	;# 
  2308  009B                     	;# 
  2309  009C                     	;# 
  2310  009D                     	;# 
  2311  009E                     	;# 
  2312  010C                     	;# 
  2313  010D                     	;# 
  2314  010E                     	;# 
  2315  010E                     	;# 
  2316  010F                     	;# 
  2317  0110                     	;# 
  2318  0110                     	;# 
  2319  0111                     	;# 
  2320  0112                     	;# 
  2321  0112                     	;# 
  2322  0113                     	;# 
  2323  0114                     	;# 
  2324  0114                     	;# 
  2325  0115                     	;# 
  2326  0116                     	;# 
  2327  0116                     	;# 
  2328  0117                     	;# 
  2329  0119                     	;# 
  2330  0119                     	;# 
  2331  0119                     	;# 
  2332  011A                     	;# 
  2333  011A                     	;# 
  2334  011A                     	;# 
  2335  011B                     	;# 
  2336  011B                     	;# 
  2337  011B                     	;# 
  2338  011B                     	;# 
  2339  011B                     	;# 
  2340  011C                     	;# 
  2341  011C                     	;# 
  2342  011C                     	;# 
  2343  011D                     	;# 
  2344  011D                     	;# 
  2345  011D                     	;# 
  2346  011E                     	;# 
  2347  011E                     	;# 
  2348  011E                     	;# 
  2349  011F                     	;# 
  2350  011F                     	;# 
  2351  011F                     	;# 
  2352  011F                     	;# 
  2353  011F                     	;# 
  2354  018C                     	;# 
  2355  018D                     	;# 
  2356  018E                     	;# 
  2357  018F                     	;# 
  2358  0190                     	;# 
  2359  0191                     	;# 
  2360  0192                     	;# 
  2361  0196                     	;# 
  2362  0197                     	;# 
  2363  0198                     	;# 
  2364  0199                     	;# 
  2365  019A                     	;# 
  2366  019B                     	;# 
  2367  019C                     	;# 
  2368  020C                     	;# 
  2369  020C                     	;# 
  2370  020D                     	;# 
  2371  020E                     	;# 
  2372  020F                     	;# 
  2373  020F                     	;# 
  2374  0210                     	;# 
  2375  0210                     	;# 
  2376  0211                     	;# 
  2377  0211                     	;# 
  2378  0212                     	;# 
  2379  0212                     	;# 
  2380  0213                     	;# 
  2381  0214                     	;# 
  2382  0215                     	;# 
  2383  0215                     	;# 
  2384  0216                     	;# 
  2385  0216                     	;# 
  2386  0217                     	;# 
  2387  0217                     	;# 
  2388  0218                     	;# 
  2389  0218                     	;# 
  2390  0219                     	;# 
  2391  021A                     	;# 
  2392  021B                     	;# 
  2393  021B                     	;# 
  2394  021C                     	;# 
  2395  021C                     	;# 
  2396  021D                     	;# 
  2397  021D                     	;# 
  2398  021E                     	;# 
  2399  021F                     	;# 
  2400  028C                     	;# 
  2401  028C                     	;# 
  2402  028D                     	;# 
  2403  028D                     	;# 
  2404  028E                     	;# 
  2405  028F                     	;# 
  2406  0290                     	;# 
  2407  0290                     	;# 
  2408  0291                     	;# 
  2409  0292                     	;# 
  2410  0292                     	;# 
  2411  0293                     	;# 
  2412  0293                     	;# 
  2413  0294                     	;# 
  2414  0295                     	;# 
  2415  0296                     	;# 
  2416  0296                     	;# 
  2417  0297                     	;# 
  2418  0298                     	;# 
  2419  0298                     	;# 
  2420  0299                     	;# 
  2421  0299                     	;# 
  2422  029A                     	;# 
  2423  029B                     	;# 
  2424  029C                     	;# 
  2425  029C                     	;# 
  2426  029D                     	;# 
  2427  030C                     	;# 
  2428  030C                     	;# 
  2429  030D                     	;# 
  2430  030E                     	;# 
  2431  030F                     	;# 
  2432  0310                     	;# 
  2433  0310                     	;# 
  2434  0311                     	;# 
  2435  0312                     	;# 
  2436  0313                     	;# 
  2437  0314                     	;# 
  2438  0314                     	;# 
  2439  0315                     	;# 
  2440  0316                     	;# 
  2441  0317                     	;# 
  2442  0318                     	;# 
  2443  0318                     	;# 
  2444  0319                     	;# 
  2445  031A                     	;# 
  2446  031B                     	;# 
  2447  031C                     	;# 
  2448  031C                     	;# 
  2449  031D                     	;# 
  2450  031E                     	;# 
  2451  031F                     	;# 
  2452  038C                     	;# 
  2453  038C                     	;# 
  2454  038D                     	;# 
  2455  038E                     	;# 
  2456  0390                     	;# 
  2457  0390                     	;# 
  2458  0391                     	;# 
  2459  0392                     	;# 
  2460  040C                     	;# 
  2461  040D                     	;# 
  2462  040E                     	;# 
  2463  040F                     	;# 
  2464  0410                     	;# 
  2465  0411                     	;# 
  2466  0416                     	;# 
  2467  0416                     	;# 
  2468  0417                     	;# 
  2469  0418                     	;# 
  2470  0418                     	;# 
  2471  0419                     	;# 
  2472  041A                     	;# 
  2473  041A                     	;# 
  2474  041B                     	;# 
  2475  041C                     	;# 
  2476  041C                     	;# 
  2477  041D                     	;# 
  2478  041E                     	;# 
  2479  041F                     	;# 
  2480  048C                     	;# 
  2481  048C                     	;# 
  2482  048D                     	;# 
  2483  048E                     	;# 
  2484  048F                     	;# 
  2485  048F                     	;# 
  2486  0490                     	;# 
  2487  0491                     	;# 
  2488  0492                     	;# 
  2489  0492                     	;# 
  2490  0493                     	;# 
  2491  0494                     	;# 
  2492  0495                     	;# 
  2493  0495                     	;# 
  2494  0496                     	;# 
  2495  0497                     	;# 
  2496  0498                     	;# 
  2497  0499                     	;# 
  2498  049A                     	;# 
  2499  049B                     	;# 
  2500  049C                     	;# 
  2501  049D                     	;# 
  2502  050C                     	;# 
  2503  050C                     	;# 
  2504  050D                     	;# 
  2505  050E                     	;# 
  2506  050F                     	;# 
  2507  050F                     	;# 
  2508  0510                     	;# 
  2509  0511                     	;# 
  2510  0512                     	;# 
  2511  0512                     	;# 
  2512  0513                     	;# 
  2513  0514                     	;# 
  2514  0515                     	;# 
  2515  0515                     	;# 
  2516  0516                     	;# 
  2517  0517                     	;# 
  2518  0518                     	;# 
  2519  0519                     	;# 
  2520  051A                     	;# 
  2521  051B                     	;# 
  2522  051C                     	;# 
  2523  051D                     	;# 
  2524  058C                     	;# 
  2525  058C                     	;# 
  2526  058D                     	;# 
  2527  058E                     	;# 
  2528  058F                     	;# 
  2529  058F                     	;# 
  2530  0590                     	;# 
  2531  0591                     	;# 
  2532  0592                     	;# 
  2533  0593                     	;# 
  2534  060C                     	;# 
  2535  060D                     	;# 
  2536  060E                     	;# 
  2537  060F                     	;# 
  2538  0610                     	;# 
  2539  0611                     	;# 
  2540  0612                     	;# 
  2541  0613                     	;# 
  2542  0614                     	;# 
  2543  0616                     	;# 
  2544  0617                     	;# 
  2545  0618                     	;# 
  2546  0619                     	;# 
  2547  061A                     	;# 
  2548  061B                     	;# 
  2549  061C                     	;# 
  2550  061D                     	;# 
  2551  061E                     	;# 
  2552  068C                     	;# 
  2553  068D                     	;# 
  2554  068E                     	;# 
  2555  068F                     	;# 
  2556  0690                     	;# 
  2557  0691                     	;# 
  2558  0692                     	;# 
  2559  0693                     	;# 
  2560  0694                     	;# 
  2561  070C                     	;# 
  2562  070D                     	;# 
  2563  070E                     	;# 
  2564  070F                     	;# 
  2565  0710                     	;# 
  2566  0711                     	;# 
  2567  0712                     	;# 
  2568  0713                     	;# 
  2569  0714                     	;# 
  2570  0716                     	;# 
  2571  0717                     	;# 
  2572  0718                     	;# 
  2573  0719                     	;# 
  2574  071A                     	;# 
  2575  071B                     	;# 
  2576  071C                     	;# 
  2577  071D                     	;# 
  2578  071E                     	;# 
  2579  0796                     	;# 
  2580  0797                     	;# 
  2581  0798                     	;# 
  2582  0799                     	;# 
  2583  079A                     	;# 
  2584  079B                     	;# 
  2585  080C                     	;# 
  2586  080D                     	;# 
  2587  080E                     	;# 
  2588  080F                     	;# 
  2589  0810                     	;# 
  2590  0811                     	;# 
  2591  0812                     	;# 
  2592  0813                     	;# 
  2593  0814                     	;# 
  2594  081A                     	;# 
  2595  081B                     	;# 
  2596  081C                     	;# 
  2597  081D                     	;# 
  2598  081E                     	;# 
  2599  081F                     	;# 
  2600  088C                     	;# 
  2601  088D                     	;# 
  2602  088E                     	;# 
  2603  088F                     	;# 
  2604  0890                     	;# 
  2605  0891                     	;# 
  2606  0892                     	;# 
  2607  0893                     	;# 
  2608  0895                     	;# 
  2609  0896                     	;# 
  2610  0897                     	;# 
  2611  0898                     	;# 
  2612  0899                     	;# 
  2613  089A                     	;# 
  2614  089B                     	;# 
  2615  090C                     	;# 
  2616  090E                     	;# 
  2617  090F                     	;# 
  2618  091F                     	;# 
  2619  091F                     	;# 
  2620  098F                     	;# 
  2621  098F                     	;# 
  2622  0990                     	;# 
  2623  0991                     	;# 
  2624  0992                     	;# 
  2625  0993                     	;# 
  2626  0994                     	;# 
  2627  0995                     	;# 
  2628  0996                     	;# 
  2629  0997                     	;# 
  2630  0E0F                     	;# 
  2631  0E10                     	;# 
  2632  0E11                     	;# 
  2633  0E12                     	;# 
  2634  0E13                     	;# 
  2635  0E14                     	;# 
  2636  0E15                     	;# 
  2637  0E16                     	;# 
  2638  0E17                     	;# 
  2639  0E18                     	;# 
  2640  0E19                     	;# 
  2641  0E1A                     	;# 
  2642  0E1B                     	;# 
  2643  0E1C                     	;# 
  2644  0E1D                     	;# 
  2645  0E1E                     	;# 
  2646  0E1F                     	;# 
  2647  0E20                     	;# 
  2648  0E21                     	;# 
  2649  0E22                     	;# 
  2650  0E23                     	;# 
  2651  0E24                     	;# 
  2652  0E25                     	;# 
  2653  0E26                     	;# 
  2654  0E27                     	;# 
  2655  0E28                     	;# 
  2656  0E29                     	;# 
  2657  0E2A                     	;# 
  2658  0E2B                     	;# 
  2659  0E2C                     	;# 
  2660  0E2D                     	;# 
  2661  0E2E                     	;# 
  2662  0E2F                     	;# 
  2663  0E30                     	;# 
  2664  0E31                     	;# 
  2665  0E32                     	;# 
  2666  0E33                     	;# 
  2667  0E34                     	;# 
  2668  0E35                     	;# 
  2669  0E36                     	;# 
  2670  0E37                     	;# 
  2671  0E8F                     	;# 
  2672  0E90                     	;# 
  2673  0E91                     	;# 
  2674  0E92                     	;# 
  2675  0E93                     	;# 
  2676  0E94                     	;# 
  2677  0E95                     	;# 
  2678  0E96                     	;# 
  2679  0E97                     	;# 
  2680  0E9C                     	;# 
  2681  0E9D                     	;# 
  2682  0E9E                     	;# 
  2683  0EA1                     	;# 
  2684  0EA2                     	;# 
  2685  0EA3                     	;# 
  2686  0EA4                     	;# 
  2687  0EA5                     	;# 
  2688  0EA9                     	;# 
  2689  0EAA                     	;# 
  2690  0EAB                     	;# 
  2691  0EAC                     	;# 
  2692  0EB1                     	;# 
  2693  0EB2                     	;# 
  2694  0EB3                     	;# 
  2695  0EB8                     	;# 
  2696  0EB9                     	;# 
  2697  0EBA                     	;# 
  2698  0EBB                     	;# 
  2699  0EBC                     	;# 
  2700  0EBD                     	;# 
  2701  0EBE                     	;# 
  2702  0EC3                     	;# 
  2703  0EC5                     	;# 
  2704  0EC6                     	;# 
  2705  0EC7                     	;# 
  2706  0EC8                     	;# 
  2707  0EC9                     	;# 
  2708  0ECA                     	;# 
  2709  0ECB                     	;# 
  2710  0ECC                     	;# 
  2711  0F10                     	;# 
  2712  0F11                     	;# 
  2713  0F12                     	;# 
  2714  0F13                     	;# 
  2715  0F14                     	;# 
  2716  0F15                     	;# 
  2717  0F16                     	;# 
  2718  0F17                     	;# 
  2719  0F18                     	;# 
  2720  0F19                     	;# 
  2721  0F1A                     	;# 
  2722  0F1B                     	;# 
  2723  0F1C                     	;# 
  2724  0F1D                     	;# 
  2725  0F1E                     	;# 
  2726  0F1F                     	;# 
  2727  0F20                     	;# 
  2728  0F21                     	;# 
  2729  0F22                     	;# 
  2730  0F23                     	;# 
  2731  0F24                     	;# 
  2732  0F25                     	;# 
  2733  0F26                     	;# 
  2734  0F27                     	;# 
  2735  0F28                     	;# 
  2736  0F29                     	;# 
  2737  0F2A                     	;# 
  2738  0F2B                     	;# 
  2739  0F2C                     	;# 
  2740  0F2D                     	;# 
  2741  0F2E                     	;# 
  2742  0F2F                     	;# 
  2743  0F30                     	;# 
  2744  0F31                     	;# 
  2745  0F32                     	;# 
  2746  0F38                     	;# 
  2747  0F39                     	;# 
  2748  0F3A                     	;# 
  2749  0F3B                     	;# 
  2750  0F3C                     	;# 
  2751  0F3D                     	;# 
  2752  0F3E                     	;# 
  2753  0F3F                     	;# 
  2754  0F40                     	;# 
  2755  0F41                     	;# 
  2756  0F43                     	;# 
  2757  0F44                     	;# 
  2758  0F45                     	;# 
  2759  0F46                     	;# 
  2760  0F47                     	;# 
  2761  0F48                     	;# 
  2762  0F49                     	;# 
  2763  0F4A                     	;# 
  2764  0F4B                     	;# 
  2765  0F4C                     	;# 
  2766  0F4E                     	;# 
  2767  0F4F                     	;# 
  2768  0F50                     	;# 
  2769  0F51                     	;# 
  2770  0F52                     	;# 
  2771  0F53                     	;# 
  2772  0F54                     	;# 
  2773  0F55                     	;# 
  2774  0F56                     	;# 
  2775  0F57                     	;# 
  2776  0F59                     	;# 
  2777  0F5A                     	;# 
  2778  0F5B                     	;# 
  2779  0F5C                     	;# 
  2780  0F5D                     	;# 
  2781  0F61                     	;# 
  2782  0F62                     	;# 
  2783  0F64                     	;# 
  2784  0F65                     	;# 
  2785  0F66                     	;# 
  2786  0F67                     	;# 
  2787  0F68                     	;# 
  2788  0F69                     	;# 
  2789  0F6A                     	;# 
  2790  0F6B                     	;# 
  2791  0F6C                     	;# 
  2792  0F6D                     	;# 
  2793  0FE4                     	;# 
  2794  0FE5                     	;# 
  2795  0FE6                     	;# 
  2796  0FE7                     	;# 
  2797  0FE8                     	;# 
  2798  0FE9                     	;# 
  2799  0FEA                     	;# 
  2800  0FEB                     	;# 
  2801  0FED                     	;# 
  2802  0FEE                     	;# 
  2803  0FEF                     	;# 
  2804  0000                     	;# 
  2805  0001                     	;# 
  2806  0002                     	;# 
  2807  0003                     	;# 
  2808  0004                     	;# 
  2809  0005                     	;# 
  2810  0006                     	;# 
  2811  0007                     	;# 
  2812  0008                     	;# 
  2813  0009                     	;# 
  2814  000A                     	;# 
  2815  000B                     	;# 
  2816  000C                     	;# 
  2817  000D                     	;# 
  2818  000E                     	;# 
  2819  000F                     	;# 
  2820  0010                     	;# 
  2821  0011                     	;# 
  2822  0012                     	;# 
  2823  0013                     	;# 
  2824  0014                     	;# 
  2825  0015                     	;# 
  2826  0016                     	;# 
  2827  0017                     	;# 
  2828  0018                     	;# 
  2829  0019                     	;# 
  2830  001A                     	;# 
  2831  001C                     	;# 
  2832  001C                     	;# 
  2833  001D                     	;# 
  2834  001D                     	;# 
  2835  001E                     	;# 
  2836  001F                     	;# 
  2837  008C                     	;# 
  2838  008C                     	;# 
  2839  008D                     	;# 
  2840  008E                     	;# 
  2841  008E                     	;# 
  2842  008F                     	;# 
  2843  0090                     	;# 
  2844  0090                     	;# 
  2845  0091                     	;# 
  2846  0093                     	;# 
  2847  0094                     	;# 
  2848  0095                     	;# 
  2849  0096                     	;# 
  2850  0097                     	;# 
  2851  0098                     	;# 
  2852  0099                     	;# 
  2853  009A                     	;# 
  2854  009B                     	;# 
  2855  009C                     	;# 
  2856  009D                     	;# 
  2857  009E                     	;# 
  2858  010C                     	;# 
  2859  010D                     	;# 
  2860  010E                     	;# 
  2861  010E                     	;# 
  2862  010F                     	;# 
  2863  0110                     	;# 
  2864  0110                     	;# 
  2865  0111                     	;# 
  2866  0112                     	;# 
  2867  0112                     	;# 
  2868  0113                     	;# 
  2869  0114                     	;# 
  2870  0114                     	;# 
  2871  0115                     	;# 
  2872  0116                     	;# 
  2873  0116                     	;# 
  2874  0117                     	;# 
  2875  0119                     	;# 
  2876  0119                     	;# 
  2877  0119                     	;# 
  2878  011A                     	;# 
  2879  011A                     	;# 
  2880  011A                     	;# 
  2881  011B                     	;# 
  2882  011B                     	;# 
  2883  011B                     	;# 
  2884  011B                     	;# 
  2885  011B                     	;# 
  2886  011C                     	;# 
  2887  011C                     	;# 
  2888  011C                     	;# 
  2889  011D                     	;# 
  2890  011D                     	;# 
  2891  011D                     	;# 
  2892  011E                     	;# 
  2893  011E                     	;# 
  2894  011E                     	;# 
  2895  011F                     	;# 
  2896  011F                     	;# 
  2897  011F                     	;# 
  2898  011F                     	;# 
  2899  011F                     	;# 
  2900  018C                     	;# 
  2901  018D                     	;# 
  2902  018E                     	;# 
  2903  018F                     	;# 
  2904  0190                     	;# 
  2905  0191                     	;# 
  2906  0192                     	;# 
  2907  0196                     	;# 
  2908  0197                     	;# 
  2909  0198                     	;# 
  2910  0199                     	;# 
  2911  019A                     	;# 
  2912  019B                     	;# 
  2913  019C                     	;# 
  2914  020C                     	;# 
  2915  020C                     	;# 
  2916  020D                     	;# 
  2917  020E                     	;# 
  2918  020F                     	;# 
  2919  020F                     	;# 
  2920  0210                     	;# 
  2921  0210                     	;# 
  2922  0211                     	;# 
  2923  0211                     	;# 
  2924  0212                     	;# 
  2925  0212                     	;# 
  2926  0213                     	;# 
  2927  0214                     	;# 
  2928  0215                     	;# 
  2929  0215                     	;# 
  2930  0216                     	;# 
  2931  0216                     	;# 
  2932  0217                     	;# 
  2933  0217                     	;# 
  2934  0218                     	;# 
  2935  0218                     	;# 
  2936  0219                     	;# 
  2937  021A                     	;# 
  2938  021B                     	;# 
  2939  021B                     	;# 
  2940  021C                     	;# 
  2941  021C                     	;# 
  2942  021D                     	;# 
  2943  021D                     	;# 
  2944  021E                     	;# 
  2945  021F                     	;# 
  2946  028C                     	;# 
  2947  028C                     	;# 
  2948  028D                     	;# 
  2949  028D                     	;# 
  2950  028E                     	;# 
  2951  028F                     	;# 
  2952  0290                     	;# 
  2953  0290                     	;# 
  2954  0291                     	;# 
  2955  0292                     	;# 
  2956  0292                     	;# 
  2957  0293                     	;# 
  2958  0293                     	;# 
  2959  0294                     	;# 
  2960  0295                     	;# 
  2961  0296                     	;# 
  2962  0296                     	;# 
  2963  0297                     	;# 
  2964  0298                     	;# 
  2965  0298                     	;# 
  2966  0299                     	;# 
  2967  0299                     	;# 
  2968  029A                     	;# 
  2969  029B                     	;# 
  2970  029C                     	;# 
  2971  029C                     	;# 
  2972  029D                     	;# 
  2973  030C                     	;# 
  2974  030C                     	;# 
  2975  030D                     	;# 
  2976  030E                     	;# 
  2977  030F                     	;# 
  2978  0310                     	;# 
  2979  0310                     	;# 
  2980  0311                     	;# 
  2981  0312                     	;# 
  2982  0313                     	;# 
  2983  0314                     	;# 
  2984  0314                     	;# 
  2985  0315                     	;# 
  2986  0316                     	;# 
  2987  0317                     	;# 
  2988  0318                     	;# 
  2989  0318                     	;# 
  2990  0319                     	;# 
  2991  031A                     	;# 
  2992  031B                     	;# 
  2993  031C                     	;# 
  2994  031C                     	;# 
  2995  031D                     	;# 
  2996  031E                     	;# 
  2997  031F                     	;# 
  2998  038C                     	;# 
  2999  038C                     	;# 
  3000  038D                     	;# 
  3001  038E                     	;# 
  3002  0390                     	;# 
  3003  0390                     	;# 
  3004  0391                     	;# 
  3005  0392                     	;# 
  3006  040C                     	;# 
  3007  040D                     	;# 
  3008  040E                     	;# 
  3009  040F                     	;# 
  3010  0410                     	;# 
  3011  0411                     	;# 
  3012  0416                     	;# 
  3013  0416                     	;# 
  3014  0417                     	;# 
  3015  0418                     	;# 
  3016  0418                     	;# 
  3017  0419                     	;# 
  3018  041A                     	;# 
  3019  041A                     	;# 
  3020  041B                     	;# 
  3021  041C                     	;# 
  3022  041C                     	;# 
  3023  041D                     	;# 
  3024  041E                     	;# 
  3025  041F                     	;# 
  3026  048C                     	;# 
  3027  048C                     	;# 
  3028  048D                     	;# 
  3029  048E                     	;# 
  3030  048F                     	;# 
  3031  048F                     	;# 
  3032  0490                     	;# 
  3033  0491                     	;# 
  3034  0492                     	;# 
  3035  0492                     	;# 
  3036  0493                     	;# 
  3037  0494                     	;# 
  3038  0495                     	;# 
  3039  0495                     	;# 
  3040  0496                     	;# 
  3041  0497                     	;# 
  3042  0498                     	;# 
  3043  0499                     	;# 
  3044  049A                     	;# 
  3045  049B                     	;# 
  3046  049C                     	;# 
  3047  049D                     	;# 
  3048  050C                     	;# 
  3049  050C                     	;# 
  3050  050D                     	;# 
  3051  050E                     	;# 
  3052  050F                     	;# 
  3053  050F                     	;# 
  3054  0510                     	;# 
  3055  0511                     	;# 
  3056  0512                     	;# 
  3057  0512                     	;# 
  3058  0513                     	;# 
  3059  0514                     	;# 
  3060  0515                     	;# 
  3061  0515                     	;# 
  3062  0516                     	;# 
  3063  0517                     	;# 
  3064  0518                     	;# 
  3065  0519                     	;# 
  3066  051A                     	;# 
  3067  051B                     	;# 
  3068  051C                     	;# 
  3069  051D                     	;# 
  3070  058C                     	;# 
  3071  058C                     	;# 
  3072  058D                     	;# 
  3073  058E                     	;# 
  3074  058F                     	;# 
  3075  058F                     	;# 
  3076  0590                     	;# 
  3077  0591                     	;# 
  3078  0592                     	;# 
  3079  0593                     	;# 
  3080  060C                     	;# 
  3081  060D                     	;# 
  3082  060E                     	;# 
  3083  060F                     	;# 
  3084  0610                     	;# 
  3085  0611                     	;# 
  3086  0612                     	;# 
  3087  0613                     	;# 
  3088  0614                     	;# 
  3089  0616                     	;# 
  3090  0617                     	;# 
  3091  0618                     	;# 
  3092  0619                     	;# 
  3093  061A                     	;# 
  3094  061B                     	;# 
  3095  061C                     	;# 
  3096  061D                     	;# 
  3097  061E                     	;# 
  3098  068C                     	;# 
  3099  068D                     	;# 
  3100  068E                     	;# 
  3101  068F                     	;# 
  3102  0690                     	;# 
  3103  0691                     	;# 
  3104  0692                     	;# 
  3105  0693                     	;# 
  3106  0694                     	;# 
  3107  070C                     	;# 
  3108  070D                     	;# 
  3109  070E                     	;# 
  3110  070F                     	;# 
  3111  0710                     	;# 
  3112  0711                     	;# 
  3113  0712                     	;# 
  3114  0713                     	;# 
  3115  0714                     	;# 
  3116  0716                     	;# 
  3117  0717                     	;# 
  3118  0718                     	;# 
  3119  0719                     	;# 
  3120  071A                     	;# 
  3121  071B                     	;# 
  3122  071C                     	;# 
  3123  071D                     	;# 
  3124  071E                     	;# 
  3125  0796                     	;# 
  3126  0797                     	;# 
  3127  0798                     	;# 
  3128  0799                     	;# 
  3129  079A                     	;# 
  3130  079B                     	;# 
  3131  080C                     	;# 
  3132  080D                     	;# 
  3133  080E                     	;# 
  3134  080F                     	;# 
  3135  0810                     	;# 
  3136  0811                     	;# 
  3137  0812                     	;# 
  3138  0813                     	;# 
  3139  0814                     	;# 
  3140  081A                     	;# 
  3141  081B                     	;# 
  3142  081C                     	;# 
  3143  081D                     	;# 
  3144  081E                     	;# 
  3145  081F                     	;# 
  3146  088C                     	;# 
  3147  088D                     	;# 
  3148  088E                     	;# 
  3149  088F                     	;# 
  3150  0890                     	;# 
  3151  0891                     	;# 
  3152  0892                     	;# 
  3153  0893                     	;# 
  3154  0895                     	;# 
  3155  0896                     	;# 
  3156  0897                     	;# 
  3157  0898                     	;# 
  3158  0899                     	;# 
  3159  089A                     	;# 
  3160  089B                     	;# 
  3161  090C                     	;# 
  3162  090E                     	;# 
  3163  090F                     	;# 
  3164  091F                     	;# 
  3165  091F                     	;# 
  3166  098F                     	;# 
  3167  098F                     	;# 
  3168  0990                     	;# 
  3169  0991                     	;# 
  3170  0992                     	;# 
  3171  0993                     	;# 
  3172  0994                     	;# 
  3173  0995                     	;# 
  3174  0996                     	;# 
  3175  0997                     	;# 
  3176  0E0F                     	;# 
  3177  0E10                     	;# 
  3178  0E11                     	;# 
  3179  0E12                     	;# 
  3180  0E13                     	;# 
  3181  0E14                     	;# 
  3182  0E15                     	;# 
  3183  0E16                     	;# 
  3184  0E17                     	;# 
  3185  0E18                     	;# 
  3186  0E19                     	;# 
  3187  0E1A                     	;# 
  3188  0E1B                     	;# 
  3189  0E1C                     	;# 
  3190  0E1D                     	;# 
  3191  0E1E                     	;# 
  3192  0E1F                     	;# 
  3193  0E20                     	;# 
  3194  0E21                     	;# 
  3195  0E22                     	;# 
  3196  0E23                     	;# 
  3197  0E24                     	;# 
  3198  0E25                     	;# 
  3199  0E26                     	;# 
  3200  0E27                     	;# 
  3201  0E28                     	;# 
  3202  0E29                     	;# 
  3203  0E2A                     	;# 
  3204  0E2B                     	;# 
  3205  0E2C                     	;# 
  3206  0E2D                     	;# 
  3207  0E2E                     	;# 
  3208  0E2F                     	;# 
  3209  0E30                     	;# 
  3210  0E31                     	;# 
  3211  0E32                     	;# 
  3212  0E33                     	;# 
  3213  0E34                     	;# 
  3214  0E35                     	;# 
  3215  0E36                     	;# 
  3216  0E37                     	;# 
  3217  0E8F                     	;# 
  3218  0E90                     	;# 
  3219  0E91                     	;# 
  3220  0E92                     	;# 
  3221  0E93                     	;# 
  3222  0E94                     	;# 
  3223  0E95                     	;# 
  3224  0E96                     	;# 
  3225  0E97                     	;# 
  3226  0E9C                     	;# 
  3227  0E9D                     	;# 
  3228  0E9E                     	;# 
  3229  0EA1                     	;# 
  3230  0EA2                     	;# 
  3231  0EA3                     	;# 
  3232  0EA4                     	;# 
  3233  0EA5                     	;# 
  3234  0EA9                     	;# 
  3235  0EAA                     	;# 
  3236  0EAB                     	;# 
  3237  0EAC                     	;# 
  3238  0EB1                     	;# 
  3239  0EB2                     	;# 
  3240  0EB3                     	;# 
  3241  0EB8                     	;# 
  3242  0EB9                     	;# 
  3243  0EBA                     	;# 
  3244  0EBB                     	;# 
  3245  0EBC                     	;# 
  3246  0EBD                     	;# 
  3247  0EBE                     	;# 
  3248  0EC3                     	;# 
  3249  0EC5                     	;# 
  3250  0EC6                     	;# 
  3251  0EC7                     	;# 
  3252  0EC8                     	;# 
  3253  0EC9                     	;# 
  3254  0ECA                     	;# 
  3255  0ECB                     	;# 
  3256  0ECC                     	;# 
  3257  0F10                     	;# 
  3258  0F11                     	;# 
  3259  0F12                     	;# 
  3260  0F13                     	;# 
  3261  0F14                     	;# 
  3262  0F15                     	;# 
  3263  0F16                     	;# 
  3264  0F17                     	;# 
  3265  0F18                     	;# 
  3266  0F19                     	;# 
  3267  0F1A                     	;# 
  3268  0F1B                     	;# 
  3269  0F1C                     	;# 
  3270  0F1D                     	;# 
  3271  0F1E                     	;# 
  3272  0F1F                     	;# 
  3273  0F20                     	;# 
  3274  0F21                     	;# 
  3275  0F22                     	;# 
  3276  0F23                     	;# 
  3277  0F24                     	;# 
  3278  0F25                     	;# 
  3279  0F26                     	;# 
  3280  0F27                     	;# 
  3281  0F28                     	;# 
  3282  0F29                     	;# 
  3283  0F2A                     	;# 
  3284  0F2B                     	;# 
  3285  0F2C                     	;# 
  3286  0F2D                     	;# 
  3287  0F2E                     	;# 
  3288  0F2F                     	;# 
  3289  0F30                     	;# 
  3290  0F31                     	;# 
  3291  0F32                     	;# 
  3292  0F38                     	;# 
  3293  0F39                     	;# 
  3294  0F3A                     	;# 
  3295  0F3B                     	;# 
  3296  0F3C                     	;# 
  3297  0F3D                     	;# 
  3298  0F3E                     	;# 
  3299  0F3F                     	;# 
  3300  0F40                     	;# 
  3301  0F41                     	;# 
  3302  0F43                     	;# 
  3303  0F44                     	;# 
  3304  0F45                     	;# 
  3305  0F46                     	;# 
  3306  0F47                     	;# 
  3307  0F48                     	;# 
  3308  0F49                     	;# 
  3309  0F4A                     	;# 
  3310  0F4B                     	;# 
  3311  0F4C                     	;# 
  3312  0F4E                     	;# 
  3313  0F4F                     	;# 
  3314  0F50                     	;# 
  3315  0F51                     	;# 
  3316  0F52                     	;# 
  3317  0F53                     	;# 
  3318  0F54                     	;# 
  3319  0F55                     	;# 
  3320  0F56                     	;# 
  3321  0F57                     	;# 
  3322  0F59                     	;# 
  3323  0F5A                     	;# 
  3324  0F5B                     	;# 
  3325  0F5C                     	;# 
  3326  0F5D                     	;# 
  3327  0F61                     	;# 
  3328  0F62                     	;# 
  3329  0F64                     	;# 
  3330  0F65                     	;# 
  3331  0F66                     	;# 
  3332  0F67                     	;# 
  3333  0F68                     	;# 
  3334  0F69                     	;# 
  3335  0F6A                     	;# 
  3336  0F6B                     	;# 
  3337  0F6C                     	;# 
  3338  0F6D                     	;# 
  3339  0FE4                     	;# 
  3340  0FE5                     	;# 
  3341  0FE6                     	;# 
  3342  0FE7                     	;# 
  3343  0FE8                     	;# 
  3344  0FE9                     	;# 
  3345  0FEA                     	;# 
  3346  0FEB                     	;# 
  3347  0FED                     	;# 
  3348  0FEE                     	;# 
  3349  0FEF                     	;# 
  3350  0000                     	;# 
  3351  0001                     	;# 
  3352  0002                     	;# 
  3353  0003                     	;# 
  3354  0004                     	;# 
  3355  0005                     	;# 
  3356  0006                     	;# 
  3357  0007                     	;# 
  3358  0008                     	;# 
  3359  0009                     	;# 
  3360  000A                     	;# 
  3361  000B                     	;# 
  3362  000C                     	;# 
  3363  000D                     	;# 
  3364  000E                     	;# 
  3365  000F                     	;# 
  3366  0010                     	;# 
  3367  0011                     	;# 
  3368  0012                     	;# 
  3369  0013                     	;# 
  3370  0014                     	;# 
  3371  0015                     	;# 
  3372  0016                     	;# 
  3373  0017                     	;# 
  3374  0018                     	;# 
  3375  0019                     	;# 
  3376  001A                     	;# 
  3377  001C                     	;# 
  3378  001C                     	;# 
  3379  001D                     	;# 
  3380  001D                     	;# 
  3381  001E                     	;# 
  3382  001F                     	;# 
  3383  008C                     	;# 
  3384  008C                     	;# 
  3385  008D                     	;# 
  3386  008E                     	;# 
  3387  008E                     	;# 
  3388  008F                     	;# 
  3389  0090                     	;# 
  3390  0090                     	;# 
  3391  0091                     	;# 
  3392  0093                     	;# 
  3393  0094                     	;# 
  3394  0095                     	;# 
  3395  0096                     	;# 
  3396  0097                     	;# 
  3397  0098                     	;# 
  3398  0099                     	;# 
  3399  009A                     	;# 
  3400  009B                     	;# 
  3401  009C                     	;# 
  3402  009D                     	;# 
  3403  009E                     	;# 
  3404  010C                     	;# 
  3405  010D                     	;# 
  3406  010E                     	;# 
  3407  010E                     	;# 
  3408  010F                     	;# 
  3409  0110                     	;# 
  3410  0110                     	;# 
  3411  0111                     	;# 
  3412  0112                     	;# 
  3413  0112                     	;# 
  3414  0113                     	;# 
  3415  0114                     	;# 
  3416  0114                     	;# 
  3417  0115                     	;# 
  3418  0116                     	;# 
  3419  0116                     	;# 
  3420  0117                     	;# 
  3421  0119                     	;# 
  3422  0119                     	;# 
  3423  0119                     	;# 
  3424  011A                     	;# 
  3425  011A                     	;# 
  3426  011A                     	;# 
  3427  011B                     	;# 
  3428  011B                     	;# 
  3429  011B                     	;# 
  3430  011B                     	;# 
  3431  011B                     	;# 
  3432  011C                     	;# 
  3433  011C                     	;# 
  3434  011C                     	;# 
  3435  011D                     	;# 
  3436  011D                     	;# 
  3437  011D                     	;# 
  3438  011E                     	;# 
  3439  011E                     	;# 
  3440  011E                     	;# 
  3441  011F                     	;# 
  3442  011F                     	;# 
  3443  011F                     	;# 
  3444  011F                     	;# 
  3445  011F                     	;# 
  3446  018C                     	;# 
  3447  018D                     	;# 
  3448  018E                     	;# 
  3449  018F                     	;# 
  3450  0190                     	;# 
  3451  0191                     	;# 
  3452  0192                     	;# 
  3453  0196                     	;# 
  3454  0197                     	;# 
  3455  0198                     	;# 
  3456  0199                     	;# 
  3457  019A                     	;# 
  3458  019B                     	;# 
  3459  019C                     	;# 
  3460  020C                     	;# 
  3461  020C                     	;# 
  3462  020D                     	;# 
  3463  020E                     	;# 
  3464  020F                     	;# 
  3465  020F                     	;# 
  3466  0210                     	;# 
  3467  0210                     	;# 
  3468  0211                     	;# 
  3469  0211                     	;# 
  3470  0212                     	;# 
  3471  0212                     	;# 
  3472  0213                     	;# 
  3473  0214                     	;# 
  3474  0215                     	;# 
  3475  0215                     	;# 
  3476  0216                     	;# 
  3477  0216                     	;# 
  3478  0217                     	;# 
  3479  0217                     	;# 
  3480  0218                     	;# 
  3481  0218                     	;# 
  3482  0219                     	;# 
  3483  021A                     	;# 
  3484  021B                     	;# 
  3485  021B                     	;# 
  3486  021C                     	;# 
  3487  021C                     	;# 
  3488  021D                     	;# 
  3489  021D                     	;# 
  3490  021E                     	;# 
  3491  021F                     	;# 
  3492  028C                     	;# 
  3493  028C                     	;# 
  3494  028D                     	;# 
  3495  028D                     	;# 
  3496  028E                     	;# 
  3497  028F                     	;# 
  3498  0290                     	;# 
  3499  0290                     	;# 
  3500  0291                     	;# 
  3501  0292                     	;# 
  3502  0292                     	;# 
  3503  0293                     	;# 
  3504  0293                     	;# 
  3505  0294                     	;# 
  3506  0295                     	;# 
  3507  0296                     	;# 
  3508  0296                     	;# 
  3509  0297                     	;# 
  3510  0298                     	;# 
  3511  0298                     	;# 
  3512  0299                     	;# 
  3513  0299                     	;# 
  3514  029A                     	;# 
  3515  029B                     	;# 
  3516  029C                     	;# 
  3517  029C                     	;# 
  3518  029D                     	;# 
  3519  030C                     	;# 
  3520  030C                     	;# 
  3521  030D                     	;# 
  3522  030E                     	;# 
  3523  030F                     	;# 
  3524  0310                     	;# 
  3525  0310                     	;# 
  3526  0311                     	;# 
  3527  0312                     	;# 
  3528  0313                     	;# 
  3529  0314                     	;# 
  3530  0314                     	;# 
  3531  0315                     	;# 
  3532  0316                     	;# 
  3533  0317                     	;# 
  3534  0318                     	;# 
  3535  0318                     	;# 
  3536  0319                     	;# 
  3537  031A                     	;# 
  3538  031B                     	;# 
  3539  031C                     	;# 
  3540  031C                     	;# 
  3541  031D                     	;# 
  3542  031E                     	;# 
  3543  031F                     	;# 
  3544  038C                     	;# 
  3545  038C                     	;# 
  3546  038D                     	;# 
  3547  038E                     	;# 
  3548  0390                     	;# 
  3549  0390                     	;# 
  3550  0391                     	;# 
  3551  0392                     	;# 
  3552  040C                     	;# 
  3553  040D                     	;# 
  3554  040E                     	;# 
  3555  040F                     	;# 
  3556  0410                     	;# 
  3557  0411                     	;# 
  3558  0416                     	;# 
  3559  0416                     	;# 
  3560  0417                     	;# 
  3561  0418                     	;# 
  3562  0418                     	;# 
  3563  0419                     	;# 
  3564  041A                     	;# 
  3565  041A                     	;# 
  3566  041B                     	;# 
  3567  041C                     	;# 
  3568  041C                     	;# 
  3569  041D                     	;# 
  3570  041E                     	;# 
  3571  041F                     	;# 
  3572  048C                     	;# 
  3573  048C                     	;# 
  3574  048D                     	;# 
  3575  048E                     	;# 
  3576  048F                     	;# 
  3577  048F                     	;# 
  3578  0490                     	;# 
  3579  0491                     	;# 
  3580  0492                     	;# 
  3581  0492                     	;# 
  3582  0493                     	;# 
  3583  0494                     	;# 
  3584  0495                     	;# 
  3585  0495                     	;# 
  3586  0496                     	;# 
  3587  0497                     	;# 
  3588  0498                     	;# 
  3589  0499                     	;# 
  3590  049A                     	;# 
  3591  049B                     	;# 
  3592  049C                     	;# 
  3593  049D                     	;# 
  3594  050C                     	;# 
  3595  050C                     	;# 
  3596  050D                     	;# 
  3597  050E                     	;# 
  3598  050F                     	;# 
  3599  050F                     	;# 
  3600  0510                     	;# 
  3601  0511                     	;# 
  3602  0512                     	;# 
  3603  0512                     	;# 
  3604  0513                     	;# 
  3605  0514                     	;# 
  3606  0515                     	;# 
  3607  0515                     	;# 
  3608  0516                     	;# 
  3609  0517                     	;# 
  3610  0518                     	;# 
  3611  0519                     	;# 
  3612  051A                     	;# 
  3613  051B                     	;# 
  3614  051C                     	;# 
  3615  051D                     	;# 
  3616  058C                     	;# 
  3617  058C                     	;# 
  3618  058D                     	;# 
  3619  058E                     	;# 
  3620  058F                     	;# 
  3621  058F                     	;# 
  3622  0590                     	;# 
  3623  0591                     	;# 
  3624  0592                     	;# 
  3625  0593                     	;# 
  3626  060C                     	;# 
  3627  060D                     	;# 
  3628  060E                     	;# 
  3629  060F                     	;# 
  3630  0610                     	;# 
  3631  0611                     	;# 
  3632  0612                     	;# 
  3633  0613                     	;# 
  3634  0614                     	;# 
  3635  0616                     	;# 
  3636  0617                     	;# 
  3637  0618                     	;# 
  3638  0619                     	;# 
  3639  061A                     	;# 
  3640  061B                     	;# 
  3641  061C                     	;# 
  3642  061D                     	;# 
  3643  061E                     	;# 
  3644  068C                     	;# 
  3645  068D                     	;# 
  3646  068E                     	;# 
  3647  068F                     	;# 
  3648  0690                     	;# 
  3649  0691                     	;# 
  3650  0692                     	;# 
  3651  0693                     	;# 
  3652  0694                     	;# 
  3653  070C                     	;# 
  3654  070D                     	;# 
  3655  070E                     	;# 
  3656  070F                     	;# 
  3657  0710                     	;# 
  3658  0711                     	;# 
  3659  0712                     	;# 
  3660  0713                     	;# 
  3661  0714                     	;# 
  3662  0716                     	;# 
  3663  0717                     	;# 
  3664  0718                     	;# 
  3665  0719                     	;# 
  3666  071A                     	;# 
  3667  071B                     	;# 
  3668  071C                     	;# 
  3669  071D                     	;# 
  3670  071E                     	;# 
  3671  0796                     	;# 
  3672  0797                     	;# 
  3673  0798                     	;# 
  3674  0799                     	;# 
  3675  079A                     	;# 
  3676  079B                     	;# 
  3677  080C                     	;# 
  3678  080D                     	;# 
  3679  080E                     	;# 
  3680  080F                     	;# 
  3681  0810                     	;# 
  3682  0811                     	;# 
  3683  0812                     	;# 
  3684  0813                     	;# 
  3685  0814                     	;# 
  3686  081A                     	;# 
  3687  081B                     	;# 
  3688  081C                     	;# 
  3689  081D                     	;# 
  3690  081E                     	;# 
  3691  081F                     	;# 
  3692  088C                     	;# 
  3693  088D                     	;# 
  3694  088E                     	;# 
  3695  088F                     	;# 
  3696  0890                     	;# 
  3697  0891                     	;# 
  3698  0892                     	;# 
  3699  0893                     	;# 
  3700  0895                     	;# 
  3701  0896                     	;# 
  3702  0897                     	;# 
  3703  0898                     	;# 
  3704  0899                     	;# 
  3705  089A                     	;# 
  3706  089B                     	;# 
  3707  090C                     	;# 
  3708  090E                     	;# 
  3709  090F                     	;# 
  3710  091F                     	;# 
  3711  091F                     	;# 
  3712  098F                     	;# 
  3713  098F                     	;# 
  3714  0990                     	;# 
  3715  0991                     	;# 
  3716  0992                     	;# 
  3717  0993                     	;# 
  3718  0994                     	;# 
  3719  0995                     	;# 
  3720  0996                     	;# 
  3721  0997                     	;# 
  3722  0E0F                     	;# 
  3723  0E10                     	;# 
  3724  0E11                     	;# 
  3725  0E12                     	;# 
  3726  0E13                     	;# 
  3727  0E14                     	;# 
  3728  0E15                     	;# 
  3729  0E16                     	;# 
  3730  0E17                     	;# 
  3731  0E18                     	;# 
  3732  0E19                     	;# 
  3733  0E1A                     	;# 
  3734  0E1B                     	;# 
  3735  0E1C                     	;# 
  3736  0E1D                     	;# 
  3737  0E1E                     	;# 
  3738  0E1F                     	;# 
  3739  0E20                     	;# 
  3740  0E21                     	;# 
  3741  0E22                     	;# 
  3742  0E23                     	;# 
  3743  0E24                     	;# 
  3744  0E25                     	;# 
  3745  0E26                     	;# 
  3746  0E27                     	;# 
  3747  0E28                     	;# 
  3748  0E29                     	;# 
  3749  0E2A                     	;# 
  3750  0E2B                     	;# 
  3751  0E2C                     	;# 
  3752  0E2D                     	;# 
  3753  0E2E                     	;# 
  3754  0E2F                     	;# 
  3755  0E30                     	;# 
  3756  0E31                     	;# 
  3757  0E32                     	;# 
  3758  0E33                     	;# 
  3759  0E34                     	;# 
  3760  0E35                     	;# 
  3761  0E36                     	;# 
  3762  0E37                     	;# 
  3763  0E8F                     	;# 
  3764  0E90                     	;# 
  3765  0E91                     	;# 
  3766  0E92                     	;# 
  3767  0E93                     	;# 
  3768  0E94                     	;# 
  3769  0E95                     	;# 
  3770  0E96                     	;# 
  3771  0E97                     	;# 
  3772  0E9C                     	;# 
  3773  0E9D                     	;# 
  3774  0E9E                     	;# 
  3775  0EA1                     	;# 
  3776  0EA2                     	;# 
  3777  0EA3                     	;# 
  3778  0EA4                     	;# 
  3779  0EA5                     	;# 
  3780  0EA9                     	;# 
  3781  0EAA                     	;# 
  3782  0EAB                     	;# 
  3783  0EAC                     	;# 
  3784  0EB1                     	;# 
  3785  0EB2                     	;# 
  3786  0EB3                     	;# 
  3787  0EB8                     	;# 
  3788  0EB9                     	;# 
  3789  0EBA                     	;# 
  3790  0EBB                     	;# 
  3791  0EBC                     	;# 
  3792  0EBD                     	;# 
  3793  0EBE                     	;# 
  3794  0EC3                     	;# 
  3795  0EC5                     	;# 
  3796  0EC6                     	;# 
  3797  0EC7                     	;# 
  3798  0EC8                     	;# 
  3799  0EC9                     	;# 
  3800  0ECA                     	;# 
  3801  0ECB                     	;# 
  3802  0ECC                     	;# 
  3803  0F10                     	;# 
  3804  0F11                     	;# 
  3805  0F12                     	;# 
  3806  0F13                     	;# 
  3807  0F14                     	;# 
  3808  0F15                     	;# 
  3809  0F16                     	;# 
  3810  0F17                     	;# 
  3811  0F18                     	;# 
  3812  0F19                     	;# 
  3813  0F1A                     	;# 
  3814  0F1B                     	;# 
  3815  0F1C                     	;# 
  3816  0F1D                     	;# 
  3817  0F1E                     	;# 
  3818  0F1F                     	;# 
  3819  0F20                     	;# 
  3820  0F21                     	;# 
  3821  0F22                     	;# 
  3822  0F23                     	;# 
  3823  0F24                     	;# 
  3824  0F25                     	;# 
  3825  0F26                     	;# 
  3826  0F27                     	;# 
  3827  0F28                     	;# 
  3828  0F29                     	;# 
  3829  0F2A                     	;# 
  3830  0F2B                     	;# 
  3831  0F2C                     	;# 
  3832  0F2D                     	;# 
  3833  0F2E                     	;# 
  3834  0F2F                     	;# 
  3835  0F30                     	;# 
  3836  0F31                     	;# 
  3837  0F32                     	;# 
  3838  0F38                     	;# 
  3839  0F39                     	;# 
  3840  0F3A                     	;# 
  3841  0F3B                     	;# 
  3842  0F3C                     	;# 
  3843  0F3D                     	;# 
  3844  0F3E                     	;# 
  3845  0F3F                     	;# 
  3846  0F40                     	;# 
  3847  0F41                     	;# 
  3848  0F43                     	;# 
  3849  0F44                     	;# 
  3850  0F45                     	;# 
  3851  0F46                     	;# 
  3852  0F47                     	;# 
  3853  0F48                     	;# 
  3854  0F49                     	;# 
  3855  0F4A                     	;# 
  3856  0F4B                     	;# 
  3857  0F4C                     	;# 
  3858  0F4E                     	;# 
  3859  0F4F                     	;# 
  3860  0F50                     	;# 
  3861  0F51                     	;# 
  3862  0F52                     	;# 
  3863  0F53                     	;# 
  3864  0F54                     	;# 
  3865  0F55                     	;# 
  3866  0F56                     	;# 
  3867  0F57                     	;# 
  3868  0F59                     	;# 
  3869  0F5A                     	;# 
  3870  0F5B                     	;# 
  3871  0F5C                     	;# 
  3872  0F5D                     	;# 
  3873  0F61                     	;# 
  3874  0F62                     	;# 
  3875  0F64                     	;# 
  3876  0F65                     	;# 
  3877  0F66                     	;# 
  3878  0F67                     	;# 
  3879  0F68                     	;# 
  3880  0F69                     	;# 
  3881  0F6A                     	;# 
  3882  0F6B                     	;# 
  3883  0F6C                     	;# 
  3884  0F6D                     	;# 
  3885  0FE4                     	;# 
  3886  0FE5                     	;# 
  3887  0FE6                     	;# 
  3888  0FE7                     	;# 
  3889  0FE8                     	;# 
  3890  0FE9                     	;# 
  3891  0FEA                     	;# 
  3892  0FEB                     	;# 
  3893  0FED                     	;# 
  3894  0FEE                     	;# 
  3895  0FEF                     	;# 
  3896                           
  3897                           	psect	stringtext1
  3898  07FD                     __pstringtext1:
  3899  07FD                     _dpowers:
  3900  07FD  3401               	retlw	1
  3901  07FE  3400               	retlw	0
  3902  07FF  340A               	retlw	10
  3903  0800  3400               	retlw	0
  3904  0801  3464               	retlw	100
  3905  0802  3400               	retlw	0
  3906  0803  34E8               	retlw	232
  3907  0804  3403               	retlw	3
  3908  0805  3410               	retlw	16
  3909  0806  3427               	retlw	39
  3910  0807                     __end_of_dpowers:
  3911                           
  3912                           	psect	stringtext2
  3913  07C6                     __pstringtext2:
  3914  07C6                     _hexpowers:
  3915  07C6  3401               	retlw	1
  3916  07C7  3400               	retlw	0
  3917  07C8  3410               	retlw	16
  3918  07C9  3400               	retlw	0
  3919  07CA  3400               	retlw	0
  3920  07CB  3401               	retlw	1
  3921  07CC  3400               	retlw	0
  3922  07CD  3410               	retlw	16
  3923  07CE                     __end_of_hexpowers:
  3924  0013                     _TRISCbits	set	19
  3925  000B                     _INTCONbits	set	11
  3926  0014                     _TRISD	set	20
  3927  0013                     _TRISC	set	19
  3928  0012                     _TRISB	set	18
  3929  0011                     _TRISA	set	17
  3930  0015                     _TRISE	set	21
  3931  0018                     _LATC	set	24
  3932  0017                     _LATB	set	23
  3933  0016                     _LATA	set	22
  3934  0019                     _LATD	set	25
  3935  001A                     _LATE	set	26
  3936  018E                     _SSP1MSK	set	398
  3937  018D                     _SSP1ADD	set	397
  3938  018F                     _SSP1STAT	set	399
  3939  0191                     _SSP1CON2	set	401
  3940  0190                     _SSP1CON1bits	set	400
  3941  018C                     _SSP1BUF	set	396
  3942  018F                     _SSP1STATbits	set	399
  3943  0191                     _SSP1CON2bits	set	401
  3944  0190                     _SSP1CON1	set	400
  3945  0719                     _PIE3bits	set	1817
  3946  070F                     _PIR3bits	set	1807
  3947  079B                     _PMD5	set	1947
  3948  079A                     _PMD4	set	1946
  3949  0799                     _PMD3	set	1945
  3950  0798                     _PMD2	set	1944
  3951  0797                     _PMD1	set	1943
  3952  0796                     _PMD0	set	1942
  3953  0892                     _OSCTUNE	set	2194
  3954  0893                     _OSCFRQ	set	2195
  3955  0891                     _OSCEN	set	2193
  3956  088F                     _OSCCON3	set	2191
  3957  088D                     _OSCCON1	set	2189
  3958  0EC6                     _SSP1DATPPS	set	3782
  3959  0EC5                     _SSP1CLKPPS	set	3781
  3960  0F24                     _RC4PPS	set	3876
  3961  0F23                     _RC3PPS	set	3875
  3962  0F67                     _SLRCONE	set	3943
  3963  0F5C                     _SLRCOND	set	3932
  3964  0F51                     _SLRCONC	set	3921
  3965  0F46                     _SLRCONB	set	3910
  3966  0F3B                     _SLRCONA	set	3899
  3967  0F5B                     _ODCOND	set	3931
  3968  0F50                     _ODCONC	set	3920
  3969  0F45                     _ODCONB	set	3909
  3970  0F3A                     _ODCONA	set	3898
  3971  0F66                     _ODCONE	set	3942
  3972  0F4F                     _WPUC	set	3919
  3973  0F39                     _WPUA	set	3897
  3974  0F44                     _WPUB	set	3908
  3975  0F65                     _WPUE	set	3941
  3976  0F5A                     _WPUD	set	3930
  3977  0F38                     _ANSELA	set	3896
  3978  0F64                     _ANSELE	set	3940
  3979  0F43                     _ANSELB	set	3907
  3980  0F4E                     _ANSELC	set	3918
  3981  0F59                     _ANSELD	set	3929
  3982  7A7C                     _WPUC4	set	31356
  3983  7A7B                     _WPUC3	set	31355
  3984  07CE                     STR_4:
  3985  07CE  3430               	retlw	48	;'0'
  3986  07CF  3431               	retlw	49	;'1'
  3987  07D0  3432               	retlw	50	;'2'
  3988  07D1  3433               	retlw	51	;'3'
  3989  07D2  3434               	retlw	52	;'4'
  3990  07D3  3435               	retlw	53	;'5'
  3991  07D4  3436               	retlw	54	;'6'
  3992  07D5  3437               	retlw	55	;'7'
  3993  07D6  3438               	retlw	56	;'8'
  3994  07D7  3439               	retlw	57	;'9'
  3995  07D8  3461               	retlw	97	;'a'
  3996  07D9  3462               	retlw	98	;'b'
  3997  07DA  3463               	retlw	99	;'c'
  3998  07DB  3464               	retlw	100	;'d'
  3999  07DC  3465               	retlw	101	;'e'
  4000  07DD  3466               	retlw	102	;'f'
  4001  07DE  3400               	retlw	0
  4002                           
  4003                           	psect	stringtext3
  4004  0807                     __pstringtext3:
  4005  0807                     STR_3:
  4006  0807  3425               	retlw	37	;'%'
  4007  0808  3430               	retlw	48	;'0'
  4008  0809  3432               	retlw	50	;'2'
  4009  080A  3478               	retlw	120	;'x'
  4010  080B  3420               	retlw	32	;' '
  4011  080C  3425               	retlw	37	;'%'
  4012  080D  3430               	retlw	48	;'0'
  4013  080E  3432               	retlw	50	;'2'
  4014  080F  3478               	retlw	120	;'x'
  4015  0810  3400               	retlw	0
  4016                           
  4017                           	psect	stringtext4
  4018  1000                     __pstringtext4:
  4019  1000                     STR_2:
  4020  1000  3425               	retlw	37	;'%'
  4021  1001  3430               	retlw	48	;'0'
  4022  1002  3432               	retlw	50	;'2'
  4023  1003  3464               	retlw	100	;'d'
  4024  1004  3420               	retlw	32	;' '
  4025  1005  3443               	retlw	67	;'C'
  4026  1006  3400               	retlw	0
  4027                           
  4028                           	psect	stringtext5
  4029  1007                     __pstringtext5:
  4030  1007                     STR_1:
  4031  1007  3454               	retlw	84	;'T'
  4032  1008  3465               	retlw	101	;'e'
  4033  1009  346D               	retlw	109	;'m'
  4034  100A  3470               	retlw	112	;'p'
  4035  100B  3400               	retlw	0
  4036                           
  4037                           	psect	stringtext6
  4038  0000                     __pstringtext6:
  4039                           
  4040                           	psect	cinit
  4041  001E                     start_initialization:	
  4042                           ; #config settings
  4043                           
  4044  001E                     __initialization:
  4045                           
  4046                           ; Clear objects allocated to BANK0
  4047  001E  0020               	movlb	0	; select bank0
  4048  001F  01CC               	clrf	__pbssBANK0& (0+127)
  4049  0020  01CD               	clrf	(__pbssBANK0+1)& (0+127)
  4050  0021  01CE               	clrf	(__pbssBANK0+2)& (0+127)
  4051  0022  01CF               	clrf	(__pbssBANK0+3)& (0+127)
  4052  0023                     end_of_initialization:	
  4053                           ;End of C runtime variable initialization code
  4054                           
  4055  0023                     __end_of__initialization:
  4056  0023  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4057  0024  0020               	movlb	0
  4058  0025  3185  2D44         	ljmp	_main	;jump to C main() function
  4059                           
  4060                           	psect	bssBANK0
  4061  004C                     __pbssBANK0:
  4062  004C                     _i2c1_driver_i2cISR:
  4063  004C                     	ds	2
  4064  004E                     _i2c1_driver_busCollisionISR:
  4065  004E                     	ds	2
  4066                           
  4067                           	psect	cstackCOMMON
  4068  0070                     __pcstackCOMMON:
  4069  0070                     ?_isdigit:
  4070  0070                     ?_i2c1_driver_open:	
  4071                           ; 1 bit 
  4072                           
  4073  0070                     ?_PMD_Initialize:	
  4074                           ; 1 bit 
  4075                           
  4076  0070                     ??_PMD_Initialize:	
  4077                           ; 1 bytes @ 0x0
  4078                           
  4079  0070                     ?_OSCILLATOR_Initialize:	
  4080                           ; 1 bytes @ 0x0
  4081                           
  4082  0070                     ??_OSCILLATOR_Initialize:	
  4083                           ; 1 bytes @ 0x0
  4084                           
  4085  0070                     ??_isdigit:	
  4086                           ; 1 bytes @ 0x0
  4087                           
  4088  0070                     ?_ReadI2C:	
  4089                           ; 1 bytes @ 0x0
  4090                           
  4091  0070                     ??_ReadI2C:	
  4092                           ; 1 bytes @ 0x0
  4093                           
  4094  0070                     ?_WriteI2C:	
  4095                           ; 1 bytes @ 0x0
  4096                           
  4097  0070                     ??_WriteI2C:	
  4098                           ; 1 bytes @ 0x0
  4099                           
  4100  0070                     ?_PIN_MANAGER_Initialize:	
  4101                           ; 1 bytes @ 0x0
  4102                           
  4103  0070                     ??_PIN_MANAGER_Initialize:	
  4104                           ; 1 bytes @ 0x0
  4105                           
  4106  0070                     ?_SYSTEM_Initialize:	
  4107                           ; 1 bytes @ 0x0
  4108                           
  4109  0070                     ??_SYSTEM_Initialize:	
  4110                           ; 1 bytes @ 0x0
  4111                           
  4112  0070                     ??_i2c1_driver_open:	
  4113                           ; 1 bytes @ 0x0
  4114                           
  4115  0070                     ?_INTERRUPT_InterruptManager:	
  4116                           ; 1 bytes @ 0x0
  4117                           
  4118  0070                     ??_INTERRUPT_InterruptManager:	
  4119                           ; 1 bytes @ 0x0
  4120                           
  4121  0070                     ?_tsttc:	
  4122                           ; 1 bytes @ 0x0
  4123                           
  4124  0070                     ?_LCDsend:	
  4125                           ; 1 bytes @ 0x0
  4126                           
  4127  0070                     ?_LCDrecv:	
  4128                           ; 1 bytes @ 0x0
  4129                           
  4130  0070                     ?_LCDinit:	
  4131                           ; 1 bytes @ 0x0
  4132                           
  4133  0070                     ?_LCDcmd:	
  4134                           ; 1 bytes @ 0x0
  4135                           
  4136  0070                     ?_LCDchar:	
  4137                           ; 1 bytes @ 0x0
  4138                           
  4139  0070                     ?_main:	
  4140                           ; 1 bytes @ 0x0
  4141                           
  4142  0070                     ?___wmul:	
  4143                           ; 1 bytes @ 0x0
  4144                           
  4145  0070                     ?___lwdiv:	
  4146                           ; 2 bytes @ 0x0
  4147                           
  4148  0070                     _isdigit$1514:	
  4149                           ; 2 bytes @ 0x0
  4150                           
  4151  0070                     ___wmul@multiplier:	
  4152                           ; 1 bytes @ 0x0
  4153                           
  4154  0070                     ___lwdiv@divisor:	
  4155                           ; 2 bytes @ 0x0
  4156                           
  4157                           
  4158                           ; 2 bytes @ 0x0
  4159  0070                     	ds	1
  4160  0071                     WriteI2C@data_out:
  4161  0071                     isdigit@c:	
  4162                           ; 1 bytes @ 0x1
  4163                           
  4164                           
  4165                           ; 1 bytes @ 0x1
  4166  0071                     	ds	1
  4167  0072                     ??_tsttc:
  4168  0072                     ??_LCDsend:	
  4169                           ; 1 bytes @ 0x2
  4170                           
  4171  0072                     ??_LCDrecv:	
  4172                           ; 1 bytes @ 0x2
  4173                           
  4174  0072                     ?_LCDsend2x4:	
  4175                           ; 1 bytes @ 0x2
  4176                           
  4177  0072                     LCDsend2x4@mode:	
  4178                           ; 1 bytes @ 0x2
  4179                           
  4180  0072                     ___wmul@multiplicand:	
  4181                           ; 1 bytes @ 0x2
  4182                           
  4183  0072                     ___lwdiv@dividend:	
  4184                           ; 2 bytes @ 0x2
  4185                           
  4186                           
  4187                           ; 2 bytes @ 0x2
  4188  0072                     	ds	1
  4189  0073                     ??_LCDsend2x4:
  4190  0073                     tsttc@value:	
  4191                           ; 1 bytes @ 0x3
  4192                           
  4193  0073                     LCDsend@c:	
  4194                           ; 1 bytes @ 0x3
  4195                           
  4196                           
  4197                           ; 1 bytes @ 0x3
  4198  0073                     	ds	1
  4199  0074                     ??___wmul:
  4200  0074                     ??___lwdiv:	
  4201                           ; 1 bytes @ 0x4
  4202                           
  4203  0074                     LCDrecv@hc:	
  4204                           ; 1 bytes @ 0x4
  4205                           
  4206  0074                     ___wmul@product:	
  4207                           ; 1 bytes @ 0x4
  4208                           
  4209                           
  4210                           ; 2 bytes @ 0x4
  4211  0074                     	ds	1
  4212  0075                     LCDrecv@lc:
  4213  0075                     LCDsend2x4@c:	
  4214                           ; 1 bytes @ 0x5
  4215                           
  4216  0075                     ___lwdiv@quotient:	
  4217                           ; 1 bytes @ 0x5
  4218                           
  4219                           
  4220                           ; 2 bytes @ 0x5
  4221  0075                     	ds	1
  4222  0076                     LCDrecv@mode:
  4223  0076                     LCDsend2x4@hc:	
  4224                           ; 1 bytes @ 0x6
  4225                           
  4226                           
  4227                           ; 1 bytes @ 0x6
  4228  0076                     	ds	1
  4229  0077                     LCDsend2x4@lc:
  4230  0077                     ___lwdiv@counter:	
  4231                           ; 1 bytes @ 0x7
  4232                           
  4233                           
  4234                           ; 1 bytes @ 0x7
  4235  0077                     	ds	1
  4236  0078                     ??_LCDinit:
  4237  0078                     ??_LCDcmd:	
  4238                           ; 1 bytes @ 0x8
  4239                           
  4240  0078                     ??_LCDchar:	
  4241                           ; 1 bytes @ 0x8
  4242                           
  4243  0078                     ?___lwmod:	
  4244                           ; 1 bytes @ 0x8
  4245                           
  4246  0078                     LCDcmd@c:	
  4247                           ; 2 bytes @ 0x8
  4248                           
  4249  0078                     LCDchar@c:	
  4250                           ; 1 bytes @ 0x8
  4251                           
  4252  0078                     ___lwmod@divisor:	
  4253                           ; 1 bytes @ 0x8
  4254                           
  4255                           
  4256                           ; 2 bytes @ 0x8
  4257  0078                     	ds	1
  4258  0079                     ?_LCDstr:
  4259  0079                     LCDstr@p:	
  4260                           ; 1 bytes @ 0x9
  4261                           
  4262                           
  4263                           ; 2 bytes @ 0x9
  4264  0079                     	ds	1
  4265  007A                     ___lwmod@dividend:
  4266                           
  4267                           ; 2 bytes @ 0xA
  4268  007A                     	ds	1
  4269  007B                     ??_LCDstr:
  4270                           
  4271                           ; 1 bytes @ 0xB
  4272  007B                     	ds	1
  4273  007C                     ??___lwmod:
  4274                           
  4275                           ; 1 bytes @ 0xC
  4276  007C                     	ds	1
  4277  007D                     ___lwmod@counter:
  4278                           
  4279                           ; 1 bytes @ 0xD
  4280  007D                     	ds	1
  4281                           
  4282                           	psect	cstackBANK0
  4283  0020                     __pcstackBANK0:
  4284  0020                     ?_sprintf:
  4285  0020                     LCDstr@c:	
  4286                           ; 2 bytes @ 0x0
  4287                           
  4288  0020                     sprintf@f:	
  4289                           ; 1 bytes @ 0x0
  4290                           
  4291                           
  4292                           ; 2 bytes @ 0x0
  4293  0020                     	ds	6
  4294  0026                     ??_sprintf:
  4295                           
  4296                           ; 1 bytes @ 0x6
  4297  0026                     	ds	4
  4298  002A                     sprintf@idx:
  4299                           
  4300                           ; 1 bytes @ 0xA
  4301  002A                     	ds	1
  4302  002B                     sprintf@ap:
  4303                           
  4304                           ; 1 bytes @ 0xB
  4305  002B                     	ds	1
  4306  002C                     sprintf@prec:
  4307                           
  4308                           ; 1 bytes @ 0xC
  4309  002C                     	ds	1
  4310  002D                     sprintf@val:
  4311                           
  4312                           ; 2 bytes @ 0xD
  4313  002D                     	ds	2
  4314  002F                     sprintf@flag:
  4315                           
  4316                           ; 1 bytes @ 0xF
  4317  002F                     	ds	1
  4318  0030                     sprintf@width:
  4319                           
  4320                           ; 2 bytes @ 0x10
  4321  0030                     	ds	2
  4322  0032                     sprintf@sp:
  4323                           
  4324                           ; 1 bytes @ 0x12
  4325  0032                     	ds	1
  4326  0033                     sprintf@c:
  4327                           
  4328                           ; 1 bytes @ 0x13
  4329  0033                     	ds	1
  4330  0034                     ??_main:
  4331                           
  4332                           ; 1 bytes @ 0x14
  4333  0034                     	ds	4
  4334  0038                     main@buf:
  4335                           
  4336                           ; 17 bytes @ 0x18
  4337  0038                     	ds	17
  4338  0049                     main@c:
  4339                           
  4340                           ; 1 bytes @ 0x29
  4341  0049                     	ds	1
  4342  004A                     main@c1:
  4343                           
  4344                           ; 1 bytes @ 0x2A
  4345  004A                     	ds	1
  4346  004B                     main@c2:
  4347                           
  4348                           ; 1 bytes @ 0x2B
  4349  004B                     	ds	1
  4350                           
  4351                           	psect	maintext
  4352  0544                     __pmaintext:	
  4353 ;;
  4354 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  4355 ;;
  4356 ;; *************** function _main *****************
  4357 ;; Defined at:
  4358 ;;		line 195 in file "main.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;		None
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;  buf            17   24[BANK0 ] unsigned char [17]
  4363 ;;  c2              1   43[BANK0 ] unsigned char 
  4364 ;;  c1              1   42[BANK0 ] unsigned char 
  4365 ;;  c               1   41[BANK0 ] unsigned char 
  4366 ;;  lc              1    0        unsigned char 
  4367 ;;  hc              1    0        unsigned char 
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  1    wreg      void 
  4370 ;; Registers used:
  4371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4372 ;; Tracked objects:
  4373 ;;		On entry : B1F/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4378 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4379 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4380 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4381 ;;Total ram usage:       24 bytes
  4382 ;; Hardware stack levels required when called:    5
  4383 ;; This function calls:
  4384 ;;		_LCDcmd
  4385 ;;		_LCDinit
  4386 ;;		_LCDrecv
  4387 ;;		_LCDstr
  4388 ;;		_SYSTEM_Initialize
  4389 ;;		_i2c1_driver_open
  4390 ;;		_sprintf
  4391 ;;		_tsttc
  4392 ;; This function is called by:
  4393 ;;		Startup code after reset
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           
  4398                           ;psect for function _main
  4399  0544                     _main:
  4400  0544                     l2576:	
  4401                           ;incstack = 0
  4402                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4403                           
  4404                           
  4405                           ;main.c: 197: unsigned char c;;main.c: 198: unsigned char hc;;main.c: 199: unsigned char
      +                           lc;;main.c: 200: unsigned char c1;;main.c: 201: unsigned char c2;;main.c: 202: unsigned
      +                           char buf[17];;main.c: 205: SYSTEM_Initialize();
  4406  0544  318F  27F6  3185   	fcall	_SYSTEM_Initialize
  4407                           
  4408                           ;main.c: 222: i2c1_driver_open();
  4409  0547  3187  27F1  3185   	fcall	_i2c1_driver_open
  4410  054A                     l2578:
  4411                           
  4412                           ;main.c: 223: TRISCbits.TRISC3 = 1;
  4413  054A  0020               	movlb	0	; select bank0
  4414  054B  1593               	bsf	19,3	;volatile
  4415  054C                     l2580:
  4416                           
  4417                           ;main.c: 224: TRISCbits.TRISC4 = 1;
  4418  054C  1613               	bsf	19,4	;volatile
  4419  054D                     l2582:
  4420                           
  4421                           ;main.c: 225: WPUC3 = 1;
  4422  054D  003E               	movlb	30	; select bank30
  4423  054E  15CF               	bsf	79,3	;volatile
  4424  054F                     l2584:
  4425                           
  4426                           ;main.c: 226: WPUC4 = 1;
  4427  054F  164F               	bsf	79,4	;volatile
  4428                           
  4429                           ;main.c: 227: LCDinit();
  4430  0550  3185  25C8  3185   	fcall	_LCDinit
  4431  0553                     l2586:
  4432                           
  4433                           ;main.c: 230: {;main.c: 233: __nop();
  4434  0553  0000               	nop
  4435                           
  4436                           ;main.c: 234: c = tsttc();
  4437  0554  3183  2384  3185   	fcall	_tsttc
  4438  0557  0020               	movlb	0	; select bank0
  4439  0558  00B4               	movwf	??_main
  4440  0559  0834               	movf	??_main,w
  4441  055A  00C9               	movwf	main@c
  4442                           
  4443                           ;main.c: 237: LCDcmd(0x80);
  4444  055B  3080               	movlw	128
  4445  055C  318F  27D6  3185   	fcall	_LCDcmd
  4446  055F                     l2588:
  4447                           
  4448                           ;main.c: 238: LCDstr("Temp");
  4449  055F  3007               	movlw	low (STR_1| (0+32768))
  4450  0560  00F9               	movwf	LCDstr@p
  4451  0561  3090               	movlw	high (STR_1| (0+32768))
  4452  0562  00FA               	movwf	LCDstr@p+1
  4453  0563  3187  2791  3185   	fcall	_LCDstr
  4454  0566                     l2590:
  4455                           
  4456                           ;main.c: 239: LCDcmd(0xc0);
  4457  0566  30C0               	movlw	192
  4458  0567  318F  27D6  3185   	fcall	_LCDcmd
  4459  056A                     l2592:
  4460                           
  4461                           ;main.c: 241: sprintf(buf, "%02d C", c);
  4462  056A  3000               	movlw	low (STR_2| (0+32768))
  4463  056B  0020               	movlb	0	; select bank0
  4464  056C  00A0               	movwf	sprintf@f
  4465  056D  3090               	movlw	high (STR_2| (0+32768))
  4466  056E  00A1               	movwf	sprintf@f+1
  4467  056F  0849               	movf	main@c,w
  4468  0570  00B4               	movwf	??_main
  4469  0571  01B5               	clrf	??_main+1
  4470  0572  0834               	movf	??_main,w
  4471  0573  00A2               	movwf	?_sprintf+2
  4472  0574  0835               	movf	??_main+1,w
  4473  0575  00A3               	movwf	?_sprintf+3
  4474  0576  3038               	movlw	(low (main@buf| 0))& (0+255)
  4475  0577  3180  2027  3185   	fcall	_sprintf
  4476  057A                     l2594:
  4477                           
  4478                           ;main.c: 242: LCDstr(buf);
  4479  057A  3038               	movlw	low main@buf
  4480  057B  00F9               	movwf	LCDstr@p
  4481  057C  3000               	movlw	high main@buf
  4482  057D  00FA               	movwf	LCDstr@p+1
  4483  057E  3187  2791  3185   	fcall	_LCDstr
  4484  0581                     l2596:
  4485                           
  4486                           ;main.c: 243: LCDcmd(0x81);
  4487  0581  3081               	movlw	129
  4488  0582  318F  27D6  3185   	fcall	_LCDcmd
  4489  0585                     l2598:
  4490                           
  4491                           ;main.c: 246: c1 = LCDrecv(0);
  4492  0585  3000               	movlw	0
  4493  0586  3182  223E  3185   	fcall	_LCDrecv
  4494  0589  0020               	movlb	0	; select bank0
  4495  058A  00B4               	movwf	??_main
  4496  058B  0834               	movf	??_main,w
  4497  058C  00CA               	movwf	main@c1
  4498  058D                     l2600:
  4499                           
  4500                           ;main.c: 247: c2 = LCDrecv(0x01);
  4501  058D  3001               	movlw	1
  4502  058E  3182  223E  3185   	fcall	_LCDrecv
  4503  0591  0020               	movlb	0	; select bank0
  4504  0592  00B4               	movwf	??_main
  4505  0593  0834               	movf	??_main,w
  4506  0594  00CB               	movwf	main@c2
  4507  0595                     l2602:
  4508                           
  4509                           ;main.c: 248: LCDcmd(0xc8);
  4510  0595  30C8               	movlw	200
  4511  0596  318F  27D6  3185   	fcall	_LCDcmd
  4512                           
  4513                           ;main.c: 249: sprintf(buf, "%02x %02x", c1, c2);
  4514  0599  3007               	movlw	low (STR_3| (0+32768))
  4515  059A  0020               	movlb	0	; select bank0
  4516  059B  00A0               	movwf	sprintf@f
  4517  059C  3088               	movlw	high (STR_3| (0+32768))
  4518  059D  00A1               	movwf	sprintf@f+1
  4519  059E  084A               	movf	main@c1,w
  4520  059F  00B4               	movwf	??_main
  4521  05A0  01B5               	clrf	??_main+1
  4522  05A1  0834               	movf	??_main,w
  4523  05A2  00A2               	movwf	?_sprintf+2
  4524  05A3  0835               	movf	??_main+1,w
  4525  05A4  00A3               	movwf	?_sprintf+3
  4526  05A5  084B               	movf	main@c2,w
  4527  05A6  00B6               	movwf	??_main+2
  4528  05A7  01B7               	clrf	??_main+3
  4529  05A8  0836               	movf	??_main+2,w
  4530  05A9  00A4               	movwf	?_sprintf+4
  4531  05AA  0837               	movf	??_main+3,w
  4532  05AB  00A5               	movwf	?_sprintf+5
  4533  05AC  3038               	movlw	(low (main@buf| 0))& (0+255)
  4534  05AD  3180  2027  3185   	fcall	_sprintf
  4535  05B0                     l2604:
  4536                           
  4537                           ;main.c: 250: LCDstr(buf);
  4538  05B0  3038               	movlw	low main@buf
  4539  05B1  00F9               	movwf	LCDstr@p
  4540  05B2  3000               	movlw	high main@buf
  4541  05B3  00FA               	movwf	LCDstr@p+1
  4542  05B4  3187  2791  3185   	fcall	_LCDstr
  4543  05B7                     l2606:
  4544                           
  4545                           ;main.c: 251: __nop();
  4546  05B7  0000               	nop
  4547  05B8                     l2608:
  4548                           
  4549                           ;main.c: 252: _delay((unsigned long)((3000)*(1000000/4000.0)));
  4550  05B8  3004               	movlw	4
  4551  05B9  0020               	movlb	0	; select bank0
  4552  05BA  00B5               	movwf	??_main+1
  4553  05BB  30CF               	movlw	207
  4554  05BC  00B4               	movwf	??_main
  4555  05BD  3001               	movlw	1
  4556  05BE                     u2567:
  4557  05BE  0B89               	decfsz	9,f
  4558  05BF  2DBE               	goto	u2567
  4559  05C0  0BB4               	decfsz	??_main,f
  4560  05C1  2DBE               	goto	u2567
  4561  05C2  0BB5               	decfsz	??_main+1,f
  4562  05C3  2DBE               	goto	u2567
  4563  05C4  3200               	nop2
  4564  05C5  2D53               	goto	l2586
  4565  05C6  3180  281C         	ljmp	start
  4566  05C8                     __end_of_main:
  4567                           
  4568                           	psect	text1
  4569  0384                     __ptext1:	
  4570 ;; *************** function _tsttc *****************
  4571 ;; Defined at:
  4572 ;;		line 52 in file "main.c"
  4573 ;; Parameters:    Size  Location     Type
  4574 ;;		None
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;  value           1    3[COMMON] unsigned char 
  4577 ;; Return value:  Size  Location     Type
  4578 ;;                  1    wreg      unsigned char 
  4579 ;; Registers used:
  4580 ;;		wreg, status,2, status,0, pclath, cstack
  4581 ;; Tracked objects:
  4582 ;;		On entry : 0/0
  4583 ;;		On exit  : 0/0
  4584 ;;		Unchanged: 0/0
  4585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4587 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4588 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4589 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4590 ;;Total ram usage:        2 bytes
  4591 ;; Hardware stack levels used:    1
  4592 ;; Hardware stack levels required when called:    2
  4593 ;; This function calls:
  4594 ;;		_ReadI2C
  4595 ;;		_WriteI2C
  4596 ;; This function is called by:
  4597 ;;		_main
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           
  4601                           
  4602                           ;psect for function _tsttc
  4603  0384                     _tsttc:
  4604  0384                     l359:	
  4605                           ;incstack = 0
  4606                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
  4607                           ;main.c: 54: unsigned char value;;main.c: 55: do{
  4608                           
  4609  0384                     l2274:	
  4610                           ;main.c: 56: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4611                           
  4612  0384  0023               	movlb	3	; select bank3
  4613  0385  0C0F               	rrf	15,w	;volatile
  4614  0386  0C89               	rrf	9,f
  4615  0387  3901               	andlw	1
  4616  0388  00F2               	movwf	??_tsttc
  4617  0389  0811               	movf	17,w	;volatile
  4618  038A  391F               	andlw	31
  4619  038B  0472               	iorwf	??_tsttc,w
  4620  038C  1D03               	btfss	3,2
  4621  038D  2B8F               	goto	u1821
  4622  038E  2B90               	goto	u1820
  4623  038F                     u1821:
  4624  038F  2B84               	goto	l2274
  4625  0390                     u1820:
  4626  0390                     l362:
  4627                           
  4628                           ;main.c: 57: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
  4629  0390  1411               	bsf	17,0	;volatile
  4630  0391                     l363:
  4631  0391  1811               	btfsc	17,0	;volatile
  4632  0392  2B94               	goto	u1831
  4633  0393  2B95               	goto	u1830
  4634  0394                     u1831:
  4635  0394  2B91               	goto	l363
  4636  0395                     u1830:
  4637  0395                     l2276:
  4638  0395  0C0F               	rrf	15,w	;volatile
  4639  0396  0C89               	rrf	9,f
  4640  0397  3901               	andlw	1
  4641  0398  00F2               	movwf	??_tsttc
  4642  0399  0811               	movf	17,w	;volatile
  4643  039A  391F               	andlw	31
  4644  039B  0472               	iorwf	??_tsttc,w
  4645  039C  1D03               	btfss	3,2
  4646  039D  2B9F               	goto	u1841
  4647  039E  2BA0               	goto	u1840
  4648  039F                     u1841:
  4649  039F  2B95               	goto	l2276
  4650  03A0                     u1840:
  4651  03A0                     l2278:
  4652                           
  4653                           ;main.c: 59: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4654  03A0  309A               	movlw	154
  4655  03A1  3186  2639  3183   	fcall	_WriteI2C
  4656  03A4                     l2280:
  4657  03A4  0023               	movlb	3	; select bank3
  4658  03A5  0C0F               	rrf	15,w	;volatile
  4659  03A6  0C89               	rrf	9,f
  4660  03A7  3901               	andlw	1
  4661  03A8  00F2               	movwf	??_tsttc
  4662  03A9  0811               	movf	17,w	;volatile
  4663  03AA  391F               	andlw	31
  4664  03AB  0472               	iorwf	??_tsttc,w
  4665  03AC  1D03               	btfss	3,2
  4666  03AD  2BAF               	goto	u1851
  4667  03AE  2BB0               	goto	u1850
  4668  03AF                     u1851:
  4669  03AF  2BA4               	goto	l2280
  4670  03B0                     u1850:
  4671  03B0                     l2282:
  4672                           
  4673                           ;main.c: 60: WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4674  03B0  3001               	movlw	1
  4675  03B1  3186  2639  3183   	fcall	_WriteI2C
  4676  03B4                     l2284:
  4677  03B4  0023               	movlb	3	; select bank3
  4678  03B5  0C0F               	rrf	15,w	;volatile
  4679  03B6  0C89               	rrf	9,f
  4680  03B7  3901               	andlw	1
  4681  03B8  00F2               	movwf	??_tsttc
  4682  03B9  0811               	movf	17,w	;volatile
  4683  03BA  391F               	andlw	31
  4684  03BB  0472               	iorwf	??_tsttc,w
  4685  03BC  1D03               	btfss	3,2
  4686  03BD  2BBF               	goto	u1861
  4687  03BE  2BC0               	goto	u1860
  4688  03BF                     u1861:
  4689  03BF  2BB4               	goto	l2284
  4690  03C0                     u1860:
  4691  03C0                     l374:
  4692                           
  4693                           ;main.c: 61: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
  4694  03C0  1491               	bsf	17,1	;volatile
  4695  03C1                     l375:
  4696  03C1  1891               	btfsc	17,1	;volatile
  4697  03C2  2BC4               	goto	u1871
  4698  03C3  2BC5               	goto	u1870
  4699  03C4                     u1871:
  4700  03C4  2BC1               	goto	l375
  4701  03C5                     u1870:
  4702  03C5                     l2286:
  4703  03C5  0C0F               	rrf	15,w	;volatile
  4704  03C6  0C89               	rrf	9,f
  4705  03C7  3901               	andlw	1
  4706  03C8  00F2               	movwf	??_tsttc
  4707  03C9  0811               	movf	17,w	;volatile
  4708  03CA  391F               	andlw	31
  4709  03CB  0472               	iorwf	??_tsttc,w
  4710  03CC  1D03               	btfss	3,2
  4711  03CD  2BCF               	goto	u1881
  4712  03CE  2BD0               	goto	u1880
  4713  03CF                     u1881:
  4714  03CF  2BC5               	goto	l2286
  4715  03D0                     u1880:
  4716  03D0                     l2288:
  4717                           
  4718                           ;main.c: 62: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4719  03D0  309B               	movlw	155
  4720  03D1  3186  2639  3183   	fcall	_WriteI2C
  4721  03D4                     l2290:
  4722  03D4  0023               	movlb	3	; select bank3
  4723  03D5  0C0F               	rrf	15,w	;volatile
  4724  03D6  0C89               	rrf	9,f
  4725  03D7  3901               	andlw	1
  4726  03D8  00F2               	movwf	??_tsttc
  4727  03D9  0811               	movf	17,w	;volatile
  4728  03DA  391F               	andlw	31
  4729  03DB  0472               	iorwf	??_tsttc,w
  4730  03DC  1D03               	btfss	3,2
  4731  03DD  2BDF               	goto	u1891
  4732  03DE  2BE0               	goto	u1890
  4733  03DF                     u1891:
  4734  03DF  2BD4               	goto	l2290
  4735  03E0                     u1890:
  4736  03E0                     l2292:
  4737                           
  4738                           ;main.c: 63: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4739  03E0  3187  27AC  3183   	fcall	_ReadI2C
  4740  03E3  00F2               	movwf	??_tsttc
  4741  03E4  0872               	movf	??_tsttc,w
  4742  03E5  00F3               	movwf	tsttc@value
  4743  03E6                     l2294:
  4744  03E6  0023               	movlb	3	; select bank3
  4745  03E7  0C0F               	rrf	15,w	;volatile
  4746  03E8  0C89               	rrf	9,f
  4747  03E9  3901               	andlw	1
  4748  03EA  00F2               	movwf	??_tsttc
  4749  03EB  0811               	movf	17,w	;volatile
  4750  03EC  391F               	andlw	31
  4751  03ED  0472               	iorwf	??_tsttc,w
  4752  03EE  1D03               	btfss	3,2
  4753  03EF  2BF1               	goto	u1901
  4754  03F0  2BF2               	goto	u1900
  4755  03F1                     u1901:
  4756  03F1  2BE6               	goto	l2294
  4757  03F2                     u1900:
  4758  03F2                     l386:
  4759                           
  4760                           ;main.c: 64: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4761  03F2  1691               	bsf	17,5	;volatile
  4762  03F3  1611               	bsf	17,4	;volatile
  4763  03F4                     l387:
  4764  03F4  1A11               	btfsc	17,4	;volatile
  4765  03F5  2BF7               	goto	u1911
  4766  03F6  2BF8               	goto	u1910
  4767  03F7                     u1911:
  4768  03F7  2BF4               	goto	l387
  4769  03F8                     u1910:
  4770  03F8                     l2296:
  4771  03F8  0C0F               	rrf	15,w	;volatile
  4772  03F9  0C89               	rrf	9,f
  4773  03FA  3901               	andlw	1
  4774  03FB  00F2               	movwf	??_tsttc
  4775  03FC  0811               	movf	17,w	;volatile
  4776  03FD  391F               	andlw	31
  4777  03FE  0472               	iorwf	??_tsttc,w
  4778  03FF  1D03               	btfss	3,2
  4779  0400  2C02               	goto	u1921
  4780  0401  2C03               	goto	u1920
  4781  0402                     u1921:
  4782  0402  2BF8               	goto	l2296
  4783  0403                     u1920:
  4784  0403                     l392:
  4785                           
  4786                           ;main.c: 65: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  4787  0403  1511               	bsf	17,2	;volatile
  4788  0404                     l393:
  4789  0404  1911               	btfsc	17,2	;volatile
  4790  0405  2C07               	goto	u1931
  4791  0406  2C08               	goto	u1930
  4792  0407                     u1931:
  4793  0407  2C04               	goto	l393
  4794  0408                     u1930:
  4795  0408                     l395:
  4796                           
  4797                           ;main.c: 66: } while (!(value & 0x40));
  4798  0408  1F73               	btfss	tsttc@value,6
  4799  0409  2C0B               	goto	u1941
  4800  040A  2C0C               	goto	u1940
  4801  040B                     u1941:
  4802  040B  2B84               	goto	l359
  4803  040C                     u1940:
  4804  040C                     l2298:
  4805  040C  0C0F               	rrf	15,w	;volatile
  4806  040D  0C89               	rrf	9,f
  4807  040E  3901               	andlw	1
  4808  040F  00F2               	movwf	??_tsttc
  4809  0410  0811               	movf	17,w	;volatile
  4810  0411  391F               	andlw	31
  4811  0412  0472               	iorwf	??_tsttc,w
  4812  0413  1D03               	btfss	3,2
  4813  0414  2C16               	goto	u1951
  4814  0415  2C17               	goto	u1950
  4815  0416                     u1951:
  4816  0416  2C0C               	goto	l2298
  4817  0417                     u1950:
  4818  0417                     l399:
  4819                           
  4820                           ;main.c: 69: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
  4821  0417  1411               	bsf	17,0	;volatile
  4822  0418                     l400:
  4823  0418  1811               	btfsc	17,0	;volatile
  4824  0419  2C1B               	goto	u1961
  4825  041A  2C1C               	goto	u1960
  4826  041B                     u1961:
  4827  041B  2C18               	goto	l400
  4828  041C                     u1960:
  4829  041C                     l2300:
  4830  041C  0C0F               	rrf	15,w	;volatile
  4831  041D  0C89               	rrf	9,f
  4832  041E  3901               	andlw	1
  4833  041F  00F2               	movwf	??_tsttc
  4834  0420  0811               	movf	17,w	;volatile
  4835  0421  391F               	andlw	31
  4836  0422  0472               	iorwf	??_tsttc,w
  4837  0423  1D03               	btfss	3,2
  4838  0424  2C26               	goto	u1971
  4839  0425  2C27               	goto	u1970
  4840  0426                     u1971:
  4841  0426  2C1C               	goto	l2300
  4842  0427                     u1970:
  4843  0427                     l2302:
  4844                           
  4845                           ;main.c: 70: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4846  0427  309A               	movlw	154
  4847  0428  3186  2639  3183   	fcall	_WriteI2C
  4848  042B                     l2304:
  4849  042B  0023               	movlb	3	; select bank3
  4850  042C  0C0F               	rrf	15,w	;volatile
  4851  042D  0C89               	rrf	9,f
  4852  042E  3901               	andlw	1
  4853  042F  00F2               	movwf	??_tsttc
  4854  0430  0811               	movf	17,w	;volatile
  4855  0431  391F               	andlw	31
  4856  0432  0472               	iorwf	??_tsttc,w
  4857  0433  1D03               	btfss	3,2
  4858  0434  2C36               	goto	u1981
  4859  0435  2C37               	goto	u1980
  4860  0436                     u1981:
  4861  0436  2C2B               	goto	l2304
  4862  0437                     u1980:
  4863  0437                     l2306:
  4864                           
  4865                           ;main.c: 71: WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4866  0437  3000               	movlw	0
  4867  0438  3186  2639  3183   	fcall	_WriteI2C
  4868  043B                     l2308:
  4869  043B  0023               	movlb	3	; select bank3
  4870  043C  0C0F               	rrf	15,w	;volatile
  4871  043D  0C89               	rrf	9,f
  4872  043E  3901               	andlw	1
  4873  043F  00F2               	movwf	??_tsttc
  4874  0440  0811               	movf	17,w	;volatile
  4875  0441  391F               	andlw	31
  4876  0442  0472               	iorwf	??_tsttc,w
  4877  0443  1D03               	btfss	3,2
  4878  0444  2C46               	goto	u1991
  4879  0445  2C47               	goto	u1990
  4880  0446                     u1991:
  4881  0446  2C3B               	goto	l2308
  4882  0447                     u1990:
  4883  0447                     l411:
  4884                           
  4885                           ;main.c: 72: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
  4886  0447  1491               	bsf	17,1	;volatile
  4887  0448                     l412:
  4888  0448  1891               	btfsc	17,1	;volatile
  4889  0449  2C4B               	goto	u2001
  4890  044A  2C4C               	goto	u2000
  4891  044B                     u2001:
  4892  044B  2C48               	goto	l412
  4893  044C                     u2000:
  4894  044C                     l2310:
  4895  044C  0C0F               	rrf	15,w	;volatile
  4896  044D  0C89               	rrf	9,f
  4897  044E  3901               	andlw	1
  4898  044F  00F2               	movwf	??_tsttc
  4899  0450  0811               	movf	17,w	;volatile
  4900  0451  391F               	andlw	31
  4901  0452  0472               	iorwf	??_tsttc,w
  4902  0453  1D03               	btfss	3,2
  4903  0454  2C56               	goto	u2011
  4904  0455  2C57               	goto	u2010
  4905  0456                     u2011:
  4906  0456  2C4C               	goto	l2310
  4907  0457                     u2010:
  4908  0457                     l2312:
  4909                           
  4910                           ;main.c: 73: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4911  0457  309B               	movlw	155
  4912  0458  3186  2639  3183   	fcall	_WriteI2C
  4913  045B                     l2314:
  4914  045B  0023               	movlb	3	; select bank3
  4915  045C  0C0F               	rrf	15,w	;volatile
  4916  045D  0C89               	rrf	9,f
  4917  045E  3901               	andlw	1
  4918  045F  00F2               	movwf	??_tsttc
  4919  0460  0811               	movf	17,w	;volatile
  4920  0461  391F               	andlw	31
  4921  0462  0472               	iorwf	??_tsttc,w
  4922  0463  1D03               	btfss	3,2
  4923  0464  2C66               	goto	u2021
  4924  0465  2C67               	goto	u2020
  4925  0466                     u2021:
  4926  0466  2C5B               	goto	l2314
  4927  0467                     u2020:
  4928  0467                     l2316:
  4929                           
  4930                           ;main.c: 74: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4931  0467  3187  27AC  3183   	fcall	_ReadI2C
  4932  046A  00F2               	movwf	??_tsttc
  4933  046B  0872               	movf	??_tsttc,w
  4934  046C  00F3               	movwf	tsttc@value
  4935  046D                     l2318:
  4936  046D  0023               	movlb	3	; select bank3
  4937  046E  0C0F               	rrf	15,w	;volatile
  4938  046F  0C89               	rrf	9,f
  4939  0470  3901               	andlw	1
  4940  0471  00F2               	movwf	??_tsttc
  4941  0472  0811               	movf	17,w	;volatile
  4942  0473  391F               	andlw	31
  4943  0474  0472               	iorwf	??_tsttc,w
  4944  0475  1D03               	btfss	3,2
  4945  0476  2C78               	goto	u2031
  4946  0477  2C79               	goto	u2030
  4947  0478                     u2031:
  4948  0478  2C6D               	goto	l2318
  4949  0479                     u2030:
  4950  0479                     l423:
  4951                           
  4952                           ;main.c: 75: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4953  0479  1691               	bsf	17,5	;volatile
  4954  047A  1611               	bsf	17,4	;volatile
  4955  047B                     l424:
  4956  047B  1A11               	btfsc	17,4	;volatile
  4957  047C  2C7E               	goto	u2041
  4958  047D  2C7F               	goto	u2040
  4959  047E                     u2041:
  4960  047E  2C7B               	goto	l424
  4961  047F                     u2040:
  4962  047F                     l2320:
  4963  047F  0C0F               	rrf	15,w	;volatile
  4964  0480  0C89               	rrf	9,f
  4965  0481  3901               	andlw	1
  4966  0482  00F2               	movwf	??_tsttc
  4967  0483  0811               	movf	17,w	;volatile
  4968  0484  391F               	andlw	31
  4969  0485  0472               	iorwf	??_tsttc,w
  4970  0486  1D03               	btfss	3,2
  4971  0487  2C89               	goto	u2051
  4972  0488  2C8A               	goto	u2050
  4973  0489                     u2051:
  4974  0489  2C7F               	goto	l2320
  4975  048A                     u2050:
  4976  048A                     l429:
  4977                           
  4978                           ;main.c: 76: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  4979  048A  1511               	bsf	17,2	;volatile
  4980  048B                     l430:
  4981  048B  1911               	btfsc	17,2	;volatile
  4982  048C  2C8E               	goto	u2061
  4983  048D  2C8F               	goto	u2060
  4984  048E                     u2061:
  4985  048E  2C8B               	goto	l430
  4986  048F                     u2060:
  4987  048F                     l2322:
  4988                           
  4989                           ;main.c: 78: return value;
  4990  048F  0873               	movf	tsttc@value,w
  4991  0490                     l433:
  4992  0490  0008               	return
  4993  0491                     __end_of_tsttc:
  4994                           
  4995                           	psect	text2
  4996  0027                     __ptext2:	
  4997 ;; *************** function _sprintf *****************
  4998 ;; Defined at:
  4999 ;;		line 505 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/doprnt.c"
  5000 ;; Parameters:    Size  Location     Type
  5001 ;;  sp              1    wreg     PTR unsigned char 
  5002 ;;		 -> main@buf(17), 
  5003 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  5004 ;;		 -> STR_3(10), STR_2(7), 
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;  sp              1   18[BANK0 ] PTR unsigned char 
  5007 ;;		 -> main@buf(17), 
  5008 ;;  idx             1   10[BANK0 ] unsigned char 
  5009 ;;  tmpval          4    0        struct .
  5010 ;;  width           2   16[BANK0 ] int 
  5011 ;;  val             2   13[BANK0 ] unsigned int 
  5012 ;;  cp              2    0        PTR const unsigned char 
  5013 ;;  len             2    0        unsigned int 
  5014 ;;  c               1   19[BANK0 ] unsigned char 
  5015 ;;  flag            1   15[BANK0 ] unsigned char 
  5016 ;;  prec            1   12[BANK0 ] char 
  5017 ;;  ap              1   11[BANK0 ] PTR void [1]
  5018 ;;		 -> ?_sprintf(2), 
  5019 ;; Return value:  Size  Location     Type
  5020 ;;                  2    0[BANK0 ] int 
  5021 ;; Registers used:
  5022 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5023 ;; Tracked objects:
  5024 ;;		On entry : 0/0
  5025 ;;		On exit  : 0/0
  5026 ;;		Unchanged: 0/0
  5027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5028 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5029 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5030 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5031 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5032 ;;Total ram usage:       20 bytes
  5033 ;; Hardware stack levels used:    1
  5034 ;; Hardware stack levels required when called:    2
  5035 ;; This function calls:
  5036 ;;		___lwdiv
  5037 ;;		___lwmod
  5038 ;;		___wmul
  5039 ;;		_isdigit
  5040 ;; This function is called by:
  5041 ;;		_main
  5042 ;; This function uses a non-reentrant model
  5043 ;;
  5044                           
  5045                           
  5046                           ;psect for function _sprintf
  5047  0027                     _sprintf:
  5048                           
  5049                           ;incstack = 0
  5050                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5051                           ;sprintf@sp stored from wreg
  5052  0027  0020               	movlb	0	; select bank0
  5053  0028  00B2               	movwf	sprintf@sp
  5054  0029                     l2434:
  5055                           
  5056                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
  5057  0029  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  5058  002A  00A6               	movwf	??_sprintf
  5059  002B  0826               	movf	??_sprintf,w
  5060  002C  00AB               	movwf	sprintf@ap
  5061                           
  5062                           ;doprnt.c: 553: while((c = *f++)) {
  5063  002D  2A25               	goto	l2562
  5064  002E                     l2436:
  5065                           
  5066                           ;doprnt.c: 555: if(c != '%')
  5067  002E  3025               	movlw	37
  5068  002F  0633               	xorwf	sprintf@c,w
  5069  0030  1903               	btfsc	3,2
  5070  0031  2833               	goto	u2351
  5071  0032  2834               	goto	u2350
  5072  0033                     u2351:
  5073  0033  2840               	goto	l2442
  5074  0034                     u2350:
  5075  0034                     l2438:
  5076                           
  5077                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  5078  0034  0833               	movf	sprintf@c,w
  5079  0035  00A6               	movwf	??_sprintf
  5080  0036  0832               	movf	sprintf@sp,w
  5081  0037  0086               	movwf	6
  5082  0038  0187               	clrf	7
  5083  0039  0826               	movf	??_sprintf,w
  5084  003A  0081               	movwf	1
  5085  003B                     l2440:
  5086  003B  3001               	movlw	1
  5087  003C  00A6               	movwf	??_sprintf
  5088  003D  0826               	movf	??_sprintf,w
  5089  003E  07B2               	addwf	sprintf@sp,f
  5090                           
  5091                           ;doprnt.c: 559: continue;
  5092  003F  2A25               	goto	l2562
  5093  0040                     l2442:
  5094                           
  5095                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  5096  0040  01B0               	clrf	sprintf@width
  5097  0041  01B1               	clrf	sprintf@width+1
  5098                           
  5099                           ;doprnt.c: 565: flag = 0;
  5100  0042  01AF               	clrf	sprintf@flag
  5101  0043  2849               	goto	l2448
  5102  0044                     l764:	
  5103                           ;doprnt.c: 596: case '0':
  5104                           
  5105                           
  5106                           ;doprnt.c: 597: flag |= 0x04;
  5107  0044  152F               	bsf	sprintf@flag,2
  5108  0045                     l2444:
  5109                           
  5110                           ;doprnt.c: 598: f++;
  5111  0045  3001               	movlw	1
  5112  0046  07A0               	addwf	sprintf@f,f
  5113  0047  3000               	movlw	0
  5114  0048  3DA1               	addwfc	sprintf@f+1,f
  5115  0049                     l2448:	
  5116                           ;doprnt.c: 599: continue;
  5117                           
  5118  0049  0820               	movf	sprintf@f,w
  5119  004A  0084               	movwf	4
  5120  004B  0821               	movf	sprintf@f+1,w
  5121  004C  0085               	movwf	5
  5122  004D  0800               	movf	0,w	;code access
  5123                           
  5124                           ; Switch size 1, requested type "simple"
  5125                           ; Number of cases is 1, Range of values is 48 to 48
  5126                           ; switch strategies available:
  5127                           ; Name         Instructions Cycles
  5128                           ; simple_byte            4     3 (average)
  5129                           ; direct_byte           11     9 (fixed)
  5130                           ; jumptable            263     9 (fixed)
  5131                           ;	Chosen strategy is simple_byte
  5132  004E  3A30               	xorlw	48	; case 48
  5133  004F  1903               	skipnz
  5134  0050  2844               	goto	l764
  5135  0051  2852               	goto	l2450
  5136  0052                     l2450:
  5137                           
  5138                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  5139  0052  0820               	movf	sprintf@f,w
  5140  0053  0084               	movwf	4
  5141  0054  0821               	movf	sprintf@f+1,w
  5142  0055  0085               	movwf	5
  5143  0056  0800               	movf	0,w	;code access
  5144  0057  3187  27DF  3180   	fcall	_isdigit
  5145  005A  1C03               	btfss	3,0
  5146  005B  285D               	goto	u2361
  5147  005C  285E               	goto	u2360
  5148  005D                     u2361:
  5149  005D  2894               	goto	l2464
  5150  005E                     u2360:
  5151  005E                     l2452:
  5152                           
  5153                           ;doprnt.c: 615: width = 0;
  5154  005E  0020               	movlb	0	; select bank0
  5155  005F  01B0               	clrf	sprintf@width
  5156  0060  01B1               	clrf	sprintf@width+1
  5157  0061                     l2454:
  5158                           
  5159                           ;doprnt.c: 617: width *= 10;
  5160  0061  300A               	movlw	10
  5161  0062  00F0               	movwf	___wmul@multiplier
  5162  0063  3000               	movlw	0
  5163  0064  00F1               	movwf	___wmul@multiplier+1
  5164  0065  0020               	movlb	0	; select bank0
  5165  0066  0831               	movf	sprintf@width+1,w
  5166  0067  00F3               	movwf	___wmul@multiplicand+1
  5167  0068  0830               	movf	sprintf@width,w
  5168  0069  00F2               	movwf	___wmul@multiplicand
  5169  006A  3187  2772  3180   	fcall	___wmul
  5170  006D  0871               	movf	?___wmul+1,w
  5171  006E  0020               	movlb	0	; select bank0
  5172  006F  00B1               	movwf	sprintf@width+1
  5173  0070  0870               	movf	?___wmul,w
  5174  0071  00B0               	movwf	sprintf@width
  5175  0072                     l2456:
  5176                           
  5177                           ;doprnt.c: 618: width += *f++ - '0';
  5178  0072  0820               	movf	sprintf@f,w
  5179  0073  0084               	movwf	4
  5180  0074  0821               	movf	sprintf@f+1,w
  5181  0075  0085               	movwf	5
  5182  0076  0800               	movf	0,w	;code access
  5183  0077  3ED0               	addlw	208
  5184  0078  00A6               	movwf	??_sprintf
  5185  0079  30FF               	movlw	255
  5186  007A  1803               	skipnc
  5187  007B  3000               	movlw	0
  5188  007C  00A7               	movwf	??_sprintf+1
  5189  007D  0826               	movf	??_sprintf,w
  5190  007E  07B0               	addwf	sprintf@width,f
  5191  007F  0827               	movf	??_sprintf+1,w
  5192  0080  3DB1               	addwfc	sprintf@width+1,f
  5193  0081                     l2458:
  5194  0081  3001               	movlw	1
  5195  0082  07A0               	addwf	sprintf@f,f
  5196  0083  3000               	movlw	0
  5197  0084  3DA1               	addwfc	sprintf@f+1,f
  5198  0085                     l2460:
  5199                           
  5200                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  5201  0085  0820               	movf	sprintf@f,w
  5202  0086  0084               	movwf	4
  5203  0087  0821               	movf	sprintf@f+1,w
  5204  0088  0085               	movwf	5
  5205  0089  0800               	movf	0,w	;code access
  5206  008A  3187  27DF  3180   	fcall	_isdigit
  5207  008D  1803               	btfsc	3,0
  5208  008E  2890               	goto	u2371
  5209  008F  2891               	goto	u2370
  5210  0090                     u2371:
  5211  0090  2861               	goto	l2454
  5212  0091                     u2370:
  5213  0091  2894               	goto	l2464
  5214  0092                     l777:	
  5215                           ;doprnt.c: 744: case 'x':
  5216                           
  5217                           
  5218                           ;doprnt.c: 747: flag |= 0x80;
  5219  0092  17AF               	bsf	sprintf@flag,7
  5220                           
  5221                           ;doprnt.c: 749: break;
  5222  0093  28AF               	goto	l776
  5223  0094                     l2464:
  5224  0094  0020               	movlb	0	; select bank0
  5225  0095  0821               	movf	sprintf@f+1,w
  5226  0096  00A7               	movwf	??_sprintf+1
  5227  0097  0820               	movf	sprintf@f,w
  5228  0098  00A6               	movwf	??_sprintf
  5229  0099  0AA0               	incf	sprintf@f,f
  5230  009A  1903               	skipnz
  5231  009B  0AA1               	incf	sprintf@f+1,f
  5232  009C  0826               	movf	??_sprintf,w
  5233  009D  0084               	movwf	4
  5234  009E  0827               	movf	??_sprintf+1,w
  5235  009F  0085               	movwf	5
  5236  00A0  0800               	movf	0,w	;code access
  5237  00A1  00B3               	movwf	sprintf@c
  5238                           
  5239                           ; Switch size 1, requested type "simple"
  5240                           ; Number of cases is 4, Range of values is 0 to 120
  5241                           ; switch strategies available:
  5242                           ; Name         Instructions Cycles
  5243                           ; simple_byte           13     7 (average)
  5244                           ; direct_byte          248     6 (fixed)
  5245                           ; jumptable            260     6 (fixed)
  5246                           ;	Chosen strategy is simple_byte
  5247  00A2  3A00               	xorlw	0	; case 0
  5248  00A3  1903               	skipnz
  5249  00A4  2A39               	goto	l2564
  5250  00A5  3A64               	xorlw	100	; case 100
  5251  00A6  1903               	skipnz
  5252  00A7  28AF               	goto	l776
  5253  00A8  3A0D               	xorlw	13	; case 105
  5254  00A9  1903               	skipnz
  5255  00AA  28AF               	goto	l776
  5256  00AB  3A11               	xorlw	17	; case 120
  5257  00AC  1903               	skipnz
  5258  00AD  2892               	goto	l777
  5259  00AE  2A25               	goto	l2562
  5260  00AF                     l776:
  5261                           
  5262                           ;doprnt.c: 1277: if((flag & 0x80) == 0x00)
  5263  00AF  1BAF               	btfsc	sprintf@flag,7
  5264  00B0  28B2               	goto	u2381
  5265  00B1  28B3               	goto	u2380
  5266  00B2                     u2381:
  5267  00B2  28CC               	goto	l2476
  5268  00B3                     u2380:
  5269  00B3                     l2466:
  5270                           
  5271                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  5272  00B3  082B               	movf	sprintf@ap,w
  5273  00B4  0086               	movwf	6
  5274  00B5  0187               	clrf	7
  5275  00B6  3F40               	moviw [0]fsr1
  5276  00B7  00AD               	movwf	sprintf@val
  5277  00B8  3F41               	moviw [1]fsr1
  5278  00B9  00AE               	movwf	sprintf@val+1
  5279  00BA                     l2468:
  5280  00BA  3002               	movlw	2
  5281  00BB  00A6               	movwf	??_sprintf
  5282  00BC  0826               	movf	??_sprintf,w
  5283  00BD  07AB               	addwf	sprintf@ap,f
  5284  00BE                     l2470:
  5285                           
  5286                           ;doprnt.c: 1287: if((int)val < 0) {
  5287  00BE  1FAE               	btfss	sprintf@val+1,7
  5288  00BF  28C1               	goto	u2391
  5289  00C0  28C2               	goto	u2390
  5290  00C1                     u2391:
  5291  00C1  2926               	goto	l2502
  5292  00C2                     u2390:
  5293  00C2                     l2472:
  5294                           
  5295                           ;doprnt.c: 1288: flag |= 0x03;
  5296  00C2  3003               	movlw	3
  5297  00C3  00A6               	movwf	??_sprintf
  5298  00C4  0826               	movf	??_sprintf,w
  5299  00C5  04AF               	iorwf	sprintf@flag,f
  5300  00C6                     l2474:
  5301                           
  5302                           ;doprnt.c: 1289: val = -val;
  5303  00C6  09AD               	comf	sprintf@val,f
  5304  00C7  09AE               	comf	sprintf@val+1,f
  5305  00C8  0AAD               	incf	sprintf@val,f
  5306  00C9  1903               	skipnz
  5307  00CA  0AAE               	incf	sprintf@val+1,f
  5308  00CB  2926               	goto	l2502
  5309  00CC                     l2476:
  5310                           
  5311                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(
      +                          unsigned **)ap), (unsigned)0));
  5312  00CC  082B               	movf	sprintf@ap,w
  5313  00CD  0086               	movwf	6
  5314  00CE  0187               	clrf	7
  5315  00CF  3F40               	moviw [0]fsr1
  5316  00D0  00AD               	movwf	sprintf@val
  5317  00D1  3F41               	moviw [1]fsr1
  5318  00D2  00AE               	movwf	sprintf@val+1
  5319  00D3                     l2478:
  5320  00D3  3002               	movlw	2
  5321  00D4  00A6               	movwf	??_sprintf
  5322  00D5  0826               	movf	??_sprintf,w
  5323  00D6  07AB               	addwf	sprintf@ap,f
  5324  00D7  2926               	goto	l2502
  5325  00D8                     l783:	
  5326                           ;doprnt.c: 1325: case 0x00:
  5327                           
  5328                           
  5329                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5330  00D8  01B3               	clrf	sprintf@c
  5331  00D9  0AB3               	incf	sprintf@c,f
  5332  00DA                     l2484:
  5333                           
  5334                           ;doprnt.c: 1332: if(val < dpowers[c])
  5335  00DA  0833               	movf	sprintf@c,w
  5336  00DB  00A6               	movwf	??_sprintf
  5337  00DC  01A7               	clrf	??_sprintf+1
  5338  00DD  35A6               	lslf	??_sprintf,f
  5339  00DE  0DA7               	rlf	??_sprintf+1,f
  5340  00DF  30FD               	movlw	low (_dpowers| (0+32768))
  5341  00E0  0726               	addwf	??_sprintf,w
  5342  00E1  0084               	movwf	4
  5343  00E2  3087               	movlw	high (_dpowers| (0+32768))
  5344  00E3  3D27               	addwfc	??_sprintf+1,w
  5345  00E4  0085               	movwf	5
  5346  00E5  3F00               	moviw [0]fsr0
  5347  00E6  00A8               	movwf	??_sprintf+2
  5348  00E7  3F01               	moviw [1]fsr0
  5349  00E8  00A9               	movwf	??_sprintf+3
  5350  00E9  0829               	movf	??_sprintf+3,w
  5351  00EA  022E               	subwf	sprintf@val+1,w
  5352  00EB  1D03               	skipz
  5353  00EC  28EF               	goto	u2405
  5354  00ED  0828               	movf	??_sprintf+2,w
  5355  00EE  022D               	subwf	sprintf@val,w
  5356  00EF                     u2405:
  5357  00EF  1803               	skipnc
  5358  00F0  28F2               	goto	u2401
  5359  00F1  28F3               	goto	u2400
  5360  00F2                     u2401:
  5361  00F2  28F4               	goto	l2488
  5362  00F3                     u2400:
  5363  00F3  292F               	goto	l2504
  5364  00F4                     l2488:
  5365  00F4  3001               	movlw	1
  5366  00F5  00A6               	movwf	??_sprintf
  5367  00F6  0826               	movf	??_sprintf,w
  5368  00F7  07B3               	addwf	sprintf@c,f
  5369  00F8  3005               	movlw	5
  5370  00F9  0633               	xorwf	sprintf@c,w
  5371  00FA  1D03               	btfss	3,2
  5372  00FB  28FD               	goto	u2411
  5373  00FC  28FE               	goto	u2410
  5374  00FD                     u2411:
  5375  00FD  28DA               	goto	l2484
  5376  00FE                     u2410:
  5377  00FE  292F               	goto	l2504
  5378  00FF                     l788:	
  5379                           ;doprnt.c: 1340: case 0x80:
  5380                           
  5381                           
  5382                           ;doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  5383  00FF  01B3               	clrf	sprintf@c
  5384  0100  0AB3               	incf	sprintf@c,f
  5385  0101                     l2494:
  5386                           
  5387                           ;doprnt.c: 1343: if(val < hexpowers[c])
  5388  0101  0833               	movf	sprintf@c,w
  5389  0102  00A6               	movwf	??_sprintf
  5390  0103  01A7               	clrf	??_sprintf+1
  5391  0104  35A6               	lslf	??_sprintf,f
  5392  0105  0DA7               	rlf	??_sprintf+1,f
  5393  0106  30C6               	movlw	low (_hexpowers| (0+32768))
  5394  0107  0726               	addwf	??_sprintf,w
  5395  0108  0084               	movwf	4
  5396  0109  3087               	movlw	high (_hexpowers| (0+32768))
  5397  010A  3D27               	addwfc	??_sprintf+1,w
  5398  010B  0085               	movwf	5
  5399  010C  3F00               	moviw [0]fsr0
  5400  010D  00A8               	movwf	??_sprintf+2
  5401  010E  3F01               	moviw [1]fsr0
  5402  010F  00A9               	movwf	??_sprintf+3
  5403  0110  0829               	movf	??_sprintf+3,w
  5404  0111  022E               	subwf	sprintf@val+1,w
  5405  0112  1D03               	skipz
  5406  0113  2916               	goto	u2425
  5407  0114  0828               	movf	??_sprintf+2,w
  5408  0115  022D               	subwf	sprintf@val,w
  5409  0116                     u2425:
  5410  0116  1803               	skipnc
  5411  0117  2919               	goto	u2421
  5412  0118  291A               	goto	u2420
  5413  0119                     u2421:
  5414  0119  291B               	goto	l2498
  5415  011A                     u2420:
  5416  011A  292F               	goto	l2504
  5417  011B                     l2498:
  5418  011B  3001               	movlw	1
  5419  011C  00A6               	movwf	??_sprintf
  5420  011D  0826               	movf	??_sprintf,w
  5421  011E  07B3               	addwf	sprintf@c,f
  5422  011F  3004               	movlw	4
  5423  0120  0633               	xorwf	sprintf@c,w
  5424  0121  1D03               	btfss	3,2
  5425  0122  2924               	goto	u2431
  5426  0123  2925               	goto	u2430
  5427  0124                     u2431:
  5428  0124  2901               	goto	l2494
  5429  0125                     u2430:
  5430  0125  292F               	goto	l2504
  5431  0126                     l2502:
  5432  0126  082F               	movf	sprintf@flag,w
  5433  0127  3980               	andlw	128
  5434                           
  5435                           ; Switch size 1, requested type "simple"
  5436                           ; Number of cases is 2, Range of values is 0 to 128
  5437                           ; switch strategies available:
  5438                           ; Name         Instructions Cycles
  5439                           ; simple_byte            7     4 (average)
  5440                           ; jumptable            260     6 (fixed)
  5441                           ;	Chosen strategy is simple_byte
  5442  0128  3A00               	xorlw	0	; case 0
  5443  0129  1903               	skipnz
  5444  012A  28D8               	goto	l783
  5445  012B  3A80               	xorlw	128	; case 128
  5446  012C  1903               	skipnz
  5447  012D  28FF               	goto	l788
  5448  012E  292F               	goto	l2504
  5449  012F                     l2504:
  5450                           
  5451                           ;doprnt.c: 1371: if(width && flag & 0x03)
  5452  012F  0830               	movf	sprintf@width,w
  5453  0130  0431               	iorwf	sprintf@width+1,w
  5454  0131  1903               	btfsc	3,2
  5455  0132  2934               	goto	u2441
  5456  0133  2935               	goto	u2440
  5457  0134                     u2441:
  5458  0134  293F               	goto	l792
  5459  0135                     u2440:
  5460  0135                     l2506:
  5461  0135  082F               	movf	sprintf@flag,w
  5462  0136  3903               	andlw	3
  5463  0137  1903               	btfsc	3,2
  5464  0138  293A               	goto	u2451
  5465  0139  293B               	goto	u2450
  5466  013A                     u2451:
  5467  013A  293F               	goto	l792
  5468  013B                     u2450:
  5469  013B                     l2508:
  5470                           
  5471                           ;doprnt.c: 1372: width--;
  5472  013B  30FF               	movlw	255
  5473  013C  07B0               	addwf	sprintf@width,f
  5474  013D  30FF               	movlw	255
  5475  013E  3DB1               	addwfc	sprintf@width+1,f
  5476  013F                     l792:
  5477                           
  5478                           ;doprnt.c: 1407: if(width > c)
  5479  013F  0831               	movf	sprintf@width+1,w
  5480  0140  3A80               	xorlw	128
  5481  0141  3C80               	sublw	128
  5482  0142  1D03               	skipz
  5483  0143  2946               	goto	u2465
  5484  0144  0830               	movf	sprintf@width,w
  5485  0145  0233               	subwf	sprintf@c,w
  5486  0146                     u2465:
  5487  0146  1803               	skipnc
  5488  0147  2949               	goto	u2461
  5489  0148  294A               	goto	u2460
  5490  0149                     u2461:
  5491  0149  2953               	goto	l2512
  5492  014A                     u2460:
  5493  014A                     l2510:
  5494                           
  5495                           ;doprnt.c: 1408: width -= c;
  5496  014A  0020               	movlb	0	; select bank0
  5497  014B  0833               	movf	sprintf@c,w
  5498  014C  00A6               	movwf	??_sprintf
  5499  014D  01A7               	clrf	??_sprintf+1
  5500  014E  0826               	movf	??_sprintf,w
  5501  014F  02B0               	subwf	sprintf@width,f
  5502  0150  0827               	movf	??_sprintf+1,w
  5503  0151  3BB1               	subwfb	sprintf@width+1,f
  5504  0152  2956               	goto	l2514
  5505  0153                     l2512:
  5506                           
  5507                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  5508  0153  0020               	movlb	0	; select bank0
  5509  0154  01B0               	clrf	sprintf@width
  5510  0155  01B1               	clrf	sprintf@width+1
  5511  0156                     l2514:
  5512                           
  5513                           ;doprnt.c: 1413: if(flag & 0x04) {
  5514  0156  1D2F               	btfss	sprintf@flag,2
  5515  0157  2959               	goto	u2471
  5516  0158  295A               	goto	u2470
  5517  0159                     u2471:
  5518  0159  2987               	goto	l2530
  5519  015A                     u2470:
  5520  015A                     l2516:
  5521                           
  5522                           ;doprnt.c: 1418: if(flag & 0x03)
  5523  015A  082F               	movf	sprintf@flag,w
  5524  015B  3903               	andlw	3
  5525  015C  1903               	btfsc	3,2
  5526  015D  295F               	goto	u2481
  5527  015E  2960               	goto	u2480
  5528  015F                     u2481:
  5529  015F  296B               	goto	l2522
  5530  0160                     u2480:
  5531  0160                     l2518:
  5532                           
  5533                           ;doprnt.c: 1419: ((*sp++ = ('-')));
  5534  0160  302D               	movlw	45
  5535  0161  00A6               	movwf	??_sprintf
  5536  0162  0832               	movf	sprintf@sp,w
  5537  0163  0086               	movwf	6
  5538  0164  0187               	clrf	7
  5539  0165  0826               	movf	??_sprintf,w
  5540  0166  0081               	movwf	1
  5541  0167                     l2520:
  5542  0167  3001               	movlw	1
  5543  0168  00A6               	movwf	??_sprintf
  5544  0169  0826               	movf	??_sprintf,w
  5545  016A  07B2               	addwf	sprintf@sp,f
  5546  016B                     l2522:
  5547                           
  5548                           ;doprnt.c: 1441: if(width)
  5549  016B  0830               	movf	sprintf@width,w
  5550  016C  0431               	iorwf	sprintf@width+1,w
  5551  016D  1903               	btfsc	3,2
  5552  016E  2970               	goto	u2491
  5553  016F  2971               	goto	u2490
  5554  0170                     u2491:
  5555  0170  29B3               	goto	l2544
  5556  0171                     u2490:
  5557  0171                     l2524:
  5558                           
  5559                           ;doprnt.c: 1443: ((*sp++ = ('0')));
  5560  0171  3030               	movlw	48
  5561  0172  00A6               	movwf	??_sprintf
  5562  0173  0832               	movf	sprintf@sp,w
  5563  0174  0086               	movwf	6
  5564  0175  0187               	clrf	7
  5565  0176  0826               	movf	??_sprintf,w
  5566  0177  0081               	movwf	1
  5567  0178                     l2526:
  5568  0178  3001               	movlw	1
  5569  0179  00A6               	movwf	??_sprintf
  5570  017A  0826               	movf	??_sprintf,w
  5571  017B  07B2               	addwf	sprintf@sp,f
  5572  017C                     l2528:
  5573                           
  5574                           ;doprnt.c: 1444: while(--width);
  5575  017C  30FF               	movlw	255
  5576  017D  07B0               	addwf	sprintf@width,f
  5577  017E  30FF               	movlw	255
  5578  017F  3DB1               	addwfc	sprintf@width+1,f
  5579  0180  0830               	movf	sprintf@width,w
  5580  0181  0431               	iorwf	sprintf@width+1,w
  5581  0182  1D03               	btfss	3,2
  5582  0183  2985               	goto	u2501
  5583  0184  2986               	goto	u2500
  5584  0185                     u2501:
  5585  0185  2971               	goto	l2524
  5586  0186                     u2500:
  5587  0186  29B3               	goto	l2544
  5588  0187                     l2530:
  5589                           
  5590                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  5591  0187  0830               	movf	sprintf@width,w
  5592  0188  0431               	iorwf	sprintf@width+1,w
  5593  0189  1903               	btfsc	3,2
  5594  018A  298C               	goto	u2511
  5595  018B  298D               	goto	u2510
  5596  018C                     u2511:
  5597  018C  29A2               	goto	l2538
  5598  018D                     u2510:
  5599  018D                     l2532:
  5600                           
  5601                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  5602  018D  3020               	movlw	32
  5603  018E  00A6               	movwf	??_sprintf
  5604  018F  0832               	movf	sprintf@sp,w
  5605  0190  0086               	movwf	6
  5606  0191  0187               	clrf	7
  5607  0192  0826               	movf	??_sprintf,w
  5608  0193  0081               	movwf	1
  5609  0194                     l2534:
  5610  0194  3001               	movlw	1
  5611  0195  00A6               	movwf	??_sprintf
  5612  0196  0826               	movf	??_sprintf,w
  5613  0197  07B2               	addwf	sprintf@sp,f
  5614  0198                     l2536:
  5615                           
  5616                           ;doprnt.c: 1457: while(--width);
  5617  0198  30FF               	movlw	255
  5618  0199  07B0               	addwf	sprintf@width,f
  5619  019A  30FF               	movlw	255
  5620  019B  3DB1               	addwfc	sprintf@width+1,f
  5621  019C  0830               	movf	sprintf@width,w
  5622  019D  0431               	iorwf	sprintf@width+1,w
  5623  019E  1D03               	btfss	3,2
  5624  019F  29A1               	goto	u2521
  5625  01A0  29A2               	goto	u2520
  5626  01A1                     u2521:
  5627  01A1  298D               	goto	l2532
  5628  01A2                     u2520:
  5629  01A2                     l2538:
  5630                           
  5631                           ;doprnt.c: 1464: if(flag & 0x03)
  5632  01A2  082F               	movf	sprintf@flag,w
  5633  01A3  3903               	andlw	3
  5634  01A4  1903               	btfsc	3,2
  5635  01A5  29A7               	goto	u2531
  5636  01A6  29A8               	goto	u2530
  5637  01A7                     u2531:
  5638  01A7  29B3               	goto	l2544
  5639  01A8                     u2530:
  5640  01A8                     l2540:
  5641                           
  5642                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  5643  01A8  302D               	movlw	45
  5644  01A9  00A6               	movwf	??_sprintf
  5645  01AA  0832               	movf	sprintf@sp,w
  5646  01AB  0086               	movwf	6
  5647  01AC  0187               	clrf	7
  5648  01AD  0826               	movf	??_sprintf,w
  5649  01AE  0081               	movwf	1
  5650  01AF                     l2542:
  5651  01AF  3001               	movlw	1
  5652  01B0  00A6               	movwf	??_sprintf
  5653  01B1  0826               	movf	??_sprintf,w
  5654  01B2  07B2               	addwf	sprintf@sp,f
  5655  01B3                     l2544:
  5656                           
  5657                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  5658  01B3  0833               	movf	sprintf@c,w
  5659  01B4  00A6               	movwf	??_sprintf
  5660  01B5  0826               	movf	??_sprintf,w
  5661  01B6  00AC               	movwf	sprintf@prec
  5662                           
  5663                           ;doprnt.c: 1500: while(prec--) {
  5664  01B7  2A1C               	goto	l2560
  5665  01B8                     l2546:
  5666                           
  5667                           ;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  5668  01B8  300A               	movlw	10
  5669  01B9  00F8               	movwf	___lwmod@divisor
  5670  01BA  3000               	movlw	0
  5671  01BB  00F9               	movwf	___lwmod@divisor+1
  5672  01BC  082C               	movf	sprintf@prec,w
  5673  01BD  00A6               	movwf	??_sprintf
  5674  01BE  01A7               	clrf	??_sprintf+1
  5675  01BF  35A6               	lslf	??_sprintf,f
  5676  01C0  0DA7               	rlf	??_sprintf+1,f
  5677  01C1  30FD               	movlw	low (_dpowers| (0+32768))
  5678  01C2  0726               	addwf	??_sprintf,w
  5679  01C3  0084               	movwf	4
  5680  01C4  3087               	movlw	high (_dpowers| (0+32768))
  5681  01C5  3D27               	addwfc	??_sprintf+1,w
  5682  01C6  0085               	movwf	5
  5683  01C7  3F00               	moviw [0]fsr0
  5684  01C8  00F0               	movwf	___lwdiv@divisor
  5685  01C9  3F01               	moviw [1]fsr0
  5686  01CA  00F1               	movwf	___lwdiv@divisor+1
  5687  01CB  082E               	movf	sprintf@val+1,w
  5688  01CC  00F3               	movwf	___lwdiv@dividend+1
  5689  01CD  082D               	movf	sprintf@val,w
  5690  01CE  00F2               	movwf	___lwdiv@dividend
  5691  01CF  3186  26C7  3180   	fcall	___lwdiv
  5692  01D2  0871               	movf	?___lwdiv+1,w
  5693  01D3  00FB               	movwf	___lwmod@dividend+1
  5694  01D4  0870               	movf	?___lwdiv,w
  5695  01D5  00FA               	movwf	___lwmod@dividend
  5696  01D6  3187  273E  3180   	fcall	___lwmod
  5697  01D9  0878               	movf	?___lwmod,w
  5698  01DA  3E30               	addlw	48
  5699  01DB  0020               	movlb	0	; select bank0
  5700  01DC  00A8               	movwf	??_sprintf+2
  5701  01DD  0828               	movf	??_sprintf+2,w
  5702  01DE  00B3               	movwf	sprintf@c
  5703                           
  5704                           ;doprnt.c: 1517: break;
  5705  01DF  2A11               	goto	l2556
  5706  01E0                     l2548:
  5707                           
  5708                           ;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpowers[(unsigned char)p
      +                          rec]) & 0xF;
  5709  01E0  082C               	movf	sprintf@prec,w
  5710  01E1  00A6               	movwf	??_sprintf
  5711  01E2  01A7               	clrf	??_sprintf+1
  5712  01E3  35A6               	lslf	??_sprintf,f
  5713  01E4  0DA7               	rlf	??_sprintf+1,f
  5714  01E5  30C6               	movlw	low (_hexpowers| (0+32768))
  5715  01E6  0726               	addwf	??_sprintf,w
  5716  01E7  0084               	movwf	4
  5717  01E8  3087               	movlw	high (_hexpowers| (0+32768))
  5718  01E9  3D27               	addwfc	??_sprintf+1,w
  5719  01EA  0085               	movwf	5
  5720  01EB  3F00               	moviw [0]fsr0
  5721  01EC  00F0               	movwf	___lwdiv@divisor
  5722  01ED  3F01               	moviw [1]fsr0
  5723  01EE  00F1               	movwf	___lwdiv@divisor+1
  5724  01EF  082E               	movf	sprintf@val+1,w
  5725  01F0  00F3               	movwf	___lwdiv@dividend+1
  5726  01F1  082D               	movf	sprintf@val,w
  5727  01F2  00F2               	movwf	___lwdiv@dividend
  5728  01F3  3186  26C7  3180   	fcall	___lwdiv
  5729  01F6  0870               	movf	?___lwdiv,w
  5730  01F7  390F               	andlw	15
  5731  01F8  0020               	movlb	0	; select bank0
  5732  01F9  00A8               	movwf	??_sprintf+2
  5733  01FA  0828               	movf	??_sprintf+2,w
  5734  01FB  00AA               	movwf	sprintf@idx
  5735  01FC                     l2550:
  5736                           
  5737                           ;doprnt.c: 1532: c = "0123456789abcdef"[idx];
  5738  01FC  082A               	movf	sprintf@idx,w
  5739  01FD  3ECE               	addlw	low (STR_4| (0+32768))
  5740  01FE  0084               	movwf	4
  5741  01FF  3087               	movlw	high (STR_4| (0+32768))
  5742  0200  1803               	skipnc
  5743  0201  3E01               	addlw	1
  5744  0202  0085               	movwf	5
  5745  0203  0800               	movf	0,w	;code access
  5746  0204  00A6               	movwf	??_sprintf
  5747  0205  0826               	movf	??_sprintf,w
  5748  0206  00B3               	movwf	sprintf@c
  5749                           
  5750                           ;doprnt.c: 1534: };doprnt.c: 1536: break;
  5751  0207  2A11               	goto	l2556
  5752  0208                     l2554:
  5753  0208  082F               	movf	sprintf@flag,w
  5754  0209  3980               	andlw	128
  5755                           
  5756                           ; Switch size 1, requested type "simple"
  5757                           ; Number of cases is 2, Range of values is 0 to 128
  5758                           ; switch strategies available:
  5759                           ; Name         Instructions Cycles
  5760                           ; simple_byte            7     4 (average)
  5761                           ; jumptable            260     6 (fixed)
  5762                           ;	Chosen strategy is simple_byte
  5763  020A  3A00               	xorlw	0	; case 0
  5764  020B  1903               	skipnz
  5765  020C  29B8               	goto	l2546
  5766  020D  3A80               	xorlw	128	; case 128
  5767  020E  1903               	skipnz
  5768  020F  29E0               	goto	l2548
  5769  0210  2A11               	goto	l2556
  5770  0211                     l2556:
  5771                           
  5772                           ;doprnt.c: 1550: ((*sp++ = (c)));
  5773  0211  0833               	movf	sprintf@c,w
  5774  0212  00A6               	movwf	??_sprintf
  5775  0213  0832               	movf	sprintf@sp,w
  5776  0214  0086               	movwf	6
  5777  0215  0187               	clrf	7
  5778  0216  0826               	movf	??_sprintf,w
  5779  0217  0081               	movwf	1
  5780  0218                     l2558:
  5781  0218  3001               	movlw	1
  5782  0219  00A6               	movwf	??_sprintf
  5783  021A  0826               	movf	??_sprintf,w
  5784  021B  07B2               	addwf	sprintf@sp,f
  5785  021C                     l2560:
  5786  021C  30FF               	movlw	255
  5787  021D  00A6               	movwf	??_sprintf
  5788  021E  0826               	movf	??_sprintf,w
  5789  021F  07AC               	addwf	sprintf@prec,f
  5790  0220  0A2C               	incf	sprintf@prec,w
  5791  0221  1D03               	btfss	3,2
  5792  0222  2A24               	goto	u2541
  5793  0223  2A25               	goto	u2540
  5794  0224                     u2541:
  5795  0224  2A08               	goto	l2554
  5796  0225                     u2540:
  5797  0225                     l2562:
  5798  0225  0821               	movf	sprintf@f+1,w
  5799  0226  00A7               	movwf	??_sprintf+1
  5800  0227  0820               	movf	sprintf@f,w
  5801  0228  00A6               	movwf	??_sprintf
  5802  0229  0AA0               	incf	sprintf@f,f
  5803  022A  1903               	skipnz
  5804  022B  0AA1               	incf	sprintf@f+1,f
  5805  022C  0826               	movf	??_sprintf,w
  5806  022D  0084               	movwf	4
  5807  022E  0827               	movf	??_sprintf+1,w
  5808  022F  0085               	movwf	5
  5809  0230  0800               	movf	0,w	;code access
  5810  0231  00A8               	movwf	??_sprintf+2
  5811  0232  0828               	movf	??_sprintf+2,w
  5812  0233  00B3               	movwf	sprintf@c
  5813  0234  0833               	movf	sprintf@c,w
  5814  0235  1D03               	btfss	3,2
  5815  0236  2A38               	goto	u2551
  5816  0237  2A39               	goto	u2550
  5817  0238                     u2551:
  5818  0238  282E               	goto	l2436
  5819  0239                     u2550:
  5820  0239                     l2564:
  5821                           
  5822                           ;doprnt.c: 1564: *sp = 0;
  5823  0239  0832               	movf	sprintf@sp,w
  5824  023A  0086               	movwf	6
  5825  023B  0187               	clrf	7
  5826  023C  0181               	clrf	1
  5827  023D                     l813:
  5828  023D  0008               	return
  5829  023E                     __end_of_sprintf:
  5830                           
  5831                           	psect	text3
  5832  07DF                     __ptext3:	
  5833 ;; *************** function _isdigit *****************
  5834 ;; Defined at:
  5835 ;;		line 8 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/isdigit.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;  c               1    wreg     unsigned char 
  5838 ;; Auto vars:     Size  Location     Type
  5839 ;;  c               1    1[COMMON] unsigned char 
  5840 ;; Return value:  Size  Location     Type
  5841 ;;		None               void
  5842 ;; Registers used:
  5843 ;;		wreg, status,2, status,0
  5844 ;; Tracked objects:
  5845 ;;		On entry : 0/0
  5846 ;;		On exit  : 0/0
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5850 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5852 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5853 ;;Total ram usage:        2 bytes
  5854 ;; Hardware stack levels used:    1
  5855 ;; Hardware stack levels required when called:    1
  5856 ;; This function calls:
  5857 ;;		Nothing
  5858 ;; This function is called by:
  5859 ;;		_sprintf
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           
  5863                           
  5864                           ;psect for function _isdigit
  5865  07DF                     _isdigit:
  5866                           
  5867                           ;incstack = 0
  5868                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5869                           ;isdigit@c stored from wreg
  5870  07DF  00F1               	movwf	isdigit@c
  5871  07E0                     l2182:
  5872  07E0  01F0               	clrf	_isdigit$1514
  5873  07E1                     l2184:
  5874  07E1  303A               	movlw	58
  5875  07E2  0271               	subwf	isdigit@c,w
  5876  07E3  1803               	skipnc
  5877  07E4  2FE6               	goto	u1621
  5878  07E5  2FE7               	goto	u1620
  5879  07E6                     u1621:
  5880  07E6  2FEF               	goto	l2190
  5881  07E7                     u1620:
  5882  07E7                     l2186:
  5883  07E7  3030               	movlw	48
  5884  07E8  0271               	subwf	isdigit@c,w
  5885  07E9  1C03               	skipc
  5886  07EA  2FEC               	goto	u1631
  5887  07EB  2FED               	goto	u1630
  5888  07EC                     u1631:
  5889  07EC  2FEF               	goto	l2190
  5890  07ED                     u1630:
  5891  07ED                     l2188:
  5892  07ED  01F0               	clrf	_isdigit$1514
  5893  07EE  0AF0               	incf	_isdigit$1514,f
  5894  07EF                     l2190:
  5895  07EF  0C70               	rrf	_isdigit$1514,w
  5896  07F0                     l1270:
  5897  07F0  0008               	return
  5898  07F1                     __end_of_isdigit:
  5899                           
  5900                           	psect	text4
  5901  0772                     __ptext4:	
  5902 ;; *************** function ___wmul *****************
  5903 ;; Defined at:
  5904 ;;		line 15 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/Umul16.c"
  5905 ;; Parameters:    Size  Location     Type
  5906 ;;  multiplier      2    0[COMMON] unsigned int 
  5907 ;;  multiplicand    2    2[COMMON] unsigned int 
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;  product         2    4[COMMON] unsigned int 
  5910 ;; Return value:  Size  Location     Type
  5911 ;;                  2    0[COMMON] unsigned int 
  5912 ;; Registers used:
  5913 ;;		wreg, status,2, status,0
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/0
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5919 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5920 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5922 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5923 ;;Total ram usage:        6 bytes
  5924 ;; Hardware stack levels used:    1
  5925 ;; Hardware stack levels required when called:    1
  5926 ;; This function calls:
  5927 ;;		Nothing
  5928 ;; This function is called by:
  5929 ;;		_sprintf
  5930 ;; This function uses a non-reentrant model
  5931 ;;
  5932                           
  5933                           
  5934                           ;psect for function ___wmul
  5935  0772                     ___wmul:
  5936  0772                     l2194:	
  5937                           ;incstack = 0
  5938                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5939                           
  5940  0772  01F4               	clrf	___wmul@product
  5941  0773  01F5               	clrf	___wmul@product+1
  5942  0774                     l2196:
  5943  0774  1C70               	btfss	___wmul@multiplier,0
  5944  0775  2F77               	goto	u1641
  5945  0776  2F78               	goto	u1640
  5946  0777                     u1641:
  5947  0777  2F7C               	goto	l817
  5948  0778                     u1640:
  5949  0778                     l2198:
  5950  0778  0872               	movf	___wmul@multiplicand,w
  5951  0779  07F4               	addwf	___wmul@product,f
  5952  077A  0873               	movf	___wmul@multiplicand+1,w
  5953  077B  3DF5               	addwfc	___wmul@product+1,f
  5954  077C                     l817:
  5955  077C  3001               	movlw	1
  5956  077D                     u1655:
  5957  077D  35F2               	lslf	___wmul@multiplicand,f
  5958  077E  0DF3               	rlf	___wmul@multiplicand+1,f
  5959  077F  0B89               	decfsz	9,f
  5960  0780  2F7D               	goto	u1655
  5961  0781                     l2200:
  5962  0781  3001               	movlw	1
  5963  0782                     u1665:
  5964  0782  36F1               	lsrf	___wmul@multiplier+1,f
  5965  0783  0CF0               	rrf	___wmul@multiplier,f
  5966  0784  0B89               	decfsz	9,f
  5967  0785  2F82               	goto	u1665
  5968  0786                     l2202:
  5969  0786  0870               	movf	___wmul@multiplier,w
  5970  0787  0471               	iorwf	___wmul@multiplier+1,w
  5971  0788  1D03               	btfss	3,2
  5972  0789  2F8B               	goto	u1671
  5973  078A  2F8C               	goto	u1670
  5974  078B                     u1671:
  5975  078B  2F74               	goto	l2196
  5976  078C                     u1670:
  5977  078C                     l2204:
  5978  078C  0875               	movf	___wmul@product+1,w
  5979  078D  00F1               	movwf	?___wmul+1
  5980  078E  0874               	movf	___wmul@product,w
  5981  078F  00F0               	movwf	?___wmul
  5982  0790                     l819:
  5983  0790  0008               	return
  5984  0791                     __end_of___wmul:
  5985                           
  5986                           	psect	text5
  5987  073E                     __ptext5:	
  5988 ;; *************** function ___lwmod *****************
  5989 ;; Defined at:
  5990 ;;		line 5 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/lwmod.c"
  5991 ;; Parameters:    Size  Location     Type
  5992 ;;  divisor         2    8[COMMON] unsigned int 
  5993 ;;  dividend        2   10[COMMON] unsigned int 
  5994 ;; Auto vars:     Size  Location     Type
  5995 ;;  counter         1   13[COMMON] unsigned char 
  5996 ;; Return value:  Size  Location     Type
  5997 ;;                  2    8[COMMON] unsigned int 
  5998 ;; Registers used:
  5999 ;;		wreg, status,2, status,0
  6000 ;; Tracked objects:
  6001 ;;		On entry : 0/0
  6002 ;;		On exit  : 0/0
  6003 ;;		Unchanged: 0/0
  6004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6005 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6006 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6007 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6008 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6009 ;;Total ram usage:        6 bytes
  6010 ;; Hardware stack levels used:    1
  6011 ;; Hardware stack levels required when called:    1
  6012 ;; This function calls:
  6013 ;;		Nothing
  6014 ;; This function is called by:
  6015 ;;		_sprintf
  6016 ;; This function uses a non-reentrant model
  6017 ;;
  6018                           
  6019                           
  6020                           ;psect for function ___lwmod
  6021  073E                     ___lwmod:
  6022  073E                     l2234:	
  6023                           ;incstack = 0
  6024                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6025                           
  6026  073E  0878               	movf	___lwmod@divisor,w
  6027  073F  0479               	iorwf	___lwmod@divisor+1,w
  6028  0740  1903               	btfsc	3,2
  6029  0741  2F43               	goto	u1751
  6030  0742  2F44               	goto	u1750
  6031  0743                     u1751:
  6032  0743  2F6D               	goto	l2252
  6033  0744                     u1750:
  6034  0744                     l2236:
  6035  0744  01FD               	clrf	___lwmod@counter
  6036  0745  0AFD               	incf	___lwmod@counter,f
  6037  0746  2F50               	goto	l2242
  6038  0747                     l2238:
  6039  0747  3001               	movlw	1
  6040  0748                     u1765:
  6041  0748  35F8               	lslf	___lwmod@divisor,f
  6042  0749  0DF9               	rlf	___lwmod@divisor+1,f
  6043  074A  0B89               	decfsz	9,f
  6044  074B  2F48               	goto	u1765
  6045  074C                     l2240:
  6046  074C  3001               	movlw	1
  6047  074D  00FC               	movwf	??___lwmod
  6048  074E  087C               	movf	??___lwmod,w
  6049  074F  07FD               	addwf	___lwmod@counter,f
  6050  0750                     l2242:
  6051  0750  1FF9               	btfss	___lwmod@divisor+1,7
  6052  0751  2F53               	goto	u1771
  6053  0752  2F54               	goto	u1770
  6054  0753                     u1771:
  6055  0753  2F47               	goto	l2238
  6056  0754                     u1770:
  6057  0754                     l2244:
  6058  0754  0879               	movf	___lwmod@divisor+1,w
  6059  0755  027B               	subwf	___lwmod@dividend+1,w
  6060  0756  1D03               	skipz
  6061  0757  2F5A               	goto	u1785
  6062  0758  0878               	movf	___lwmod@divisor,w
  6063  0759  027A               	subwf	___lwmod@dividend,w
  6064  075A                     u1785:
  6065  075A  1C03               	skipc
  6066  075B  2F5D               	goto	u1781
  6067  075C  2F5E               	goto	u1780
  6068  075D                     u1781:
  6069  075D  2F62               	goto	l2248
  6070  075E                     u1780:
  6071  075E                     l2246:
  6072  075E  0878               	movf	___lwmod@divisor,w
  6073  075F  02FA               	subwf	___lwmod@dividend,f
  6074  0760  0879               	movf	___lwmod@divisor+1,w
  6075  0761  3BFB               	subwfb	___lwmod@dividend+1,f
  6076  0762                     l2248:
  6077  0762  3001               	movlw	1
  6078  0763                     u1795:
  6079  0763  36F9               	lsrf	___lwmod@divisor+1,f
  6080  0764  0CF8               	rrf	___lwmod@divisor,f
  6081  0765  0B89               	decfsz	9,f
  6082  0766  2F63               	goto	u1795
  6083  0767                     l2250:
  6084  0767  3001               	movlw	1
  6085  0768  02FD               	subwf	___lwmod@counter,f
  6086  0769  1D03               	btfss	3,2
  6087  076A  2F6C               	goto	u1801
  6088  076B  2F6D               	goto	u1800
  6089  076C                     u1801:
  6090  076C  2F54               	goto	l2244
  6091  076D                     u1800:
  6092  076D                     l2252:
  6093  076D  087B               	movf	___lwmod@dividend+1,w
  6094  076E  00F9               	movwf	?___lwmod+1
  6095  076F  087A               	movf	___lwmod@dividend,w
  6096  0770  00F8               	movwf	?___lwmod
  6097  0771                     l1099:
  6098  0771  0008               	return
  6099  0772                     __end_of___lwmod:
  6100                           
  6101                           	psect	text6
  6102  06C7                     __ptext6:	
  6103 ;; *************** function ___lwdiv *****************
  6104 ;; Defined at:
  6105 ;;		line 5 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/lwdiv.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;  divisor         2    0[COMMON] unsigned int 
  6108 ;;  dividend        2    2[COMMON] unsigned int 
  6109 ;; Auto vars:     Size  Location     Type
  6110 ;;  quotient        2    5[COMMON] unsigned int 
  6111 ;;  counter         1    7[COMMON] unsigned char 
  6112 ;; Return value:  Size  Location     Type
  6113 ;;                  2    0[COMMON] unsigned int 
  6114 ;; Registers used:
  6115 ;;		wreg, status,2, status,0
  6116 ;; Tracked objects:
  6117 ;;		On entry : 0/0
  6118 ;;		On exit  : 0/0
  6119 ;;		Unchanged: 0/0
  6120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6121 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6122 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6123 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6124 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6125 ;;Total ram usage:        8 bytes
  6126 ;; Hardware stack levels used:    1
  6127 ;; Hardware stack levels required when called:    1
  6128 ;; This function calls:
  6129 ;;		Nothing
  6130 ;; This function is called by:
  6131 ;;		_sprintf
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           
  6135                           
  6136                           ;psect for function ___lwdiv
  6137  06C7                     ___lwdiv:
  6138  06C7                     l2208:	
  6139                           ;incstack = 0
  6140                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6141                           
  6142  06C7  01F5               	clrf	___lwdiv@quotient
  6143  06C8  01F6               	clrf	___lwdiv@quotient+1
  6144  06C9                     l2210:
  6145  06C9  0870               	movf	___lwdiv@divisor,w
  6146  06CA  0471               	iorwf	___lwdiv@divisor+1,w
  6147  06CB  1903               	btfsc	3,2
  6148  06CC  2ECE               	goto	u1681
  6149  06CD  2ECF               	goto	u1680
  6150  06CE                     u1681:
  6151  06CE  2EFE               	goto	l2230
  6152  06CF                     u1680:
  6153  06CF                     l2212:
  6154  06CF  01F7               	clrf	___lwdiv@counter
  6155  06D0  0AF7               	incf	___lwdiv@counter,f
  6156  06D1  2EDB               	goto	l2218
  6157  06D2                     l2214:
  6158  06D2  3001               	movlw	1
  6159  06D3                     u1695:
  6160  06D3  35F0               	lslf	___lwdiv@divisor,f
  6161  06D4  0DF1               	rlf	___lwdiv@divisor+1,f
  6162  06D5  0B89               	decfsz	9,f
  6163  06D6  2ED3               	goto	u1695
  6164  06D7                     l2216:
  6165  06D7  3001               	movlw	1
  6166  06D8  00F4               	movwf	??___lwdiv
  6167  06D9  0874               	movf	??___lwdiv,w
  6168  06DA  07F7               	addwf	___lwdiv@counter,f
  6169  06DB                     l2218:
  6170  06DB  1FF1               	btfss	___lwdiv@divisor+1,7
  6171  06DC  2EDE               	goto	u1701
  6172  06DD  2EDF               	goto	u1700
  6173  06DE                     u1701:
  6174  06DE  2ED2               	goto	l2214
  6175  06DF                     u1700:
  6176  06DF                     l2220:
  6177  06DF  3001               	movlw	1
  6178  06E0                     u1715:
  6179  06E0  35F5               	lslf	___lwdiv@quotient,f
  6180  06E1  0DF6               	rlf	___lwdiv@quotient+1,f
  6181  06E2  0B89               	decfsz	9,f
  6182  06E3  2EE0               	goto	u1715
  6183  06E4  0871               	movf	___lwdiv@divisor+1,w
  6184  06E5  0273               	subwf	___lwdiv@dividend+1,w
  6185  06E6  1D03               	skipz
  6186  06E7  2EEA               	goto	u1725
  6187  06E8  0870               	movf	___lwdiv@divisor,w
  6188  06E9  0272               	subwf	___lwdiv@dividend,w
  6189  06EA                     u1725:
  6190  06EA  1C03               	skipc
  6191  06EB  2EED               	goto	u1721
  6192  06EC  2EEE               	goto	u1720
  6193  06ED                     u1721:
  6194  06ED  2EF3               	goto	l2226
  6195  06EE                     u1720:
  6196  06EE                     l2222:
  6197  06EE  0870               	movf	___lwdiv@divisor,w
  6198  06EF  02F2               	subwf	___lwdiv@dividend,f
  6199  06F0  0871               	movf	___lwdiv@divisor+1,w
  6200  06F1  3BF3               	subwfb	___lwdiv@dividend+1,f
  6201  06F2                     l2224:
  6202  06F2  1475               	bsf	___lwdiv@quotient,0
  6203  06F3                     l2226:
  6204  06F3  3001               	movlw	1
  6205  06F4                     u1735:
  6206  06F4  36F1               	lsrf	___lwdiv@divisor+1,f
  6207  06F5  0CF0               	rrf	___lwdiv@divisor,f
  6208  06F6  0B89               	decfsz	9,f
  6209  06F7  2EF4               	goto	u1735
  6210  06F8                     l2228:
  6211  06F8  3001               	movlw	1
  6212  06F9  02F7               	subwf	___lwdiv@counter,f
  6213  06FA  1D03               	btfss	3,2
  6214  06FB  2EFD               	goto	u1741
  6215  06FC  2EFE               	goto	u1740
  6216  06FD                     u1741:
  6217  06FD  2EDF               	goto	l2220
  6218  06FE                     u1740:
  6219  06FE                     l2230:
  6220  06FE  0876               	movf	___lwdiv@quotient+1,w
  6221  06FF  00F1               	movwf	?___lwdiv+1
  6222  0700  0875               	movf	___lwdiv@quotient,w
  6223  0701  00F0               	movwf	?___lwdiv
  6224  0702                     l1089:
  6225  0702  0008               	return
  6226  0703                     __end_of___lwdiv:
  6227                           
  6228                           	psect	text7
  6229  07F1                     __ptext7:	
  6230 ;; *************** function _i2c1_driver_open *****************
  6231 ;; Defined at:
  6232 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;		None
  6235 ;; Auto vars:     Size  Location     Type
  6236 ;;		None
  6237 ;; Return value:  Size  Location     Type
  6238 ;;		None               void
  6239 ;; Registers used:
  6240 ;;		wreg, status,2
  6241 ;; Tracked objects:
  6242 ;;		On entry : 0/0
  6243 ;;		On exit  : 0/0
  6244 ;;		Unchanged: 0/0
  6245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6250 ;;Total ram usage:        0 bytes
  6251 ;; Hardware stack levels used:    1
  6252 ;; Hardware stack levels required when called:    1
  6253 ;; This function calls:
  6254 ;;		Nothing
  6255 ;; This function is called by:
  6256 ;;		_main
  6257 ;; This function uses a non-reentrant model
  6258 ;;
  6259                           
  6260                           
  6261                           ;psect for function _i2c1_driver_open
  6262  07F1                     _i2c1_driver_open:
  6263  07F1                     l2262:	
  6264                           ;incstack = 0
  6265                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
  6266                           
  6267                           
  6268                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
  6269  07F1  0023               	movlb	3	; select bank3
  6270  07F2  1A90               	btfsc	16,5	;volatile
  6271  07F3  2FF5               	goto	u1811
  6272  07F4  2FF6               	goto	u1810
  6273  07F5                     u1811:
  6274  07F5  2FFC               	goto	l225
  6275  07F6                     u1810:
  6276  07F6                     l2264:
  6277                           
  6278                           ;i2c1_driver.c: 86: {;i2c1_driver.c: 87: SSP1STAT = 0x00;
  6279  07F6  018F               	clrf	15	;volatile
  6280  07F7                     l2266:
  6281                           
  6282                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
  6283  07F7  3028               	movlw	40
  6284  07F8  0090               	movwf	16	;volatile
  6285  07F9                     l2268:
  6286                           
  6287                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
  6288  07F9  0191               	clrf	17	;volatile
  6289                           
  6290                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
  6291  07FA  3003               	movlw	3
  6292  07FB  008D               	movwf	13	;volatile
  6293  07FC                     l225:
  6294  07FC  0008               	return
  6295  07FD                     __end_of_i2c1_driver_open:
  6296                           
  6297                           	psect	text8
  6298  0FF6                     __ptext8:	
  6299 ;; *************** function _SYSTEM_Initialize *****************
  6300 ;; Defined at:
  6301 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;		None
  6304 ;; Auto vars:     Size  Location     Type
  6305 ;;		None
  6306 ;; Return value:  Size  Location     Type
  6307 ;;                  1    wreg      void 
  6308 ;; Registers used:
  6309 ;;		wreg, status,2, status,0, pclath, cstack
  6310 ;; Tracked objects:
  6311 ;;		On entry : 0/0
  6312 ;;		On exit  : 0/0
  6313 ;;		Unchanged: 0/0
  6314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6319 ;;Total ram usage:        0 bytes
  6320 ;; Hardware stack levels used:    1
  6321 ;; Hardware stack levels required when called:    2
  6322 ;; This function calls:
  6323 ;;		_OSCILLATOR_Initialize
  6324 ;;		_PIN_MANAGER_Initialize
  6325 ;;		_PMD_Initialize
  6326 ;; This function is called by:
  6327 ;;		_main
  6328 ;; This function uses a non-reentrant model
  6329 ;;
  6330                           
  6331                           
  6332                           ;psect for function _SYSTEM_Initialize
  6333  0FF6                     _SYSTEM_Initialize:
  6334  0FF6                     l2256:	
  6335                           ;incstack = 0
  6336                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6337                           
  6338                           
  6339                           ;mcc.c: 52: PMD_Initialize();
  6340  0FF6  318F  27E5  318F   	fcall	_PMD_Initialize
  6341  0FF9                     l2258:
  6342                           
  6343                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  6344  0FF9  3187  2703  318F   	fcall	_PIN_MANAGER_Initialize
  6345  0FFC                     l2260:
  6346                           
  6347                           ;mcc.c: 54: OSCILLATOR_Initialize();
  6348  0FFC  318F  27ED  318F   	fcall	_OSCILLATOR_Initialize
  6349  0FFF                     l158:
  6350  0FFF  0008               	return
  6351  1000                     __end_of_SYSTEM_Initialize:
  6352                           
  6353                           	psect	text9
  6354  0FE5                     __ptext9:	
  6355 ;; *************** function _PMD_Initialize *****************
  6356 ;; Defined at:
  6357 ;;		line 71 in file "mcc_generated_files/mcc.c"
  6358 ;; Parameters:    Size  Location     Type
  6359 ;;		None
  6360 ;; Auto vars:     Size  Location     Type
  6361 ;;		None
  6362 ;; Return value:  Size  Location     Type
  6363 ;;                  1    wreg      void 
  6364 ;; Registers used:
  6365 ;;		status,2
  6366 ;; Tracked objects:
  6367 ;;		On entry : 0/0
  6368 ;;		On exit  : 0/0
  6369 ;;		Unchanged: 0/0
  6370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6375 ;;Total ram usage:        0 bytes
  6376 ;; Hardware stack levels used:    1
  6377 ;; Hardware stack levels required when called:    1
  6378 ;; This function calls:
  6379 ;;		Nothing
  6380 ;; This function is called by:
  6381 ;;		_SYSTEM_Initialize
  6382 ;; This function uses a non-reentrant model
  6383 ;;
  6384                           
  6385                           
  6386                           ;psect for function _PMD_Initialize
  6387  0FE5                     _PMD_Initialize:
  6388  0FE5                     l2156:	
  6389                           ;incstack = 0
  6390                           ; Regs used in _PMD_Initialize: [status,2]
  6391                           
  6392                           
  6393                           ;mcc.c: 74: PMD0 = 0x00;
  6394  0FE5  002F               	movlb	15	; select bank15
  6395  0FE6  0196               	clrf	22	;volatile
  6396                           
  6397                           ;mcc.c: 76: PMD1 = 0x00;
  6398  0FE7  0197               	clrf	23	;volatile
  6399                           
  6400                           ;mcc.c: 78: PMD2 = 0x00;
  6401  0FE8  0198               	clrf	24	;volatile
  6402                           
  6403                           ;mcc.c: 80: PMD3 = 0x00;
  6404  0FE9  0199               	clrf	25	;volatile
  6405                           
  6406                           ;mcc.c: 82: PMD4 = 0x00;
  6407  0FEA  019A               	clrf	26	;volatile
  6408                           
  6409                           ;mcc.c: 84: PMD5 = 0x00;
  6410  0FEB  019B               	clrf	27	;volatile
  6411  0FEC                     l164:
  6412  0FEC  0008               	return
  6413  0FED                     __end_of_PMD_Initialize:
  6414                           
  6415                           	psect	text10
  6416  0703                     __ptext10:	
  6417 ;; *************** function _PIN_MANAGER_Initialize *****************
  6418 ;; Defined at:
  6419 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  6420 ;; Parameters:    Size  Location     Type
  6421 ;;		None
  6422 ;; Auto vars:     Size  Location     Type
  6423 ;;		None
  6424 ;; Return value:  Size  Location     Type
  6425 ;;                  1    wreg      void 
  6426 ;; Registers used:
  6427 ;;		wreg, status,2
  6428 ;; Tracked objects:
  6429 ;;		On entry : 0/0
  6430 ;;		On exit  : 0/0
  6431 ;;		Unchanged: 0/0
  6432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6437 ;;Total ram usage:        0 bytes
  6438 ;; Hardware stack levels used:    1
  6439 ;; Hardware stack levels required when called:    1
  6440 ;; This function calls:
  6441 ;;		Nothing
  6442 ;; This function is called by:
  6443 ;;		_SYSTEM_Initialize
  6444 ;; This function uses a non-reentrant model
  6445 ;;
  6446                           
  6447                           
  6448                           ;psect for function _PIN_MANAGER_Initialize
  6449  0703                     _PIN_MANAGER_Initialize:
  6450  0703                     l2116:	
  6451                           ;incstack = 0
  6452                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6453                           
  6454                           
  6455                           ;pin_manager.c: 62: LATE = 0x00;
  6456  0703  0020               	movlb	0	; select bank0
  6457  0704  019A               	clrf	26	;volatile
  6458                           
  6459                           ;pin_manager.c: 63: LATD = 0x00;
  6460  0705  0199               	clrf	25	;volatile
  6461                           
  6462                           ;pin_manager.c: 64: LATA = 0x00;
  6463  0706  0196               	clrf	22	;volatile
  6464                           
  6465                           ;pin_manager.c: 65: LATB = 0x00;
  6466  0707  0197               	clrf	23	;volatile
  6467                           
  6468                           ;pin_manager.c: 66: LATC = 0x00;
  6469  0708  0198               	clrf	24	;volatile
  6470  0709                     l2118:
  6471                           
  6472                           ;pin_manager.c: 71: TRISE = 0x07;
  6473  0709  3007               	movlw	7
  6474  070A  0095               	movwf	21	;volatile
  6475  070B                     l2120:
  6476                           
  6477                           ;pin_manager.c: 72: TRISA = 0xFF;
  6478  070B  30FF               	movlw	255
  6479  070C  0091               	movwf	17	;volatile
  6480  070D                     l2122:
  6481                           
  6482                           ;pin_manager.c: 73: TRISB = 0xFF;
  6483  070D  30FF               	movlw	255
  6484  070E  0092               	movwf	18	;volatile
  6485  070F                     l2124:
  6486                           
  6487                           ;pin_manager.c: 74: TRISC = 0xFF;
  6488  070F  30FF               	movlw	255
  6489  0710  0093               	movwf	19	;volatile
  6490  0711                     l2126:
  6491                           
  6492                           ;pin_manager.c: 75: TRISD = 0xFF;
  6493  0711  30FF               	movlw	255
  6494  0712  0094               	movwf	20	;volatile
  6495  0713                     l2128:
  6496                           
  6497                           ;pin_manager.c: 80: ANSELD = 0xFF;
  6498  0713  30FF               	movlw	255
  6499  0714  003E               	movlb	30	; select bank30
  6500  0715  00D9               	movwf	89	;volatile
  6501  0716                     l2130:
  6502                           
  6503                           ;pin_manager.c: 81: ANSELC = 0xE7;
  6504  0716  30E7               	movlw	231
  6505  0717  00CE               	movwf	78	;volatile
  6506  0718                     l2132:
  6507                           
  6508                           ;pin_manager.c: 82: ANSELB = 0xFF;
  6509  0718  30FF               	movlw	255
  6510  0719  00C3               	movwf	67	;volatile
  6511  071A                     l2134:
  6512                           
  6513                           ;pin_manager.c: 83: ANSELE = 0x07;
  6514  071A  3007               	movlw	7
  6515  071B  00E4               	movwf	100	;volatile
  6516  071C                     l2136:
  6517                           
  6518                           ;pin_manager.c: 84: ANSELA = 0xFF;
  6519  071C  30FF               	movlw	255
  6520  071D  00B8               	movwf	56	;volatile
  6521                           
  6522                           ;pin_manager.c: 89: WPUD = 0x00;
  6523  071E  01DA               	clrf	90	;volatile
  6524                           
  6525                           ;pin_manager.c: 90: WPUE = 0x00;
  6526  071F  01E5               	clrf	101	;volatile
  6527                           
  6528                           ;pin_manager.c: 91: WPUB = 0x00;
  6529  0720  01C4               	clrf	68	;volatile
  6530                           
  6531                           ;pin_manager.c: 92: WPUA = 0x00;
  6532  0721  01B9               	clrf	57	;volatile
  6533                           
  6534                           ;pin_manager.c: 93: WPUC = 0x00;
  6535  0722  01CF               	clrf	79	;volatile
  6536                           
  6537                           ;pin_manager.c: 98: ODCONE = 0x00;
  6538  0723  01E6               	clrf	102	;volatile
  6539                           
  6540                           ;pin_manager.c: 99: ODCONA = 0x00;
  6541  0724  01BA               	clrf	58	;volatile
  6542                           
  6543                           ;pin_manager.c: 100: ODCONB = 0x00;
  6544  0725  01C5               	clrf	69	;volatile
  6545                           
  6546                           ;pin_manager.c: 101: ODCONC = 0x00;
  6547  0726  01D0               	clrf	80	;volatile
  6548                           
  6549                           ;pin_manager.c: 102: ODCOND = 0x00;
  6550  0727  01DB               	clrf	91	;volatile
  6551  0728                     l2138:
  6552                           
  6553                           ;pin_manager.c: 107: SLRCONA = 0xFF;
  6554  0728  30FF               	movlw	255
  6555  0729  00BB               	movwf	59	;volatile
  6556  072A                     l2140:
  6557                           
  6558                           ;pin_manager.c: 108: SLRCONB = 0xFF;
  6559  072A  30FF               	movlw	255
  6560  072B  00C6               	movwf	70	;volatile
  6561  072C                     l2142:
  6562                           
  6563                           ;pin_manager.c: 109: SLRCONC = 0xFF;
  6564  072C  30FF               	movlw	255
  6565  072D  00D1               	movwf	81	;volatile
  6566  072E                     l2144:
  6567                           
  6568                           ;pin_manager.c: 110: SLRCOND = 0xFF;
  6569  072E  30FF               	movlw	255
  6570  072F  00DC               	movwf	92	;volatile
  6571  0730                     l2146:
  6572                           
  6573                           ;pin_manager.c: 111: SLRCONE = 0x07;
  6574  0730  3007               	movlw	7
  6575  0731  00E7               	movwf	103	;volatile
  6576  0732                     l2148:
  6577                           
  6578                           ;pin_manager.c: 120: SSP1CLKPPS = 0x13;
  6579  0732  3013               	movlw	19
  6580  0733  003D               	movlb	29	; select bank29
  6581  0734  00C5               	movwf	69	;volatile
  6582  0735                     l2150:
  6583                           
  6584                           ;pin_manager.c: 121: RC3PPS = 0x14;
  6585  0735  3014               	movlw	20
  6586  0736  003E               	movlb	30	; select bank30
  6587  0737  00A3               	movwf	35	;volatile
  6588  0738                     l2152:
  6589                           
  6590                           ;pin_manager.c: 122: RC4PPS = 0x15;
  6591  0738  3015               	movlw	21
  6592  0739  00A4               	movwf	36	;volatile
  6593  073A                     l2154:
  6594                           
  6595                           ;pin_manager.c: 123: SSP1DATPPS = 0x14;
  6596  073A  3014               	movlw	20
  6597  073B  003D               	movlb	29	; select bank29
  6598  073C  00C6               	movwf	70	;volatile
  6599  073D                     l120:
  6600  073D  0008               	return
  6601  073E                     __end_of_PIN_MANAGER_Initialize:
  6602                           
  6603                           	psect	text11
  6604  0FED                     __ptext11:	
  6605 ;; *************** function _OSCILLATOR_Initialize *****************
  6606 ;; Defined at:
  6607 ;;		line 57 in file "mcc_generated_files/mcc.c"
  6608 ;; Parameters:    Size  Location     Type
  6609 ;;		None
  6610 ;; Auto vars:     Size  Location     Type
  6611 ;;		None
  6612 ;; Return value:  Size  Location     Type
  6613 ;;                  1    wreg      void 
  6614 ;; Registers used:
  6615 ;;		wreg, status,2
  6616 ;; Tracked objects:
  6617 ;;		On entry : 0/0
  6618 ;;		On exit  : 0/0
  6619 ;;		Unchanged: 0/0
  6620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6625 ;;Total ram usage:        0 bytes
  6626 ;; Hardware stack levels used:    1
  6627 ;; Hardware stack levels required when called:    1
  6628 ;; This function calls:
  6629 ;;		Nothing
  6630 ;; This function is called by:
  6631 ;;		_SYSTEM_Initialize
  6632 ;; This function uses a non-reentrant model
  6633 ;;
  6634                           
  6635                           
  6636                           ;psect for function _OSCILLATOR_Initialize
  6637  0FED                     _OSCILLATOR_Initialize:
  6638  0FED                     l2158:	
  6639                           ;incstack = 0
  6640                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6641                           
  6642                           
  6643                           ;mcc.c: 60: OSCCON1 = 0x62;
  6644  0FED  3062               	movlw	98
  6645  0FEE  0031               	movlb	17	; select bank17
  6646  0FEF  008D               	movwf	13	;volatile
  6647  0FF0                     l2160:
  6648                           
  6649                           ;mcc.c: 62: OSCCON3 = 0x00;
  6650  0FF0  018F               	clrf	15	;volatile
  6651  0FF1                     l2162:
  6652                           
  6653                           ;mcc.c: 64: OSCEN = 0x00;
  6654  0FF1  0191               	clrf	17	;volatile
  6655                           
  6656                           ;mcc.c: 66: OSCFRQ = 0x02;
  6657  0FF2  3002               	movlw	2
  6658  0FF3  0093               	movwf	19	;volatile
  6659  0FF4                     l2164:
  6660                           
  6661                           ;mcc.c: 68: OSCTUNE = 0x00;
  6662  0FF4  0192               	clrf	18	;volatile
  6663  0FF5                     l161:
  6664  0FF5  0008               	return
  6665  0FF6                     __end_of_OSCILLATOR_Initialize:
  6666                           
  6667                           	psect	text12
  6668  0791                     __ptext12:	
  6669 ;; *************** function _LCDstr *****************
  6670 ;; Defined at:
  6671 ;;		line 182 in file "main.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;  p               2    9[COMMON] PTR unsigned char 
  6674 ;;		 -> main@buf(17), STR_1(5), 
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;  c               1    0[BANK0 ] unsigned char 
  6677 ;; Return value:  Size  Location     Type
  6678 ;;                  1    wreg      void 
  6679 ;; Registers used:
  6680 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6681 ;; Tracked objects:
  6682 ;;		On entry : 0/0
  6683 ;;		On exit  : 0/0
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6687 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6688 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6689 ;;      Totals:         5       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6690 ;;Total ram usage:        6 bytes
  6691 ;; Hardware stack levels used:    1
  6692 ;; Hardware stack levels required when called:    4
  6693 ;; This function calls:
  6694 ;;		_LCDchar
  6695 ;; This function is called by:
  6696 ;;		_main
  6697 ;; This function uses a non-reentrant model
  6698 ;;
  6699                           
  6700                           
  6701                           ;psect for function _LCDstr
  6702  0791                     _LCDstr:
  6703  0791                     l2428:	
  6704                           ;incstack = 0
  6705                           ; Regs used in _LCDstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6706                           
  6707                           
  6708                           ;main.c: 184: unsigned char c;;main.c: 186: while((c = *p++)) LCDchar(c);
  6709  0791  2F96               	goto	l2432
  6710  0792                     l2430:
  6711  0792  0820               	movf	LCDstr@c,w
  6712  0793  318F  27DD  3187   	fcall	_LCDchar
  6713  0796                     l2432:
  6714  0796  087A               	movf	LCDstr@p+1,w
  6715  0797  00FC               	movwf	??_LCDstr+1
  6716  0798  0879               	movf	LCDstr@p,w
  6717  0799  00FB               	movwf	??_LCDstr
  6718  079A  0AF9               	incf	LCDstr@p,f
  6719  079B  1903               	skipnz
  6720  079C  0AFA               	incf	LCDstr@p+1,f
  6721  079D  087B               	movf	??_LCDstr,w
  6722  079E  0084               	movwf	4
  6723  079F  087C               	movf	??_LCDstr+1,w
  6724  07A0  0085               	movwf	5
  6725  07A1  0800               	movf	0,w	;code access
  6726  07A2  00FD               	movwf	??_LCDstr+2
  6727  07A3  087D               	movf	??_LCDstr+2,w
  6728  07A4  0020               	movlb	0	; select bank0
  6729  07A5  00A0               	movwf	LCDstr@c
  6730  07A6  0820               	movf	LCDstr@c,w
  6731  07A7  1D03               	btfss	3,2
  6732  07A8  2FAA               	goto	u2341
  6733  07A9  2FAB               	goto	u2340
  6734  07AA                     u2341:
  6735  07AA  2F92               	goto	l2430
  6736  07AB                     u2340:
  6737  07AB                     l586:
  6738  07AB  0008               	return
  6739  07AC                     __end_of_LCDstr:
  6740                           
  6741                           	psect	text13
  6742  0FDD                     __ptext13:	
  6743 ;; *************** function _LCDchar *****************
  6744 ;; Defined at:
  6745 ;;		line 177 in file "main.c"
  6746 ;; Parameters:    Size  Location     Type
  6747 ;;  c               1    wreg     unsigned char 
  6748 ;; Auto vars:     Size  Location     Type
  6749 ;;  c               1    8[COMMON] unsigned char 
  6750 ;; Return value:  Size  Location     Type
  6751 ;;                  1    wreg      void 
  6752 ;; Registers used:
  6753 ;;		wreg, status,2, status,0, pclath, cstack
  6754 ;; Tracked objects:
  6755 ;;		On entry : 0/0
  6756 ;;		On exit  : 0/0
  6757 ;;		Unchanged: 0/0
  6758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6760 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6762 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6763 ;;Total ram usage:        1 bytes
  6764 ;; Hardware stack levels used:    1
  6765 ;; Hardware stack levels required when called:    3
  6766 ;; This function calls:
  6767 ;;		_LCDsend2x4
  6768 ;; This function is called by:
  6769 ;;		_LCDstr
  6770 ;; This function uses a non-reentrant model
  6771 ;;
  6772                           
  6773                           
  6774                           ;psect for function _LCDchar
  6775  0FDD                     _LCDchar:
  6776                           
  6777                           ;incstack = 0
  6778                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
  6779                           ;LCDchar@c stored from wreg
  6780  0FDD  00F8               	movwf	LCDchar@c
  6781  0FDE                     l2180:
  6782                           
  6783                           ;main.c: 179: LCDsend2x4(c, 0x01);
  6784  0FDE  01F2               	clrf	LCDsend2x4@mode
  6785  0FDF  0AF2               	incf	LCDsend2x4@mode,f
  6786  0FE0  0878               	movf	LCDchar@c,w
  6787  0FE1  3184  2491  318F   	fcall	_LCDsend2x4
  6788  0FE4                     l580:
  6789  0FE4  0008               	return
  6790  0FE5                     __end_of_LCDchar:
  6791                           
  6792                           	psect	text14
  6793  023E                     __ptext14:	
  6794 ;; *************** function _LCDrecv *****************
  6795 ;; Defined at:
  6796 ;;		line 95 in file "main.c"
  6797 ;; Parameters:    Size  Location     Type
  6798 ;;  mode            1    wreg     unsigned char 
  6799 ;; Auto vars:     Size  Location     Type
  6800 ;;  mode            1    6[COMMON] unsigned char 
  6801 ;;  lc              1    5[COMMON] unsigned char 
  6802 ;;  hc              1    4[COMMON] unsigned char 
  6803 ;; Return value:  Size  Location     Type
  6804 ;;                  1    wreg      unsigned char 
  6805 ;; Registers used:
  6806 ;;		wreg, status,2, status,0, pclath, cstack
  6807 ;; Tracked objects:
  6808 ;;		On entry : 0/0
  6809 ;;		On exit  : 0/0
  6810 ;;		Unchanged: 0/0
  6811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6813 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6814 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6815 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6816 ;;Total ram usage:        5 bytes
  6817 ;; Hardware stack levels used:    1
  6818 ;; Hardware stack levels required when called:    2
  6819 ;; This function calls:
  6820 ;;		_ReadI2C
  6821 ;;		_WriteI2C
  6822 ;; This function is called by:
  6823 ;;		_main
  6824 ;;		_LCDbusy
  6825 ;; This function uses a non-reentrant model
  6826 ;;
  6827                           
  6828                           
  6829                           ;psect for function _LCDrecv
  6830  023E                     _LCDrecv:
  6831                           
  6832                           ;incstack = 0
  6833                           ; Regs used in _LCDrecv: [wreg+status,2+status,0+pclath+cstack]
  6834                           ;LCDrecv@mode stored from wreg
  6835  023E  00F6               	movwf	LCDrecv@mode
  6836  023F                     l2326:
  6837  023F                     l2328:	
  6838                           ;main.c: 97: unsigned char hc;;main.c: 98: unsigned char lc;;main.c: 100: while ((SSP1CO
      +                          N2 & 0x1F) | (SSP1STATbits.R_W));
  6839                           
  6840  023F  0023               	movlb	3	; select bank3
  6841  0240  0C0F               	rrf	15,w	;volatile
  6842  0241  0C89               	rrf	9,f
  6843  0242  3901               	andlw	1
  6844  0243  00F2               	movwf	??_LCDrecv
  6845  0244  0811               	movf	17,w	;volatile
  6846  0245  391F               	andlw	31
  6847  0246  0472               	iorwf	??_LCDrecv,w
  6848  0247  1D03               	btfss	3,2
  6849  0248  2A4A               	goto	u2071
  6850  0249  2A4B               	goto	u2070
  6851  024A                     u2071:
  6852  024A  2A3F               	goto	l2328
  6853  024B                     u2070:
  6854  024B                     l459:
  6855                           
  6856                           ;main.c: 101: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
  6857  024B  1411               	bsf	17,0	;volatile
  6858  024C                     l460:
  6859  024C  1811               	btfsc	17,0	;volatile
  6860  024D  2A4F               	goto	u2081
  6861  024E  2A50               	goto	u2080
  6862  024F                     u2081:
  6863  024F  2A4C               	goto	l460
  6864  0250                     u2080:
  6865  0250                     l2330:
  6866  0250  0C0F               	rrf	15,w	;volatile
  6867  0251  0C89               	rrf	9,f
  6868  0252  3901               	andlw	1
  6869  0253  00F2               	movwf	??_LCDrecv
  6870  0254  0811               	movf	17,w	;volatile
  6871  0255  391F               	andlw	31
  6872  0256  0472               	iorwf	??_LCDrecv,w
  6873  0257  1D03               	btfss	3,2
  6874  0258  2A5A               	goto	u2091
  6875  0259  2A5B               	goto	u2090
  6876  025A                     u2091:
  6877  025A  2A50               	goto	l2330
  6878  025B                     u2090:
  6879  025B                     l2332:
  6880                           
  6881                           ;main.c: 102: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  6882  025B  304E               	movlw	78
  6883  025C  3186  2639  3182   	fcall	_WriteI2C
  6884  025F                     l2334:
  6885  025F  0023               	movlb	3	; select bank3
  6886  0260  0C0F               	rrf	15,w	;volatile
  6887  0261  0C89               	rrf	9,f
  6888  0262  3901               	andlw	1
  6889  0263  00F2               	movwf	??_LCDrecv
  6890  0264  0811               	movf	17,w	;volatile
  6891  0265  391F               	andlw	31
  6892  0266  0472               	iorwf	??_LCDrecv,w
  6893  0267  1D03               	btfss	3,2
  6894  0268  2A6A               	goto	u2101
  6895  0269  2A6B               	goto	u2100
  6896  026A                     u2101:
  6897  026A  2A5F               	goto	l2334
  6898  026B                     u2100:
  6899  026B                     l2336:
  6900                           
  6901                           ;main.c: 103: WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATb
      +                          its.R_W));
  6902  026B  0876               	movf	LCDrecv@mode,w
  6903  026C  38FA               	iorlw	250
  6904  026D  3186  2639  3182   	fcall	_WriteI2C
  6905  0270                     l2338:
  6906  0270  0023               	movlb	3	; select bank3
  6907  0271  0C0F               	rrf	15,w	;volatile
  6908  0272  0C89               	rrf	9,f
  6909  0273  3901               	andlw	1
  6910  0274  00F2               	movwf	??_LCDrecv
  6911  0275  0811               	movf	17,w	;volatile
  6912  0276  391F               	andlw	31
  6913  0277  0472               	iorwf	??_LCDrecv,w
  6914  0278  1D03               	btfss	3,2
  6915  0279  2A7B               	goto	u2111
  6916  027A  2A7C               	goto	u2110
  6917  027B                     u2111:
  6918  027B  2A70               	goto	l2338
  6919  027C                     u2110:
  6920  027C                     l2340:
  6921                           
  6922                           ;main.c: 104: WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
  6923  027C  0876               	movf	LCDrecv@mode,w
  6924  027D  38FE               	iorlw	254
  6925  027E  3186  2639  3182   	fcall	_WriteI2C
  6926  0281                     l2342:
  6927  0281  0023               	movlb	3	; select bank3
  6928  0282  0C0F               	rrf	15,w	;volatile
  6929  0283  0C89               	rrf	9,f
  6930  0284  3901               	andlw	1
  6931  0285  00F2               	movwf	??_LCDrecv
  6932  0286  0811               	movf	17,w	;volatile
  6933  0287  391F               	andlw	31
  6934  0288  0472               	iorwf	??_LCDrecv,w
  6935  0289  1D03               	btfss	3,2
  6936  028A  2A8C               	goto	u2121
  6937  028B  2A8D               	goto	u2120
  6938  028C                     u2121:
  6939  028C  2A81               	goto	l2342
  6940  028D                     u2120:
  6941  028D                     l474:
  6942                           
  6943                           ;main.c: 105: _delay((unsigned long)((1)*(1000000/4000000.0)));
  6944                           ;main.c: 106: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
  6945  028D  0023               	movlb	3	; select bank3
  6946  028E  1491               	bsf	17,1	;volatile
  6947  028F                     l475:
  6948  028F  1891               	btfsc	17,1	;volatile
  6949  0290  2A92               	goto	u2131
  6950  0291  2A93               	goto	u2130
  6951  0292                     u2131:
  6952  0292  2A8F               	goto	l475
  6953  0293                     u2130:
  6954  0293                     l2344:
  6955  0293  0C0F               	rrf	15,w	;volatile
  6956  0294  0C89               	rrf	9,f
  6957  0295  3901               	andlw	1
  6958  0296  00F2               	movwf	??_LCDrecv
  6959  0297  0811               	movf	17,w	;volatile
  6960  0298  391F               	andlw	31
  6961  0299  0472               	iorwf	??_LCDrecv,w
  6962  029A  1D03               	btfss	3,2
  6963  029B  2A9D               	goto	u2141
  6964  029C  2A9E               	goto	u2140
  6965  029D                     u2141:
  6966  029D  2A93               	goto	l2344
  6967  029E                     u2140:
  6968  029E                     l2346:
  6969                           
  6970                           ;main.c: 107: WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  6971  029E  304F               	movlw	79
  6972  029F  3186  2639  3182   	fcall	_WriteI2C
  6973  02A2                     l2348:
  6974  02A2  0023               	movlb	3	; select bank3
  6975  02A3  0C0F               	rrf	15,w	;volatile
  6976  02A4  0C89               	rrf	9,f
  6977  02A5  3901               	andlw	1
  6978  02A6  00F2               	movwf	??_LCDrecv
  6979  02A7  0811               	movf	17,w	;volatile
  6980  02A8  391F               	andlw	31
  6981  02A9  0472               	iorwf	??_LCDrecv,w
  6982  02AA  1D03               	btfss	3,2
  6983  02AB  2AAD               	goto	u2151
  6984  02AC  2AAE               	goto	u2150
  6985  02AD                     u2151:
  6986  02AD  2AA2               	goto	l2348
  6987  02AE                     u2150:
  6988  02AE                     l2350:
  6989                           
  6990                           ;main.c: 108: hc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  6991  02AE  3187  27AC  3182   	fcall	_ReadI2C
  6992  02B1  00F2               	movwf	??_LCDrecv
  6993  02B2  0872               	movf	??_LCDrecv,w
  6994  02B3  00F4               	movwf	LCDrecv@hc
  6995  02B4                     l2352:
  6996  02B4  0023               	movlb	3	; select bank3
  6997  02B5  0C0F               	rrf	15,w	;volatile
  6998  02B6  0C89               	rrf	9,f
  6999  02B7  3901               	andlw	1
  7000  02B8  00F2               	movwf	??_LCDrecv
  7001  02B9  0811               	movf	17,w	;volatile
  7002  02BA  391F               	andlw	31
  7003  02BB  0472               	iorwf	??_LCDrecv,w
  7004  02BC  1D03               	btfss	3,2
  7005  02BD  2ABF               	goto	u2161
  7006  02BE  2AC0               	goto	u2160
  7007  02BF                     u2161:
  7008  02BF  2AB4               	goto	l2352
  7009  02C0                     u2160:
  7010  02C0                     l486:
  7011                           
  7012                           ;main.c: 109: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN);
  7013  02C0  1691               	bsf	17,5	;volatile
  7014  02C1  1611               	bsf	17,4	;volatile
  7015  02C2                     l487:
  7016  02C2  1A11               	btfsc	17,4	;volatile
  7017  02C3  2AC5               	goto	u2171
  7018  02C4  2AC6               	goto	u2170
  7019  02C5                     u2171:
  7020  02C5  2AC2               	goto	l487
  7021  02C6                     u2170:
  7022  02C6                     l489:
  7023                           
  7024                           ;main.c: 110: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
  7025  02C6  1491               	bsf	17,1	;volatile
  7026  02C7                     l490:
  7027  02C7  1891               	btfsc	17,1	;volatile
  7028  02C8  2ACA               	goto	u2181
  7029  02C9  2ACB               	goto	u2180
  7030  02CA                     u2181:
  7031  02CA  2AC7               	goto	l490
  7032  02CB                     u2180:
  7033  02CB                     l2354:
  7034  02CB  0C0F               	rrf	15,w	;volatile
  7035  02CC  0C89               	rrf	9,f
  7036  02CD  3901               	andlw	1
  7037  02CE  00F2               	movwf	??_LCDrecv
  7038  02CF  0811               	movf	17,w	;volatile
  7039  02D0  391F               	andlw	31
  7040  02D1  0472               	iorwf	??_LCDrecv,w
  7041  02D2  1D03               	btfss	3,2
  7042  02D3  2AD5               	goto	u2191
  7043  02D4  2AD6               	goto	u2190
  7044  02D5                     u2191:
  7045  02D5  2ACB               	goto	l2354
  7046  02D6                     u2190:
  7047  02D6                     l2356:
  7048                           
  7049                           ;main.c: 111: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7050  02D6  304E               	movlw	78
  7051  02D7  3186  2639  3182   	fcall	_WriteI2C
  7052  02DA                     l2358:
  7053  02DA  0023               	movlb	3	; select bank3
  7054  02DB  0C0F               	rrf	15,w	;volatile
  7055  02DC  0C89               	rrf	9,f
  7056  02DD  3901               	andlw	1
  7057  02DE  00F2               	movwf	??_LCDrecv
  7058  02DF  0811               	movf	17,w	;volatile
  7059  02E0  391F               	andlw	31
  7060  02E1  0472               	iorwf	??_LCDrecv,w
  7061  02E2  1D03               	btfss	3,2
  7062  02E3  2AE5               	goto	u2201
  7063  02E4  2AE6               	goto	u2200
  7064  02E5                     u2201:
  7065  02E5  2ADA               	goto	l2358
  7066  02E6                     u2200:
  7067  02E6                     l2360:
  7068                           
  7069                           ;main.c: 112: WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATb
      +                          its.R_W));
  7070  02E6  0876               	movf	LCDrecv@mode,w
  7071  02E7  38FA               	iorlw	250
  7072  02E8  3186  2639  3182   	fcall	_WriteI2C
  7073  02EB                     l2362:
  7074  02EB  0023               	movlb	3	; select bank3
  7075  02EC  0C0F               	rrf	15,w	;volatile
  7076  02ED  0C89               	rrf	9,f
  7077  02EE  3901               	andlw	1
  7078  02EF  00F2               	movwf	??_LCDrecv
  7079  02F0  0811               	movf	17,w	;volatile
  7080  02F1  391F               	andlw	31
  7081  02F2  0472               	iorwf	??_LCDrecv,w
  7082  02F3  1D03               	btfss	3,2
  7083  02F4  2AF6               	goto	u2211
  7084  02F5  2AF7               	goto	u2210
  7085  02F6                     u2211:
  7086  02F6  2AEB               	goto	l2362
  7087  02F7                     u2210:
  7088  02F7                     l2364:
  7089                           
  7090                           ;main.c: 113: WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
  7091  02F7  0876               	movf	LCDrecv@mode,w
  7092  02F8  38FE               	iorlw	254
  7093  02F9  3186  2639  3182   	fcall	_WriteI2C
  7094  02FC                     l2366:
  7095  02FC  0023               	movlb	3	; select bank3
  7096  02FD  0C0F               	rrf	15,w	;volatile
  7097  02FE  0C89               	rrf	9,f
  7098  02FF  3901               	andlw	1
  7099  0300  00F2               	movwf	??_LCDrecv
  7100  0301  0811               	movf	17,w	;volatile
  7101  0302  391F               	andlw	31
  7102  0303  0472               	iorwf	??_LCDrecv,w
  7103  0304  1D03               	btfss	3,2
  7104  0305  2B07               	goto	u2221
  7105  0306  2B08               	goto	u2220
  7106  0307                     u2221:
  7107  0307  2AFC               	goto	l2366
  7108  0308                     u2220:
  7109  0308                     l504:
  7110                           
  7111                           ;main.c: 114: _delay((unsigned long)((1)*(1000000/4000000.0)));
  7112                           ;main.c: 115: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
  7113  0308  0023               	movlb	3	; select bank3
  7114  0309  1491               	bsf	17,1	;volatile
  7115  030A                     l505:
  7116  030A  1891               	btfsc	17,1	;volatile
  7117  030B  2B0D               	goto	u2231
  7118  030C  2B0E               	goto	u2230
  7119  030D                     u2231:
  7120  030D  2B0A               	goto	l505
  7121  030E                     u2230:
  7122  030E                     l2368:
  7123  030E  0C0F               	rrf	15,w	;volatile
  7124  030F  0C89               	rrf	9,f
  7125  0310  3901               	andlw	1
  7126  0311  00F2               	movwf	??_LCDrecv
  7127  0312  0811               	movf	17,w	;volatile
  7128  0313  391F               	andlw	31
  7129  0314  0472               	iorwf	??_LCDrecv,w
  7130  0315  1D03               	btfss	3,2
  7131  0316  2B18               	goto	u2241
  7132  0317  2B19               	goto	u2240
  7133  0318                     u2241:
  7134  0318  2B0E               	goto	l2368
  7135  0319                     u2240:
  7136  0319                     l2370:
  7137                           
  7138                           ;main.c: 116: WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7139  0319  304F               	movlw	79
  7140  031A  3186  2639  3182   	fcall	_WriteI2C
  7141  031D                     l2372:
  7142  031D  0023               	movlb	3	; select bank3
  7143  031E  0C0F               	rrf	15,w	;volatile
  7144  031F  0C89               	rrf	9,f
  7145  0320  3901               	andlw	1
  7146  0321  00F2               	movwf	??_LCDrecv
  7147  0322  0811               	movf	17,w	;volatile
  7148  0323  391F               	andlw	31
  7149  0324  0472               	iorwf	??_LCDrecv,w
  7150  0325  1D03               	btfss	3,2
  7151  0326  2B28               	goto	u2251
  7152  0327  2B29               	goto	u2250
  7153  0328                     u2251:
  7154  0328  2B1D               	goto	l2372
  7155  0329                     u2250:
  7156  0329                     l2374:
  7157                           
  7158                           ;main.c: 117: lc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7159  0329  3187  27AC  3182   	fcall	_ReadI2C
  7160  032C  00F2               	movwf	??_LCDrecv
  7161  032D  0872               	movf	??_LCDrecv,w
  7162  032E  00F5               	movwf	LCDrecv@lc
  7163  032F                     l2376:
  7164  032F  0023               	movlb	3	; select bank3
  7165  0330  0C0F               	rrf	15,w	;volatile
  7166  0331  0C89               	rrf	9,f
  7167  0332  3901               	andlw	1
  7168  0333  00F2               	movwf	??_LCDrecv
  7169  0334  0811               	movf	17,w	;volatile
  7170  0335  391F               	andlw	31
  7171  0336  0472               	iorwf	??_LCDrecv,w
  7172  0337  1D03               	btfss	3,2
  7173  0338  2B3A               	goto	u2261
  7174  0339  2B3B               	goto	u2260
  7175  033A                     u2261:
  7176  033A  2B2F               	goto	l2376
  7177  033B                     u2260:
  7178  033B                     l516:
  7179                           
  7180                           ;main.c: 118: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN);
  7181  033B  1691               	bsf	17,5	;volatile
  7182  033C  1611               	bsf	17,4	;volatile
  7183  033D                     l517:
  7184  033D  1A11               	btfsc	17,4	;volatile
  7185  033E  2B40               	goto	u2271
  7186  033F  2B41               	goto	u2270
  7187  0340                     u2271:
  7188  0340  2B3D               	goto	l517
  7189  0341                     u2270:
  7190  0341                     l519:
  7191                           
  7192                           ;main.c: 119: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
  7193  0341  1491               	bsf	17,1	;volatile
  7194  0342                     l520:
  7195  0342  1891               	btfsc	17,1	;volatile
  7196  0343  2B45               	goto	u2281
  7197  0344  2B46               	goto	u2280
  7198  0345                     u2281:
  7199  0345  2B42               	goto	l520
  7200  0346                     u2280:
  7201  0346                     l2378:
  7202  0346  0C0F               	rrf	15,w	;volatile
  7203  0347  0C89               	rrf	9,f
  7204  0348  3901               	andlw	1
  7205  0349  00F2               	movwf	??_LCDrecv
  7206  034A  0811               	movf	17,w	;volatile
  7207  034B  391F               	andlw	31
  7208  034C  0472               	iorwf	??_LCDrecv,w
  7209  034D  1D03               	btfss	3,2
  7210  034E  2B50               	goto	u2291
  7211  034F  2B51               	goto	u2290
  7212  0350                     u2291:
  7213  0350  2B46               	goto	l2378
  7214  0351                     u2290:
  7215  0351                     l2380:
  7216                           
  7217                           ;main.c: 120: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7218  0351  304E               	movlw	78
  7219  0352  3186  2639  3182   	fcall	_WriteI2C
  7220  0355                     l2382:
  7221  0355  0023               	movlb	3	; select bank3
  7222  0356  0C0F               	rrf	15,w	;volatile
  7223  0357  0C89               	rrf	9,f
  7224  0358  3901               	andlw	1
  7225  0359  00F2               	movwf	??_LCDrecv
  7226  035A  0811               	movf	17,w	;volatile
  7227  035B  391F               	andlw	31
  7228  035C  0472               	iorwf	??_LCDrecv,w
  7229  035D  1D03               	btfss	3,2
  7230  035E  2B60               	goto	u2301
  7231  035F  2B61               	goto	u2300
  7232  0360                     u2301:
  7233  0360  2B55               	goto	l2382
  7234  0361                     u2300:
  7235  0361                     l2384:
  7236                           
  7237                           ;main.c: 121: WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATb
      +                          its.R_W));
  7238  0361  0876               	movf	LCDrecv@mode,w
  7239  0362  38FA               	iorlw	250
  7240  0363  3186  2639  3182   	fcall	_WriteI2C
  7241  0366                     l2386:
  7242  0366  0023               	movlb	3	; select bank3
  7243  0367  0C0F               	rrf	15,w	;volatile
  7244  0368  0C89               	rrf	9,f
  7245  0369  3901               	andlw	1
  7246  036A  00F2               	movwf	??_LCDrecv
  7247  036B  0811               	movf	17,w	;volatile
  7248  036C  391F               	andlw	31
  7249  036D  0472               	iorwf	??_LCDrecv,w
  7250  036E  1D03               	btfss	3,2
  7251  036F  2B71               	goto	u2311
  7252  0370  2B72               	goto	u2310
  7253  0371                     u2311:
  7254  0371  2B66               	goto	l2386
  7255  0372                     u2310:
  7256  0372                     l531:
  7257                           
  7258                           ;main.c: 122: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  7259  0372  1511               	bsf	17,2	;volatile
  7260  0373                     l532:
  7261  0373  1911               	btfsc	17,2	;volatile
  7262  0374  2B76               	goto	u2321
  7263  0375  2B77               	goto	u2320
  7264  0376                     u2321:
  7265  0376  2B73               	goto	l532
  7266  0377                     u2320:
  7267  0377                     l2388:
  7268                           
  7269                           ;main.c: 123: return ((hc&0xf0) | ((lc>>4)&0x0f));
  7270  0377  0875               	movf	LCDrecv@lc,w
  7271  0378  00F2               	movwf	??_LCDrecv
  7272  0379  3004               	movlw	4
  7273  037A                     u2335:
  7274  037A  36F2               	lsrf	??_LCDrecv,f
  7275  037B  0B89               	decfsz	9,f
  7276  037C  2B7A               	goto	u2335
  7277  037D  300F               	movlw	15
  7278  037E  0572               	andwf	??_LCDrecv,w
  7279  037F  00F3               	movwf	??_LCDrecv+1
  7280  0380  0874               	movf	LCDrecv@hc,w
  7281  0381  39F0               	andlw	240
  7282  0382  0473               	iorwf	??_LCDrecv+1,w
  7283  0383                     l535:
  7284  0383  0008               	return
  7285  0384                     __end_of_LCDrecv:
  7286                           
  7287                           	psect	text15
  7288  07AC                     __ptext15:	
  7289 ;; *************** function _ReadI2C *****************
  7290 ;; Defined at:
  7291 ;;		line 32 in file "I2C/i2c.c"
  7292 ;; Parameters:    Size  Location     Type
  7293 ;;		None
  7294 ;; Auto vars:     Size  Location     Type
  7295 ;;		None
  7296 ;; Return value:  Size  Location     Type
  7297 ;;                  1    wreg      unsigned char 
  7298 ;; Registers used:
  7299 ;;		wreg, status,2, status,0
  7300 ;; Tracked objects:
  7301 ;;		On entry : 0/0
  7302 ;;		On exit  : 0/0
  7303 ;;		Unchanged: 0/0
  7304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7307 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7308 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7309 ;;Total ram usage:        1 bytes
  7310 ;; Hardware stack levels used:    1
  7311 ;; Hardware stack levels required when called:    1
  7312 ;; This function calls:
  7313 ;;		Nothing
  7314 ;; This function is called by:
  7315 ;;		_tsttc
  7316 ;;		_LCDrecv
  7317 ;; This function uses a non-reentrant model
  7318 ;;
  7319                           
  7320                           
  7321                           ;psect for function _ReadI2C
  7322  07AC                     _ReadI2C:
  7323  07AC                     l2108:	
  7324                           ;incstack = 0
  7325                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
  7326                           
  7327                           
  7328                           ;i2c.c: 34: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
  7329  07AC  300F               	movlw	15
  7330  07AD  0023               	movlb	3	; select bank3
  7331  07AE  0510               	andwf	16,w	;volatile
  7332  07AF  00F0               	movwf	??_ReadI2C
  7333  07B0  3008               	movlw	8
  7334  07B1  0670               	xorwf	??_ReadI2C,w
  7335  07B2  1903               	btfsc	3,2
  7336  07B3  2FB5               	goto	u1531
  7337  07B4  2FB6               	goto	u1530
  7338  07B5                     u1531:
  7339  07B5  2FBF               	goto	l22
  7340  07B6                     u1530:
  7341  07B6                     l2110:
  7342  07B6  300F               	movlw	15
  7343  07B7  0510               	andwf	16,w	;volatile
  7344  07B8  00F0               	movwf	??_ReadI2C
  7345  07B9  300B               	movlw	11
  7346  07BA  0670               	xorwf	??_ReadI2C,w
  7347  07BB  1D03               	btfss	3,2
  7348  07BC  2FBE               	goto	u1541
  7349  07BD  2FBF               	goto	u1540
  7350  07BE                     u1541:
  7351  07BE  2FC0               	goto	l23
  7352  07BF                     u1540:
  7353  07BF                     l22:
  7354                           
  7355                           ;i2c.c: 35: SSP1CON2bits.RCEN = 1;
  7356  07BF  1591               	bsf	17,3	;volatile
  7357  07C0                     l23:
  7358  07C0  1C0F               	btfss	15,0	;volatile
  7359  07C1  2FC3               	goto	u1551
  7360  07C2  2FC4               	goto	u1550
  7361  07C3                     u1551:
  7362  07C3  2FC0               	goto	l23
  7363  07C4                     u1550:
  7364  07C4                     l2112:
  7365                           
  7366                           ;i2c.c: 37: return ( SSP1BUF );
  7367  07C4  080C               	movf	12,w	;volatile
  7368  07C5                     l26:
  7369  07C5  0008               	return
  7370  07C6                     __end_of_ReadI2C:
  7371                           
  7372                           	psect	text16
  7373  05C8                     __ptext16:	
  7374 ;; *************** function _LCDinit *****************
  7375 ;; Defined at:
  7376 ;;		line 149 in file "main.c"
  7377 ;; Parameters:    Size  Location     Type
  7378 ;;		None
  7379 ;; Auto vars:     Size  Location     Type
  7380 ;;		None
  7381 ;; Return value:  Size  Location     Type
  7382 ;;                  1    wreg      void 
  7383 ;; Registers used:
  7384 ;;		wreg, status,2, status,0, pclath, cstack
  7385 ;; Tracked objects:
  7386 ;;		On entry : 0/0
  7387 ;;		On exit  : 0/0
  7388 ;;		Unchanged: 0/0
  7389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7392 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7393 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7394 ;;Total ram usage:        1 bytes
  7395 ;; Hardware stack levels used:    1
  7396 ;; Hardware stack levels required when called:    3
  7397 ;; This function calls:
  7398 ;;		_LCDsend
  7399 ;;		_LCDsend2x4
  7400 ;; This function is called by:
  7401 ;;		_main
  7402 ;; This function uses a non-reentrant model
  7403 ;;
  7404                           
  7405                           
  7406                           ;psect for function _LCDinit
  7407  05C8                     _LCDinit:
  7408  05C8                     l2392:	
  7409                           ;incstack = 0
  7410                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
  7411                           
  7412                           
  7413                           ;main.c: 151: _delay((unsigned long)((50)*(1000000/4000.0)));
  7414  05C8  3011               	movlw	17
  7415  05C9  00F8               	movwf	??_LCDinit
  7416  05CA  303A               	movlw	58
  7417  05CB                     u2577:
  7418  05CB  0B89               	decfsz	9,f
  7419  05CC  2DCB               	goto	u2577
  7420  05CD  0BF8               	decfsz	??_LCDinit,f
  7421  05CE  2DCB               	goto	u2577
  7422  05CF  3200               	nop2
  7423  05D0                     l2394:
  7424                           
  7425                           ;main.c: 152: LCDsend(0x30);
  7426  05D0  3030               	movlw	48
  7427  05D1  3186  2684  3185   	fcall	_LCDsend
  7428  05D4                     l2396:
  7429                           
  7430                           ;main.c: 153: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
  7431  05D4  3034               	movlw	52
  7432  05D5  3186  2684  3185   	fcall	_LCDsend
  7433  05D8  3029               	movlw	41
  7434  05D9                     u2587:
  7435  05D9  0B89               	decfsz	9,f
  7436  05DA  2DD9               	goto	u2587
  7437  05DB  3200               	nop2
  7438  05DC                     l2398:
  7439  05DC  3030               	movlw	48
  7440  05DD  3186  2684  3185   	fcall	_LCDsend
  7441  05E0                     l2400:
  7442                           
  7443                           ;main.c: 154: _delay((unsigned long)((5)*(1000000/4000.0)));
  7444  05E0  30FA               	movlw	250
  7445  05E1                     u2597:
  7446  05E1  3200               	nop2
  7447  05E2  0B89               	decfsz	9,f
  7448  05E3  2DE1               	goto	u2597
  7449                           
  7450                           ;main.c: 155: LCDsend(0x30);
  7451  05E4  3030               	movlw	48
  7452  05E5  3186  2684  3185   	fcall	_LCDsend
  7453                           
  7454                           ;main.c: 156: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
  7455  05E8  3034               	movlw	52
  7456  05E9  3186  2684  3185   	fcall	_LCDsend
  7457  05EC                     l2402:
  7458  05EC  3029               	movlw	41
  7459  05ED                     u2607:
  7460  05ED  0B89               	decfsz	9,f
  7461  05EE  2DED               	goto	u2607
  7462  05EF  3200               	nop2
  7463  05F0                     l2404:
  7464  05F0  3030               	movlw	48
  7465  05F1  3186  2684  3185   	fcall	_LCDsend
  7466                           
  7467                           ;main.c: 157: _delay((unsigned long)((100)*(1000000/4000000.0)));
  7468  05F4  3008               	movlw	8
  7469  05F5                     u2617:
  7470  05F5  0B89               	decfsz	9,f
  7471  05F6  2DF5               	goto	u2617
  7472  05F7  0000               	nop
  7473  05F8                     l2406:
  7474                           
  7475                           ;main.c: 158: LCDsend(0x30);
  7476  05F8  3030               	movlw	48
  7477  05F9  3186  2684  3185   	fcall	_LCDsend
  7478  05FC                     l2408:
  7479                           
  7480                           ;main.c: 159: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
  7481  05FC  3034               	movlw	52
  7482  05FD  3186  2684  3185   	fcall	_LCDsend
  7483  0600  3029               	movlw	41
  7484  0601                     u2627:
  7485  0601  0B89               	decfsz	9,f
  7486  0602  2E01               	goto	u2627
  7487  0603  3200               	nop2
  7488  0604                     l2410:
  7489  0604  3030               	movlw	48
  7490  0605  3186  2684  3185   	fcall	_LCDsend
  7491  0608                     l2412:
  7492                           
  7493                           ;main.c: 160: _delay((unsigned long)((100)*(1000000/4000000.0)));
  7494  0608  3008               	movlw	8
  7495  0609                     u2637:
  7496  0609  0B89               	decfsz	9,f
  7497  060A  2E09               	goto	u2637
  7498  060B  0000               	nop
  7499                           
  7500                           ;main.c: 161: LCDsend(0x20);
  7501  060C  3020               	movlw	32
  7502  060D  3186  2684  3185   	fcall	_LCDsend
  7503                           
  7504                           ;main.c: 162: LCDsend(0x24); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x20);
  7505  0610  3024               	movlw	36
  7506  0611  3186  2684  3185   	fcall	_LCDsend
  7507  0614                     l2414:
  7508  0614  3029               	movlw	41
  7509  0615                     u2647:
  7510  0615  0B89               	decfsz	9,f
  7511  0616  2E15               	goto	u2647
  7512  0617  3200               	nop2
  7513  0618                     l2416:
  7514  0618  3020               	movlw	32
  7515  0619  3186  2684  3185   	fcall	_LCDsend
  7516                           
  7517                           ;main.c: 163: _delay((unsigned long)((5)*(1000000/4000.0)));
  7518  061C  30FA               	movlw	250
  7519  061D                     u2657:
  7520  061D  3200               	nop2
  7521  061E  0B89               	decfsz	9,f
  7522  061F  2E1D               	goto	u2657
  7523  0620                     l2418:
  7524                           
  7525                           ;main.c: 165: LCDsend2x4(0x28, 0);
  7526  0620  01F2               	clrf	LCDsend2x4@mode
  7527  0621  3028               	movlw	40
  7528  0622  3184  2491  3185   	fcall	_LCDsend2x4
  7529  0625                     l2420:
  7530                           
  7531                           ;main.c: 166: LCDsend2x4(0x06, 0);
  7532  0625  01F2               	clrf	LCDsend2x4@mode
  7533  0626  3006               	movlw	6
  7534  0627  3184  2491  3185   	fcall	_LCDsend2x4
  7535  062A                     l2422:
  7536                           
  7537                           ;main.c: 167: LCDsend2x4(0x0f, 0);
  7538  062A  01F2               	clrf	LCDsend2x4@mode
  7539  062B  300F               	movlw	15
  7540  062C  3184  2491  3185   	fcall	_LCDsend2x4
  7541  062F                     l2424:
  7542                           
  7543                           ;main.c: 168: LCDsend2x4(0x01, 0);
  7544  062F  01F2               	clrf	LCDsend2x4@mode
  7545  0630  3001               	movlw	1
  7546  0631  3184  2491  3185   	fcall	_LCDsend2x4
  7547                           
  7548                           ;main.c: 169: _delay((unsigned long)((2)*(1000000/4000.0)));
  7549  0634  30A6               	movlw	166
  7550  0635                     u2667:
  7551  0635  0B89               	decfsz	9,f
  7552  0636  2E35               	goto	u2667
  7553  0637  3200               	nop2
  7554  0638                     l574:
  7555  0638  0008               	return
  7556  0639                     __end_of_LCDinit:
  7557                           
  7558                           	psect	text17
  7559  0684                     __ptext17:	
  7560 ;; *************** function _LCDsend *****************
  7561 ;; Defined at:
  7562 ;;		line 87 in file "main.c"
  7563 ;; Parameters:    Size  Location     Type
  7564 ;;  c               1    wreg     unsigned char 
  7565 ;; Auto vars:     Size  Location     Type
  7566 ;;  c               1    3[COMMON] unsigned char 
  7567 ;; Return value:  Size  Location     Type
  7568 ;;                  1    wreg      void 
  7569 ;; Registers used:
  7570 ;;		wreg, status,2, status,0, pclath, cstack
  7571 ;; Tracked objects:
  7572 ;;		On entry : 0/0
  7573 ;;		On exit  : 0/0
  7574 ;;		Unchanged: 0/0
  7575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7577 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7578 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7579 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7580 ;;Total ram usage:        2 bytes
  7581 ;; Hardware stack levels used:    1
  7582 ;; Hardware stack levels required when called:    2
  7583 ;; This function calls:
  7584 ;;		_WriteI2C
  7585 ;; This function is called by:
  7586 ;;		_LCDinit
  7587 ;; This function uses a non-reentrant model
  7588 ;;
  7589                           
  7590                           
  7591                           ;psect for function _LCDsend
  7592  0684                     _LCDsend:
  7593                           
  7594                           ;incstack = 0
  7595                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
  7596                           ;LCDsend@c stored from wreg
  7597  0684  00F3               	movwf	LCDsend@c
  7598  0685                     l2166:
  7599  0685                     l2168:	
  7600                           ;main.c: 89: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7601                           
  7602  0685  0023               	movlb	3	; select bank3
  7603  0686  0C0F               	rrf	15,w	;volatile
  7604  0687  0C89               	rrf	9,f
  7605  0688  3901               	andlw	1
  7606  0689  00F2               	movwf	??_LCDsend
  7607  068A  0811               	movf	17,w	;volatile
  7608  068B  391F               	andlw	31
  7609  068C  0472               	iorwf	??_LCDsend,w
  7610  068D  1D03               	btfss	3,2
  7611  068E  2E90               	goto	u1561
  7612  068F  2E91               	goto	u1560
  7613  0690                     u1561:
  7614  0690  2E85               	goto	l2168
  7615  0691                     u1560:
  7616  0691                     l438:
  7617                           
  7618                           ;main.c: 90: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
  7619  0691  1411               	bsf	17,0	;volatile
  7620  0692                     l439:
  7621  0692  1811               	btfsc	17,0	;volatile
  7622  0693  2E95               	goto	u1571
  7623  0694  2E96               	goto	u1570
  7624  0695                     u1571:
  7625  0695  2E92               	goto	l439
  7626  0696                     u1570:
  7627  0696                     l2170:
  7628  0696  0C0F               	rrf	15,w	;volatile
  7629  0697  0C89               	rrf	9,f
  7630  0698  3901               	andlw	1
  7631  0699  00F2               	movwf	??_LCDsend
  7632  069A  0811               	movf	17,w	;volatile
  7633  069B  391F               	andlw	31
  7634  069C  0472               	iorwf	??_LCDsend,w
  7635  069D  1D03               	btfss	3,2
  7636  069E  2EA0               	goto	u1581
  7637  069F  2EA1               	goto	u1580
  7638  06A0                     u1581:
  7639  06A0  2E96               	goto	l2170
  7640  06A1                     u1580:
  7641  06A1                     l2172:
  7642                           
  7643                           ;main.c: 91: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7644  06A1  304E               	movlw	78
  7645  06A2  3186  2639  3186   	fcall	_WriteI2C
  7646  06A5                     l2174:
  7647  06A5  0023               	movlb	3	; select bank3
  7648  06A6  0C0F               	rrf	15,w	;volatile
  7649  06A7  0C89               	rrf	9,f
  7650  06A8  3901               	andlw	1
  7651  06A9  00F2               	movwf	??_LCDsend
  7652  06AA  0811               	movf	17,w	;volatile
  7653  06AB  391F               	andlw	31
  7654  06AC  0472               	iorwf	??_LCDsend,w
  7655  06AD  1D03               	btfss	3,2
  7656  06AE  2EB0               	goto	u1591
  7657  06AF  2EB1               	goto	u1590
  7658  06B0                     u1591:
  7659  06B0  2EA5               	goto	l2174
  7660  06B1                     u1590:
  7661  06B1                     l2176:
  7662                           
  7663                           ;main.c: 92: WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7664  06B1  0873               	movf	LCDsend@c,w
  7665  06B2  3186  2639  3186   	fcall	_WriteI2C
  7666  06B5                     l2178:
  7667  06B5  0023               	movlb	3	; select bank3
  7668  06B6  0C0F               	rrf	15,w	;volatile
  7669  06B7  0C89               	rrf	9,f
  7670  06B8  3901               	andlw	1
  7671  06B9  00F2               	movwf	??_LCDsend
  7672  06BA  0811               	movf	17,w	;volatile
  7673  06BB  391F               	andlw	31
  7674  06BC  0472               	iorwf	??_LCDsend,w
  7675  06BD  1D03               	btfss	3,2
  7676  06BE  2EC0               	goto	u1601
  7677  06BF  2EC1               	goto	u1600
  7678  06C0                     u1601:
  7679  06C0  2EB5               	goto	l2178
  7680  06C1                     u1600:
  7681  06C1                     l450:
  7682                           
  7683                           ;main.c: 93: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  7684  06C1  1511               	bsf	17,2	;volatile
  7685  06C2                     l451:
  7686  06C2  1911               	btfsc	17,2	;volatile
  7687  06C3  2EC5               	goto	u1611
  7688  06C4  2EC6               	goto	u1610
  7689  06C5                     u1611:
  7690  06C5  2EC2               	goto	l451
  7691  06C6                     u1610:
  7692  06C6                     l454:
  7693  06C6  0008               	return
  7694  06C7                     __end_of_LCDsend:
  7695                           
  7696                           	psect	text18
  7697  0FD6                     __ptext18:	
  7698 ;; *************** function _LCDcmd *****************
  7699 ;; Defined at:
  7700 ;;		line 172 in file "main.c"
  7701 ;; Parameters:    Size  Location     Type
  7702 ;;  c               1    wreg     unsigned char 
  7703 ;; Auto vars:     Size  Location     Type
  7704 ;;  c               1    8[COMMON] unsigned char 
  7705 ;; Return value:  Size  Location     Type
  7706 ;;                  1    wreg      void 
  7707 ;; Registers used:
  7708 ;;		wreg, status,2, status,0, pclath, cstack
  7709 ;; Tracked objects:
  7710 ;;		On entry : 0/0
  7711 ;;		On exit  : 0/0
  7712 ;;		Unchanged: 0/0
  7713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7717 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7718 ;;Total ram usage:        1 bytes
  7719 ;; Hardware stack levels used:    1
  7720 ;; Hardware stack levels required when called:    3
  7721 ;; This function calls:
  7722 ;;		_LCDsend2x4
  7723 ;; This function is called by:
  7724 ;;		_main
  7725 ;; This function uses a non-reentrant model
  7726 ;;
  7727                           
  7728                           
  7729                           ;psect for function _LCDcmd
  7730  0FD6                     _LCDcmd:
  7731                           
  7732                           ;incstack = 0
  7733                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
  7734                           ;LCDcmd@c stored from wreg
  7735  0FD6  00F8               	movwf	LCDcmd@c
  7736  0FD7                     l2426:
  7737                           
  7738                           ;main.c: 174: LCDsend2x4(c, 0);
  7739  0FD7  01F2               	clrf	LCDsend2x4@mode
  7740  0FD8  0878               	movf	LCDcmd@c,w
  7741  0FD9  3184  2491  318F   	fcall	_LCDsend2x4
  7742  0FDC                     l577:
  7743  0FDC  0008               	return
  7744  0FDD                     __end_of_LCDcmd:
  7745                           
  7746                           	psect	text19
  7747  0491                     __ptext19:	
  7748 ;; *************** function _LCDsend2x4 *****************
  7749 ;; Defined at:
  7750 ;;		line 126 in file "main.c"
  7751 ;; Parameters:    Size  Location     Type
  7752 ;;  c               1    wreg     unsigned char 
  7753 ;;  mode            1    2[COMMON] unsigned char 
  7754 ;; Auto vars:     Size  Location     Type
  7755 ;;  c               1    5[COMMON] unsigned char 
  7756 ;;  lc              1    7[COMMON] unsigned char 
  7757 ;;  hc              1    6[COMMON] unsigned char 
  7758 ;; Return value:  Size  Location     Type
  7759 ;;                  1    wreg      void 
  7760 ;; Registers used:
  7761 ;;		wreg, status,2, status,0, pclath, cstack
  7762 ;; Tracked objects:
  7763 ;;		On entry : 0/0
  7764 ;;		On exit  : 0/0
  7765 ;;		Unchanged: 0/0
  7766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7767 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7768 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7769 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7770 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7771 ;;Total ram usage:        6 bytes
  7772 ;; Hardware stack levels used:    1
  7773 ;; Hardware stack levels required when called:    2
  7774 ;; This function calls:
  7775 ;;		_WriteI2C
  7776 ;; This function is called by:
  7777 ;;		_LCDinit
  7778 ;;		_LCDcmd
  7779 ;;		_LCDchar
  7780 ;; This function uses a non-reentrant model
  7781 ;;
  7782                           
  7783                           
  7784                           ;psect for function _LCDsend2x4
  7785  0491                     _LCDsend2x4:
  7786                           
  7787                           ;incstack = 0
  7788                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
  7789                           ;LCDsend2x4@c stored from wreg
  7790  0491  00F5               	movwf	LCDsend2x4@c
  7791  0492                     l2070:
  7792                           
  7793                           ;main.c: 128: unsigned char hc;;main.c: 129: unsigned char lc;;main.c: 131: hc = c & 0xf
      +                          0;
  7794  0492  0875               	movf	LCDsend2x4@c,w
  7795  0493  39F0               	andlw	240
  7796  0494  00F3               	movwf	??_LCDsend2x4
  7797  0495  0873               	movf	??_LCDsend2x4,w
  7798  0496  00F6               	movwf	LCDsend2x4@hc
  7799  0497                     l2072:
  7800                           
  7801                           ;main.c: 132: lc = (c << 4) & 0xf0;
  7802  0497  0875               	movf	LCDsend2x4@c,w
  7803  0498  00F3               	movwf	??_LCDsend2x4
  7804  0499  3003               	movlw	3
  7805  049A                     u1415:
  7806  049A  35F3               	lslf	??_LCDsend2x4,f
  7807  049B  3EFF               	addlw	-1
  7808  049C  1D03               	skipz
  7809  049D  2C9A               	goto	u1415
  7810  049E  3573               	lslf	??_LCDsend2x4,w
  7811  049F  39F0               	andlw	240
  7812  04A0  00F4               	movwf	??_LCDsend2x4+1
  7813  04A1  0874               	movf	??_LCDsend2x4+1,w
  7814  04A2  00F7               	movwf	LCDsend2x4@lc
  7815  04A3                     l2074:	
  7816                           ;main.c: 134: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7817                           
  7818  04A3  0023               	movlb	3	; select bank3
  7819  04A4  0C0F               	rrf	15,w	;volatile
  7820  04A5  0C89               	rrf	9,f
  7821  04A6  3901               	andlw	1
  7822  04A7  00F3               	movwf	??_LCDsend2x4
  7823  04A8  0811               	movf	17,w	;volatile
  7824  04A9  391F               	andlw	31
  7825  04AA  0473               	iorwf	??_LCDsend2x4,w
  7826  04AB  1D03               	btfss	3,2
  7827  04AC  2CAE               	goto	u1421
  7828  04AD  2CAF               	goto	u1420
  7829  04AE                     u1421:
  7830  04AE  2CA3               	goto	l2074
  7831  04AF                     u1420:
  7832  04AF                     l540:
  7833                           
  7834                           ;main.c: 135: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
  7835  04AF  1411               	bsf	17,0	;volatile
  7836  04B0                     l541:
  7837  04B0  1811               	btfsc	17,0	;volatile
  7838  04B1  2CB3               	goto	u1431
  7839  04B2  2CB4               	goto	u1430
  7840  04B3                     u1431:
  7841  04B3  2CB0               	goto	l541
  7842  04B4                     u1430:
  7843  04B4                     l2076:
  7844  04B4  0C0F               	rrf	15,w	;volatile
  7845  04B5  0C89               	rrf	9,f
  7846  04B6  3901               	andlw	1
  7847  04B7  00F3               	movwf	??_LCDsend2x4
  7848  04B8  0811               	movf	17,w	;volatile
  7849  04B9  391F               	andlw	31
  7850  04BA  0473               	iorwf	??_LCDsend2x4,w
  7851  04BB  1D03               	btfss	3,2
  7852  04BC  2CBE               	goto	u1441
  7853  04BD  2CBF               	goto	u1440
  7854  04BE                     u1441:
  7855  04BE  2CB4               	goto	l2076
  7856  04BF                     u1440:
  7857  04BF                     l2078:
  7858                           
  7859                           ;main.c: 136: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7860  04BF  304E               	movlw	78
  7861  04C0  3186  2639  3184   	fcall	_WriteI2C
  7862  04C3                     l2080:
  7863  04C3  0023               	movlb	3	; select bank3
  7864  04C4  0C0F               	rrf	15,w	;volatile
  7865  04C5  0C89               	rrf	9,f
  7866  04C6  3901               	andlw	1
  7867  04C7  00F3               	movwf	??_LCDsend2x4
  7868  04C8  0811               	movf	17,w	;volatile
  7869  04C9  391F               	andlw	31
  7870  04CA  0473               	iorwf	??_LCDsend2x4,w
  7871  04CB  1D03               	btfss	3,2
  7872  04CC  2CCE               	goto	u1451
  7873  04CD  2CCF               	goto	u1450
  7874  04CE                     u1451:
  7875  04CE  2CC3               	goto	l2080
  7876  04CF                     u1450:
  7877  04CF                     l2082:
  7878                           
  7879                           ;main.c: 137: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  7880  04CF  0876               	movf	LCDsend2x4@hc,w
  7881  04D0  0472               	iorwf	LCDsend2x4@mode,w
  7882  04D1  3808               	iorlw	8
  7883  04D2  3186  2639  3184   	fcall	_WriteI2C
  7884  04D5                     l2084:
  7885  04D5  0023               	movlb	3	; select bank3
  7886  04D6  0C0F               	rrf	15,w	;volatile
  7887  04D7  0C89               	rrf	9,f
  7888  04D8  3901               	andlw	1
  7889  04D9  00F3               	movwf	??_LCDsend2x4
  7890  04DA  0811               	movf	17,w	;volatile
  7891  04DB  391F               	andlw	31
  7892  04DC  0473               	iorwf	??_LCDsend2x4,w
  7893  04DD  1D03               	btfss	3,2
  7894  04DE  2CE0               	goto	u1461
  7895  04DF  2CE1               	goto	u1460
  7896  04E0                     u1461:
  7897  04E0  2CD5               	goto	l2084
  7898  04E1                     u1460:
  7899  04E1                     l2086:
  7900                           
  7901                           ;main.c: 138: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
  7902  04E1  0876               	movf	LCDsend2x4@hc,w
  7903  04E2  0472               	iorwf	LCDsend2x4@mode,w
  7904  04E3  380C               	iorlw	12
  7905  04E4  3186  2639  3184   	fcall	_WriteI2C
  7906  04E7                     l2088:
  7907  04E7  0023               	movlb	3	; select bank3
  7908  04E8  0C0F               	rrf	15,w	;volatile
  7909  04E9  0C89               	rrf	9,f
  7910  04EA  3901               	andlw	1
  7911  04EB  00F3               	movwf	??_LCDsend2x4
  7912  04EC  0811               	movf	17,w	;volatile
  7913  04ED  391F               	andlw	31
  7914  04EE  0473               	iorwf	??_LCDsend2x4,w
  7915  04EF  1D03               	btfss	3,2
  7916  04F0  2CF2               	goto	u1471
  7917  04F1  2CF3               	goto	u1470
  7918  04F2                     u1471:
  7919  04F2  2CE7               	goto	l2088
  7920  04F3                     u1470:
  7921  04F3                     l555:
  7922  04F3                     l2090:	
  7923                           ;main.c: 139: _delay((unsigned long)((1)*(1000000/4000000.0)));
  7924                           
  7925                           
  7926                           ;main.c: 140: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  7927  04F3  0876               	movf	LCDsend2x4@hc,w
  7928  04F4  0472               	iorwf	LCDsend2x4@mode,w
  7929  04F5  3808               	iorlw	8
  7930  04F6  3186  2639  3184   	fcall	_WriteI2C
  7931  04F9                     l2092:
  7932  04F9  0023               	movlb	3	; select bank3
  7933  04FA  0C0F               	rrf	15,w	;volatile
  7934  04FB  0C89               	rrf	9,f
  7935  04FC  3901               	andlw	1
  7936  04FD  00F3               	movwf	??_LCDsend2x4
  7937  04FE  0811               	movf	17,w	;volatile
  7938  04FF  391F               	andlw	31
  7939  0500  0473               	iorwf	??_LCDsend2x4,w
  7940  0501  1D03               	btfss	3,2
  7941  0502  2D04               	goto	u1481
  7942  0503  2D05               	goto	u1480
  7943  0504                     u1481:
  7944  0504  2CF9               	goto	l2092
  7945  0505                     u1480:
  7946  0505                     l2094:
  7947                           
  7948                           ;main.c: 141: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  7949  0505  0877               	movf	LCDsend2x4@lc,w
  7950  0506  0472               	iorwf	LCDsend2x4@mode,w
  7951  0507  3808               	iorlw	8
  7952  0508  3186  2639  3184   	fcall	_WriteI2C
  7953  050B                     l2096:
  7954  050B  0023               	movlb	3	; select bank3
  7955  050C  0C0F               	rrf	15,w	;volatile
  7956  050D  0C89               	rrf	9,f
  7957  050E  3901               	andlw	1
  7958  050F  00F3               	movwf	??_LCDsend2x4
  7959  0510  0811               	movf	17,w	;volatile
  7960  0511  391F               	andlw	31
  7961  0512  0473               	iorwf	??_LCDsend2x4,w
  7962  0513  1D03               	btfss	3,2
  7963  0514  2D16               	goto	u1491
  7964  0515  2D17               	goto	u1490
  7965  0516                     u1491:
  7966  0516  2D0B               	goto	l2096
  7967  0517                     u1490:
  7968  0517                     l2098:
  7969                           
  7970                           ;main.c: 142: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
  7971  0517  0877               	movf	LCDsend2x4@lc,w
  7972  0518  0472               	iorwf	LCDsend2x4@mode,w
  7973  0519  380C               	iorlw	12
  7974  051A  3186  2639  3184   	fcall	_WriteI2C
  7975  051D                     l2100:
  7976  051D  0023               	movlb	3	; select bank3
  7977  051E  0C0F               	rrf	15,w	;volatile
  7978  051F  0C89               	rrf	9,f
  7979  0520  3901               	andlw	1
  7980  0521  00F3               	movwf	??_LCDsend2x4
  7981  0522  0811               	movf	17,w	;volatile
  7982  0523  391F               	andlw	31
  7983  0524  0473               	iorwf	??_LCDsend2x4,w
  7984  0525  1D03               	btfss	3,2
  7985  0526  2D28               	goto	u1501
  7986  0527  2D29               	goto	u1500
  7987  0528                     u1501:
  7988  0528  2D1D               	goto	l2100
  7989  0529                     u1500:
  7990  0529                     l564:
  7991  0529                     l2102:	
  7992                           ;main.c: 143: _delay((unsigned long)((1)*(1000000/4000000.0)));
  7993                           
  7994                           
  7995                           ;main.c: 144: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  7996  0529  0877               	movf	LCDsend2x4@lc,w
  7997  052A  0472               	iorwf	LCDsend2x4@mode,w
  7998  052B  3808               	iorlw	8
  7999  052C  3186  2639  3184   	fcall	_WriteI2C
  8000  052F                     l2104:
  8001  052F  0023               	movlb	3	; select bank3
  8002  0530  0C0F               	rrf	15,w	;volatile
  8003  0531  0C89               	rrf	9,f
  8004  0532  3901               	andlw	1
  8005  0533  00F3               	movwf	??_LCDsend2x4
  8006  0534  0811               	movf	17,w	;volatile
  8007  0535  391F               	andlw	31
  8008  0536  0473               	iorwf	??_LCDsend2x4,w
  8009  0537  1D03               	btfss	3,2
  8010  0538  2D3A               	goto	u1511
  8011  0539  2D3B               	goto	u1510
  8012  053A                     u1511:
  8013  053A  2D2F               	goto	l2104
  8014  053B                     u1510:
  8015  053B                     l567:
  8016                           
  8017                           ;main.c: 145: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  8018  053B  1511               	bsf	17,2	;volatile
  8019  053C                     l568:
  8020  053C  1911               	btfsc	17,2	;volatile
  8021  053D  2D3F               	goto	u1521
  8022  053E  2D40               	goto	u1520
  8023  053F                     u1521:
  8024  053F  2D3C               	goto	l568
  8025  0540                     u1520:
  8026  0540                     l2106:
  8027                           
  8028                           ;main.c: 146: _delay((unsigned long)((50)*(1000000/4000000.0)));
  8029  0540  3004               	movlw	4
  8030  0541                     u2677:
  8031  0541  0B89               	decfsz	9,f
  8032  0542  2D41               	goto	u2677
  8033  0543                     l571:
  8034  0543  0008               	return
  8035  0544                     __end_of_LCDsend2x4:
  8036                           
  8037                           	psect	text20
  8038  0639                     __ptext20:	
  8039 ;; *************** function _WriteI2C *****************
  8040 ;; Defined at:
  8041 ;;		line 47 in file "I2C/i2c.c"
  8042 ;; Parameters:    Size  Location     Type
  8043 ;;  data_out        1    wreg     unsigned char 
  8044 ;; Auto vars:     Size  Location     Type
  8045 ;;  data_out        1    1[COMMON] unsigned char 
  8046 ;; Return value:  Size  Location     Type
  8047 ;;                  1    wreg      char 
  8048 ;; Registers used:
  8049 ;;		wreg, status,2, status,0
  8050 ;; Tracked objects:
  8051 ;;		On entry : 0/0
  8052 ;;		On exit  : 0/0
  8053 ;;		Unchanged: 0/0
  8054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8056 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8057 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8058 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8059 ;;Total ram usage:        2 bytes
  8060 ;; Hardware stack levels used:    1
  8061 ;; Hardware stack levels required when called:    1
  8062 ;; This function calls:
  8063 ;;		Nothing
  8064 ;; This function is called by:
  8065 ;;		_tsttc
  8066 ;;		_LCDsend
  8067 ;;		_LCDrecv
  8068 ;;		_LCDsend2x4
  8069 ;; This function uses a non-reentrant model
  8070 ;;
  8071                           
  8072                           
  8073                           ;psect for function _WriteI2C
  8074  0639                     _WriteI2C:
  8075                           
  8076                           ;incstack = 0
  8077                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
  8078                           ;WriteI2C@data_out stored from wreg
  8079  0639  00F1               	movwf	WriteI2C@data_out
  8080  063A                     l2040:
  8081                           
  8082                           ;i2c.c: 49: SSP1BUF = data_out;
  8083  063A  0871               	movf	WriteI2C@data_out,w
  8084  063B  0023               	movlb	3	; select bank3
  8085  063C  008C               	movwf	12	;volatile
  8086  063D                     l2042:
  8087                           
  8088                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
  8089  063D  1F90               	btfss	16,7	;volatile
  8090  063E  2E40               	goto	u1321
  8091  063F  2E41               	goto	u1320
  8092  0640                     u1321:
  8093  0640  2E42               	goto	l2048
  8094  0641                     u1320:
  8095  0641  2E83               	goto	l30
  8096  0642                     l2048:
  8097                           
  8098                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
  8099  0642  300F               	movlw	15
  8100  0643  0510               	andwf	16,w	;volatile
  8101  0644  00F0               	movwf	??_WriteI2C
  8102  0645  3008               	movlw	8
  8103  0646  0670               	xorwf	??_WriteI2C,w
  8104  0647  1903               	btfsc	3,2
  8105  0648  2E4A               	goto	u1331
  8106  0649  2E4B               	goto	u1330
  8107  064A                     u1331:
  8108  064A  2E61               	goto	l2060
  8109  064B                     u1330:
  8110  064B                     l2050:
  8111  064B  300F               	movlw	15
  8112  064C  0510               	andwf	16,w	;volatile
  8113  064D  00F0               	movwf	??_WriteI2C
  8114  064E  300B               	movlw	11
  8115  064F  0670               	xorwf	??_WriteI2C,w
  8116  0650  1903               	btfsc	3,2
  8117  0651  2E53               	goto	u1341
  8118  0652  2E54               	goto	u1340
  8119  0653                     u1341:
  8120  0653  2E61               	goto	l2060
  8121  0654                     u1340:
  8122  0654                     l2052:
  8123                           
  8124                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
  8125  0654  1610               	bsf	16,4	;volatile
  8126  0655                     l33:	
  8127                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
  8128                           
  8129  0655  002E               	movlb	14	; select bank14
  8130  0656  1C0F               	btfss	15,0	;volatile
  8131  0657  2E59               	goto	u1351
  8132  0658  2E5A               	goto	u1350
  8133  0659                     u1351:
  8134  0659  2E55               	goto	l33
  8135  065A                     u1350:
  8136  065A                     l35:
  8137                           
  8138                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
  8139  065A  0023               	movlb	3	; select bank3
  8140  065B  190F               	btfsc	15,2	;volatile
  8141  065C  2E5E               	goto	u1361
  8142  065D  2E5F               	goto	u1360
  8143  065E                     u1361:
  8144  065E  2E83               	goto	l30
  8145  065F                     u1360:
  8146  065F                     l2054:
  8147  065F  080F               	movf	15,w	;volatile
  8148  0660  2E83               	goto	l30
  8149  0661                     l2060:
  8150                           
  8151                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
  8152  0661  300F               	movlw	15
  8153  0662  0510               	andwf	16,w	;volatile
  8154  0663  00F0               	movwf	??_WriteI2C
  8155  0664  3008               	movlw	8
  8156  0665  0670               	xorwf	??_WriteI2C,w
  8157  0666  1903               	btfsc	3,2
  8158  0667  2E69               	goto	u1371
  8159  0668  2E6A               	goto	u1370
  8160  0669                     u1371:
  8161  0669  2E73               	goto	l42
  8162  066A                     u1370:
  8163  066A                     l2062:
  8164  066A  300F               	movlw	15
  8165  066B  0510               	andwf	16,w	;volatile
  8166  066C  00F0               	movwf	??_WriteI2C
  8167  066D  300B               	movlw	11
  8168  066E  0670               	xorwf	??_WriteI2C,w
  8169  066F  1D03               	btfss	3,2
  8170  0670  2E72               	goto	u1381
  8171  0671  2E73               	goto	u1380
  8172  0672                     u1381:
  8173  0672  2E83               	goto	l30
  8174  0673                     u1380:
  8175  0673                     l42:
  8176  0673  180F               	btfsc	15,0	;volatile
  8177  0674  2E76               	goto	u1391
  8178  0675  2E77               	goto	u1390
  8179  0676                     u1391:
  8180  0676  2E73               	goto	l42
  8181  0677                     u1390:
  8182  0677                     l2064:
  8183  0677  0C0F               	rrf	15,w	;volatile
  8184  0678  0C89               	rrf	9,f
  8185  0679  3901               	andlw	1
  8186  067A  00F0               	movwf	??_WriteI2C
  8187  067B  0811               	movf	17,w	;volatile
  8188  067C  391F               	andlw	31
  8189  067D  0470               	iorwf	??_WriteI2C,w
  8190  067E  1D03               	btfss	3,2
  8191  067F  2E81               	goto	u1401
  8192  0680  2E82               	goto	u1400
  8193  0681                     u1401:
  8194  0681  2E77               	goto	l2064
  8195  0682                     u1400:
  8196  0682                     l47:
  8197                           
  8198                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
  8199  0682  0811               	movf	17,w	;volatile
  8200  0683                     l30:
  8201  0683  0008               	return
  8202  0684                     __end_of_WriteI2C:
  8203                           
  8204                           	psect	intentry
  8205  0004                     __pintentry:	
  8206 ;; *************** function _INTERRUPT_InterruptManager *****************
  8207 ;; Defined at:
  8208 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8209 ;; Parameters:    Size  Location     Type
  8210 ;;		None
  8211 ;; Auto vars:     Size  Location     Type
  8212 ;;		None
  8213 ;; Return value:  Size  Location     Type
  8214 ;;                  1    wreg      void 
  8215 ;; Registers used:
  8216 ;;		wreg
  8217 ;; Tracked objects:
  8218 ;;		On entry : 0/0
  8219 ;;		On exit  : 0/0
  8220 ;;		Unchanged: 0/0
  8221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8226 ;;Total ram usage:        0 bytes
  8227 ;; Hardware stack levels used:    1
  8228 ;; This function calls:
  8229 ;;		Nothing
  8230 ;; This function is called by:
  8231 ;;		Interrupt level 1
  8232 ;; This function uses a non-reentrant model
  8233 ;;
  8234                           
  8235  0004                     _INTERRUPT_InterruptManager:
  8236                           
  8237                           ;incstack = 0
  8238  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8239                           
  8240                           ; Regs used in _INTERRUPT_InterruptManager: [wreg]
  8241  0005  3180               	pagesel	$
  8242  0006                     i1l1990:
  8243                           
  8244                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
  8245  0006  1F0B               	btfss	11,6	;volatile
  8246  0007  2809               	goto	u128_21
  8247  0008  280A               	goto	u128_20
  8248  0009                     u128_21:
  8249  0009  281A               	goto	i1l326
  8250  000A                     u128_20:
  8251  000A                     i1l1992:
  8252                           
  8253                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE3bits.BCL1IE == 1 && PIR3bits
      +                          .BCL1IF == 1)
  8254  000A  002E               	movlb	14	; select bank14
  8255  000B  1C99               	btfss	25,1	;volatile
  8256  000C  280E               	goto	u129_21
  8257  000D  280F               	goto	u129_20
  8258  000E                     u129_21:
  8259  000E  2814               	goto	i1l321
  8260  000F                     u129_20:
  8261  000F                     i1l1994:
  8262                           
  8263                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: i2c1_driver_busCollisionISR();
  8264  000F  1C8F               	btfss	15,1	;volatile
  8265  0010  2812               	goto	u130_21
  8266  0011  2813               	goto	u130_20
  8267  0012                     u130_21:
  8268  0012  2814               	goto	i1l321
  8269  0013                     u130_20:
  8270  0013  281A               	goto	i1l326
  8271  0014                     i1l321:
  8272                           
  8273                           ;interrupt_manager.c: 61: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
  8274  0014  1C19               	btfss	25,0	;volatile
  8275  0015  2817               	goto	u131_21
  8276  0016  2818               	goto	u131_20
  8277  0017                     u131_21:
  8278  0017  281A               	goto	i1l322
  8279  0018                     u131_20:
  8280  0018                     i1l1998:
  8281                           
  8282                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: i2c1_driver_i2cISR();
  8283  0018  080F               	movf	15,w	;volatile
  8284  0019  281A               	goto	i1l326
  8285  001A                     i1l322:
  8286  001A                     i1l326:	
  8287                           ;interrupt_manager.c: 68: };interrupt_manager.c: 69: }
  8288                           
  8289  001A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8290  001B  0009               	retfie
  8291  001C                     __end_of_INTERRUPT_InterruptManager:
  8292  007E                     btemp	set	126	;btemp
  8293  007E                     int$flags	set	126
  8294  007E                     wtemp0	set	126
  8295                           
  8296                           	psect	config
  8297                           
  8298                           ;Config register CONFIG1 @ 0x8007
  8299                           ;	External Oscillator mode selection bits
  8300                           ;	FEXTOSC = OFF, Oscillator not enabled
  8301                           ;	Power-up default value for COSC bits
  8302                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
  8303                           ;	Clock Out Enable bit
  8304                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  8305                           ;	Clock Switch Enable bit
  8306                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  8307                           ;	Fail-Safe Clock Monitor Enable bit
  8308                           ;	FCMEN = ON, FSCM timer enabled
  8309  8007                     	org	32775
  8310  8007  3FEC               	dw	16364
  8311                           
  8312                           ;Config register CONFIG2 @ 0x8008
  8313                           ;	Master Clear Enable bit
  8314                           ;	MCLRE = ON, MCLR pin is Master Clear function
  8315                           ;	Power-up Timer Enable bit
  8316                           ;	PWRTE = OFF, PWRT disabled
  8317                           ;	Low-Power BOR enable bit
  8318                           ;	LPBOREN = OFF, ULPBOR disabled
  8319                           ;	Brown-out reset enable bits
  8320                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  8321                           ;	Brown-out Reset Voltage Selection
  8322                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  8323                           ;	Zero-cross detect disable
  8324                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  8325                           ;	Peripheral Pin Select one-way control
  8326                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  8327                           ;	Stack Overflow/Underflow Reset Enable bit
  8328                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  8329                           ;	Background Debugger
  8330                           ;	DEBUG = OFF, Background Debugger disabled
  8331  8008                     	org	32776
  8332  8008  3FFF               	dw	16383
  8333                           
  8334                           ;Config register CONFIG3 @ 0x8009
  8335                           ;	WDT Period Select bits
  8336                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8337                           ;	WDT operating mode
  8338                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  8339                           ;	WDT Window Select bits
  8340                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  8341                           ;	WDT input clock selector
  8342                           ;	WDTCCS = SC, Software Control
  8343  8009                     	org	32777
  8344  8009  3F9F               	dw	16287
  8345                           
  8346                           ;Config register CONFIG4 @ 0x800A
  8347                           ;	UserNVM self-write protection bits
  8348                           ;	WRT = OFF, Write protection off
  8349                           ;	Scanner Enable bit
  8350                           ;	SCANE = available, Scanner module is available for use
  8351                           ;	Low Voltage Programming Enable bit
  8352                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  8353  800A                     	org	32778
  8354  800A  3FFF               	dw	16383
  8355                           
  8356                           ;Config register CONFIG5 @ 0x800B
  8357                           ;	UserNVM Program memory code protection bit
  8358                           ;	CP = OFF, Program Memory code protection disabled
  8359                           ;	DataNVM code protection bit
  8360                           ;	CPD = OFF, Data EEPROM code protection disabled
  8361  800B                     	org	32779
  8362  800B  3FFF               	dw	16383

Data Sizes:
    Strings     39
    Constant    18
    Data        0
    BSS         4
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     44      48
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_3(CODE[10]), STR_2(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> main@buf(BANK0[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCDstr@p	PTR unsigned char  size(2) Largest target is 17
		 -> main@buf(BANK0[17]), STR_1(CODE[5]), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    _main->_LCDstr
    _tsttc->_WriteI2C
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDstr->_LCDchar
    _LCDchar->_LCDsend2x4
    _LCDrecv->_WriteI2C
    _LCDinit->_LCDsend2x4
    _LCDsend->_WriteI2C
    _LCDcmd->_LCDsend2x4
    _LCDsend2x4->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0    5607
                                             20 BANK0     24    24      0
                             _LCDcmd
                            _LCDinit
                            _LCDrecv
                             _LCDstr
                  _SYSTEM_Initialize
                   _i2c1_driver_open
                            _sprintf
                              _tsttc
 ---------------------------------------------------------------------------------
 (1) _tsttc                                                2     2      0      68
                                              2 COMMON     2     2      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             28    22      6    2464
                                              0 BANK0     20    14      6
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDstr                                               6     4      2    1083
                                              9 COMMON     5     3      2
                                              0 BANK0      1     1      0
                            _LCDchar
 ---------------------------------------------------------------------------------
 (2) _LCDchar                                              1     1      0     810
                                              8 COMMON     1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (1) _LCDrecv                                              5     5      0     178
                                              2 COMMON     5     5      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     832
                                              8 COMMON     1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 COMMON     2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _LCDcmd                                               1     1      0     810
                                              8 COMMON     1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (3) _LCDsend2x4                                           6     5      1     788
                                              2 COMMON     6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDcmd
     _LCDsend2x4
       _WriteI2C
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _LCDrecv
     _ReadI2C
     _WriteI2C
   _LCDstr
     _LCDchar
       _LCDsend2x4
         _WriteI2C
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _i2c1_driver_open
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _tsttc
     _ReadI2C
     _WriteI2C

 _INTERRUPT_InterruptManager (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2C      30       5       60.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      3E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      3E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Oct 14 15:55:03 2020

                                 l30 0683                                   l22 07BF  
                                 l23 07C0                                   l33 0655  
                                 l42 0673                                   l26 07C5  
                                 l35 065A                                   l47 0682  
                ___wmul@multiplicand 0072                                  l120 073D  
                                l400 0418                                  l161 0FF5  
                                l225 07FC                                  l411 0447  
                                l164 0FEC                                  l412 0448  
                                l158 0FFF                                  l430 048B  
                                l423 0479                                  l520 0342  
                                l504 0308                                  l424 047B  
                                l505 030A                                  l433 0490  
                                l450 06C1                                  l362 0390  
                                l451 06C2                                  l531 0372  
                                l363 0391                                  l540 04AF  
                                l532 0373                                  l516 033B  
                                l460 024C                                  l541 04B0  
                                l517 033D                                  l429 048A  
                                l454 06C6                                  l438 0691  
                                l374 03C0                                  l439 0692  
                                l535 0383                                  l519 0341  
                                l375 03C1                                  l359 0384  
                                l392 0403                                  l393 0404  
                                l490 02C7                                  l474 028D  
                                l386 03F2                                  l571 0543  
                                l555 04F3                                  l475 028F  
                                l459 024B                                  l395 0408  
                                l387 03F4                                  l564 0529  
                                l580 0FE4                                  l813 023D  
                                l574 0638                                  l486 02C0  
                                l567 053B                                  l487 02C2  
                                l399 0417                                  l568 053C  
                                l577 0FDC                                  l489 02C6  
                                l817 077C                                  l586 07AB  
                                l819 0790                                  l764 0044  
                                l783 00D8                                  l792 013F  
                                l776 00AF                                  l777 0092  
                                l788 00FF              __size_of_PMD_Initialize 0008  
                                wreg 0009                          ?_LCDsend2x4 0072  
                    __end_of_LCDchar 0FE5                                 l2100 051D  
                               l2102 0529                                 l2110 07B6  
                               l2040 063A                                 l2104 052F  
                               l2112 07C4                                 l2120 070B  
                               l2200 0781                                 l2050 064B  
                               l2042 063D                                 l2106 0540  
                               l2130 0716                                 l2122 070D  
                               l2210 06C9                                 l2202 0786  
                               l2052 0654                                 l2060 0661  
                               l2108 07AC                                 l2140 072A  
                               l2132 0718                                 l2124 070F  
                               l2116 0703                                 l2220 06DF  
                               l2212 06CF                                 l2204 078C  
                               l2300 041C                                 l2062 066A  
                               l2054 065F                                 l2070 0492  
                               l2150 0735                                 l2142 072C  
                               l2134 071A                                 l2126 0711  
                               l2118 0709                                 l2222 06EE  
                               l2214 06D2                                 l2230 06FE  
                               l1270 07F0                                 l2310 044C  
                               l2302 0427                                 l2064 0677  
                               l2048 0642                                 l2080 04C3  
                               l2072 0497                                 l2400 05E0  
                               l2160 0FF0                                 l2152 0738  
                               l2144 072E                                 l2136 071C  
                               l2128 0713                                 l2224 06F2  
                               l2216 06D7                                 l2208 06C7  
                               l2240 074C                                 l2320 047F  
                               l2312 0457                                 l2304 042B  
                               l1089 0702                                 l2090 04F3  
                               l2082 04CF                                 l2074 04A3  
                               l2170 0696                                 l2410 0604  
                               l2402 05EC                                 l2330 0250  
                               l2162 0FF1                                 l2154 073A  
                               l2146 0730                                 l2138 0728  
                               l2226 06F3                                 l2218 06DB  
                               l2250 0767                                 l2242 0750  
                               l2234 073E                                 l2322 048F  
                               l2314 045B                                 l2306 0437  
                               l1099 0771                                 l2092 04F9  
                               l2084 04D5                                 l2076 04B4  
                               l2172 06A1                                 l2420 0625  
                               l2412 0608                                 l2404 05F0  
                               l2340 027C                                 l2332 025B  
                               l2180 0FDE                                 l2164 0FF4  
                               l2148 0732                                 l2156 0FE5  
                               l2260 0FFC                                 l2228 06F8  
                               l2244 0754                                 l2236 0744  
                               l2252 076D                                 l2316 0467  
                               l2308 043B                                 l2094 0505  
                               l2086 04E1                                 l2078 04BF  
                               l2174 06A5                                 l2166 0685  
                               l2422 062A                                 l2414 0614  
                               l2406 05F8                                 l2350 02AE  
                               l2342 0281                                 l2334 025F  
                               l2326 023F                                 l2430 0792  
                               l2158 0FED                                 l2262 07F1  
                               l2246 075E                                 l2238 0747  
                               l2190 07EF                                 l2182 07E0  
                               l2510 014A                                 l2502 0126  
                               l2318 046D                                 l2096 050B  
                               l2088 04E7                                 l2176 06B1  
                               l2168 0685                                 l2424 062F  
                               l2416 0618                                 l2408 05FC  
                               l2360 02E6                                 l2352 02B4  
                               l2344 0293                                 l2336 026B  
                               l2328 023F                                 l2432 0796  
                               l2256 0FF6                                 l2264 07F6  
                               l2248 0762                                 l2184 07E1  
                               l2520 0167                                 l2512 0153  
                               l2504 012F                                 l2440 003B  
                               l2280 03A4                                 l2600 058D  
                               l2098 0517                                 l2426 0FD7  
                               l2178 06B5                                 l2418 0620  
                               l2370 0319                                 l2362 02EB  
                               l2354 02CB                                 l2346 029E  
                               l2338 0270                                 l2258 0FF9  
                               l2266 07F7                                 l2194 0772  
                               l2186 07E7                                 l2522 016B  
                               l2530 0187                                 l2514 0156  
                               l2506 0135                                 l2450 0052  
                               l2442 0040                                 l2434 0029  
                               l2290 03D4                                 l2282 03B0  
                               l2274 0384                                 l2602 0595  
                               l2380 0351                                 l2372 031D  
                               l2364 02F7                                 l2356 02D6  
                               l2348 02A2                                 l2428 0791  
                               l2268 07F9                                 l2196 0774  
                               l2188 07ED                                 l2540 01A8  
                               l2532 018D                                 l2524 0171  
                               l2516 015A                                 l2508 013B  
                               l2460 0085                                 l2452 005E  
                               l2444 0045                                 l2436 002E  
                               l2292 03E0                                 l2284 03B4  
                               l2276 0395                                 l2604 05B0  
                               l2382 0355                                 l2374 0329  
                               l2366 02FC                                 l2358 02DA  
                               l2198 0778                                 l2550 01FC  
                               l2542 01AF                                 l2534 0194  
                               l2526 0178                                 l2518 0160  
                               l2470 00BE                                 l2454 0061  
                               l2438 0034                                 l2294 03E6  
                               l2286 03C5                                 l2278 03A0  
                               l2606 05B7                                 l2392 05C8  
                               l2384 0361                                 l2376 032F  
                               l2368 030E                                 l2560 021C  
                               l2536 0198                                 l2528 017C  
                               l2544 01B3                                 l2472 00C2  
                               l2456 0072                                 l2464 0094  
                               l2448 0049                                 l2296 03F8  
                               l2288 03D0                                 l2608 05B8  
                               l2394 05D0                                 l2386 0366  
                               l2378 0346                                 l2554 0208  
                               l2546 01B8                                 l2538 01A2  
                               l2474 00C6                                 l2466 00B3  
                               l2458 0081                                 l2562 0225  
                               l2298 040C                                 l2396 05D4  
                               l2388 0377                                 l2548 01E0  
                               l2556 0211                                 l2484 00DA  
                               l2468 00BA                                 l2476 00CC  
                               l2564 0239                                 l2580 054C  
                               l2398 05DC                                 l2558 0218  
                               l2494 0101                                 l2478 00D3  
                               l2590 0566                                 l2582 054D  
                               l2488 00F4                                 l2592 056A  
                               l2584 054F                                 l2576 0544  
                               l2498 011B                                 l2594 057A  
                               l2586 0553                                 l2578 054A  
                               l2596 0581                                 l2588 055F  
                               l2598 0585                      __end_of_LCDinit 0639  
                    __end_of_LCDrecv 0384                      __end_of_LCDsend 06C7  
                               STR_1 1007                                 STR_2 1000  
                               STR_3 0807                                 STR_4 07CE  
                               u2000 044C                                 u2001 044B  
                               u2010 0457                                 u2011 0456  
                               u2100 026B                                 u2020 0467  
                               u2101 026A                                 u2021 0466  
                               u2110 027C                                 u2030 0479  
                               u2111 027B                                 u2031 0478  
                               u1400 0682                                 u1320 0641  
                               u2200 02E6                                 u2120 028D  
                               u2040 047F                                 u1401 0681  
                               u1321 0640                                 u2201 02E5  
                               u2121 028C                                 u2041 047E  
                               u1330 064B                                 u2210 02F7  
                               u2130 0293                                 u2050 048A  
                               u1331 064A                                 u2211 02F6  
                               u2131 0292                                 u2051 0489  
                               u1340 0654                                 u1500 0529  
                               u1420 04AF                                 u2300 0361  
                               u2220 0308                                 u2140 029E  
                               u2060 048F                                 u1341 0653  
                               u1501 0528                                 u1421 04AE  
                               u2301 0360                                 u2221 0307  
                               u2141 029D                                 u2061 048E  
                               _LATA 0016                                 u1350 065A  
                               u1510 053B                                 u1430 04B4  
                               u2310 0372                                 u2230 030E  
                               u2150 02AE                                 u2070 024B  
                               _LATB 0017                                 u1351 0659  
                               u1511 053A                                 u1431 04B3  
                               u1415 049A                                 u2311 0371  
                               u2231 030D                                 u2151 02AD  
                               u2071 024A                                 _LATC 0018  
                               u1360 065F                                 u1520 0540  
                               u1440 04BF                                 u1600 06C1  
                               u2320 0377                                 u2240 0319  
                               u2160 02C0                                 u2080 0250  
                               u2400 00F3                                 _LATD 0019  
                               u1361 065E                                 u1521 053F  
                               u1441 04BE                                 u1601 06C0  
                               u2321 0376                                 u2241 0318  
                               u2161 02BF                                 u2081 024F  
                               u2401 00F2                                 _LATE 001A  
                               u1370 066A                                 u1450 04CF  
                               u1610 06C6                                 u1530 07B6  
                               u2250 0329                                 u2170 02C6  
                               u2090 025B                                 u2410 00FE  
                               u1371 0669                                 u1451 04CE  
                               u1611 06C5                                 u1531 07B5  
                               u2251 0328                                 u2171 02C5  
                               u2091 025A                                 u2411 00FD  
                               u1380 0673                                 u1460 04E1  
                               u1540 07BF                                 u2260 033B  
                               u2180 02CB                                 u2340 07AB  
                               u1700 06DF                                 u1620 07E7  
                               u2500 0186                                 u2420 011A  
                               u1381 0672                                 u1461 04E0  
                               u1541 07BE                                 u2261 033A  
                               u2181 02CA                                 u2341 07AA  
                               u1701 06DE                                 u1621 07E6  
                               u2501 0185                                 u2421 0119  
                               u2405 00EF                                 u1390 0677  
                               u1470 04F3                                 u1550 07C4  
                               u2270 0341                                 u2190 02D6  
                               u1630 07ED                                 u2510 018D  
                               u2430 0125                                 u2350 0034  
                               u1391 0676                                 u1471 04F2  
                               u1551 07C3                                 u2335 037A  
                               u2271 0340                                 u2191 02D5  
                               u1631 07EC                                 u2511 018C  
                               u2431 0124                                 u2351 0033  
                               u1480 0505                                 u1560 0691  
                               u2280 0346                                 u1720 06EE  
                               u1800 076D                                 u1640 0778  
                               u2520 01A2                                 u2440 0135  
                               u2360 005E                                 u1481 0504  
                               u1561 0690                                 u2281 0345  
                               u1721 06ED                                 u1801 076C  
                               u1641 0777                                 u2521 01A1  
                               u2441 0134                                 u2425 0116  
                               u2361 005D                                 u1490 0517  
                               u1570 0696                                 u2290 0351  
                               u1810 07F6                                 u2530 01A8  
                               u2450 013B                                 u2370 0091  
                               u1491 0516                                 u1571 0695  
                               u2291 0350                                 u1811 07F5  
                               u1715 06E0                                 u2531 01A7  
                               u2451 013A                                 u2371 0090  
                               u1580 06A1                                 u1740 06FE  
                               u2540 0225                                 u2460 014A  
                               u2380 00B3                                 u1900 03F2  
                               u1820 0390                                 u1581 06A0  
                               u1741 06FD                                 u1725 06EA  
                               u2541 0224                                 u2461 0149  
                               u2381 00B2                                 u1901 03F1  
                               u1821 038F                                 u1590 06B1  
                               u1750 0744                                 u1670 078C  
                               u2550 0239                                 u2470 015A  
                               u2390 00C2                                 u1910 03F8  
                               u1830 0395                                 u1591 06B0  
                               u2607 05ED                                 u1735 06F4  
                               u1751 0743                                 u1671 078B  
                               u1655 077D                                 u2551 0238  
                               u2471 0159                                 u2391 00C1  
                               u1911 03F7                                 u1831 0394  
                               u1680 06CF                                 u2480 0160  
                               u1920 0403                                 u1840 03A0  
                               u2617 05F5                                 u1681 06CE  
                               u1665 0782                                 u2481 015F  
                               u2465 0146                                 u1921 0402  
                               u1841 039F                                 u1770 0754  
                               u2490 0171                                 u1930 0408  
                               u1850 03B0                                 u2627 0601  
                               u1771 0753                                 u2491 0170  
                               u1931 0407                                 u1851 03AF  
                               u1780 075E                                 u1940 040C  
                               u1860 03C0                                 u2637 0609  
                               u1781 075D                                 u1765 0748  
                               u1941 040B                                 u1861 03BF  
                               u1950 0417                                 u1870 03C5  
                               u2647 0615                                 u1695 06D3  
                               u1951 0416                                 u1871 03C4  
                               u2567 05BE                                 u1960 041C  
                               u1880 03D0                                 u2657 061D  
                               u2577 05CB                                 u1785 075A  
                               u1961 041B                                 u1881 03CF  
                               u1970 0427                                 u1890 03E0  
                               u2667 0635                                 u2587 05D9  
                               u1795 0763                                 u1971 0426  
                               u1891 03DF                                 u1980 0437  
                               _PMD0 0796                                 u2677 0541  
                               u2597 05E1                                 u1981 0436  
                               _PMD1 0797                                 u1990 0447  
                               _PMD2 0798                                 u1991 0446  
                               _PMD3 0799                                 _PMD4 079A  
                               _PMD5 079B                                 _WPUA 0F39  
                               _WPUB 0F44                                 _WPUC 0F4F  
                               _WPUD 0F5A                                 _WPUE 0F65  
                               _main 0544                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                               start 001C                      __end_of_ReadI2C 07C6  
     __size_of_OSCILLATOR_Initialize 0009        __end_of_OSCILLATOR_Initialize 0FF6  
           __end_of_i2c1_driver_open 07FD                                ?_main 0070  
                    __end_of___lwdiv 0703                                i1l321 0014  
                              i1l322 001A                                i1l326 001A  
                    __end_of___lwmod 0772                                _OSCEN 0891  
                              _TRISA 0011                                _TRISB 0012  
                              _TRISC 0013                                _TRISD 0014  
                              _TRISE 0015                                _WPUC3 7A7B  
                              _WPUC4 7A7C                      __end_of_dpowers 0807  
                    __end_of_isdigit 07F1                                main@c 0049  
                              _tsttc 0384                                status 0003  
                              wtemp0 007E                      __end_of_sprintf 023E  
                    __initialization 001E                         __end_of_main 05C8  
                __size_of_LCDsend2x4 00B3          ?_INTERRUPT_InterruptManager 0070  
                             ??_main 0034                            ??_LCDchar 0078  
                          ??_LCDinit 0078                            ??_LCDrecv 0072  
                          ??_LCDsend 0072                     __end_of_WriteI2C 0684  
                             _ANSELA 0F38                               _ANSELB 0F43  
                             _ANSELC 0F4E                               _ANSELD 0F59  
                             _ANSELE 0F64                               ?_tsttc 0070  
                             _RC3PPS 0F23                               _RC4PPS 0F24  
                             _ODCONA 0F3A                               _ODCONB 0F45  
                             _ODCONC 0F50                               _ODCOND 0F5B  
                             _ODCONE 0F66                               u130_20 0013  
                             u130_21 0012                               u131_20 0018  
                             u131_21 0017                               i1l1990 0006  
                             i1l1992 000A                               i1l1994 000F  
                             i1l1998 0018                               u128_20 000A  
                             u128_21 0009                               u129_20 000F  
                             u129_21 000E                               _LCDcmd 0FD6  
                             _LCDstr 0791                               _OSCFRQ 0893  
                          ??_ReadI2C 0070                          LCDsend2x4@c 0075  
                        LCDrecv@mode 0076                               ___wmul 0772  
                          ??___lwdiv 0074                            ??___lwmod 007C  
                             main@c1 004A                               main@c2 004B  
                     _PMD_Initialize 0FE5                            ??_isdigit 0070  
                          ??_sprintf 0026                    _SYSTEM_Initialize 0FF6  
            __end_of__initialization 0023                   ?_SYSTEM_Initialize 0070  
                     __pcstackCOMMON 0070                  ??_SYSTEM_Initialize 0070  
                      __end_of_tsttc 0491               __end_of_PMD_Initialize 0FED  
                          LCDrecv@hc 0074                            LCDrecv@lc 0075  
                       ??_LCDsend2x4 0073            __end_of_SYSTEM_Initialize 1000  
                       sprintf@width 0030                              ??_tsttc 0072  
                         __pbssBANK0 004C                              ?_LCDcmd 0070  
                            ?_LCDstr 0079                              LCDcmd@c 0078  
                            LCDstr@c 0020                              LCDstr@p 0079  
                         __pmaintext 0544                              ?___wmul 0070  
                         __pintentry 0004                   __end_of_LCDsend2x4 0544  
                          ?_WriteI2C 0070                      ?_PMD_Initialize 0070  
                  ?_i2c1_driver_open 0070                              _LCDchar 0FDD  
                            _LCDinit 05C8                              _LCDrecv 023E  
                            _LCDsend 0684                   ??_i2c1_driver_open 0070  
                            _OSCCON1 088D                              _OSCCON3 088F  
                            _OSCTUNE 0892                              _SSP1ADD 018D  
                            _SLRCONA 0F3B                              _SLRCONB 0F46  
                            _SLRCONC 0F51                              _SLRCOND 0F5C  
                            _SLRCONE 0F67                              _SSP1BUF 018C  
                            _SSP1MSK 018E                         LCDsend2x4@hc 0076  
                       LCDsend2x4@lc 0077                      __size_of_LCDcmd 0007  
                 _i2c1_driver_i2cISR 004C                      __size_of_LCDstr 001B  
                            _ReadI2C 07AC                      __size_of___wmul 001F  
                            ___lwdiv 06C7                              ___lwmod 073E  
                         ??_WriteI2C 0070                              __ptext1 0384  
                            __ptext2 0027                              __ptext3 07DF  
                            __ptext4 0772                              __ptext5 073E  
                            __ptext6 06C7                              __ptext7 07F1  
                            __ptext8 0FF6                              __ptext9 0FE5  
                  __end_of_hexpowers 07CE                              _dpowers 07FD  
              _OSCILLATOR_Initialize 0FED                              _isdigit 07DF  
           ??_PIN_MANAGER_Initialize 0070                              main@buf 0038  
         __size_of_SYSTEM_Initialize 000A                              _sprintf 0027  
               end_of_initialization 0023                            _TRISCbits 0013  
                     __end_of_LCDcmd 0FDD                       __end_of_LCDstr 07AC  
                     LCDsend2x4@mode 0072                       __end_of___wmul 0791  
             ?_OSCILLATOR_Initialize 0070                  start_initialization 001E  
    __size_of_PIN_MANAGER_Initialize 003B                     WriteI2C@data_out 0071  
                           ??_LCDcmd 0078                             ??_LCDstr 007B  
                   ??_PMD_Initialize 0070                             ??___wmul 0074  
                  __size_of_WriteI2C 004B                             ?_LCDchar 0070  
                           ?_LCDinit 0070                             ?_LCDrecv 0070  
                           ?_LCDsend 0070                            ___latbits 0002  
                      __pcstackBANK0 0020                         _isdigit$1514 0070  
                           LCDchar@c 0078                             LCDsend@c 0073  
                        sprintf@flag 002F            __size_of_i2c1_driver_open 000C  
                        sprintf@prec 002C                             ?_ReadI2C 0070  
                   ___lwdiv@dividend 0072               _PIN_MANAGER_Initialize 0703  
                           ?___lwdiv 0070                             ?___lwmod 0078  
        _i2c1_driver_busCollisionISR 004E         ??_INTERRUPT_InterruptManager 0070  
                           ?_isdigit 0070                            _hexpowers 07C6  
                   ___lwdiv@quotient 0075                             ?_sprintf 0020  
                     __size_of_tsttc 010D                       ___wmul@product 0074  
                           _PIE3bits 0719  __size_of_INTERRUPT_InterruptManager 0018  
                           _PIR3bits 070F                             _SSP1CON1 0190  
                           _SSP1CON2 0191                             _SSP1STAT 018F  
                  ___wmul@multiplier 0070                     __size_of_LCDchar 0008  
                   __size_of_LCDinit 0071                     __size_of_LCDrecv 0146  
                   __size_of_LCDsend 0043                     __size_of_ReadI2C 001A  
            ??_OSCILLATOR_Initialize 0070                     __size_of___lwdiv 003C  
                   __size_of___lwmod 0034                             _WriteI2C 0639  
                         sprintf@idx 002A                           sprintf@val 002D  
                   __size_of_isdigit 0012                      ___lwdiv@divisor 0070  
                    ___lwdiv@counter 0077                             __ptext10 0703  
                           __ptext11 0FED                             __ptext20 0639  
                           __ptext12 0791                             __ptext13 0FDD  
                           __ptext14 023E                             __ptext15 07AC  
                           __ptext16 05C8                             __ptext17 0684  
                           __ptext18 0FD6                             __ptext19 0491  
                       _SSP1CON1bits 0190                         _SSP1CON2bits 0191  
                   __size_of_sprintf 0217                     _i2c1_driver_open 07F1  
                      __size_of_main 0084                           tsttc@value 0073  
                           int$flags 007E   __end_of_INTERRUPT_InterruptManager 001C  
         _INTERRUPT_InterruptManager 0004                         _SSP1STATbits 018F  
                         _INTCONbits 000B                             isdigit@c 0071  
                         _LCDsend2x4 0491                             intlevel1 0000  
                          sprintf@ap 002B                            sprintf@sp 0032  
                   ___lwmod@dividend 007A              ?_PIN_MANAGER_Initialize 0070  
                      __pstringtext1 07FD                        __pstringtext2 07C6  
                      __pstringtext3 0807                        __pstringtext4 1000  
                      __pstringtext5 1007                        __pstringtext6 0000  
                           sprintf@c 0033                             sprintf@f 0020  
                         _SSP1DATPPS 0EC6                           _SSP1CLKPPS 0EC5  
                    ___lwmod@divisor 0078                      ___lwmod@counter 007D  
     __end_of_PIN_MANAGER_Initialize 073E  
