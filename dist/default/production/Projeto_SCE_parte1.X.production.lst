

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Oct 31 16:23:37 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    18                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	intentry,global,class=CODE,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	psect	text45,local,class=CODE,merge=1,delta=2
    69                           	psect	text46,local,class=CODE,merge=1,delta=2
    70                           	psect	text47,local,class=CODE,merge=1,delta=2
    71                           	psect	text48,local,class=CODE,merge=1,delta=2
    72                           	psect	text49,local,class=CODE,merge=1,delta=2
    73                           	psect	text50,local,class=CODE,merge=1,delta=2
    74                           	psect	text51,local,class=CODE,merge=1,delta=2
    75                           	psect	text52,local,class=CODE,merge=1,delta=2
    76                           	psect	text53,local,class=CODE,merge=1,delta=2
    77                           	psect	text54,local,class=CODE,merge=1,delta=2
    78                           	psect	text55,local,class=CODE,merge=1,delta=2
    79                           	psect	text56,local,class=CODE,merge=1,delta=2
    80                           	psect	text57,local,class=CODE,merge=1,delta=2
    81                           	psect	text58,local,class=CODE,merge=1,delta=2
    82                           	psect	text59,local,class=CODE,merge=1,delta=2
    83                           	psect	text60,local,class=CODE,merge=1,delta=2
    84                           	psect	text61,local,class=CODE,merge=1,delta=2
    85                           	psect	text62,local,class=CODE,merge=1,delta=2
    86                           	psect	text63,local,class=CODE,merge=1,delta=2
    87                           	psect	text64,local,class=CODE,merge=1,delta=2
    88                           	psect	text65,local,class=CODE,merge=1,delta=2
    89                           	psect	text66,local,class=CODE,merge=1,delta=2
    90                           	psect	text67,local,class=CODE,merge=1,delta=2
    91                           	psect	text68,local,class=CODE,merge=1,delta=2
    92                           	psect	text69,local,class=CODE,merge=1,delta=2
    93                           	psect	text70,local,class=CODE,merge=1,delta=2
    94                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    95                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    96                           	dabs	1,0x7E,2
    97  0000                     
    98                           ; Version 2.30
    99                           ; Generated 15/09/2020 GMT
   100                           ; 
   101                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   102                           ; All rights reserved.
   103                           ; 
   104                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   105                           ; 
   106                           ; Redistribution and use in source and binary forms, with or without modification, are
   107                           ; permitted provided that the following conditions are met:
   108                           ; 
   109                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   110                           ;        conditions and the following disclaimer.
   111                           ; 
   112                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   113                           ;        of conditions and the following disclaimer in the documentation and/or other
   114                           ;        materials provided with the distribution. Publication is not required when
   115                           ;        this file is used in an embedded application.
   116                           ; 
   117                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   118                           ;        software without specific prior written permission.
   119                           ; 
   120                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   121                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   122                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   123                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   124                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   125                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   126                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   127                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   128                           ; 
   129                           ; 
   130                           ; Code-generator required, PIC16F18875 Definitions
   131                           ; 
   132                           ; SFR Addresses
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001C                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  008C                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0097                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009A                     	;# 
   183  009B                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  010C                     	;# 
   188  010D                     	;# 
   189  010E                     	;# 
   190  010E                     	;# 
   191  010F                     	;# 
   192  0110                     	;# 
   193  0110                     	;# 
   194  0111                     	;# 
   195  0112                     	;# 
   196  0112                     	;# 
   197  0113                     	;# 
   198  0114                     	;# 
   199  0114                     	;# 
   200  0115                     	;# 
   201  0116                     	;# 
   202  0116                     	;# 
   203  0117                     	;# 
   204  0119                     	;# 
   205  0119                     	;# 
   206  0119                     	;# 
   207  011A                     	;# 
   208  011A                     	;# 
   209  011A                     	;# 
   210  011B                     	;# 
   211  011B                     	;# 
   212  011B                     	;# 
   213  011B                     	;# 
   214  011B                     	;# 
   215  011C                     	;# 
   216  011C                     	;# 
   217  011C                     	;# 
   218  011D                     	;# 
   219  011D                     	;# 
   220  011D                     	;# 
   221  011E                     	;# 
   222  011E                     	;# 
   223  011E                     	;# 
   224  011F                     	;# 
   225  011F                     	;# 
   226  011F                     	;# 
   227  011F                     	;# 
   228  011F                     	;# 
   229  018C                     	;# 
   230  018D                     	;# 
   231  018E                     	;# 
   232  018F                     	;# 
   233  0190                     	;# 
   234  0191                     	;# 
   235  0192                     	;# 
   236  0196                     	;# 
   237  0197                     	;# 
   238  0198                     	;# 
   239  0199                     	;# 
   240  019A                     	;# 
   241  019B                     	;# 
   242  019C                     	;# 
   243  020C                     	;# 
   244  020C                     	;# 
   245  020D                     	;# 
   246  020E                     	;# 
   247  020F                     	;# 
   248  020F                     	;# 
   249  0210                     	;# 
   250  0210                     	;# 
   251  0211                     	;# 
   252  0211                     	;# 
   253  0212                     	;# 
   254  0212                     	;# 
   255  0213                     	;# 
   256  0214                     	;# 
   257  0215                     	;# 
   258  0215                     	;# 
   259  0216                     	;# 
   260  0216                     	;# 
   261  0217                     	;# 
   262  0217                     	;# 
   263  0218                     	;# 
   264  0218                     	;# 
   265  0219                     	;# 
   266  021A                     	;# 
   267  021B                     	;# 
   268  021B                     	;# 
   269  021C                     	;# 
   270  021C                     	;# 
   271  021D                     	;# 
   272  021D                     	;# 
   273  021E                     	;# 
   274  021F                     	;# 
   275  028C                     	;# 
   276  028C                     	;# 
   277  028D                     	;# 
   278  028D                     	;# 
   279  028E                     	;# 
   280  028F                     	;# 
   281  0290                     	;# 
   282  0290                     	;# 
   283  0291                     	;# 
   284  0292                     	;# 
   285  0292                     	;# 
   286  0293                     	;# 
   287  0293                     	;# 
   288  0294                     	;# 
   289  0295                     	;# 
   290  0296                     	;# 
   291  0296                     	;# 
   292  0297                     	;# 
   293  0298                     	;# 
   294  0298                     	;# 
   295  0299                     	;# 
   296  0299                     	;# 
   297  029A                     	;# 
   298  029B                     	;# 
   299  029C                     	;# 
   300  029C                     	;# 
   301  029D                     	;# 
   302  030C                     	;# 
   303  030C                     	;# 
   304  030D                     	;# 
   305  030E                     	;# 
   306  030F                     	;# 
   307  0310                     	;# 
   308  0310                     	;# 
   309  0311                     	;# 
   310  0312                     	;# 
   311  0313                     	;# 
   312  0314                     	;# 
   313  0314                     	;# 
   314  0315                     	;# 
   315  0316                     	;# 
   316  0317                     	;# 
   317  0318                     	;# 
   318  0318                     	;# 
   319  0319                     	;# 
   320  031A                     	;# 
   321  031B                     	;# 
   322  031C                     	;# 
   323  031C                     	;# 
   324  031D                     	;# 
   325  031E                     	;# 
   326  031F                     	;# 
   327  038C                     	;# 
   328  038C                     	;# 
   329  038D                     	;# 
   330  038E                     	;# 
   331  0390                     	;# 
   332  0390                     	;# 
   333  0391                     	;# 
   334  0392                     	;# 
   335  040C                     	;# 
   336  040D                     	;# 
   337  040E                     	;# 
   338  040F                     	;# 
   339  0410                     	;# 
   340  0411                     	;# 
   341  0416                     	;# 
   342  0416                     	;# 
   343  0417                     	;# 
   344  0418                     	;# 
   345  0418                     	;# 
   346  0419                     	;# 
   347  041A                     	;# 
   348  041A                     	;# 
   349  041B                     	;# 
   350  041C                     	;# 
   351  041C                     	;# 
   352  041D                     	;# 
   353  041E                     	;# 
   354  041F                     	;# 
   355  048C                     	;# 
   356  048C                     	;# 
   357  048D                     	;# 
   358  048E                     	;# 
   359  048F                     	;# 
   360  048F                     	;# 
   361  0490                     	;# 
   362  0491                     	;# 
   363  0492                     	;# 
   364  0492                     	;# 
   365  0493                     	;# 
   366  0494                     	;# 
   367  0495                     	;# 
   368  0495                     	;# 
   369  0496                     	;# 
   370  0497                     	;# 
   371  0498                     	;# 
   372  0499                     	;# 
   373  049A                     	;# 
   374  049B                     	;# 
   375  049C                     	;# 
   376  049D                     	;# 
   377  050C                     	;# 
   378  050C                     	;# 
   379  050D                     	;# 
   380  050E                     	;# 
   381  050F                     	;# 
   382  050F                     	;# 
   383  0510                     	;# 
   384  0511                     	;# 
   385  0512                     	;# 
   386  0512                     	;# 
   387  0513                     	;# 
   388  0514                     	;# 
   389  0515                     	;# 
   390  0515                     	;# 
   391  0516                     	;# 
   392  0517                     	;# 
   393  0518                     	;# 
   394  0519                     	;# 
   395  051A                     	;# 
   396  051B                     	;# 
   397  051C                     	;# 
   398  051D                     	;# 
   399  058C                     	;# 
   400  058C                     	;# 
   401  058D                     	;# 
   402  058E                     	;# 
   403  058F                     	;# 
   404  058F                     	;# 
   405  0590                     	;# 
   406  0591                     	;# 
   407  0592                     	;# 
   408  0593                     	;# 
   409  060C                     	;# 
   410  060D                     	;# 
   411  060E                     	;# 
   412  060F                     	;# 
   413  0610                     	;# 
   414  0611                     	;# 
   415  0612                     	;# 
   416  0613                     	;# 
   417  0614                     	;# 
   418  0616                     	;# 
   419  0617                     	;# 
   420  0618                     	;# 
   421  0619                     	;# 
   422  061A                     	;# 
   423  061B                     	;# 
   424  061C                     	;# 
   425  061D                     	;# 
   426  061E                     	;# 
   427  068C                     	;# 
   428  068D                     	;# 
   429  068E                     	;# 
   430  068F                     	;# 
   431  0690                     	;# 
   432  0691                     	;# 
   433  0692                     	;# 
   434  0693                     	;# 
   435  0694                     	;# 
   436  070C                     	;# 
   437  070D                     	;# 
   438  070E                     	;# 
   439  070F                     	;# 
   440  0710                     	;# 
   441  0711                     	;# 
   442  0712                     	;# 
   443  0713                     	;# 
   444  0714                     	;# 
   445  0716                     	;# 
   446  0717                     	;# 
   447  0718                     	;# 
   448  0719                     	;# 
   449  071A                     	;# 
   450  071B                     	;# 
   451  071C                     	;# 
   452  071D                     	;# 
   453  071E                     	;# 
   454  0796                     	;# 
   455  0797                     	;# 
   456  0798                     	;# 
   457  0799                     	;# 
   458  079A                     	;# 
   459  079B                     	;# 
   460  080C                     	;# 
   461  080D                     	;# 
   462  080E                     	;# 
   463  080F                     	;# 
   464  0810                     	;# 
   465  0811                     	;# 
   466  0812                     	;# 
   467  0813                     	;# 
   468  0814                     	;# 
   469  081A                     	;# 
   470  081B                     	;# 
   471  081C                     	;# 
   472  081D                     	;# 
   473  081E                     	;# 
   474  081F                     	;# 
   475  088C                     	;# 
   476  088D                     	;# 
   477  088E                     	;# 
   478  088F                     	;# 
   479  0890                     	;# 
   480  0891                     	;# 
   481  0892                     	;# 
   482  0893                     	;# 
   483  0895                     	;# 
   484  0896                     	;# 
   485  0897                     	;# 
   486  0898                     	;# 
   487  0899                     	;# 
   488  089A                     	;# 
   489  089B                     	;# 
   490  090C                     	;# 
   491  090E                     	;# 
   492  090F                     	;# 
   493  091F                     	;# 
   494  091F                     	;# 
   495  098F                     	;# 
   496  098F                     	;# 
   497  0990                     	;# 
   498  0991                     	;# 
   499  0992                     	;# 
   500  0993                     	;# 
   501  0994                     	;# 
   502  0995                     	;# 
   503  0996                     	;# 
   504  0997                     	;# 
   505  0E0F                     	;# 
   506  0E10                     	;# 
   507  0E11                     	;# 
   508  0E12                     	;# 
   509  0E13                     	;# 
   510  0E14                     	;# 
   511  0E15                     	;# 
   512  0E16                     	;# 
   513  0E17                     	;# 
   514  0E18                     	;# 
   515  0E19                     	;# 
   516  0E1A                     	;# 
   517  0E1B                     	;# 
   518  0E1C                     	;# 
   519  0E1D                     	;# 
   520  0E1E                     	;# 
   521  0E1F                     	;# 
   522  0E20                     	;# 
   523  0E21                     	;# 
   524  0E22                     	;# 
   525  0E23                     	;# 
   526  0E24                     	;# 
   527  0E25                     	;# 
   528  0E26                     	;# 
   529  0E27                     	;# 
   530  0E28                     	;# 
   531  0E29                     	;# 
   532  0E2A                     	;# 
   533  0E2B                     	;# 
   534  0E2C                     	;# 
   535  0E2D                     	;# 
   536  0E2E                     	;# 
   537  0E2F                     	;# 
   538  0E30                     	;# 
   539  0E31                     	;# 
   540  0E32                     	;# 
   541  0E33                     	;# 
   542  0E34                     	;# 
   543  0E35                     	;# 
   544  0E36                     	;# 
   545  0E37                     	;# 
   546  0E8F                     	;# 
   547  0E90                     	;# 
   548  0E91                     	;# 
   549  0E92                     	;# 
   550  0E93                     	;# 
   551  0E94                     	;# 
   552  0E95                     	;# 
   553  0E96                     	;# 
   554  0E97                     	;# 
   555  0E9C                     	;# 
   556  0E9D                     	;# 
   557  0E9E                     	;# 
   558  0EA1                     	;# 
   559  0EA2                     	;# 
   560  0EA3                     	;# 
   561  0EA4                     	;# 
   562  0EA5                     	;# 
   563  0EA9                     	;# 
   564  0EAA                     	;# 
   565  0EAB                     	;# 
   566  0EAC                     	;# 
   567  0EB1                     	;# 
   568  0EB2                     	;# 
   569  0EB3                     	;# 
   570  0EB8                     	;# 
   571  0EB9                     	;# 
   572  0EBA                     	;# 
   573  0EBB                     	;# 
   574  0EBC                     	;# 
   575  0EBD                     	;# 
   576  0EBE                     	;# 
   577  0EC3                     	;# 
   578  0EC5                     	;# 
   579  0EC6                     	;# 
   580  0EC7                     	;# 
   581  0EC8                     	;# 
   582  0EC9                     	;# 
   583  0ECA                     	;# 
   584  0ECB                     	;# 
   585  0ECC                     	;# 
   586  0F10                     	;# 
   587  0F11                     	;# 
   588  0F12                     	;# 
   589  0F13                     	;# 
   590  0F14                     	;# 
   591  0F15                     	;# 
   592  0F16                     	;# 
   593  0F17                     	;# 
   594  0F18                     	;# 
   595  0F19                     	;# 
   596  0F1A                     	;# 
   597  0F1B                     	;# 
   598  0F1C                     	;# 
   599  0F1D                     	;# 
   600  0F1E                     	;# 
   601  0F1F                     	;# 
   602  0F20                     	;# 
   603  0F21                     	;# 
   604  0F22                     	;# 
   605  0F23                     	;# 
   606  0F24                     	;# 
   607  0F25                     	;# 
   608  0F26                     	;# 
   609  0F27                     	;# 
   610  0F28                     	;# 
   611  0F29                     	;# 
   612  0F2A                     	;# 
   613  0F2B                     	;# 
   614  0F2C                     	;# 
   615  0F2D                     	;# 
   616  0F2E                     	;# 
   617  0F2F                     	;# 
   618  0F30                     	;# 
   619  0F31                     	;# 
   620  0F32                     	;# 
   621  0F38                     	;# 
   622  0F39                     	;# 
   623  0F3A                     	;# 
   624  0F3B                     	;# 
   625  0F3C                     	;# 
   626  0F3D                     	;# 
   627  0F3E                     	;# 
   628  0F3F                     	;# 
   629  0F40                     	;# 
   630  0F41                     	;# 
   631  0F43                     	;# 
   632  0F44                     	;# 
   633  0F45                     	;# 
   634  0F46                     	;# 
   635  0F47                     	;# 
   636  0F48                     	;# 
   637  0F49                     	;# 
   638  0F4A                     	;# 
   639  0F4B                     	;# 
   640  0F4C                     	;# 
   641  0F4E                     	;# 
   642  0F4F                     	;# 
   643  0F50                     	;# 
   644  0F51                     	;# 
   645  0F52                     	;# 
   646  0F53                     	;# 
   647  0F54                     	;# 
   648  0F55                     	;# 
   649  0F56                     	;# 
   650  0F57                     	;# 
   651  0F59                     	;# 
   652  0F5A                     	;# 
   653  0F5B                     	;# 
   654  0F5C                     	;# 
   655  0F5D                     	;# 
   656  0F61                     	;# 
   657  0F62                     	;# 
   658  0F64                     	;# 
   659  0F65                     	;# 
   660  0F66                     	;# 
   661  0F67                     	;# 
   662  0F68                     	;# 
   663  0F69                     	;# 
   664  0F6A                     	;# 
   665  0F6B                     	;# 
   666  0F6C                     	;# 
   667  0F6D                     	;# 
   668  0FE4                     	;# 
   669  0FE5                     	;# 
   670  0FE6                     	;# 
   671  0FE7                     	;# 
   672  0FE8                     	;# 
   673  0FE9                     	;# 
   674  0FEA                     	;# 
   675  0FEB                     	;# 
   676  0FED                     	;# 
   677  0FEE                     	;# 
   678  0FEF                     	;# 
   679  0000                     	;# 
   680  0001                     	;# 
   681  0002                     	;# 
   682  0003                     	;# 
   683  0004                     	;# 
   684  0005                     	;# 
   685  0006                     	;# 
   686  0007                     	;# 
   687  0008                     	;# 
   688  0009                     	;# 
   689  000A                     	;# 
   690  000B                     	;# 
   691  000C                     	;# 
   692  000D                     	;# 
   693  000E                     	;# 
   694  000F                     	;# 
   695  0010                     	;# 
   696  0011                     	;# 
   697  0012                     	;# 
   698  0013                     	;# 
   699  0014                     	;# 
   700  0015                     	;# 
   701  0016                     	;# 
   702  0017                     	;# 
   703  0018                     	;# 
   704  0019                     	;# 
   705  001A                     	;# 
   706  001C                     	;# 
   707  001C                     	;# 
   708  001D                     	;# 
   709  001D                     	;# 
   710  001E                     	;# 
   711  001F                     	;# 
   712  008C                     	;# 
   713  008C                     	;# 
   714  008D                     	;# 
   715  008E                     	;# 
   716  008E                     	;# 
   717  008F                     	;# 
   718  0090                     	;# 
   719  0090                     	;# 
   720  0091                     	;# 
   721  0093                     	;# 
   722  0094                     	;# 
   723  0095                     	;# 
   724  0096                     	;# 
   725  0097                     	;# 
   726  0098                     	;# 
   727  0099                     	;# 
   728  009A                     	;# 
   729  009B                     	;# 
   730  009C                     	;# 
   731  009D                     	;# 
   732  009E                     	;# 
   733  010C                     	;# 
   734  010D                     	;# 
   735  010E                     	;# 
   736  010E                     	;# 
   737  010F                     	;# 
   738  0110                     	;# 
   739  0110                     	;# 
   740  0111                     	;# 
   741  0112                     	;# 
   742  0112                     	;# 
   743  0113                     	;# 
   744  0114                     	;# 
   745  0114                     	;# 
   746  0115                     	;# 
   747  0116                     	;# 
   748  0116                     	;# 
   749  0117                     	;# 
   750  0119                     	;# 
   751  0119                     	;# 
   752  0119                     	;# 
   753  011A                     	;# 
   754  011A                     	;# 
   755  011A                     	;# 
   756  011B                     	;# 
   757  011B                     	;# 
   758  011B                     	;# 
   759  011B                     	;# 
   760  011B                     	;# 
   761  011C                     	;# 
   762  011C                     	;# 
   763  011C                     	;# 
   764  011D                     	;# 
   765  011D                     	;# 
   766  011D                     	;# 
   767  011E                     	;# 
   768  011E                     	;# 
   769  011E                     	;# 
   770  011F                     	;# 
   771  011F                     	;# 
   772  011F                     	;# 
   773  011F                     	;# 
   774  011F                     	;# 
   775  018C                     	;# 
   776  018D                     	;# 
   777  018E                     	;# 
   778  018F                     	;# 
   779  0190                     	;# 
   780  0191                     	;# 
   781  0192                     	;# 
   782  0196                     	;# 
   783  0197                     	;# 
   784  0198                     	;# 
   785  0199                     	;# 
   786  019A                     	;# 
   787  019B                     	;# 
   788  019C                     	;# 
   789  020C                     	;# 
   790  020C                     	;# 
   791  020D                     	;# 
   792  020E                     	;# 
   793  020F                     	;# 
   794  020F                     	;# 
   795  0210                     	;# 
   796  0210                     	;# 
   797  0211                     	;# 
   798  0211                     	;# 
   799  0212                     	;# 
   800  0212                     	;# 
   801  0213                     	;# 
   802  0214                     	;# 
   803  0215                     	;# 
   804  0215                     	;# 
   805  0216                     	;# 
   806  0216                     	;# 
   807  0217                     	;# 
   808  0217                     	;# 
   809  0218                     	;# 
   810  0218                     	;# 
   811  0219                     	;# 
   812  021A                     	;# 
   813  021B                     	;# 
   814  021B                     	;# 
   815  021C                     	;# 
   816  021C                     	;# 
   817  021D                     	;# 
   818  021D                     	;# 
   819  021E                     	;# 
   820  021F                     	;# 
   821  028C                     	;# 
   822  028C                     	;# 
   823  028D                     	;# 
   824  028D                     	;# 
   825  028E                     	;# 
   826  028F                     	;# 
   827  0290                     	;# 
   828  0290                     	;# 
   829  0291                     	;# 
   830  0292                     	;# 
   831  0292                     	;# 
   832  0293                     	;# 
   833  0293                     	;# 
   834  0294                     	;# 
   835  0295                     	;# 
   836  0296                     	;# 
   837  0296                     	;# 
   838  0297                     	;# 
   839  0298                     	;# 
   840  0298                     	;# 
   841  0299                     	;# 
   842  0299                     	;# 
   843  029A                     	;# 
   844  029B                     	;# 
   845  029C                     	;# 
   846  029C                     	;# 
   847  029D                     	;# 
   848  030C                     	;# 
   849  030C                     	;# 
   850  030D                     	;# 
   851  030E                     	;# 
   852  030F                     	;# 
   853  0310                     	;# 
   854  0310                     	;# 
   855  0311                     	;# 
   856  0312                     	;# 
   857  0313                     	;# 
   858  0314                     	;# 
   859  0314                     	;# 
   860  0315                     	;# 
   861  0316                     	;# 
   862  0317                     	;# 
   863  0318                     	;# 
   864  0318                     	;# 
   865  0319                     	;# 
   866  031A                     	;# 
   867  031B                     	;# 
   868  031C                     	;# 
   869  031C                     	;# 
   870  031D                     	;# 
   871  031E                     	;# 
   872  031F                     	;# 
   873  038C                     	;# 
   874  038C                     	;# 
   875  038D                     	;# 
   876  038E                     	;# 
   877  0390                     	;# 
   878  0390                     	;# 
   879  0391                     	;# 
   880  0392                     	;# 
   881  040C                     	;# 
   882  040D                     	;# 
   883  040E                     	;# 
   884  040F                     	;# 
   885  0410                     	;# 
   886  0411                     	;# 
   887  0416                     	;# 
   888  0416                     	;# 
   889  0417                     	;# 
   890  0418                     	;# 
   891  0418                     	;# 
   892  0419                     	;# 
   893  041A                     	;# 
   894  041A                     	;# 
   895  041B                     	;# 
   896  041C                     	;# 
   897  041C                     	;# 
   898  041D                     	;# 
   899  041E                     	;# 
   900  041F                     	;# 
   901  048C                     	;# 
   902  048C                     	;# 
   903  048D                     	;# 
   904  048E                     	;# 
   905  048F                     	;# 
   906  048F                     	;# 
   907  0490                     	;# 
   908  0491                     	;# 
   909  0492                     	;# 
   910  0492                     	;# 
   911  0493                     	;# 
   912  0494                     	;# 
   913  0495                     	;# 
   914  0495                     	;# 
   915  0496                     	;# 
   916  0497                     	;# 
   917  0498                     	;# 
   918  0499                     	;# 
   919  049A                     	;# 
   920  049B                     	;# 
   921  049C                     	;# 
   922  049D                     	;# 
   923  050C                     	;# 
   924  050C                     	;# 
   925  050D                     	;# 
   926  050E                     	;# 
   927  050F                     	;# 
   928  050F                     	;# 
   929  0510                     	;# 
   930  0511                     	;# 
   931  0512                     	;# 
   932  0512                     	;# 
   933  0513                     	;# 
   934  0514                     	;# 
   935  0515                     	;# 
   936  0515                     	;# 
   937  0516                     	;# 
   938  0517                     	;# 
   939  0518                     	;# 
   940  0519                     	;# 
   941  051A                     	;# 
   942  051B                     	;# 
   943  051C                     	;# 
   944  051D                     	;# 
   945  058C                     	;# 
   946  058C                     	;# 
   947  058D                     	;# 
   948  058E                     	;# 
   949  058F                     	;# 
   950  058F                     	;# 
   951  0590                     	;# 
   952  0591                     	;# 
   953  0592                     	;# 
   954  0593                     	;# 
   955  060C                     	;# 
   956  060D                     	;# 
   957  060E                     	;# 
   958  060F                     	;# 
   959  0610                     	;# 
   960  0611                     	;# 
   961  0612                     	;# 
   962  0613                     	;# 
   963  0614                     	;# 
   964  0616                     	;# 
   965  0617                     	;# 
   966  0618                     	;# 
   967  0619                     	;# 
   968  061A                     	;# 
   969  061B                     	;# 
   970  061C                     	;# 
   971  061D                     	;# 
   972  061E                     	;# 
   973  068C                     	;# 
   974  068D                     	;# 
   975  068E                     	;# 
   976  068F                     	;# 
   977  0690                     	;# 
   978  0691                     	;# 
   979  0692                     	;# 
   980  0693                     	;# 
   981  0694                     	;# 
   982  070C                     	;# 
   983  070D                     	;# 
   984  070E                     	;# 
   985  070F                     	;# 
   986  0710                     	;# 
   987  0711                     	;# 
   988  0712                     	;# 
   989  0713                     	;# 
   990  0714                     	;# 
   991  0716                     	;# 
   992  0717                     	;# 
   993  0718                     	;# 
   994  0719                     	;# 
   995  071A                     	;# 
   996  071B                     	;# 
   997  071C                     	;# 
   998  071D                     	;# 
   999  071E                     	;# 
  1000  0796                     	;# 
  1001  0797                     	;# 
  1002  0798                     	;# 
  1003  0799                     	;# 
  1004  079A                     	;# 
  1005  079B                     	;# 
  1006  080C                     	;# 
  1007  080D                     	;# 
  1008  080E                     	;# 
  1009  080F                     	;# 
  1010  0810                     	;# 
  1011  0811                     	;# 
  1012  0812                     	;# 
  1013  0813                     	;# 
  1014  0814                     	;# 
  1015  081A                     	;# 
  1016  081B                     	;# 
  1017  081C                     	;# 
  1018  081D                     	;# 
  1019  081E                     	;# 
  1020  081F                     	;# 
  1021  088C                     	;# 
  1022  088D                     	;# 
  1023  088E                     	;# 
  1024  088F                     	;# 
  1025  0890                     	;# 
  1026  0891                     	;# 
  1027  0892                     	;# 
  1028  0893                     	;# 
  1029  0895                     	;# 
  1030  0896                     	;# 
  1031  0897                     	;# 
  1032  0898                     	;# 
  1033  0899                     	;# 
  1034  089A                     	;# 
  1035  089B                     	;# 
  1036  090C                     	;# 
  1037  090E                     	;# 
  1038  090F                     	;# 
  1039  091F                     	;# 
  1040  091F                     	;# 
  1041  098F                     	;# 
  1042  098F                     	;# 
  1043  0990                     	;# 
  1044  0991                     	;# 
  1045  0992                     	;# 
  1046  0993                     	;# 
  1047  0994                     	;# 
  1048  0995                     	;# 
  1049  0996                     	;# 
  1050  0997                     	;# 
  1051  0E0F                     	;# 
  1052  0E10                     	;# 
  1053  0E11                     	;# 
  1054  0E12                     	;# 
  1055  0E13                     	;# 
  1056  0E14                     	;# 
  1057  0E15                     	;# 
  1058  0E16                     	;# 
  1059  0E17                     	;# 
  1060  0E18                     	;# 
  1061  0E19                     	;# 
  1062  0E1A                     	;# 
  1063  0E1B                     	;# 
  1064  0E1C                     	;# 
  1065  0E1D                     	;# 
  1066  0E1E                     	;# 
  1067  0E1F                     	;# 
  1068  0E20                     	;# 
  1069  0E21                     	;# 
  1070  0E22                     	;# 
  1071  0E23                     	;# 
  1072  0E24                     	;# 
  1073  0E25                     	;# 
  1074  0E26                     	;# 
  1075  0E27                     	;# 
  1076  0E28                     	;# 
  1077  0E29                     	;# 
  1078  0E2A                     	;# 
  1079  0E2B                     	;# 
  1080  0E2C                     	;# 
  1081  0E2D                     	;# 
  1082  0E2E                     	;# 
  1083  0E2F                     	;# 
  1084  0E30                     	;# 
  1085  0E31                     	;# 
  1086  0E32                     	;# 
  1087  0E33                     	;# 
  1088  0E34                     	;# 
  1089  0E35                     	;# 
  1090  0E36                     	;# 
  1091  0E37                     	;# 
  1092  0E8F                     	;# 
  1093  0E90                     	;# 
  1094  0E91                     	;# 
  1095  0E92                     	;# 
  1096  0E93                     	;# 
  1097  0E94                     	;# 
  1098  0E95                     	;# 
  1099  0E96                     	;# 
  1100  0E97                     	;# 
  1101  0E9C                     	;# 
  1102  0E9D                     	;# 
  1103  0E9E                     	;# 
  1104  0EA1                     	;# 
  1105  0EA2                     	;# 
  1106  0EA3                     	;# 
  1107  0EA4                     	;# 
  1108  0EA5                     	;# 
  1109  0EA9                     	;# 
  1110  0EAA                     	;# 
  1111  0EAB                     	;# 
  1112  0EAC                     	;# 
  1113  0EB1                     	;# 
  1114  0EB2                     	;# 
  1115  0EB3                     	;# 
  1116  0EB8                     	;# 
  1117  0EB9                     	;# 
  1118  0EBA                     	;# 
  1119  0EBB                     	;# 
  1120  0EBC                     	;# 
  1121  0EBD                     	;# 
  1122  0EBE                     	;# 
  1123  0EC3                     	;# 
  1124  0EC5                     	;# 
  1125  0EC6                     	;# 
  1126  0EC7                     	;# 
  1127  0EC8                     	;# 
  1128  0EC9                     	;# 
  1129  0ECA                     	;# 
  1130  0ECB                     	;# 
  1131  0ECC                     	;# 
  1132  0F10                     	;# 
  1133  0F11                     	;# 
  1134  0F12                     	;# 
  1135  0F13                     	;# 
  1136  0F14                     	;# 
  1137  0F15                     	;# 
  1138  0F16                     	;# 
  1139  0F17                     	;# 
  1140  0F18                     	;# 
  1141  0F19                     	;# 
  1142  0F1A                     	;# 
  1143  0F1B                     	;# 
  1144  0F1C                     	;# 
  1145  0F1D                     	;# 
  1146  0F1E                     	;# 
  1147  0F1F                     	;# 
  1148  0F20                     	;# 
  1149  0F21                     	;# 
  1150  0F22                     	;# 
  1151  0F23                     	;# 
  1152  0F24                     	;# 
  1153  0F25                     	;# 
  1154  0F26                     	;# 
  1155  0F27                     	;# 
  1156  0F28                     	;# 
  1157  0F29                     	;# 
  1158  0F2A                     	;# 
  1159  0F2B                     	;# 
  1160  0F2C                     	;# 
  1161  0F2D                     	;# 
  1162  0F2E                     	;# 
  1163  0F2F                     	;# 
  1164  0F30                     	;# 
  1165  0F31                     	;# 
  1166  0F32                     	;# 
  1167  0F38                     	;# 
  1168  0F39                     	;# 
  1169  0F3A                     	;# 
  1170  0F3B                     	;# 
  1171  0F3C                     	;# 
  1172  0F3D                     	;# 
  1173  0F3E                     	;# 
  1174  0F3F                     	;# 
  1175  0F40                     	;# 
  1176  0F41                     	;# 
  1177  0F43                     	;# 
  1178  0F44                     	;# 
  1179  0F45                     	;# 
  1180  0F46                     	;# 
  1181  0F47                     	;# 
  1182  0F48                     	;# 
  1183  0F49                     	;# 
  1184  0F4A                     	;# 
  1185  0F4B                     	;# 
  1186  0F4C                     	;# 
  1187  0F4E                     	;# 
  1188  0F4F                     	;# 
  1189  0F50                     	;# 
  1190  0F51                     	;# 
  1191  0F52                     	;# 
  1192  0F53                     	;# 
  1193  0F54                     	;# 
  1194  0F55                     	;# 
  1195  0F56                     	;# 
  1196  0F57                     	;# 
  1197  0F59                     	;# 
  1198  0F5A                     	;# 
  1199  0F5B                     	;# 
  1200  0F5C                     	;# 
  1201  0F5D                     	;# 
  1202  0F61                     	;# 
  1203  0F62                     	;# 
  1204  0F64                     	;# 
  1205  0F65                     	;# 
  1206  0F66                     	;# 
  1207  0F67                     	;# 
  1208  0F68                     	;# 
  1209  0F69                     	;# 
  1210  0F6A                     	;# 
  1211  0F6B                     	;# 
  1212  0F6C                     	;# 
  1213  0F6D                     	;# 
  1214  0FE4                     	;# 
  1215  0FE5                     	;# 
  1216  0FE6                     	;# 
  1217  0FE7                     	;# 
  1218  0FE8                     	;# 
  1219  0FE9                     	;# 
  1220  0FEA                     	;# 
  1221  0FEB                     	;# 
  1222  0FED                     	;# 
  1223  0FEE                     	;# 
  1224  0FEF                     	;# 
  1225  0000                     	;# 
  1226  0001                     	;# 
  1227  0002                     	;# 
  1228  0003                     	;# 
  1229  0004                     	;# 
  1230  0005                     	;# 
  1231  0006                     	;# 
  1232  0007                     	;# 
  1233  0008                     	;# 
  1234  0009                     	;# 
  1235  000A                     	;# 
  1236  000B                     	;# 
  1237  000C                     	;# 
  1238  000D                     	;# 
  1239  000E                     	;# 
  1240  000F                     	;# 
  1241  0010                     	;# 
  1242  0011                     	;# 
  1243  0012                     	;# 
  1244  0013                     	;# 
  1245  0014                     	;# 
  1246  0015                     	;# 
  1247  0016                     	;# 
  1248  0017                     	;# 
  1249  0018                     	;# 
  1250  0019                     	;# 
  1251  001A                     	;# 
  1252  001C                     	;# 
  1253  001C                     	;# 
  1254  001D                     	;# 
  1255  001D                     	;# 
  1256  001E                     	;# 
  1257  001F                     	;# 
  1258  008C                     	;# 
  1259  008C                     	;# 
  1260  008D                     	;# 
  1261  008E                     	;# 
  1262  008E                     	;# 
  1263  008F                     	;# 
  1264  0090                     	;# 
  1265  0090                     	;# 
  1266  0091                     	;# 
  1267  0093                     	;# 
  1268  0094                     	;# 
  1269  0095                     	;# 
  1270  0096                     	;# 
  1271  0097                     	;# 
  1272  0098                     	;# 
  1273  0099                     	;# 
  1274  009A                     	;# 
  1275  009B                     	;# 
  1276  009C                     	;# 
  1277  009D                     	;# 
  1278  009E                     	;# 
  1279  010C                     	;# 
  1280  010D                     	;# 
  1281  010E                     	;# 
  1282  010E                     	;# 
  1283  010F                     	;# 
  1284  0110                     	;# 
  1285  0110                     	;# 
  1286  0111                     	;# 
  1287  0112                     	;# 
  1288  0112                     	;# 
  1289  0113                     	;# 
  1290  0114                     	;# 
  1291  0114                     	;# 
  1292  0115                     	;# 
  1293  0116                     	;# 
  1294  0116                     	;# 
  1295  0117                     	;# 
  1296  0119                     	;# 
  1297  0119                     	;# 
  1298  0119                     	;# 
  1299  011A                     	;# 
  1300  011A                     	;# 
  1301  011A                     	;# 
  1302  011B                     	;# 
  1303  011B                     	;# 
  1304  011B                     	;# 
  1305  011B                     	;# 
  1306  011B                     	;# 
  1307  011C                     	;# 
  1308  011C                     	;# 
  1309  011C                     	;# 
  1310  011D                     	;# 
  1311  011D                     	;# 
  1312  011D                     	;# 
  1313  011E                     	;# 
  1314  011E                     	;# 
  1315  011E                     	;# 
  1316  011F                     	;# 
  1317  011F                     	;# 
  1318  011F                     	;# 
  1319  011F                     	;# 
  1320  011F                     	;# 
  1321  018C                     	;# 
  1322  018D                     	;# 
  1323  018E                     	;# 
  1324  018F                     	;# 
  1325  0190                     	;# 
  1326  0191                     	;# 
  1327  0192                     	;# 
  1328  0196                     	;# 
  1329  0197                     	;# 
  1330  0198                     	;# 
  1331  0199                     	;# 
  1332  019A                     	;# 
  1333  019B                     	;# 
  1334  019C                     	;# 
  1335  020C                     	;# 
  1336  020C                     	;# 
  1337  020D                     	;# 
  1338  020E                     	;# 
  1339  020F                     	;# 
  1340  020F                     	;# 
  1341  0210                     	;# 
  1342  0210                     	;# 
  1343  0211                     	;# 
  1344  0211                     	;# 
  1345  0212                     	;# 
  1346  0212                     	;# 
  1347  0213                     	;# 
  1348  0214                     	;# 
  1349  0215                     	;# 
  1350  0215                     	;# 
  1351  0216                     	;# 
  1352  0216                     	;# 
  1353  0217                     	;# 
  1354  0217                     	;# 
  1355  0218                     	;# 
  1356  0218                     	;# 
  1357  0219                     	;# 
  1358  021A                     	;# 
  1359  021B                     	;# 
  1360  021B                     	;# 
  1361  021C                     	;# 
  1362  021C                     	;# 
  1363  021D                     	;# 
  1364  021D                     	;# 
  1365  021E                     	;# 
  1366  021F                     	;# 
  1367  028C                     	;# 
  1368  028C                     	;# 
  1369  028D                     	;# 
  1370  028D                     	;# 
  1371  028E                     	;# 
  1372  028F                     	;# 
  1373  0290                     	;# 
  1374  0290                     	;# 
  1375  0291                     	;# 
  1376  0292                     	;# 
  1377  0292                     	;# 
  1378  0293                     	;# 
  1379  0293                     	;# 
  1380  0294                     	;# 
  1381  0295                     	;# 
  1382  0296                     	;# 
  1383  0296                     	;# 
  1384  0297                     	;# 
  1385  0298                     	;# 
  1386  0298                     	;# 
  1387  0299                     	;# 
  1388  0299                     	;# 
  1389  029A                     	;# 
  1390  029B                     	;# 
  1391  029C                     	;# 
  1392  029C                     	;# 
  1393  029D                     	;# 
  1394  030C                     	;# 
  1395  030C                     	;# 
  1396  030D                     	;# 
  1397  030E                     	;# 
  1398  030F                     	;# 
  1399  0310                     	;# 
  1400  0310                     	;# 
  1401  0311                     	;# 
  1402  0312                     	;# 
  1403  0313                     	;# 
  1404  0314                     	;# 
  1405  0314                     	;# 
  1406  0315                     	;# 
  1407  0316                     	;# 
  1408  0317                     	;# 
  1409  0318                     	;# 
  1410  0318                     	;# 
  1411  0319                     	;# 
  1412  031A                     	;# 
  1413  031B                     	;# 
  1414  031C                     	;# 
  1415  031C                     	;# 
  1416  031D                     	;# 
  1417  031E                     	;# 
  1418  031F                     	;# 
  1419  038C                     	;# 
  1420  038C                     	;# 
  1421  038D                     	;# 
  1422  038E                     	;# 
  1423  0390                     	;# 
  1424  0390                     	;# 
  1425  0391                     	;# 
  1426  0392                     	;# 
  1427  040C                     	;# 
  1428  040D                     	;# 
  1429  040E                     	;# 
  1430  040F                     	;# 
  1431  0410                     	;# 
  1432  0411                     	;# 
  1433  0416                     	;# 
  1434  0416                     	;# 
  1435  0417                     	;# 
  1436  0418                     	;# 
  1437  0418                     	;# 
  1438  0419                     	;# 
  1439  041A                     	;# 
  1440  041A                     	;# 
  1441  041B                     	;# 
  1442  041C                     	;# 
  1443  041C                     	;# 
  1444  041D                     	;# 
  1445  041E                     	;# 
  1446  041F                     	;# 
  1447  048C                     	;# 
  1448  048C                     	;# 
  1449  048D                     	;# 
  1450  048E                     	;# 
  1451  048F                     	;# 
  1452  048F                     	;# 
  1453  0490                     	;# 
  1454  0491                     	;# 
  1455  0492                     	;# 
  1456  0492                     	;# 
  1457  0493                     	;# 
  1458  0494                     	;# 
  1459  0495                     	;# 
  1460  0495                     	;# 
  1461  0496                     	;# 
  1462  0497                     	;# 
  1463  0498                     	;# 
  1464  0499                     	;# 
  1465  049A                     	;# 
  1466  049B                     	;# 
  1467  049C                     	;# 
  1468  049D                     	;# 
  1469  050C                     	;# 
  1470  050C                     	;# 
  1471  050D                     	;# 
  1472  050E                     	;# 
  1473  050F                     	;# 
  1474  050F                     	;# 
  1475  0510                     	;# 
  1476  0511                     	;# 
  1477  0512                     	;# 
  1478  0512                     	;# 
  1479  0513                     	;# 
  1480  0514                     	;# 
  1481  0515                     	;# 
  1482  0515                     	;# 
  1483  0516                     	;# 
  1484  0517                     	;# 
  1485  0518                     	;# 
  1486  0519                     	;# 
  1487  051A                     	;# 
  1488  051B                     	;# 
  1489  051C                     	;# 
  1490  051D                     	;# 
  1491  058C                     	;# 
  1492  058C                     	;# 
  1493  058D                     	;# 
  1494  058E                     	;# 
  1495  058F                     	;# 
  1496  058F                     	;# 
  1497  0590                     	;# 
  1498  0591                     	;# 
  1499  0592                     	;# 
  1500  0593                     	;# 
  1501  060C                     	;# 
  1502  060D                     	;# 
  1503  060E                     	;# 
  1504  060F                     	;# 
  1505  0610                     	;# 
  1506  0611                     	;# 
  1507  0612                     	;# 
  1508  0613                     	;# 
  1509  0614                     	;# 
  1510  0616                     	;# 
  1511  0617                     	;# 
  1512  0618                     	;# 
  1513  0619                     	;# 
  1514  061A                     	;# 
  1515  061B                     	;# 
  1516  061C                     	;# 
  1517  061D                     	;# 
  1518  061E                     	;# 
  1519  068C                     	;# 
  1520  068D                     	;# 
  1521  068E                     	;# 
  1522  068F                     	;# 
  1523  0690                     	;# 
  1524  0691                     	;# 
  1525  0692                     	;# 
  1526  0693                     	;# 
  1527  0694                     	;# 
  1528  070C                     	;# 
  1529  070D                     	;# 
  1530  070E                     	;# 
  1531  070F                     	;# 
  1532  0710                     	;# 
  1533  0711                     	;# 
  1534  0712                     	;# 
  1535  0713                     	;# 
  1536  0714                     	;# 
  1537  0716                     	;# 
  1538  0717                     	;# 
  1539  0718                     	;# 
  1540  0719                     	;# 
  1541  071A                     	;# 
  1542  071B                     	;# 
  1543  071C                     	;# 
  1544  071D                     	;# 
  1545  071E                     	;# 
  1546  0796                     	;# 
  1547  0797                     	;# 
  1548  0798                     	;# 
  1549  0799                     	;# 
  1550  079A                     	;# 
  1551  079B                     	;# 
  1552  080C                     	;# 
  1553  080D                     	;# 
  1554  080E                     	;# 
  1555  080F                     	;# 
  1556  0810                     	;# 
  1557  0811                     	;# 
  1558  0812                     	;# 
  1559  0813                     	;# 
  1560  0814                     	;# 
  1561  081A                     	;# 
  1562  081B                     	;# 
  1563  081C                     	;# 
  1564  081D                     	;# 
  1565  081E                     	;# 
  1566  081F                     	;# 
  1567  088C                     	;# 
  1568  088D                     	;# 
  1569  088E                     	;# 
  1570  088F                     	;# 
  1571  0890                     	;# 
  1572  0891                     	;# 
  1573  0892                     	;# 
  1574  0893                     	;# 
  1575  0895                     	;# 
  1576  0896                     	;# 
  1577  0897                     	;# 
  1578  0898                     	;# 
  1579  0899                     	;# 
  1580  089A                     	;# 
  1581  089B                     	;# 
  1582  090C                     	;# 
  1583  090E                     	;# 
  1584  090F                     	;# 
  1585  091F                     	;# 
  1586  091F                     	;# 
  1587  098F                     	;# 
  1588  098F                     	;# 
  1589  0990                     	;# 
  1590  0991                     	;# 
  1591  0992                     	;# 
  1592  0993                     	;# 
  1593  0994                     	;# 
  1594  0995                     	;# 
  1595  0996                     	;# 
  1596  0997                     	;# 
  1597  0E0F                     	;# 
  1598  0E10                     	;# 
  1599  0E11                     	;# 
  1600  0E12                     	;# 
  1601  0E13                     	;# 
  1602  0E14                     	;# 
  1603  0E15                     	;# 
  1604  0E16                     	;# 
  1605  0E17                     	;# 
  1606  0E18                     	;# 
  1607  0E19                     	;# 
  1608  0E1A                     	;# 
  1609  0E1B                     	;# 
  1610  0E1C                     	;# 
  1611  0E1D                     	;# 
  1612  0E1E                     	;# 
  1613  0E1F                     	;# 
  1614  0E20                     	;# 
  1615  0E21                     	;# 
  1616  0E22                     	;# 
  1617  0E23                     	;# 
  1618  0E24                     	;# 
  1619  0E25                     	;# 
  1620  0E26                     	;# 
  1621  0E27                     	;# 
  1622  0E28                     	;# 
  1623  0E29                     	;# 
  1624  0E2A                     	;# 
  1625  0E2B                     	;# 
  1626  0E2C                     	;# 
  1627  0E2D                     	;# 
  1628  0E2E                     	;# 
  1629  0E2F                     	;# 
  1630  0E30                     	;# 
  1631  0E31                     	;# 
  1632  0E32                     	;# 
  1633  0E33                     	;# 
  1634  0E34                     	;# 
  1635  0E35                     	;# 
  1636  0E36                     	;# 
  1637  0E37                     	;# 
  1638  0E8F                     	;# 
  1639  0E90                     	;# 
  1640  0E91                     	;# 
  1641  0E92                     	;# 
  1642  0E93                     	;# 
  1643  0E94                     	;# 
  1644  0E95                     	;# 
  1645  0E96                     	;# 
  1646  0E97                     	;# 
  1647  0E9C                     	;# 
  1648  0E9D                     	;# 
  1649  0E9E                     	;# 
  1650  0EA1                     	;# 
  1651  0EA2                     	;# 
  1652  0EA3                     	;# 
  1653  0EA4                     	;# 
  1654  0EA5                     	;# 
  1655  0EA9                     	;# 
  1656  0EAA                     	;# 
  1657  0EAB                     	;# 
  1658  0EAC                     	;# 
  1659  0EB1                     	;# 
  1660  0EB2                     	;# 
  1661  0EB3                     	;# 
  1662  0EB8                     	;# 
  1663  0EB9                     	;# 
  1664  0EBA                     	;# 
  1665  0EBB                     	;# 
  1666  0EBC                     	;# 
  1667  0EBD                     	;# 
  1668  0EBE                     	;# 
  1669  0EC3                     	;# 
  1670  0EC5                     	;# 
  1671  0EC6                     	;# 
  1672  0EC7                     	;# 
  1673  0EC8                     	;# 
  1674  0EC9                     	;# 
  1675  0ECA                     	;# 
  1676  0ECB                     	;# 
  1677  0ECC                     	;# 
  1678  0F10                     	;# 
  1679  0F11                     	;# 
  1680  0F12                     	;# 
  1681  0F13                     	;# 
  1682  0F14                     	;# 
  1683  0F15                     	;# 
  1684  0F16                     	;# 
  1685  0F17                     	;# 
  1686  0F18                     	;# 
  1687  0F19                     	;# 
  1688  0F1A                     	;# 
  1689  0F1B                     	;# 
  1690  0F1C                     	;# 
  1691  0F1D                     	;# 
  1692  0F1E                     	;# 
  1693  0F1F                     	;# 
  1694  0F20                     	;# 
  1695  0F21                     	;# 
  1696  0F22                     	;# 
  1697  0F23                     	;# 
  1698  0F24                     	;# 
  1699  0F25                     	;# 
  1700  0F26                     	;# 
  1701  0F27                     	;# 
  1702  0F28                     	;# 
  1703  0F29                     	;# 
  1704  0F2A                     	;# 
  1705  0F2B                     	;# 
  1706  0F2C                     	;# 
  1707  0F2D                     	;# 
  1708  0F2E                     	;# 
  1709  0F2F                     	;# 
  1710  0F30                     	;# 
  1711  0F31                     	;# 
  1712  0F32                     	;# 
  1713  0F38                     	;# 
  1714  0F39                     	;# 
  1715  0F3A                     	;# 
  1716  0F3B                     	;# 
  1717  0F3C                     	;# 
  1718  0F3D                     	;# 
  1719  0F3E                     	;# 
  1720  0F3F                     	;# 
  1721  0F40                     	;# 
  1722  0F41                     	;# 
  1723  0F43                     	;# 
  1724  0F44                     	;# 
  1725  0F45                     	;# 
  1726  0F46                     	;# 
  1727  0F47                     	;# 
  1728  0F48                     	;# 
  1729  0F49                     	;# 
  1730  0F4A                     	;# 
  1731  0F4B                     	;# 
  1732  0F4C                     	;# 
  1733  0F4E                     	;# 
  1734  0F4F                     	;# 
  1735  0F50                     	;# 
  1736  0F51                     	;# 
  1737  0F52                     	;# 
  1738  0F53                     	;# 
  1739  0F54                     	;# 
  1740  0F55                     	;# 
  1741  0F56                     	;# 
  1742  0F57                     	;# 
  1743  0F59                     	;# 
  1744  0F5A                     	;# 
  1745  0F5B                     	;# 
  1746  0F5C                     	;# 
  1747  0F5D                     	;# 
  1748  0F61                     	;# 
  1749  0F62                     	;# 
  1750  0F64                     	;# 
  1751  0F65                     	;# 
  1752  0F66                     	;# 
  1753  0F67                     	;# 
  1754  0F68                     	;# 
  1755  0F69                     	;# 
  1756  0F6A                     	;# 
  1757  0F6B                     	;# 
  1758  0F6C                     	;# 
  1759  0F6D                     	;# 
  1760  0FE4                     	;# 
  1761  0FE5                     	;# 
  1762  0FE6                     	;# 
  1763  0FE7                     	;# 
  1764  0FE8                     	;# 
  1765  0FE9                     	;# 
  1766  0FEA                     	;# 
  1767  0FEB                     	;# 
  1768  0FED                     	;# 
  1769  0FEE                     	;# 
  1770  0FEF                     	;# 
  1771  0000                     	;# 
  1772  0001                     	;# 
  1773  0002                     	;# 
  1774  0003                     	;# 
  1775  0004                     	;# 
  1776  0005                     	;# 
  1777  0006                     	;# 
  1778  0007                     	;# 
  1779  0008                     	;# 
  1780  0009                     	;# 
  1781  000A                     	;# 
  1782  000B                     	;# 
  1783  000C                     	;# 
  1784  000D                     	;# 
  1785  000E                     	;# 
  1786  000F                     	;# 
  1787  0010                     	;# 
  1788  0011                     	;# 
  1789  0012                     	;# 
  1790  0013                     	;# 
  1791  0014                     	;# 
  1792  0015                     	;# 
  1793  0016                     	;# 
  1794  0017                     	;# 
  1795  0018                     	;# 
  1796  0019                     	;# 
  1797  001A                     	;# 
  1798  001C                     	;# 
  1799  001C                     	;# 
  1800  001D                     	;# 
  1801  001D                     	;# 
  1802  001E                     	;# 
  1803  001F                     	;# 
  1804  008C                     	;# 
  1805  008C                     	;# 
  1806  008D                     	;# 
  1807  008E                     	;# 
  1808  008E                     	;# 
  1809  008F                     	;# 
  1810  0090                     	;# 
  1811  0090                     	;# 
  1812  0091                     	;# 
  1813  0093                     	;# 
  1814  0094                     	;# 
  1815  0095                     	;# 
  1816  0096                     	;# 
  1817  0097                     	;# 
  1818  0098                     	;# 
  1819  0099                     	;# 
  1820  009A                     	;# 
  1821  009B                     	;# 
  1822  009C                     	;# 
  1823  009D                     	;# 
  1824  009E                     	;# 
  1825  010C                     	;# 
  1826  010D                     	;# 
  1827  010E                     	;# 
  1828  010E                     	;# 
  1829  010F                     	;# 
  1830  0110                     	;# 
  1831  0110                     	;# 
  1832  0111                     	;# 
  1833  0112                     	;# 
  1834  0112                     	;# 
  1835  0113                     	;# 
  1836  0114                     	;# 
  1837  0114                     	;# 
  1838  0115                     	;# 
  1839  0116                     	;# 
  1840  0116                     	;# 
  1841  0117                     	;# 
  1842  0119                     	;# 
  1843  0119                     	;# 
  1844  0119                     	;# 
  1845  011A                     	;# 
  1846  011A                     	;# 
  1847  011A                     	;# 
  1848  011B                     	;# 
  1849  011B                     	;# 
  1850  011B                     	;# 
  1851  011B                     	;# 
  1852  011B                     	;# 
  1853  011C                     	;# 
  1854  011C                     	;# 
  1855  011C                     	;# 
  1856  011D                     	;# 
  1857  011D                     	;# 
  1858  011D                     	;# 
  1859  011E                     	;# 
  1860  011E                     	;# 
  1861  011E                     	;# 
  1862  011F                     	;# 
  1863  011F                     	;# 
  1864  011F                     	;# 
  1865  011F                     	;# 
  1866  011F                     	;# 
  1867  018C                     	;# 
  1868  018D                     	;# 
  1869  018E                     	;# 
  1870  018F                     	;# 
  1871  0190                     	;# 
  1872  0191                     	;# 
  1873  0192                     	;# 
  1874  0196                     	;# 
  1875  0197                     	;# 
  1876  0198                     	;# 
  1877  0199                     	;# 
  1878  019A                     	;# 
  1879  019B                     	;# 
  1880  019C                     	;# 
  1881  020C                     	;# 
  1882  020C                     	;# 
  1883  020D                     	;# 
  1884  020E                     	;# 
  1885  020F                     	;# 
  1886  020F                     	;# 
  1887  0210                     	;# 
  1888  0210                     	;# 
  1889  0211                     	;# 
  1890  0211                     	;# 
  1891  0212                     	;# 
  1892  0212                     	;# 
  1893  0213                     	;# 
  1894  0214                     	;# 
  1895  0215                     	;# 
  1896  0215                     	;# 
  1897  0216                     	;# 
  1898  0216                     	;# 
  1899  0217                     	;# 
  1900  0217                     	;# 
  1901  0218                     	;# 
  1902  0218                     	;# 
  1903  0219                     	;# 
  1904  021A                     	;# 
  1905  021B                     	;# 
  1906  021B                     	;# 
  1907  021C                     	;# 
  1908  021C                     	;# 
  1909  021D                     	;# 
  1910  021D                     	;# 
  1911  021E                     	;# 
  1912  021F                     	;# 
  1913  028C                     	;# 
  1914  028C                     	;# 
  1915  028D                     	;# 
  1916  028D                     	;# 
  1917  028E                     	;# 
  1918  028F                     	;# 
  1919  0290                     	;# 
  1920  0290                     	;# 
  1921  0291                     	;# 
  1922  0292                     	;# 
  1923  0292                     	;# 
  1924  0293                     	;# 
  1925  0293                     	;# 
  1926  0294                     	;# 
  1927  0295                     	;# 
  1928  0296                     	;# 
  1929  0296                     	;# 
  1930  0297                     	;# 
  1931  0298                     	;# 
  1932  0298                     	;# 
  1933  0299                     	;# 
  1934  0299                     	;# 
  1935  029A                     	;# 
  1936  029B                     	;# 
  1937  029C                     	;# 
  1938  029C                     	;# 
  1939  029D                     	;# 
  1940  030C                     	;# 
  1941  030C                     	;# 
  1942  030D                     	;# 
  1943  030E                     	;# 
  1944  030F                     	;# 
  1945  0310                     	;# 
  1946  0310                     	;# 
  1947  0311                     	;# 
  1948  0312                     	;# 
  1949  0313                     	;# 
  1950  0314                     	;# 
  1951  0314                     	;# 
  1952  0315                     	;# 
  1953  0316                     	;# 
  1954  0317                     	;# 
  1955  0318                     	;# 
  1956  0318                     	;# 
  1957  0319                     	;# 
  1958  031A                     	;# 
  1959  031B                     	;# 
  1960  031C                     	;# 
  1961  031C                     	;# 
  1962  031D                     	;# 
  1963  031E                     	;# 
  1964  031F                     	;# 
  1965  038C                     	;# 
  1966  038C                     	;# 
  1967  038D                     	;# 
  1968  038E                     	;# 
  1969  0390                     	;# 
  1970  0390                     	;# 
  1971  0391                     	;# 
  1972  0392                     	;# 
  1973  040C                     	;# 
  1974  040D                     	;# 
  1975  040E                     	;# 
  1976  040F                     	;# 
  1977  0410                     	;# 
  1978  0411                     	;# 
  1979  0416                     	;# 
  1980  0416                     	;# 
  1981  0417                     	;# 
  1982  0418                     	;# 
  1983  0418                     	;# 
  1984  0419                     	;# 
  1985  041A                     	;# 
  1986  041A                     	;# 
  1987  041B                     	;# 
  1988  041C                     	;# 
  1989  041C                     	;# 
  1990  041D                     	;# 
  1991  041E                     	;# 
  1992  041F                     	;# 
  1993  048C                     	;# 
  1994  048C                     	;# 
  1995  048D                     	;# 
  1996  048E                     	;# 
  1997  048F                     	;# 
  1998  048F                     	;# 
  1999  0490                     	;# 
  2000  0491                     	;# 
  2001  0492                     	;# 
  2002  0492                     	;# 
  2003  0493                     	;# 
  2004  0494                     	;# 
  2005  0495                     	;# 
  2006  0495                     	;# 
  2007  0496                     	;# 
  2008  0497                     	;# 
  2009  0498                     	;# 
  2010  0499                     	;# 
  2011  049A                     	;# 
  2012  049B                     	;# 
  2013  049C                     	;# 
  2014  049D                     	;# 
  2015  050C                     	;# 
  2016  050C                     	;# 
  2017  050D                     	;# 
  2018  050E                     	;# 
  2019  050F                     	;# 
  2020  050F                     	;# 
  2021  0510                     	;# 
  2022  0511                     	;# 
  2023  0512                     	;# 
  2024  0512                     	;# 
  2025  0513                     	;# 
  2026  0514                     	;# 
  2027  0515                     	;# 
  2028  0515                     	;# 
  2029  0516                     	;# 
  2030  0517                     	;# 
  2031  0518                     	;# 
  2032  0519                     	;# 
  2033  051A                     	;# 
  2034  051B                     	;# 
  2035  051C                     	;# 
  2036  051D                     	;# 
  2037  058C                     	;# 
  2038  058C                     	;# 
  2039  058D                     	;# 
  2040  058E                     	;# 
  2041  058F                     	;# 
  2042  058F                     	;# 
  2043  0590                     	;# 
  2044  0591                     	;# 
  2045  0592                     	;# 
  2046  0593                     	;# 
  2047  060C                     	;# 
  2048  060D                     	;# 
  2049  060E                     	;# 
  2050  060F                     	;# 
  2051  0610                     	;# 
  2052  0611                     	;# 
  2053  0612                     	;# 
  2054  0613                     	;# 
  2055  0614                     	;# 
  2056  0616                     	;# 
  2057  0617                     	;# 
  2058  0618                     	;# 
  2059  0619                     	;# 
  2060  061A                     	;# 
  2061  061B                     	;# 
  2062  061C                     	;# 
  2063  061D                     	;# 
  2064  061E                     	;# 
  2065  068C                     	;# 
  2066  068D                     	;# 
  2067  068E                     	;# 
  2068  068F                     	;# 
  2069  0690                     	;# 
  2070  0691                     	;# 
  2071  0692                     	;# 
  2072  0693                     	;# 
  2073  0694                     	;# 
  2074  070C                     	;# 
  2075  070D                     	;# 
  2076  070E                     	;# 
  2077  070F                     	;# 
  2078  0710                     	;# 
  2079  0711                     	;# 
  2080  0712                     	;# 
  2081  0713                     	;# 
  2082  0714                     	;# 
  2083  0716                     	;# 
  2084  0717                     	;# 
  2085  0718                     	;# 
  2086  0719                     	;# 
  2087  071A                     	;# 
  2088  071B                     	;# 
  2089  071C                     	;# 
  2090  071D                     	;# 
  2091  071E                     	;# 
  2092  0796                     	;# 
  2093  0797                     	;# 
  2094  0798                     	;# 
  2095  0799                     	;# 
  2096  079A                     	;# 
  2097  079B                     	;# 
  2098  080C                     	;# 
  2099  080D                     	;# 
  2100  080E                     	;# 
  2101  080F                     	;# 
  2102  0810                     	;# 
  2103  0811                     	;# 
  2104  0812                     	;# 
  2105  0813                     	;# 
  2106  0814                     	;# 
  2107  081A                     	;# 
  2108  081B                     	;# 
  2109  081C                     	;# 
  2110  081D                     	;# 
  2111  081E                     	;# 
  2112  081F                     	;# 
  2113  088C                     	;# 
  2114  088D                     	;# 
  2115  088E                     	;# 
  2116  088F                     	;# 
  2117  0890                     	;# 
  2118  0891                     	;# 
  2119  0892                     	;# 
  2120  0893                     	;# 
  2121  0895                     	;# 
  2122  0896                     	;# 
  2123  0897                     	;# 
  2124  0898                     	;# 
  2125  0899                     	;# 
  2126  089A                     	;# 
  2127  089B                     	;# 
  2128  090C                     	;# 
  2129  090E                     	;# 
  2130  090F                     	;# 
  2131  091F                     	;# 
  2132  091F                     	;# 
  2133  098F                     	;# 
  2134  098F                     	;# 
  2135  0990                     	;# 
  2136  0991                     	;# 
  2137  0992                     	;# 
  2138  0993                     	;# 
  2139  0994                     	;# 
  2140  0995                     	;# 
  2141  0996                     	;# 
  2142  0997                     	;# 
  2143  0E0F                     	;# 
  2144  0E10                     	;# 
  2145  0E11                     	;# 
  2146  0E12                     	;# 
  2147  0E13                     	;# 
  2148  0E14                     	;# 
  2149  0E15                     	;# 
  2150  0E16                     	;# 
  2151  0E17                     	;# 
  2152  0E18                     	;# 
  2153  0E19                     	;# 
  2154  0E1A                     	;# 
  2155  0E1B                     	;# 
  2156  0E1C                     	;# 
  2157  0E1D                     	;# 
  2158  0E1E                     	;# 
  2159  0E1F                     	;# 
  2160  0E20                     	;# 
  2161  0E21                     	;# 
  2162  0E22                     	;# 
  2163  0E23                     	;# 
  2164  0E24                     	;# 
  2165  0E25                     	;# 
  2166  0E26                     	;# 
  2167  0E27                     	;# 
  2168  0E28                     	;# 
  2169  0E29                     	;# 
  2170  0E2A                     	;# 
  2171  0E2B                     	;# 
  2172  0E2C                     	;# 
  2173  0E2D                     	;# 
  2174  0E2E                     	;# 
  2175  0E2F                     	;# 
  2176  0E30                     	;# 
  2177  0E31                     	;# 
  2178  0E32                     	;# 
  2179  0E33                     	;# 
  2180  0E34                     	;# 
  2181  0E35                     	;# 
  2182  0E36                     	;# 
  2183  0E37                     	;# 
  2184  0E8F                     	;# 
  2185  0E90                     	;# 
  2186  0E91                     	;# 
  2187  0E92                     	;# 
  2188  0E93                     	;# 
  2189  0E94                     	;# 
  2190  0E95                     	;# 
  2191  0E96                     	;# 
  2192  0E97                     	;# 
  2193  0E9C                     	;# 
  2194  0E9D                     	;# 
  2195  0E9E                     	;# 
  2196  0EA1                     	;# 
  2197  0EA2                     	;# 
  2198  0EA3                     	;# 
  2199  0EA4                     	;# 
  2200  0EA5                     	;# 
  2201  0EA9                     	;# 
  2202  0EAA                     	;# 
  2203  0EAB                     	;# 
  2204  0EAC                     	;# 
  2205  0EB1                     	;# 
  2206  0EB2                     	;# 
  2207  0EB3                     	;# 
  2208  0EB8                     	;# 
  2209  0EB9                     	;# 
  2210  0EBA                     	;# 
  2211  0EBB                     	;# 
  2212  0EBC                     	;# 
  2213  0EBD                     	;# 
  2214  0EBE                     	;# 
  2215  0EC3                     	;# 
  2216  0EC5                     	;# 
  2217  0EC6                     	;# 
  2218  0EC7                     	;# 
  2219  0EC8                     	;# 
  2220  0EC9                     	;# 
  2221  0ECA                     	;# 
  2222  0ECB                     	;# 
  2223  0ECC                     	;# 
  2224  0F10                     	;# 
  2225  0F11                     	;# 
  2226  0F12                     	;# 
  2227  0F13                     	;# 
  2228  0F14                     	;# 
  2229  0F15                     	;# 
  2230  0F16                     	;# 
  2231  0F17                     	;# 
  2232  0F18                     	;# 
  2233  0F19                     	;# 
  2234  0F1A                     	;# 
  2235  0F1B                     	;# 
  2236  0F1C                     	;# 
  2237  0F1D                     	;# 
  2238  0F1E                     	;# 
  2239  0F1F                     	;# 
  2240  0F20                     	;# 
  2241  0F21                     	;# 
  2242  0F22                     	;# 
  2243  0F23                     	;# 
  2244  0F24                     	;# 
  2245  0F25                     	;# 
  2246  0F26                     	;# 
  2247  0F27                     	;# 
  2248  0F28                     	;# 
  2249  0F29                     	;# 
  2250  0F2A                     	;# 
  2251  0F2B                     	;# 
  2252  0F2C                     	;# 
  2253  0F2D                     	;# 
  2254  0F2E                     	;# 
  2255  0F2F                     	;# 
  2256  0F30                     	;# 
  2257  0F31                     	;# 
  2258  0F32                     	;# 
  2259  0F38                     	;# 
  2260  0F39                     	;# 
  2261  0F3A                     	;# 
  2262  0F3B                     	;# 
  2263  0F3C                     	;# 
  2264  0F3D                     	;# 
  2265  0F3E                     	;# 
  2266  0F3F                     	;# 
  2267  0F40                     	;# 
  2268  0F41                     	;# 
  2269  0F43                     	;# 
  2270  0F44                     	;# 
  2271  0F45                     	;# 
  2272  0F46                     	;# 
  2273  0F47                     	;# 
  2274  0F48                     	;# 
  2275  0F49                     	;# 
  2276  0F4A                     	;# 
  2277  0F4B                     	;# 
  2278  0F4C                     	;# 
  2279  0F4E                     	;# 
  2280  0F4F                     	;# 
  2281  0F50                     	;# 
  2282  0F51                     	;# 
  2283  0F52                     	;# 
  2284  0F53                     	;# 
  2285  0F54                     	;# 
  2286  0F55                     	;# 
  2287  0F56                     	;# 
  2288  0F57                     	;# 
  2289  0F59                     	;# 
  2290  0F5A                     	;# 
  2291  0F5B                     	;# 
  2292  0F5C                     	;# 
  2293  0F5D                     	;# 
  2294  0F61                     	;# 
  2295  0F62                     	;# 
  2296  0F64                     	;# 
  2297  0F65                     	;# 
  2298  0F66                     	;# 
  2299  0F67                     	;# 
  2300  0F68                     	;# 
  2301  0F69                     	;# 
  2302  0F6A                     	;# 
  2303  0F6B                     	;# 
  2304  0F6C                     	;# 
  2305  0F6D                     	;# 
  2306  0FE4                     	;# 
  2307  0FE5                     	;# 
  2308  0FE6                     	;# 
  2309  0FE7                     	;# 
  2310  0FE8                     	;# 
  2311  0FE9                     	;# 
  2312  0FEA                     	;# 
  2313  0FEB                     	;# 
  2314  0FED                     	;# 
  2315  0FEE                     	;# 
  2316  0FEF                     	;# 
  2317  0000                     	;# 
  2318  0001                     	;# 
  2319  0002                     	;# 
  2320  0003                     	;# 
  2321  0004                     	;# 
  2322  0005                     	;# 
  2323  0006                     	;# 
  2324  0007                     	;# 
  2325  0008                     	;# 
  2326  0009                     	;# 
  2327  000A                     	;# 
  2328  000B                     	;# 
  2329  000C                     	;# 
  2330  000D                     	;# 
  2331  000E                     	;# 
  2332  000F                     	;# 
  2333  0010                     	;# 
  2334  0011                     	;# 
  2335  0012                     	;# 
  2336  0013                     	;# 
  2337  0014                     	;# 
  2338  0015                     	;# 
  2339  0016                     	;# 
  2340  0017                     	;# 
  2341  0018                     	;# 
  2342  0019                     	;# 
  2343  001A                     	;# 
  2344  001C                     	;# 
  2345  001C                     	;# 
  2346  001D                     	;# 
  2347  001D                     	;# 
  2348  001E                     	;# 
  2349  001F                     	;# 
  2350  008C                     	;# 
  2351  008C                     	;# 
  2352  008D                     	;# 
  2353  008E                     	;# 
  2354  008E                     	;# 
  2355  008F                     	;# 
  2356  0090                     	;# 
  2357  0090                     	;# 
  2358  0091                     	;# 
  2359  0093                     	;# 
  2360  0094                     	;# 
  2361  0095                     	;# 
  2362  0096                     	;# 
  2363  0097                     	;# 
  2364  0098                     	;# 
  2365  0099                     	;# 
  2366  009A                     	;# 
  2367  009B                     	;# 
  2368  009C                     	;# 
  2369  009D                     	;# 
  2370  009E                     	;# 
  2371  010C                     	;# 
  2372  010D                     	;# 
  2373  010E                     	;# 
  2374  010E                     	;# 
  2375  010F                     	;# 
  2376  0110                     	;# 
  2377  0110                     	;# 
  2378  0111                     	;# 
  2379  0112                     	;# 
  2380  0112                     	;# 
  2381  0113                     	;# 
  2382  0114                     	;# 
  2383  0114                     	;# 
  2384  0115                     	;# 
  2385  0116                     	;# 
  2386  0116                     	;# 
  2387  0117                     	;# 
  2388  0119                     	;# 
  2389  0119                     	;# 
  2390  0119                     	;# 
  2391  011A                     	;# 
  2392  011A                     	;# 
  2393  011A                     	;# 
  2394  011B                     	;# 
  2395  011B                     	;# 
  2396  011B                     	;# 
  2397  011B                     	;# 
  2398  011B                     	;# 
  2399  011C                     	;# 
  2400  011C                     	;# 
  2401  011C                     	;# 
  2402  011D                     	;# 
  2403  011D                     	;# 
  2404  011D                     	;# 
  2405  011E                     	;# 
  2406  011E                     	;# 
  2407  011E                     	;# 
  2408  011F                     	;# 
  2409  011F                     	;# 
  2410  011F                     	;# 
  2411  011F                     	;# 
  2412  011F                     	;# 
  2413  018C                     	;# 
  2414  018D                     	;# 
  2415  018E                     	;# 
  2416  018F                     	;# 
  2417  0190                     	;# 
  2418  0191                     	;# 
  2419  0192                     	;# 
  2420  0196                     	;# 
  2421  0197                     	;# 
  2422  0198                     	;# 
  2423  0199                     	;# 
  2424  019A                     	;# 
  2425  019B                     	;# 
  2426  019C                     	;# 
  2427  020C                     	;# 
  2428  020C                     	;# 
  2429  020D                     	;# 
  2430  020E                     	;# 
  2431  020F                     	;# 
  2432  020F                     	;# 
  2433  0210                     	;# 
  2434  0210                     	;# 
  2435  0211                     	;# 
  2436  0211                     	;# 
  2437  0212                     	;# 
  2438  0212                     	;# 
  2439  0213                     	;# 
  2440  0214                     	;# 
  2441  0215                     	;# 
  2442  0215                     	;# 
  2443  0216                     	;# 
  2444  0216                     	;# 
  2445  0217                     	;# 
  2446  0217                     	;# 
  2447  0218                     	;# 
  2448  0218                     	;# 
  2449  0219                     	;# 
  2450  021A                     	;# 
  2451  021B                     	;# 
  2452  021B                     	;# 
  2453  021C                     	;# 
  2454  021C                     	;# 
  2455  021D                     	;# 
  2456  021D                     	;# 
  2457  021E                     	;# 
  2458  021F                     	;# 
  2459  028C                     	;# 
  2460  028C                     	;# 
  2461  028D                     	;# 
  2462  028D                     	;# 
  2463  028E                     	;# 
  2464  028F                     	;# 
  2465  0290                     	;# 
  2466  0290                     	;# 
  2467  0291                     	;# 
  2468  0292                     	;# 
  2469  0292                     	;# 
  2470  0293                     	;# 
  2471  0293                     	;# 
  2472  0294                     	;# 
  2473  0295                     	;# 
  2474  0296                     	;# 
  2475  0296                     	;# 
  2476  0297                     	;# 
  2477  0298                     	;# 
  2478  0298                     	;# 
  2479  0299                     	;# 
  2480  0299                     	;# 
  2481  029A                     	;# 
  2482  029B                     	;# 
  2483  029C                     	;# 
  2484  029C                     	;# 
  2485  029D                     	;# 
  2486  030C                     	;# 
  2487  030C                     	;# 
  2488  030D                     	;# 
  2489  030E                     	;# 
  2490  030F                     	;# 
  2491  0310                     	;# 
  2492  0310                     	;# 
  2493  0311                     	;# 
  2494  0312                     	;# 
  2495  0313                     	;# 
  2496  0314                     	;# 
  2497  0314                     	;# 
  2498  0315                     	;# 
  2499  0316                     	;# 
  2500  0317                     	;# 
  2501  0318                     	;# 
  2502  0318                     	;# 
  2503  0319                     	;# 
  2504  031A                     	;# 
  2505  031B                     	;# 
  2506  031C                     	;# 
  2507  031C                     	;# 
  2508  031D                     	;# 
  2509  031E                     	;# 
  2510  031F                     	;# 
  2511  038C                     	;# 
  2512  038C                     	;# 
  2513  038D                     	;# 
  2514  038E                     	;# 
  2515  0390                     	;# 
  2516  0390                     	;# 
  2517  0391                     	;# 
  2518  0392                     	;# 
  2519  040C                     	;# 
  2520  040D                     	;# 
  2521  040E                     	;# 
  2522  040F                     	;# 
  2523  0410                     	;# 
  2524  0411                     	;# 
  2525  0416                     	;# 
  2526  0416                     	;# 
  2527  0417                     	;# 
  2528  0418                     	;# 
  2529  0418                     	;# 
  2530  0419                     	;# 
  2531  041A                     	;# 
  2532  041A                     	;# 
  2533  041B                     	;# 
  2534  041C                     	;# 
  2535  041C                     	;# 
  2536  041D                     	;# 
  2537  041E                     	;# 
  2538  041F                     	;# 
  2539  048C                     	;# 
  2540  048C                     	;# 
  2541  048D                     	;# 
  2542  048E                     	;# 
  2543  048F                     	;# 
  2544  048F                     	;# 
  2545  0490                     	;# 
  2546  0491                     	;# 
  2547  0492                     	;# 
  2548  0492                     	;# 
  2549  0493                     	;# 
  2550  0494                     	;# 
  2551  0495                     	;# 
  2552  0495                     	;# 
  2553  0496                     	;# 
  2554  0497                     	;# 
  2555  0498                     	;# 
  2556  0499                     	;# 
  2557  049A                     	;# 
  2558  049B                     	;# 
  2559  049C                     	;# 
  2560  049D                     	;# 
  2561  050C                     	;# 
  2562  050C                     	;# 
  2563  050D                     	;# 
  2564  050E                     	;# 
  2565  050F                     	;# 
  2566  050F                     	;# 
  2567  0510                     	;# 
  2568  0511                     	;# 
  2569  0512                     	;# 
  2570  0512                     	;# 
  2571  0513                     	;# 
  2572  0514                     	;# 
  2573  0515                     	;# 
  2574  0515                     	;# 
  2575  0516                     	;# 
  2576  0517                     	;# 
  2577  0518                     	;# 
  2578  0519                     	;# 
  2579  051A                     	;# 
  2580  051B                     	;# 
  2581  051C                     	;# 
  2582  051D                     	;# 
  2583  058C                     	;# 
  2584  058C                     	;# 
  2585  058D                     	;# 
  2586  058E                     	;# 
  2587  058F                     	;# 
  2588  058F                     	;# 
  2589  0590                     	;# 
  2590  0591                     	;# 
  2591  0592                     	;# 
  2592  0593                     	;# 
  2593  060C                     	;# 
  2594  060D                     	;# 
  2595  060E                     	;# 
  2596  060F                     	;# 
  2597  0610                     	;# 
  2598  0611                     	;# 
  2599  0612                     	;# 
  2600  0613                     	;# 
  2601  0614                     	;# 
  2602  0616                     	;# 
  2603  0617                     	;# 
  2604  0618                     	;# 
  2605  0619                     	;# 
  2606  061A                     	;# 
  2607  061B                     	;# 
  2608  061C                     	;# 
  2609  061D                     	;# 
  2610  061E                     	;# 
  2611  068C                     	;# 
  2612  068D                     	;# 
  2613  068E                     	;# 
  2614  068F                     	;# 
  2615  0690                     	;# 
  2616  0691                     	;# 
  2617  0692                     	;# 
  2618  0693                     	;# 
  2619  0694                     	;# 
  2620  070C                     	;# 
  2621  070D                     	;# 
  2622  070E                     	;# 
  2623  070F                     	;# 
  2624  0710                     	;# 
  2625  0711                     	;# 
  2626  0712                     	;# 
  2627  0713                     	;# 
  2628  0714                     	;# 
  2629  0716                     	;# 
  2630  0717                     	;# 
  2631  0718                     	;# 
  2632  0719                     	;# 
  2633  071A                     	;# 
  2634  071B                     	;# 
  2635  071C                     	;# 
  2636  071D                     	;# 
  2637  071E                     	;# 
  2638  0796                     	;# 
  2639  0797                     	;# 
  2640  0798                     	;# 
  2641  0799                     	;# 
  2642  079A                     	;# 
  2643  079B                     	;# 
  2644  080C                     	;# 
  2645  080D                     	;# 
  2646  080E                     	;# 
  2647  080F                     	;# 
  2648  0810                     	;# 
  2649  0811                     	;# 
  2650  0812                     	;# 
  2651  0813                     	;# 
  2652  0814                     	;# 
  2653  081A                     	;# 
  2654  081B                     	;# 
  2655  081C                     	;# 
  2656  081D                     	;# 
  2657  081E                     	;# 
  2658  081F                     	;# 
  2659  088C                     	;# 
  2660  088D                     	;# 
  2661  088E                     	;# 
  2662  088F                     	;# 
  2663  0890                     	;# 
  2664  0891                     	;# 
  2665  0892                     	;# 
  2666  0893                     	;# 
  2667  0895                     	;# 
  2668  0896                     	;# 
  2669  0897                     	;# 
  2670  0898                     	;# 
  2671  0899                     	;# 
  2672  089A                     	;# 
  2673  089B                     	;# 
  2674  090C                     	;# 
  2675  090E                     	;# 
  2676  090F                     	;# 
  2677  091F                     	;# 
  2678  091F                     	;# 
  2679  098F                     	;# 
  2680  098F                     	;# 
  2681  0990                     	;# 
  2682  0991                     	;# 
  2683  0992                     	;# 
  2684  0993                     	;# 
  2685  0994                     	;# 
  2686  0995                     	;# 
  2687  0996                     	;# 
  2688  0997                     	;# 
  2689  0E0F                     	;# 
  2690  0E10                     	;# 
  2691  0E11                     	;# 
  2692  0E12                     	;# 
  2693  0E13                     	;# 
  2694  0E14                     	;# 
  2695  0E15                     	;# 
  2696  0E16                     	;# 
  2697  0E17                     	;# 
  2698  0E18                     	;# 
  2699  0E19                     	;# 
  2700  0E1A                     	;# 
  2701  0E1B                     	;# 
  2702  0E1C                     	;# 
  2703  0E1D                     	;# 
  2704  0E1E                     	;# 
  2705  0E1F                     	;# 
  2706  0E20                     	;# 
  2707  0E21                     	;# 
  2708  0E22                     	;# 
  2709  0E23                     	;# 
  2710  0E24                     	;# 
  2711  0E25                     	;# 
  2712  0E26                     	;# 
  2713  0E27                     	;# 
  2714  0E28                     	;# 
  2715  0E29                     	;# 
  2716  0E2A                     	;# 
  2717  0E2B                     	;# 
  2718  0E2C                     	;# 
  2719  0E2D                     	;# 
  2720  0E2E                     	;# 
  2721  0E2F                     	;# 
  2722  0E30                     	;# 
  2723  0E31                     	;# 
  2724  0E32                     	;# 
  2725  0E33                     	;# 
  2726  0E34                     	;# 
  2727  0E35                     	;# 
  2728  0E36                     	;# 
  2729  0E37                     	;# 
  2730  0E8F                     	;# 
  2731  0E90                     	;# 
  2732  0E91                     	;# 
  2733  0E92                     	;# 
  2734  0E93                     	;# 
  2735  0E94                     	;# 
  2736  0E95                     	;# 
  2737  0E96                     	;# 
  2738  0E97                     	;# 
  2739  0E9C                     	;# 
  2740  0E9D                     	;# 
  2741  0E9E                     	;# 
  2742  0EA1                     	;# 
  2743  0EA2                     	;# 
  2744  0EA3                     	;# 
  2745  0EA4                     	;# 
  2746  0EA5                     	;# 
  2747  0EA9                     	;# 
  2748  0EAA                     	;# 
  2749  0EAB                     	;# 
  2750  0EAC                     	;# 
  2751  0EB1                     	;# 
  2752  0EB2                     	;# 
  2753  0EB3                     	;# 
  2754  0EB8                     	;# 
  2755  0EB9                     	;# 
  2756  0EBA                     	;# 
  2757  0EBB                     	;# 
  2758  0EBC                     	;# 
  2759  0EBD                     	;# 
  2760  0EBE                     	;# 
  2761  0EC3                     	;# 
  2762  0EC5                     	;# 
  2763  0EC6                     	;# 
  2764  0EC7                     	;# 
  2765  0EC8                     	;# 
  2766  0EC9                     	;# 
  2767  0ECA                     	;# 
  2768  0ECB                     	;# 
  2769  0ECC                     	;# 
  2770  0F10                     	;# 
  2771  0F11                     	;# 
  2772  0F12                     	;# 
  2773  0F13                     	;# 
  2774  0F14                     	;# 
  2775  0F15                     	;# 
  2776  0F16                     	;# 
  2777  0F17                     	;# 
  2778  0F18                     	;# 
  2779  0F19                     	;# 
  2780  0F1A                     	;# 
  2781  0F1B                     	;# 
  2782  0F1C                     	;# 
  2783  0F1D                     	;# 
  2784  0F1E                     	;# 
  2785  0F1F                     	;# 
  2786  0F20                     	;# 
  2787  0F21                     	;# 
  2788  0F22                     	;# 
  2789  0F23                     	;# 
  2790  0F24                     	;# 
  2791  0F25                     	;# 
  2792  0F26                     	;# 
  2793  0F27                     	;# 
  2794  0F28                     	;# 
  2795  0F29                     	;# 
  2796  0F2A                     	;# 
  2797  0F2B                     	;# 
  2798  0F2C                     	;# 
  2799  0F2D                     	;# 
  2800  0F2E                     	;# 
  2801  0F2F                     	;# 
  2802  0F30                     	;# 
  2803  0F31                     	;# 
  2804  0F32                     	;# 
  2805  0F38                     	;# 
  2806  0F39                     	;# 
  2807  0F3A                     	;# 
  2808  0F3B                     	;# 
  2809  0F3C                     	;# 
  2810  0F3D                     	;# 
  2811  0F3E                     	;# 
  2812  0F3F                     	;# 
  2813  0F40                     	;# 
  2814  0F41                     	;# 
  2815  0F43                     	;# 
  2816  0F44                     	;# 
  2817  0F45                     	;# 
  2818  0F46                     	;# 
  2819  0F47                     	;# 
  2820  0F48                     	;# 
  2821  0F49                     	;# 
  2822  0F4A                     	;# 
  2823  0F4B                     	;# 
  2824  0F4C                     	;# 
  2825  0F4E                     	;# 
  2826  0F4F                     	;# 
  2827  0F50                     	;# 
  2828  0F51                     	;# 
  2829  0F52                     	;# 
  2830  0F53                     	;# 
  2831  0F54                     	;# 
  2832  0F55                     	;# 
  2833  0F56                     	;# 
  2834  0F57                     	;# 
  2835  0F59                     	;# 
  2836  0F5A                     	;# 
  2837  0F5B                     	;# 
  2838  0F5C                     	;# 
  2839  0F5D                     	;# 
  2840  0F61                     	;# 
  2841  0F62                     	;# 
  2842  0F64                     	;# 
  2843  0F65                     	;# 
  2844  0F66                     	;# 
  2845  0F67                     	;# 
  2846  0F68                     	;# 
  2847  0F69                     	;# 
  2848  0F6A                     	;# 
  2849  0F6B                     	;# 
  2850  0F6C                     	;# 
  2851  0F6D                     	;# 
  2852  0FE4                     	;# 
  2853  0FE5                     	;# 
  2854  0FE6                     	;# 
  2855  0FE7                     	;# 
  2856  0FE8                     	;# 
  2857  0FE9                     	;# 
  2858  0FEA                     	;# 
  2859  0FEB                     	;# 
  2860  0FED                     	;# 
  2861  0FEE                     	;# 
  2862  0FEF                     	;# 
  2863  0000                     	;# 
  2864  0001                     	;# 
  2865  0002                     	;# 
  2866  0003                     	;# 
  2867  0004                     	;# 
  2868  0005                     	;# 
  2869  0006                     	;# 
  2870  0007                     	;# 
  2871  0008                     	;# 
  2872  0009                     	;# 
  2873  000A                     	;# 
  2874  000B                     	;# 
  2875  000C                     	;# 
  2876  000D                     	;# 
  2877  000E                     	;# 
  2878  000F                     	;# 
  2879  0010                     	;# 
  2880  0011                     	;# 
  2881  0012                     	;# 
  2882  0013                     	;# 
  2883  0014                     	;# 
  2884  0015                     	;# 
  2885  0016                     	;# 
  2886  0017                     	;# 
  2887  0018                     	;# 
  2888  0019                     	;# 
  2889  001A                     	;# 
  2890  001C                     	;# 
  2891  001C                     	;# 
  2892  001D                     	;# 
  2893  001D                     	;# 
  2894  001E                     	;# 
  2895  001F                     	;# 
  2896  008C                     	;# 
  2897  008C                     	;# 
  2898  008D                     	;# 
  2899  008E                     	;# 
  2900  008E                     	;# 
  2901  008F                     	;# 
  2902  0090                     	;# 
  2903  0090                     	;# 
  2904  0091                     	;# 
  2905  0093                     	;# 
  2906  0094                     	;# 
  2907  0095                     	;# 
  2908  0096                     	;# 
  2909  0097                     	;# 
  2910  0098                     	;# 
  2911  0099                     	;# 
  2912  009A                     	;# 
  2913  009B                     	;# 
  2914  009C                     	;# 
  2915  009D                     	;# 
  2916  009E                     	;# 
  2917  010C                     	;# 
  2918  010D                     	;# 
  2919  010E                     	;# 
  2920  010E                     	;# 
  2921  010F                     	;# 
  2922  0110                     	;# 
  2923  0110                     	;# 
  2924  0111                     	;# 
  2925  0112                     	;# 
  2926  0112                     	;# 
  2927  0113                     	;# 
  2928  0114                     	;# 
  2929  0114                     	;# 
  2930  0115                     	;# 
  2931  0116                     	;# 
  2932  0116                     	;# 
  2933  0117                     	;# 
  2934  0119                     	;# 
  2935  0119                     	;# 
  2936  0119                     	;# 
  2937  011A                     	;# 
  2938  011A                     	;# 
  2939  011A                     	;# 
  2940  011B                     	;# 
  2941  011B                     	;# 
  2942  011B                     	;# 
  2943  011B                     	;# 
  2944  011B                     	;# 
  2945  011C                     	;# 
  2946  011C                     	;# 
  2947  011C                     	;# 
  2948  011D                     	;# 
  2949  011D                     	;# 
  2950  011D                     	;# 
  2951  011E                     	;# 
  2952  011E                     	;# 
  2953  011E                     	;# 
  2954  011F                     	;# 
  2955  011F                     	;# 
  2956  011F                     	;# 
  2957  011F                     	;# 
  2958  011F                     	;# 
  2959  018C                     	;# 
  2960  018D                     	;# 
  2961  018E                     	;# 
  2962  018F                     	;# 
  2963  0190                     	;# 
  2964  0191                     	;# 
  2965  0192                     	;# 
  2966  0196                     	;# 
  2967  0197                     	;# 
  2968  0198                     	;# 
  2969  0199                     	;# 
  2970  019A                     	;# 
  2971  019B                     	;# 
  2972  019C                     	;# 
  2973  020C                     	;# 
  2974  020C                     	;# 
  2975  020D                     	;# 
  2976  020E                     	;# 
  2977  020F                     	;# 
  2978  020F                     	;# 
  2979  0210                     	;# 
  2980  0210                     	;# 
  2981  0211                     	;# 
  2982  0211                     	;# 
  2983  0212                     	;# 
  2984  0212                     	;# 
  2985  0213                     	;# 
  2986  0214                     	;# 
  2987  0215                     	;# 
  2988  0215                     	;# 
  2989  0216                     	;# 
  2990  0216                     	;# 
  2991  0217                     	;# 
  2992  0217                     	;# 
  2993  0218                     	;# 
  2994  0218                     	;# 
  2995  0219                     	;# 
  2996  021A                     	;# 
  2997  021B                     	;# 
  2998  021B                     	;# 
  2999  021C                     	;# 
  3000  021C                     	;# 
  3001  021D                     	;# 
  3002  021D                     	;# 
  3003  021E                     	;# 
  3004  021F                     	;# 
  3005  028C                     	;# 
  3006  028C                     	;# 
  3007  028D                     	;# 
  3008  028D                     	;# 
  3009  028E                     	;# 
  3010  028F                     	;# 
  3011  0290                     	;# 
  3012  0290                     	;# 
  3013  0291                     	;# 
  3014  0292                     	;# 
  3015  0292                     	;# 
  3016  0293                     	;# 
  3017  0293                     	;# 
  3018  0294                     	;# 
  3019  0295                     	;# 
  3020  0296                     	;# 
  3021  0296                     	;# 
  3022  0297                     	;# 
  3023  0298                     	;# 
  3024  0298                     	;# 
  3025  0299                     	;# 
  3026  0299                     	;# 
  3027  029A                     	;# 
  3028  029B                     	;# 
  3029  029C                     	;# 
  3030  029C                     	;# 
  3031  029D                     	;# 
  3032  030C                     	;# 
  3033  030C                     	;# 
  3034  030D                     	;# 
  3035  030E                     	;# 
  3036  030F                     	;# 
  3037  0310                     	;# 
  3038  0310                     	;# 
  3039  0311                     	;# 
  3040  0312                     	;# 
  3041  0313                     	;# 
  3042  0314                     	;# 
  3043  0314                     	;# 
  3044  0315                     	;# 
  3045  0316                     	;# 
  3046  0317                     	;# 
  3047  0318                     	;# 
  3048  0318                     	;# 
  3049  0319                     	;# 
  3050  031A                     	;# 
  3051  031B                     	;# 
  3052  031C                     	;# 
  3053  031C                     	;# 
  3054  031D                     	;# 
  3055  031E                     	;# 
  3056  031F                     	;# 
  3057  038C                     	;# 
  3058  038C                     	;# 
  3059  038D                     	;# 
  3060  038E                     	;# 
  3061  0390                     	;# 
  3062  0390                     	;# 
  3063  0391                     	;# 
  3064  0392                     	;# 
  3065  040C                     	;# 
  3066  040D                     	;# 
  3067  040E                     	;# 
  3068  040F                     	;# 
  3069  0410                     	;# 
  3070  0411                     	;# 
  3071  0416                     	;# 
  3072  0416                     	;# 
  3073  0417                     	;# 
  3074  0418                     	;# 
  3075  0418                     	;# 
  3076  0419                     	;# 
  3077  041A                     	;# 
  3078  041A                     	;# 
  3079  041B                     	;# 
  3080  041C                     	;# 
  3081  041C                     	;# 
  3082  041D                     	;# 
  3083  041E                     	;# 
  3084  041F                     	;# 
  3085  048C                     	;# 
  3086  048C                     	;# 
  3087  048D                     	;# 
  3088  048E                     	;# 
  3089  048F                     	;# 
  3090  048F                     	;# 
  3091  0490                     	;# 
  3092  0491                     	;# 
  3093  0492                     	;# 
  3094  0492                     	;# 
  3095  0493                     	;# 
  3096  0494                     	;# 
  3097  0495                     	;# 
  3098  0495                     	;# 
  3099  0496                     	;# 
  3100  0497                     	;# 
  3101  0498                     	;# 
  3102  0499                     	;# 
  3103  049A                     	;# 
  3104  049B                     	;# 
  3105  049C                     	;# 
  3106  049D                     	;# 
  3107  050C                     	;# 
  3108  050C                     	;# 
  3109  050D                     	;# 
  3110  050E                     	;# 
  3111  050F                     	;# 
  3112  050F                     	;# 
  3113  0510                     	;# 
  3114  0511                     	;# 
  3115  0512                     	;# 
  3116  0512                     	;# 
  3117  0513                     	;# 
  3118  0514                     	;# 
  3119  0515                     	;# 
  3120  0515                     	;# 
  3121  0516                     	;# 
  3122  0517                     	;# 
  3123  0518                     	;# 
  3124  0519                     	;# 
  3125  051A                     	;# 
  3126  051B                     	;# 
  3127  051C                     	;# 
  3128  051D                     	;# 
  3129  058C                     	;# 
  3130  058C                     	;# 
  3131  058D                     	;# 
  3132  058E                     	;# 
  3133  058F                     	;# 
  3134  058F                     	;# 
  3135  0590                     	;# 
  3136  0591                     	;# 
  3137  0592                     	;# 
  3138  0593                     	;# 
  3139  060C                     	;# 
  3140  060D                     	;# 
  3141  060E                     	;# 
  3142  060F                     	;# 
  3143  0610                     	;# 
  3144  0611                     	;# 
  3145  0612                     	;# 
  3146  0613                     	;# 
  3147  0614                     	;# 
  3148  0616                     	;# 
  3149  0617                     	;# 
  3150  0618                     	;# 
  3151  0619                     	;# 
  3152  061A                     	;# 
  3153  061B                     	;# 
  3154  061C                     	;# 
  3155  061D                     	;# 
  3156  061E                     	;# 
  3157  068C                     	;# 
  3158  068D                     	;# 
  3159  068E                     	;# 
  3160  068F                     	;# 
  3161  0690                     	;# 
  3162  0691                     	;# 
  3163  0692                     	;# 
  3164  0693                     	;# 
  3165  0694                     	;# 
  3166  070C                     	;# 
  3167  070D                     	;# 
  3168  070E                     	;# 
  3169  070F                     	;# 
  3170  0710                     	;# 
  3171  0711                     	;# 
  3172  0712                     	;# 
  3173  0713                     	;# 
  3174  0714                     	;# 
  3175  0716                     	;# 
  3176  0717                     	;# 
  3177  0718                     	;# 
  3178  0719                     	;# 
  3179  071A                     	;# 
  3180  071B                     	;# 
  3181  071C                     	;# 
  3182  071D                     	;# 
  3183  071E                     	;# 
  3184  0796                     	;# 
  3185  0797                     	;# 
  3186  0798                     	;# 
  3187  0799                     	;# 
  3188  079A                     	;# 
  3189  079B                     	;# 
  3190  080C                     	;# 
  3191  080D                     	;# 
  3192  080E                     	;# 
  3193  080F                     	;# 
  3194  0810                     	;# 
  3195  0811                     	;# 
  3196  0812                     	;# 
  3197  0813                     	;# 
  3198  0814                     	;# 
  3199  081A                     	;# 
  3200  081B                     	;# 
  3201  081C                     	;# 
  3202  081D                     	;# 
  3203  081E                     	;# 
  3204  081F                     	;# 
  3205  088C                     	;# 
  3206  088D                     	;# 
  3207  088E                     	;# 
  3208  088F                     	;# 
  3209  0890                     	;# 
  3210  0891                     	;# 
  3211  0892                     	;# 
  3212  0893                     	;# 
  3213  0895                     	;# 
  3214  0896                     	;# 
  3215  0897                     	;# 
  3216  0898                     	;# 
  3217  0899                     	;# 
  3218  089A                     	;# 
  3219  089B                     	;# 
  3220  090C                     	;# 
  3221  090E                     	;# 
  3222  090F                     	;# 
  3223  091F                     	;# 
  3224  091F                     	;# 
  3225  098F                     	;# 
  3226  098F                     	;# 
  3227  0990                     	;# 
  3228  0991                     	;# 
  3229  0992                     	;# 
  3230  0993                     	;# 
  3231  0994                     	;# 
  3232  0995                     	;# 
  3233  0996                     	;# 
  3234  0997                     	;# 
  3235  0E0F                     	;# 
  3236  0E10                     	;# 
  3237  0E11                     	;# 
  3238  0E12                     	;# 
  3239  0E13                     	;# 
  3240  0E14                     	;# 
  3241  0E15                     	;# 
  3242  0E16                     	;# 
  3243  0E17                     	;# 
  3244  0E18                     	;# 
  3245  0E19                     	;# 
  3246  0E1A                     	;# 
  3247  0E1B                     	;# 
  3248  0E1C                     	;# 
  3249  0E1D                     	;# 
  3250  0E1E                     	;# 
  3251  0E1F                     	;# 
  3252  0E20                     	;# 
  3253  0E21                     	;# 
  3254  0E22                     	;# 
  3255  0E23                     	;# 
  3256  0E24                     	;# 
  3257  0E25                     	;# 
  3258  0E26                     	;# 
  3259  0E27                     	;# 
  3260  0E28                     	;# 
  3261  0E29                     	;# 
  3262  0E2A                     	;# 
  3263  0E2B                     	;# 
  3264  0E2C                     	;# 
  3265  0E2D                     	;# 
  3266  0E2E                     	;# 
  3267  0E2F                     	;# 
  3268  0E30                     	;# 
  3269  0E31                     	;# 
  3270  0E32                     	;# 
  3271  0E33                     	;# 
  3272  0E34                     	;# 
  3273  0E35                     	;# 
  3274  0E36                     	;# 
  3275  0E37                     	;# 
  3276  0E8F                     	;# 
  3277  0E90                     	;# 
  3278  0E91                     	;# 
  3279  0E92                     	;# 
  3280  0E93                     	;# 
  3281  0E94                     	;# 
  3282  0E95                     	;# 
  3283  0E96                     	;# 
  3284  0E97                     	;# 
  3285  0E9C                     	;# 
  3286  0E9D                     	;# 
  3287  0E9E                     	;# 
  3288  0EA1                     	;# 
  3289  0EA2                     	;# 
  3290  0EA3                     	;# 
  3291  0EA4                     	;# 
  3292  0EA5                     	;# 
  3293  0EA9                     	;# 
  3294  0EAA                     	;# 
  3295  0EAB                     	;# 
  3296  0EAC                     	;# 
  3297  0EB1                     	;# 
  3298  0EB2                     	;# 
  3299  0EB3                     	;# 
  3300  0EB8                     	;# 
  3301  0EB9                     	;# 
  3302  0EBA                     	;# 
  3303  0EBB                     	;# 
  3304  0EBC                     	;# 
  3305  0EBD                     	;# 
  3306  0EBE                     	;# 
  3307  0EC3                     	;# 
  3308  0EC5                     	;# 
  3309  0EC6                     	;# 
  3310  0EC7                     	;# 
  3311  0EC8                     	;# 
  3312  0EC9                     	;# 
  3313  0ECA                     	;# 
  3314  0ECB                     	;# 
  3315  0ECC                     	;# 
  3316  0F10                     	;# 
  3317  0F11                     	;# 
  3318  0F12                     	;# 
  3319  0F13                     	;# 
  3320  0F14                     	;# 
  3321  0F15                     	;# 
  3322  0F16                     	;# 
  3323  0F17                     	;# 
  3324  0F18                     	;# 
  3325  0F19                     	;# 
  3326  0F1A                     	;# 
  3327  0F1B                     	;# 
  3328  0F1C                     	;# 
  3329  0F1D                     	;# 
  3330  0F1E                     	;# 
  3331  0F1F                     	;# 
  3332  0F20                     	;# 
  3333  0F21                     	;# 
  3334  0F22                     	;# 
  3335  0F23                     	;# 
  3336  0F24                     	;# 
  3337  0F25                     	;# 
  3338  0F26                     	;# 
  3339  0F27                     	;# 
  3340  0F28                     	;# 
  3341  0F29                     	;# 
  3342  0F2A                     	;# 
  3343  0F2B                     	;# 
  3344  0F2C                     	;# 
  3345  0F2D                     	;# 
  3346  0F2E                     	;# 
  3347  0F2F                     	;# 
  3348  0F30                     	;# 
  3349  0F31                     	;# 
  3350  0F32                     	;# 
  3351  0F38                     	;# 
  3352  0F39                     	;# 
  3353  0F3A                     	;# 
  3354  0F3B                     	;# 
  3355  0F3C                     	;# 
  3356  0F3D                     	;# 
  3357  0F3E                     	;# 
  3358  0F3F                     	;# 
  3359  0F40                     	;# 
  3360  0F41                     	;# 
  3361  0F43                     	;# 
  3362  0F44                     	;# 
  3363  0F45                     	;# 
  3364  0F46                     	;# 
  3365  0F47                     	;# 
  3366  0F48                     	;# 
  3367  0F49                     	;# 
  3368  0F4A                     	;# 
  3369  0F4B                     	;# 
  3370  0F4C                     	;# 
  3371  0F4E                     	;# 
  3372  0F4F                     	;# 
  3373  0F50                     	;# 
  3374  0F51                     	;# 
  3375  0F52                     	;# 
  3376  0F53                     	;# 
  3377  0F54                     	;# 
  3378  0F55                     	;# 
  3379  0F56                     	;# 
  3380  0F57                     	;# 
  3381  0F59                     	;# 
  3382  0F5A                     	;# 
  3383  0F5B                     	;# 
  3384  0F5C                     	;# 
  3385  0F5D                     	;# 
  3386  0F61                     	;# 
  3387  0F62                     	;# 
  3388  0F64                     	;# 
  3389  0F65                     	;# 
  3390  0F66                     	;# 
  3391  0F67                     	;# 
  3392  0F68                     	;# 
  3393  0F69                     	;# 
  3394  0F6A                     	;# 
  3395  0F6B                     	;# 
  3396  0F6C                     	;# 
  3397  0F6D                     	;# 
  3398  0FE4                     	;# 
  3399  0FE5                     	;# 
  3400  0FE6                     	;# 
  3401  0FE7                     	;# 
  3402  0FE8                     	;# 
  3403  0FE9                     	;# 
  3404  0FEA                     	;# 
  3405  0FEB                     	;# 
  3406  0FED                     	;# 
  3407  0FEE                     	;# 
  3408  0FEF                     	;# 
  3409  0000                     	;# 
  3410  0001                     	;# 
  3411  0002                     	;# 
  3412  0003                     	;# 
  3413  0004                     	;# 
  3414  0005                     	;# 
  3415  0006                     	;# 
  3416  0007                     	;# 
  3417  0008                     	;# 
  3418  0009                     	;# 
  3419  000A                     	;# 
  3420  000B                     	;# 
  3421  000C                     	;# 
  3422  000D                     	;# 
  3423  000E                     	;# 
  3424  000F                     	;# 
  3425  0010                     	;# 
  3426  0011                     	;# 
  3427  0012                     	;# 
  3428  0013                     	;# 
  3429  0014                     	;# 
  3430  0015                     	;# 
  3431  0016                     	;# 
  3432  0017                     	;# 
  3433  0018                     	;# 
  3434  0019                     	;# 
  3435  001A                     	;# 
  3436  001C                     	;# 
  3437  001C                     	;# 
  3438  001D                     	;# 
  3439  001D                     	;# 
  3440  001E                     	;# 
  3441  001F                     	;# 
  3442  008C                     	;# 
  3443  008C                     	;# 
  3444  008D                     	;# 
  3445  008E                     	;# 
  3446  008E                     	;# 
  3447  008F                     	;# 
  3448  0090                     	;# 
  3449  0090                     	;# 
  3450  0091                     	;# 
  3451  0093                     	;# 
  3452  0094                     	;# 
  3453  0095                     	;# 
  3454  0096                     	;# 
  3455  0097                     	;# 
  3456  0098                     	;# 
  3457  0099                     	;# 
  3458  009A                     	;# 
  3459  009B                     	;# 
  3460  009C                     	;# 
  3461  009D                     	;# 
  3462  009E                     	;# 
  3463  010C                     	;# 
  3464  010D                     	;# 
  3465  010E                     	;# 
  3466  010E                     	;# 
  3467  010F                     	;# 
  3468  0110                     	;# 
  3469  0110                     	;# 
  3470  0111                     	;# 
  3471  0112                     	;# 
  3472  0112                     	;# 
  3473  0113                     	;# 
  3474  0114                     	;# 
  3475  0114                     	;# 
  3476  0115                     	;# 
  3477  0116                     	;# 
  3478  0116                     	;# 
  3479  0117                     	;# 
  3480  0119                     	;# 
  3481  0119                     	;# 
  3482  0119                     	;# 
  3483  011A                     	;# 
  3484  011A                     	;# 
  3485  011A                     	;# 
  3486  011B                     	;# 
  3487  011B                     	;# 
  3488  011B                     	;# 
  3489  011B                     	;# 
  3490  011B                     	;# 
  3491  011C                     	;# 
  3492  011C                     	;# 
  3493  011C                     	;# 
  3494  011D                     	;# 
  3495  011D                     	;# 
  3496  011D                     	;# 
  3497  011E                     	;# 
  3498  011E                     	;# 
  3499  011E                     	;# 
  3500  011F                     	;# 
  3501  011F                     	;# 
  3502  011F                     	;# 
  3503  011F                     	;# 
  3504  011F                     	;# 
  3505  018C                     	;# 
  3506  018D                     	;# 
  3507  018E                     	;# 
  3508  018F                     	;# 
  3509  0190                     	;# 
  3510  0191                     	;# 
  3511  0192                     	;# 
  3512  0196                     	;# 
  3513  0197                     	;# 
  3514  0198                     	;# 
  3515  0199                     	;# 
  3516  019A                     	;# 
  3517  019B                     	;# 
  3518  019C                     	;# 
  3519  020C                     	;# 
  3520  020C                     	;# 
  3521  020D                     	;# 
  3522  020E                     	;# 
  3523  020F                     	;# 
  3524  020F                     	;# 
  3525  0210                     	;# 
  3526  0210                     	;# 
  3527  0211                     	;# 
  3528  0211                     	;# 
  3529  0212                     	;# 
  3530  0212                     	;# 
  3531  0213                     	;# 
  3532  0214                     	;# 
  3533  0215                     	;# 
  3534  0215                     	;# 
  3535  0216                     	;# 
  3536  0216                     	;# 
  3537  0217                     	;# 
  3538  0217                     	;# 
  3539  0218                     	;# 
  3540  0218                     	;# 
  3541  0219                     	;# 
  3542  021A                     	;# 
  3543  021B                     	;# 
  3544  021B                     	;# 
  3545  021C                     	;# 
  3546  021C                     	;# 
  3547  021D                     	;# 
  3548  021D                     	;# 
  3549  021E                     	;# 
  3550  021F                     	;# 
  3551  028C                     	;# 
  3552  028C                     	;# 
  3553  028D                     	;# 
  3554  028D                     	;# 
  3555  028E                     	;# 
  3556  028F                     	;# 
  3557  0290                     	;# 
  3558  0290                     	;# 
  3559  0291                     	;# 
  3560  0292                     	;# 
  3561  0292                     	;# 
  3562  0293                     	;# 
  3563  0293                     	;# 
  3564  0294                     	;# 
  3565  0295                     	;# 
  3566  0296                     	;# 
  3567  0296                     	;# 
  3568  0297                     	;# 
  3569  0298                     	;# 
  3570  0298                     	;# 
  3571  0299                     	;# 
  3572  0299                     	;# 
  3573  029A                     	;# 
  3574  029B                     	;# 
  3575  029C                     	;# 
  3576  029C                     	;# 
  3577  029D                     	;# 
  3578  030C                     	;# 
  3579  030C                     	;# 
  3580  030D                     	;# 
  3581  030E                     	;# 
  3582  030F                     	;# 
  3583  0310                     	;# 
  3584  0310                     	;# 
  3585  0311                     	;# 
  3586  0312                     	;# 
  3587  0313                     	;# 
  3588  0314                     	;# 
  3589  0314                     	;# 
  3590  0315                     	;# 
  3591  0316                     	;# 
  3592  0317                     	;# 
  3593  0318                     	;# 
  3594  0318                     	;# 
  3595  0319                     	;# 
  3596  031A                     	;# 
  3597  031B                     	;# 
  3598  031C                     	;# 
  3599  031C                     	;# 
  3600  031D                     	;# 
  3601  031E                     	;# 
  3602  031F                     	;# 
  3603  038C                     	;# 
  3604  038C                     	;# 
  3605  038D                     	;# 
  3606  038E                     	;# 
  3607  0390                     	;# 
  3608  0390                     	;# 
  3609  0391                     	;# 
  3610  0392                     	;# 
  3611  040C                     	;# 
  3612  040D                     	;# 
  3613  040E                     	;# 
  3614  040F                     	;# 
  3615  0410                     	;# 
  3616  0411                     	;# 
  3617  0416                     	;# 
  3618  0416                     	;# 
  3619  0417                     	;# 
  3620  0418                     	;# 
  3621  0418                     	;# 
  3622  0419                     	;# 
  3623  041A                     	;# 
  3624  041A                     	;# 
  3625  041B                     	;# 
  3626  041C                     	;# 
  3627  041C                     	;# 
  3628  041D                     	;# 
  3629  041E                     	;# 
  3630  041F                     	;# 
  3631  048C                     	;# 
  3632  048C                     	;# 
  3633  048D                     	;# 
  3634  048E                     	;# 
  3635  048F                     	;# 
  3636  048F                     	;# 
  3637  0490                     	;# 
  3638  0491                     	;# 
  3639  0492                     	;# 
  3640  0492                     	;# 
  3641  0493                     	;# 
  3642  0494                     	;# 
  3643  0495                     	;# 
  3644  0495                     	;# 
  3645  0496                     	;# 
  3646  0497                     	;# 
  3647  0498                     	;# 
  3648  0499                     	;# 
  3649  049A                     	;# 
  3650  049B                     	;# 
  3651  049C                     	;# 
  3652  049D                     	;# 
  3653  050C                     	;# 
  3654  050C                     	;# 
  3655  050D                     	;# 
  3656  050E                     	;# 
  3657  050F                     	;# 
  3658  050F                     	;# 
  3659  0510                     	;# 
  3660  0511                     	;# 
  3661  0512                     	;# 
  3662  0512                     	;# 
  3663  0513                     	;# 
  3664  0514                     	;# 
  3665  0515                     	;# 
  3666  0515                     	;# 
  3667  0516                     	;# 
  3668  0517                     	;# 
  3669  0518                     	;# 
  3670  0519                     	;# 
  3671  051A                     	;# 
  3672  051B                     	;# 
  3673  051C                     	;# 
  3674  051D                     	;# 
  3675  058C                     	;# 
  3676  058C                     	;# 
  3677  058D                     	;# 
  3678  058E                     	;# 
  3679  058F                     	;# 
  3680  058F                     	;# 
  3681  0590                     	;# 
  3682  0591                     	;# 
  3683  0592                     	;# 
  3684  0593                     	;# 
  3685  060C                     	;# 
  3686  060D                     	;# 
  3687  060E                     	;# 
  3688  060F                     	;# 
  3689  0610                     	;# 
  3690  0611                     	;# 
  3691  0612                     	;# 
  3692  0613                     	;# 
  3693  0614                     	;# 
  3694  0616                     	;# 
  3695  0617                     	;# 
  3696  0618                     	;# 
  3697  0619                     	;# 
  3698  061A                     	;# 
  3699  061B                     	;# 
  3700  061C                     	;# 
  3701  061D                     	;# 
  3702  061E                     	;# 
  3703  068C                     	;# 
  3704  068D                     	;# 
  3705  068E                     	;# 
  3706  068F                     	;# 
  3707  0690                     	;# 
  3708  0691                     	;# 
  3709  0692                     	;# 
  3710  0693                     	;# 
  3711  0694                     	;# 
  3712  070C                     	;# 
  3713  070D                     	;# 
  3714  070E                     	;# 
  3715  070F                     	;# 
  3716  0710                     	;# 
  3717  0711                     	;# 
  3718  0712                     	;# 
  3719  0713                     	;# 
  3720  0714                     	;# 
  3721  0716                     	;# 
  3722  0717                     	;# 
  3723  0718                     	;# 
  3724  0719                     	;# 
  3725  071A                     	;# 
  3726  071B                     	;# 
  3727  071C                     	;# 
  3728  071D                     	;# 
  3729  071E                     	;# 
  3730  0796                     	;# 
  3731  0797                     	;# 
  3732  0798                     	;# 
  3733  0799                     	;# 
  3734  079A                     	;# 
  3735  079B                     	;# 
  3736  080C                     	;# 
  3737  080D                     	;# 
  3738  080E                     	;# 
  3739  080F                     	;# 
  3740  0810                     	;# 
  3741  0811                     	;# 
  3742  0812                     	;# 
  3743  0813                     	;# 
  3744  0814                     	;# 
  3745  081A                     	;# 
  3746  081B                     	;# 
  3747  081C                     	;# 
  3748  081D                     	;# 
  3749  081E                     	;# 
  3750  081F                     	;# 
  3751  088C                     	;# 
  3752  088D                     	;# 
  3753  088E                     	;# 
  3754  088F                     	;# 
  3755  0890                     	;# 
  3756  0891                     	;# 
  3757  0892                     	;# 
  3758  0893                     	;# 
  3759  0895                     	;# 
  3760  0896                     	;# 
  3761  0897                     	;# 
  3762  0898                     	;# 
  3763  0899                     	;# 
  3764  089A                     	;# 
  3765  089B                     	;# 
  3766  090C                     	;# 
  3767  090E                     	;# 
  3768  090F                     	;# 
  3769  091F                     	;# 
  3770  091F                     	;# 
  3771  098F                     	;# 
  3772  098F                     	;# 
  3773  0990                     	;# 
  3774  0991                     	;# 
  3775  0992                     	;# 
  3776  0993                     	;# 
  3777  0994                     	;# 
  3778  0995                     	;# 
  3779  0996                     	;# 
  3780  0997                     	;# 
  3781  0E0F                     	;# 
  3782  0E10                     	;# 
  3783  0E11                     	;# 
  3784  0E12                     	;# 
  3785  0E13                     	;# 
  3786  0E14                     	;# 
  3787  0E15                     	;# 
  3788  0E16                     	;# 
  3789  0E17                     	;# 
  3790  0E18                     	;# 
  3791  0E19                     	;# 
  3792  0E1A                     	;# 
  3793  0E1B                     	;# 
  3794  0E1C                     	;# 
  3795  0E1D                     	;# 
  3796  0E1E                     	;# 
  3797  0E1F                     	;# 
  3798  0E20                     	;# 
  3799  0E21                     	;# 
  3800  0E22                     	;# 
  3801  0E23                     	;# 
  3802  0E24                     	;# 
  3803  0E25                     	;# 
  3804  0E26                     	;# 
  3805  0E27                     	;# 
  3806  0E28                     	;# 
  3807  0E29                     	;# 
  3808  0E2A                     	;# 
  3809  0E2B                     	;# 
  3810  0E2C                     	;# 
  3811  0E2D                     	;# 
  3812  0E2E                     	;# 
  3813  0E2F                     	;# 
  3814  0E30                     	;# 
  3815  0E31                     	;# 
  3816  0E32                     	;# 
  3817  0E33                     	;# 
  3818  0E34                     	;# 
  3819  0E35                     	;# 
  3820  0E36                     	;# 
  3821  0E37                     	;# 
  3822  0E8F                     	;# 
  3823  0E90                     	;# 
  3824  0E91                     	;# 
  3825  0E92                     	;# 
  3826  0E93                     	;# 
  3827  0E94                     	;# 
  3828  0E95                     	;# 
  3829  0E96                     	;# 
  3830  0E97                     	;# 
  3831  0E9C                     	;# 
  3832  0E9D                     	;# 
  3833  0E9E                     	;# 
  3834  0EA1                     	;# 
  3835  0EA2                     	;# 
  3836  0EA3                     	;# 
  3837  0EA4                     	;# 
  3838  0EA5                     	;# 
  3839  0EA9                     	;# 
  3840  0EAA                     	;# 
  3841  0EAB                     	;# 
  3842  0EAC                     	;# 
  3843  0EB1                     	;# 
  3844  0EB2                     	;# 
  3845  0EB3                     	;# 
  3846  0EB8                     	;# 
  3847  0EB9                     	;# 
  3848  0EBA                     	;# 
  3849  0EBB                     	;# 
  3850  0EBC                     	;# 
  3851  0EBD                     	;# 
  3852  0EBE                     	;# 
  3853  0EC3                     	;# 
  3854  0EC5                     	;# 
  3855  0EC6                     	;# 
  3856  0EC7                     	;# 
  3857  0EC8                     	;# 
  3858  0EC9                     	;# 
  3859  0ECA                     	;# 
  3860  0ECB                     	;# 
  3861  0ECC                     	;# 
  3862  0F10                     	;# 
  3863  0F11                     	;# 
  3864  0F12                     	;# 
  3865  0F13                     	;# 
  3866  0F14                     	;# 
  3867  0F15                     	;# 
  3868  0F16                     	;# 
  3869  0F17                     	;# 
  3870  0F18                     	;# 
  3871  0F19                     	;# 
  3872  0F1A                     	;# 
  3873  0F1B                     	;# 
  3874  0F1C                     	;# 
  3875  0F1D                     	;# 
  3876  0F1E                     	;# 
  3877  0F1F                     	;# 
  3878  0F20                     	;# 
  3879  0F21                     	;# 
  3880  0F22                     	;# 
  3881  0F23                     	;# 
  3882  0F24                     	;# 
  3883  0F25                     	;# 
  3884  0F26                     	;# 
  3885  0F27                     	;# 
  3886  0F28                     	;# 
  3887  0F29                     	;# 
  3888  0F2A                     	;# 
  3889  0F2B                     	;# 
  3890  0F2C                     	;# 
  3891  0F2D                     	;# 
  3892  0F2E                     	;# 
  3893  0F2F                     	;# 
  3894  0F30                     	;# 
  3895  0F31                     	;# 
  3896  0F32                     	;# 
  3897  0F38                     	;# 
  3898  0F39                     	;# 
  3899  0F3A                     	;# 
  3900  0F3B                     	;# 
  3901  0F3C                     	;# 
  3902  0F3D                     	;# 
  3903  0F3E                     	;# 
  3904  0F3F                     	;# 
  3905  0F40                     	;# 
  3906  0F41                     	;# 
  3907  0F43                     	;# 
  3908  0F44                     	;# 
  3909  0F45                     	;# 
  3910  0F46                     	;# 
  3911  0F47                     	;# 
  3912  0F48                     	;# 
  3913  0F49                     	;# 
  3914  0F4A                     	;# 
  3915  0F4B                     	;# 
  3916  0F4C                     	;# 
  3917  0F4E                     	;# 
  3918  0F4F                     	;# 
  3919  0F50                     	;# 
  3920  0F51                     	;# 
  3921  0F52                     	;# 
  3922  0F53                     	;# 
  3923  0F54                     	;# 
  3924  0F55                     	;# 
  3925  0F56                     	;# 
  3926  0F57                     	;# 
  3927  0F59                     	;# 
  3928  0F5A                     	;# 
  3929  0F5B                     	;# 
  3930  0F5C                     	;# 
  3931  0F5D                     	;# 
  3932  0F61                     	;# 
  3933  0F62                     	;# 
  3934  0F64                     	;# 
  3935  0F65                     	;# 
  3936  0F66                     	;# 
  3937  0F67                     	;# 
  3938  0F68                     	;# 
  3939  0F69                     	;# 
  3940  0F6A                     	;# 
  3941  0F6B                     	;# 
  3942  0F6C                     	;# 
  3943  0F6D                     	;# 
  3944  0FE4                     	;# 
  3945  0FE5                     	;# 
  3946  0FE6                     	;# 
  3947  0FE7                     	;# 
  3948  0FE8                     	;# 
  3949  0FE9                     	;# 
  3950  0FEA                     	;# 
  3951  0FEB                     	;# 
  3952  0FED                     	;# 
  3953  0FEE                     	;# 
  3954  0FEF                     	;# 
  3955  0000                     	;# 
  3956  0001                     	;# 
  3957  0002                     	;# 
  3958  0003                     	;# 
  3959  0004                     	;# 
  3960  0005                     	;# 
  3961  0006                     	;# 
  3962  0007                     	;# 
  3963  0008                     	;# 
  3964  0009                     	;# 
  3965  000A                     	;# 
  3966  000B                     	;# 
  3967  000C                     	;# 
  3968  000D                     	;# 
  3969  000E                     	;# 
  3970  000F                     	;# 
  3971  0010                     	;# 
  3972  0011                     	;# 
  3973  0012                     	;# 
  3974  0013                     	;# 
  3975  0014                     	;# 
  3976  0015                     	;# 
  3977  0016                     	;# 
  3978  0017                     	;# 
  3979  0018                     	;# 
  3980  0019                     	;# 
  3981  001A                     	;# 
  3982  001C                     	;# 
  3983  001C                     	;# 
  3984  001D                     	;# 
  3985  001D                     	;# 
  3986  001E                     	;# 
  3987  001F                     	;# 
  3988  008C                     	;# 
  3989  008C                     	;# 
  3990  008D                     	;# 
  3991  008E                     	;# 
  3992  008E                     	;# 
  3993  008F                     	;# 
  3994  0090                     	;# 
  3995  0090                     	;# 
  3996  0091                     	;# 
  3997  0093                     	;# 
  3998  0094                     	;# 
  3999  0095                     	;# 
  4000  0096                     	;# 
  4001  0097                     	;# 
  4002  0098                     	;# 
  4003  0099                     	;# 
  4004  009A                     	;# 
  4005  009B                     	;# 
  4006  009C                     	;# 
  4007  009D                     	;# 
  4008  009E                     	;# 
  4009  010C                     	;# 
  4010  010D                     	;# 
  4011  010E                     	;# 
  4012  010E                     	;# 
  4013  010F                     	;# 
  4014  0110                     	;# 
  4015  0110                     	;# 
  4016  0111                     	;# 
  4017  0112                     	;# 
  4018  0112                     	;# 
  4019  0113                     	;# 
  4020  0114                     	;# 
  4021  0114                     	;# 
  4022  0115                     	;# 
  4023  0116                     	;# 
  4024  0116                     	;# 
  4025  0117                     	;# 
  4026  0119                     	;# 
  4027  0119                     	;# 
  4028  0119                     	;# 
  4029  011A                     	;# 
  4030  011A                     	;# 
  4031  011A                     	;# 
  4032  011B                     	;# 
  4033  011B                     	;# 
  4034  011B                     	;# 
  4035  011B                     	;# 
  4036  011B                     	;# 
  4037  011C                     	;# 
  4038  011C                     	;# 
  4039  011C                     	;# 
  4040  011D                     	;# 
  4041  011D                     	;# 
  4042  011D                     	;# 
  4043  011E                     	;# 
  4044  011E                     	;# 
  4045  011E                     	;# 
  4046  011F                     	;# 
  4047  011F                     	;# 
  4048  011F                     	;# 
  4049  011F                     	;# 
  4050  011F                     	;# 
  4051  018C                     	;# 
  4052  018D                     	;# 
  4053  018E                     	;# 
  4054  018F                     	;# 
  4055  0190                     	;# 
  4056  0191                     	;# 
  4057  0192                     	;# 
  4058  0196                     	;# 
  4059  0197                     	;# 
  4060  0198                     	;# 
  4061  0199                     	;# 
  4062  019A                     	;# 
  4063  019B                     	;# 
  4064  019C                     	;# 
  4065  020C                     	;# 
  4066  020C                     	;# 
  4067  020D                     	;# 
  4068  020E                     	;# 
  4069  020F                     	;# 
  4070  020F                     	;# 
  4071  0210                     	;# 
  4072  0210                     	;# 
  4073  0211                     	;# 
  4074  0211                     	;# 
  4075  0212                     	;# 
  4076  0212                     	;# 
  4077  0213                     	;# 
  4078  0214                     	;# 
  4079  0215                     	;# 
  4080  0215                     	;# 
  4081  0216                     	;# 
  4082  0216                     	;# 
  4083  0217                     	;# 
  4084  0217                     	;# 
  4085  0218                     	;# 
  4086  0218                     	;# 
  4087  0219                     	;# 
  4088  021A                     	;# 
  4089  021B                     	;# 
  4090  021B                     	;# 
  4091  021C                     	;# 
  4092  021C                     	;# 
  4093  021D                     	;# 
  4094  021D                     	;# 
  4095  021E                     	;# 
  4096  021F                     	;# 
  4097  028C                     	;# 
  4098  028C                     	;# 
  4099  028D                     	;# 
  4100  028D                     	;# 
  4101  028E                     	;# 
  4102  028F                     	;# 
  4103  0290                     	;# 
  4104  0290                     	;# 
  4105  0291                     	;# 
  4106  0292                     	;# 
  4107  0292                     	;# 
  4108  0293                     	;# 
  4109  0293                     	;# 
  4110  0294                     	;# 
  4111  0295                     	;# 
  4112  0296                     	;# 
  4113  0296                     	;# 
  4114  0297                     	;# 
  4115  0298                     	;# 
  4116  0298                     	;# 
  4117  0299                     	;# 
  4118  0299                     	;# 
  4119  029A                     	;# 
  4120  029B                     	;# 
  4121  029C                     	;# 
  4122  029C                     	;# 
  4123  029D                     	;# 
  4124  030C                     	;# 
  4125  030C                     	;# 
  4126  030D                     	;# 
  4127  030E                     	;# 
  4128  030F                     	;# 
  4129  0310                     	;# 
  4130  0310                     	;# 
  4131  0311                     	;# 
  4132  0312                     	;# 
  4133  0313                     	;# 
  4134  0314                     	;# 
  4135  0314                     	;# 
  4136  0315                     	;# 
  4137  0316                     	;# 
  4138  0317                     	;# 
  4139  0318                     	;# 
  4140  0318                     	;# 
  4141  0319                     	;# 
  4142  031A                     	;# 
  4143  031B                     	;# 
  4144  031C                     	;# 
  4145  031C                     	;# 
  4146  031D                     	;# 
  4147  031E                     	;# 
  4148  031F                     	;# 
  4149  038C                     	;# 
  4150  038C                     	;# 
  4151  038D                     	;# 
  4152  038E                     	;# 
  4153  0390                     	;# 
  4154  0390                     	;# 
  4155  0391                     	;# 
  4156  0392                     	;# 
  4157  040C                     	;# 
  4158  040D                     	;# 
  4159  040E                     	;# 
  4160  040F                     	;# 
  4161  0410                     	;# 
  4162  0411                     	;# 
  4163  0416                     	;# 
  4164  0416                     	;# 
  4165  0417                     	;# 
  4166  0418                     	;# 
  4167  0418                     	;# 
  4168  0419                     	;# 
  4169  041A                     	;# 
  4170  041A                     	;# 
  4171  041B                     	;# 
  4172  041C                     	;# 
  4173  041C                     	;# 
  4174  041D                     	;# 
  4175  041E                     	;# 
  4176  041F                     	;# 
  4177  048C                     	;# 
  4178  048C                     	;# 
  4179  048D                     	;# 
  4180  048E                     	;# 
  4181  048F                     	;# 
  4182  048F                     	;# 
  4183  0490                     	;# 
  4184  0491                     	;# 
  4185  0492                     	;# 
  4186  0492                     	;# 
  4187  0493                     	;# 
  4188  0494                     	;# 
  4189  0495                     	;# 
  4190  0495                     	;# 
  4191  0496                     	;# 
  4192  0497                     	;# 
  4193  0498                     	;# 
  4194  0499                     	;# 
  4195  049A                     	;# 
  4196  049B                     	;# 
  4197  049C                     	;# 
  4198  049D                     	;# 
  4199  050C                     	;# 
  4200  050C                     	;# 
  4201  050D                     	;# 
  4202  050E                     	;# 
  4203  050F                     	;# 
  4204  050F                     	;# 
  4205  0510                     	;# 
  4206  0511                     	;# 
  4207  0512                     	;# 
  4208  0512                     	;# 
  4209  0513                     	;# 
  4210  0514                     	;# 
  4211  0515                     	;# 
  4212  0515                     	;# 
  4213  0516                     	;# 
  4214  0517                     	;# 
  4215  0518                     	;# 
  4216  0519                     	;# 
  4217  051A                     	;# 
  4218  051B                     	;# 
  4219  051C                     	;# 
  4220  051D                     	;# 
  4221  058C                     	;# 
  4222  058C                     	;# 
  4223  058D                     	;# 
  4224  058E                     	;# 
  4225  058F                     	;# 
  4226  058F                     	;# 
  4227  0590                     	;# 
  4228  0591                     	;# 
  4229  0592                     	;# 
  4230  0593                     	;# 
  4231  060C                     	;# 
  4232  060D                     	;# 
  4233  060E                     	;# 
  4234  060F                     	;# 
  4235  0610                     	;# 
  4236  0611                     	;# 
  4237  0612                     	;# 
  4238  0613                     	;# 
  4239  0614                     	;# 
  4240  0616                     	;# 
  4241  0617                     	;# 
  4242  0618                     	;# 
  4243  0619                     	;# 
  4244  061A                     	;# 
  4245  061B                     	;# 
  4246  061C                     	;# 
  4247  061D                     	;# 
  4248  061E                     	;# 
  4249  068C                     	;# 
  4250  068D                     	;# 
  4251  068E                     	;# 
  4252  068F                     	;# 
  4253  0690                     	;# 
  4254  0691                     	;# 
  4255  0692                     	;# 
  4256  0693                     	;# 
  4257  0694                     	;# 
  4258  070C                     	;# 
  4259  070D                     	;# 
  4260  070E                     	;# 
  4261  070F                     	;# 
  4262  0710                     	;# 
  4263  0711                     	;# 
  4264  0712                     	;# 
  4265  0713                     	;# 
  4266  0714                     	;# 
  4267  0716                     	;# 
  4268  0717                     	;# 
  4269  0718                     	;# 
  4270  0719                     	;# 
  4271  071A                     	;# 
  4272  071B                     	;# 
  4273  071C                     	;# 
  4274  071D                     	;# 
  4275  071E                     	;# 
  4276  0796                     	;# 
  4277  0797                     	;# 
  4278  0798                     	;# 
  4279  0799                     	;# 
  4280  079A                     	;# 
  4281  079B                     	;# 
  4282  080C                     	;# 
  4283  080D                     	;# 
  4284  080E                     	;# 
  4285  080F                     	;# 
  4286  0810                     	;# 
  4287  0811                     	;# 
  4288  0812                     	;# 
  4289  0813                     	;# 
  4290  0814                     	;# 
  4291  081A                     	;# 
  4292  081B                     	;# 
  4293  081C                     	;# 
  4294  081D                     	;# 
  4295  081E                     	;# 
  4296  081F                     	;# 
  4297  088C                     	;# 
  4298  088D                     	;# 
  4299  088E                     	;# 
  4300  088F                     	;# 
  4301  0890                     	;# 
  4302  0891                     	;# 
  4303  0892                     	;# 
  4304  0893                     	;# 
  4305  0895                     	;# 
  4306  0896                     	;# 
  4307  0897                     	;# 
  4308  0898                     	;# 
  4309  0899                     	;# 
  4310  089A                     	;# 
  4311  089B                     	;# 
  4312  090C                     	;# 
  4313  090E                     	;# 
  4314  090F                     	;# 
  4315  091F                     	;# 
  4316  091F                     	;# 
  4317  098F                     	;# 
  4318  098F                     	;# 
  4319  0990                     	;# 
  4320  0991                     	;# 
  4321  0992                     	;# 
  4322  0993                     	;# 
  4323  0994                     	;# 
  4324  0995                     	;# 
  4325  0996                     	;# 
  4326  0997                     	;# 
  4327  0E0F                     	;# 
  4328  0E10                     	;# 
  4329  0E11                     	;# 
  4330  0E12                     	;# 
  4331  0E13                     	;# 
  4332  0E14                     	;# 
  4333  0E15                     	;# 
  4334  0E16                     	;# 
  4335  0E17                     	;# 
  4336  0E18                     	;# 
  4337  0E19                     	;# 
  4338  0E1A                     	;# 
  4339  0E1B                     	;# 
  4340  0E1C                     	;# 
  4341  0E1D                     	;# 
  4342  0E1E                     	;# 
  4343  0E1F                     	;# 
  4344  0E20                     	;# 
  4345  0E21                     	;# 
  4346  0E22                     	;# 
  4347  0E23                     	;# 
  4348  0E24                     	;# 
  4349  0E25                     	;# 
  4350  0E26                     	;# 
  4351  0E27                     	;# 
  4352  0E28                     	;# 
  4353  0E29                     	;# 
  4354  0E2A                     	;# 
  4355  0E2B                     	;# 
  4356  0E2C                     	;# 
  4357  0E2D                     	;# 
  4358  0E2E                     	;# 
  4359  0E2F                     	;# 
  4360  0E30                     	;# 
  4361  0E31                     	;# 
  4362  0E32                     	;# 
  4363  0E33                     	;# 
  4364  0E34                     	;# 
  4365  0E35                     	;# 
  4366  0E36                     	;# 
  4367  0E37                     	;# 
  4368  0E8F                     	;# 
  4369  0E90                     	;# 
  4370  0E91                     	;# 
  4371  0E92                     	;# 
  4372  0E93                     	;# 
  4373  0E94                     	;# 
  4374  0E95                     	;# 
  4375  0E96                     	;# 
  4376  0E97                     	;# 
  4377  0E9C                     	;# 
  4378  0E9D                     	;# 
  4379  0E9E                     	;# 
  4380  0EA1                     	;# 
  4381  0EA2                     	;# 
  4382  0EA3                     	;# 
  4383  0EA4                     	;# 
  4384  0EA5                     	;# 
  4385  0EA9                     	;# 
  4386  0EAA                     	;# 
  4387  0EAB                     	;# 
  4388  0EAC                     	;# 
  4389  0EB1                     	;# 
  4390  0EB2                     	;# 
  4391  0EB3                     	;# 
  4392  0EB8                     	;# 
  4393  0EB9                     	;# 
  4394  0EBA                     	;# 
  4395  0EBB                     	;# 
  4396  0EBC                     	;# 
  4397  0EBD                     	;# 
  4398  0EBE                     	;# 
  4399  0EC3                     	;# 
  4400  0EC5                     	;# 
  4401  0EC6                     	;# 
  4402  0EC7                     	;# 
  4403  0EC8                     	;# 
  4404  0EC9                     	;# 
  4405  0ECA                     	;# 
  4406  0ECB                     	;# 
  4407  0ECC                     	;# 
  4408  0F10                     	;# 
  4409  0F11                     	;# 
  4410  0F12                     	;# 
  4411  0F13                     	;# 
  4412  0F14                     	;# 
  4413  0F15                     	;# 
  4414  0F16                     	;# 
  4415  0F17                     	;# 
  4416  0F18                     	;# 
  4417  0F19                     	;# 
  4418  0F1A                     	;# 
  4419  0F1B                     	;# 
  4420  0F1C                     	;# 
  4421  0F1D                     	;# 
  4422  0F1E                     	;# 
  4423  0F1F                     	;# 
  4424  0F20                     	;# 
  4425  0F21                     	;# 
  4426  0F22                     	;# 
  4427  0F23                     	;# 
  4428  0F24                     	;# 
  4429  0F25                     	;# 
  4430  0F26                     	;# 
  4431  0F27                     	;# 
  4432  0F28                     	;# 
  4433  0F29                     	;# 
  4434  0F2A                     	;# 
  4435  0F2B                     	;# 
  4436  0F2C                     	;# 
  4437  0F2D                     	;# 
  4438  0F2E                     	;# 
  4439  0F2F                     	;# 
  4440  0F30                     	;# 
  4441  0F31                     	;# 
  4442  0F32                     	;# 
  4443  0F38                     	;# 
  4444  0F39                     	;# 
  4445  0F3A                     	;# 
  4446  0F3B                     	;# 
  4447  0F3C                     	;# 
  4448  0F3D                     	;# 
  4449  0F3E                     	;# 
  4450  0F3F                     	;# 
  4451  0F40                     	;# 
  4452  0F41                     	;# 
  4453  0F43                     	;# 
  4454  0F44                     	;# 
  4455  0F45                     	;# 
  4456  0F46                     	;# 
  4457  0F47                     	;# 
  4458  0F48                     	;# 
  4459  0F49                     	;# 
  4460  0F4A                     	;# 
  4461  0F4B                     	;# 
  4462  0F4C                     	;# 
  4463  0F4E                     	;# 
  4464  0F4F                     	;# 
  4465  0F50                     	;# 
  4466  0F51                     	;# 
  4467  0F52                     	;# 
  4468  0F53                     	;# 
  4469  0F54                     	;# 
  4470  0F55                     	;# 
  4471  0F56                     	;# 
  4472  0F57                     	;# 
  4473  0F59                     	;# 
  4474  0F5A                     	;# 
  4475  0F5B                     	;# 
  4476  0F5C                     	;# 
  4477  0F5D                     	;# 
  4478  0F61                     	;# 
  4479  0F62                     	;# 
  4480  0F64                     	;# 
  4481  0F65                     	;# 
  4482  0F66                     	;# 
  4483  0F67                     	;# 
  4484  0F68                     	;# 
  4485  0F69                     	;# 
  4486  0F6A                     	;# 
  4487  0F6B                     	;# 
  4488  0F6C                     	;# 
  4489  0F6D                     	;# 
  4490  0FE4                     	;# 
  4491  0FE5                     	;# 
  4492  0FE6                     	;# 
  4493  0FE7                     	;# 
  4494  0FE8                     	;# 
  4495  0FE9                     	;# 
  4496  0FEA                     	;# 
  4497  0FEB                     	;# 
  4498  0FED                     	;# 
  4499  0FEE                     	;# 
  4500  0FEF                     	;# 
  4501  0000                     	;# 
  4502  0001                     	;# 
  4503  0002                     	;# 
  4504  0003                     	;# 
  4505  0004                     	;# 
  4506  0005                     	;# 
  4507  0006                     	;# 
  4508  0007                     	;# 
  4509  0008                     	;# 
  4510  0009                     	;# 
  4511  000A                     	;# 
  4512  000B                     	;# 
  4513  000C                     	;# 
  4514  000D                     	;# 
  4515  000E                     	;# 
  4516  000F                     	;# 
  4517  0010                     	;# 
  4518  0011                     	;# 
  4519  0012                     	;# 
  4520  0013                     	;# 
  4521  0014                     	;# 
  4522  0015                     	;# 
  4523  0016                     	;# 
  4524  0017                     	;# 
  4525  0018                     	;# 
  4526  0019                     	;# 
  4527  001A                     	;# 
  4528  001C                     	;# 
  4529  001C                     	;# 
  4530  001D                     	;# 
  4531  001D                     	;# 
  4532  001E                     	;# 
  4533  001F                     	;# 
  4534  008C                     	;# 
  4535  008C                     	;# 
  4536  008D                     	;# 
  4537  008E                     	;# 
  4538  008E                     	;# 
  4539  008F                     	;# 
  4540  0090                     	;# 
  4541  0090                     	;# 
  4542  0091                     	;# 
  4543  0093                     	;# 
  4544  0094                     	;# 
  4545  0095                     	;# 
  4546  0096                     	;# 
  4547  0097                     	;# 
  4548  0098                     	;# 
  4549  0099                     	;# 
  4550  009A                     	;# 
  4551  009B                     	;# 
  4552  009C                     	;# 
  4553  009D                     	;# 
  4554  009E                     	;# 
  4555  010C                     	;# 
  4556  010D                     	;# 
  4557  010E                     	;# 
  4558  010E                     	;# 
  4559  010F                     	;# 
  4560  0110                     	;# 
  4561  0110                     	;# 
  4562  0111                     	;# 
  4563  0112                     	;# 
  4564  0112                     	;# 
  4565  0113                     	;# 
  4566  0114                     	;# 
  4567  0114                     	;# 
  4568  0115                     	;# 
  4569  0116                     	;# 
  4570  0116                     	;# 
  4571  0117                     	;# 
  4572  0119                     	;# 
  4573  0119                     	;# 
  4574  0119                     	;# 
  4575  011A                     	;# 
  4576  011A                     	;# 
  4577  011A                     	;# 
  4578  011B                     	;# 
  4579  011B                     	;# 
  4580  011B                     	;# 
  4581  011B                     	;# 
  4582  011B                     	;# 
  4583  011C                     	;# 
  4584  011C                     	;# 
  4585  011C                     	;# 
  4586  011D                     	;# 
  4587  011D                     	;# 
  4588  011D                     	;# 
  4589  011E                     	;# 
  4590  011E                     	;# 
  4591  011E                     	;# 
  4592  011F                     	;# 
  4593  011F                     	;# 
  4594  011F                     	;# 
  4595  011F                     	;# 
  4596  011F                     	;# 
  4597  018C                     	;# 
  4598  018D                     	;# 
  4599  018E                     	;# 
  4600  018F                     	;# 
  4601  0190                     	;# 
  4602  0191                     	;# 
  4603  0192                     	;# 
  4604  0196                     	;# 
  4605  0197                     	;# 
  4606  0198                     	;# 
  4607  0199                     	;# 
  4608  019A                     	;# 
  4609  019B                     	;# 
  4610  019C                     	;# 
  4611  020C                     	;# 
  4612  020C                     	;# 
  4613  020D                     	;# 
  4614  020E                     	;# 
  4615  020F                     	;# 
  4616  020F                     	;# 
  4617  0210                     	;# 
  4618  0210                     	;# 
  4619  0211                     	;# 
  4620  0211                     	;# 
  4621  0212                     	;# 
  4622  0212                     	;# 
  4623  0213                     	;# 
  4624  0214                     	;# 
  4625  0215                     	;# 
  4626  0215                     	;# 
  4627  0216                     	;# 
  4628  0216                     	;# 
  4629  0217                     	;# 
  4630  0217                     	;# 
  4631  0218                     	;# 
  4632  0218                     	;# 
  4633  0219                     	;# 
  4634  021A                     	;# 
  4635  021B                     	;# 
  4636  021B                     	;# 
  4637  021C                     	;# 
  4638  021C                     	;# 
  4639  021D                     	;# 
  4640  021D                     	;# 
  4641  021E                     	;# 
  4642  021F                     	;# 
  4643  028C                     	;# 
  4644  028C                     	;# 
  4645  028D                     	;# 
  4646  028D                     	;# 
  4647  028E                     	;# 
  4648  028F                     	;# 
  4649  0290                     	;# 
  4650  0290                     	;# 
  4651  0291                     	;# 
  4652  0292                     	;# 
  4653  0292                     	;# 
  4654  0293                     	;# 
  4655  0293                     	;# 
  4656  0294                     	;# 
  4657  0295                     	;# 
  4658  0296                     	;# 
  4659  0296                     	;# 
  4660  0297                     	;# 
  4661  0298                     	;# 
  4662  0298                     	;# 
  4663  0299                     	;# 
  4664  0299                     	;# 
  4665  029A                     	;# 
  4666  029B                     	;# 
  4667  029C                     	;# 
  4668  029C                     	;# 
  4669  029D                     	;# 
  4670  030C                     	;# 
  4671  030C                     	;# 
  4672  030D                     	;# 
  4673  030E                     	;# 
  4674  030F                     	;# 
  4675  0310                     	;# 
  4676  0310                     	;# 
  4677  0311                     	;# 
  4678  0312                     	;# 
  4679  0313                     	;# 
  4680  0314                     	;# 
  4681  0314                     	;# 
  4682  0315                     	;# 
  4683  0316                     	;# 
  4684  0317                     	;# 
  4685  0318                     	;# 
  4686  0318                     	;# 
  4687  0319                     	;# 
  4688  031A                     	;# 
  4689  031B                     	;# 
  4690  031C                     	;# 
  4691  031C                     	;# 
  4692  031D                     	;# 
  4693  031E                     	;# 
  4694  031F                     	;# 
  4695  038C                     	;# 
  4696  038C                     	;# 
  4697  038D                     	;# 
  4698  038E                     	;# 
  4699  0390                     	;# 
  4700  0390                     	;# 
  4701  0391                     	;# 
  4702  0392                     	;# 
  4703  040C                     	;# 
  4704  040D                     	;# 
  4705  040E                     	;# 
  4706  040F                     	;# 
  4707  0410                     	;# 
  4708  0411                     	;# 
  4709  0416                     	;# 
  4710  0416                     	;# 
  4711  0417                     	;# 
  4712  0418                     	;# 
  4713  0418                     	;# 
  4714  0419                     	;# 
  4715  041A                     	;# 
  4716  041A                     	;# 
  4717  041B                     	;# 
  4718  041C                     	;# 
  4719  041C                     	;# 
  4720  041D                     	;# 
  4721  041E                     	;# 
  4722  041F                     	;# 
  4723  048C                     	;# 
  4724  048C                     	;# 
  4725  048D                     	;# 
  4726  048E                     	;# 
  4727  048F                     	;# 
  4728  048F                     	;# 
  4729  0490                     	;# 
  4730  0491                     	;# 
  4731  0492                     	;# 
  4732  0492                     	;# 
  4733  0493                     	;# 
  4734  0494                     	;# 
  4735  0495                     	;# 
  4736  0495                     	;# 
  4737  0496                     	;# 
  4738  0497                     	;# 
  4739  0498                     	;# 
  4740  0499                     	;# 
  4741  049A                     	;# 
  4742  049B                     	;# 
  4743  049C                     	;# 
  4744  049D                     	;# 
  4745  050C                     	;# 
  4746  050C                     	;# 
  4747  050D                     	;# 
  4748  050E                     	;# 
  4749  050F                     	;# 
  4750  050F                     	;# 
  4751  0510                     	;# 
  4752  0511                     	;# 
  4753  0512                     	;# 
  4754  0512                     	;# 
  4755  0513                     	;# 
  4756  0514                     	;# 
  4757  0515                     	;# 
  4758  0515                     	;# 
  4759  0516                     	;# 
  4760  0517                     	;# 
  4761  0518                     	;# 
  4762  0519                     	;# 
  4763  051A                     	;# 
  4764  051B                     	;# 
  4765  051C                     	;# 
  4766  051D                     	;# 
  4767  058C                     	;# 
  4768  058C                     	;# 
  4769  058D                     	;# 
  4770  058E                     	;# 
  4771  058F                     	;# 
  4772  058F                     	;# 
  4773  0590                     	;# 
  4774  0591                     	;# 
  4775  0592                     	;# 
  4776  0593                     	;# 
  4777  060C                     	;# 
  4778  060D                     	;# 
  4779  060E                     	;# 
  4780  060F                     	;# 
  4781  0610                     	;# 
  4782  0611                     	;# 
  4783  0612                     	;# 
  4784  0613                     	;# 
  4785  0614                     	;# 
  4786  0616                     	;# 
  4787  0617                     	;# 
  4788  0618                     	;# 
  4789  0619                     	;# 
  4790  061A                     	;# 
  4791  061B                     	;# 
  4792  061C                     	;# 
  4793  061D                     	;# 
  4794  061E                     	;# 
  4795  068C                     	;# 
  4796  068D                     	;# 
  4797  068E                     	;# 
  4798  068F                     	;# 
  4799  0690                     	;# 
  4800  0691                     	;# 
  4801  0692                     	;# 
  4802  0693                     	;# 
  4803  0694                     	;# 
  4804  070C                     	;# 
  4805  070D                     	;# 
  4806  070E                     	;# 
  4807  070F                     	;# 
  4808  0710                     	;# 
  4809  0711                     	;# 
  4810  0712                     	;# 
  4811  0713                     	;# 
  4812  0714                     	;# 
  4813  0716                     	;# 
  4814  0717                     	;# 
  4815  0718                     	;# 
  4816  0719                     	;# 
  4817  071A                     	;# 
  4818  071B                     	;# 
  4819  071C                     	;# 
  4820  071D                     	;# 
  4821  071E                     	;# 
  4822  0796                     	;# 
  4823  0797                     	;# 
  4824  0798                     	;# 
  4825  0799                     	;# 
  4826  079A                     	;# 
  4827  079B                     	;# 
  4828  080C                     	;# 
  4829  080D                     	;# 
  4830  080E                     	;# 
  4831  080F                     	;# 
  4832  0810                     	;# 
  4833  0811                     	;# 
  4834  0812                     	;# 
  4835  0813                     	;# 
  4836  0814                     	;# 
  4837  081A                     	;# 
  4838  081B                     	;# 
  4839  081C                     	;# 
  4840  081D                     	;# 
  4841  081E                     	;# 
  4842  081F                     	;# 
  4843  088C                     	;# 
  4844  088D                     	;# 
  4845  088E                     	;# 
  4846  088F                     	;# 
  4847  0890                     	;# 
  4848  0891                     	;# 
  4849  0892                     	;# 
  4850  0893                     	;# 
  4851  0895                     	;# 
  4852  0896                     	;# 
  4853  0897                     	;# 
  4854  0898                     	;# 
  4855  0899                     	;# 
  4856  089A                     	;# 
  4857  089B                     	;# 
  4858  090C                     	;# 
  4859  090E                     	;# 
  4860  090F                     	;# 
  4861  091F                     	;# 
  4862  091F                     	;# 
  4863  098F                     	;# 
  4864  098F                     	;# 
  4865  0990                     	;# 
  4866  0991                     	;# 
  4867  0992                     	;# 
  4868  0993                     	;# 
  4869  0994                     	;# 
  4870  0995                     	;# 
  4871  0996                     	;# 
  4872  0997                     	;# 
  4873  0E0F                     	;# 
  4874  0E10                     	;# 
  4875  0E11                     	;# 
  4876  0E12                     	;# 
  4877  0E13                     	;# 
  4878  0E14                     	;# 
  4879  0E15                     	;# 
  4880  0E16                     	;# 
  4881  0E17                     	;# 
  4882  0E18                     	;# 
  4883  0E19                     	;# 
  4884  0E1A                     	;# 
  4885  0E1B                     	;# 
  4886  0E1C                     	;# 
  4887  0E1D                     	;# 
  4888  0E1E                     	;# 
  4889  0E1F                     	;# 
  4890  0E20                     	;# 
  4891  0E21                     	;# 
  4892  0E22                     	;# 
  4893  0E23                     	;# 
  4894  0E24                     	;# 
  4895  0E25                     	;# 
  4896  0E26                     	;# 
  4897  0E27                     	;# 
  4898  0E28                     	;# 
  4899  0E29                     	;# 
  4900  0E2A                     	;# 
  4901  0E2B                     	;# 
  4902  0E2C                     	;# 
  4903  0E2D                     	;# 
  4904  0E2E                     	;# 
  4905  0E2F                     	;# 
  4906  0E30                     	;# 
  4907  0E31                     	;# 
  4908  0E32                     	;# 
  4909  0E33                     	;# 
  4910  0E34                     	;# 
  4911  0E35                     	;# 
  4912  0E36                     	;# 
  4913  0E37                     	;# 
  4914  0E8F                     	;# 
  4915  0E90                     	;# 
  4916  0E91                     	;# 
  4917  0E92                     	;# 
  4918  0E93                     	;# 
  4919  0E94                     	;# 
  4920  0E95                     	;# 
  4921  0E96                     	;# 
  4922  0E97                     	;# 
  4923  0E9C                     	;# 
  4924  0E9D                     	;# 
  4925  0E9E                     	;# 
  4926  0EA1                     	;# 
  4927  0EA2                     	;# 
  4928  0EA3                     	;# 
  4929  0EA4                     	;# 
  4930  0EA5                     	;# 
  4931  0EA9                     	;# 
  4932  0EAA                     	;# 
  4933  0EAB                     	;# 
  4934  0EAC                     	;# 
  4935  0EB1                     	;# 
  4936  0EB2                     	;# 
  4937  0EB3                     	;# 
  4938  0EB8                     	;# 
  4939  0EB9                     	;# 
  4940  0EBA                     	;# 
  4941  0EBB                     	;# 
  4942  0EBC                     	;# 
  4943  0EBD                     	;# 
  4944  0EBE                     	;# 
  4945  0EC3                     	;# 
  4946  0EC5                     	;# 
  4947  0EC6                     	;# 
  4948  0EC7                     	;# 
  4949  0EC8                     	;# 
  4950  0EC9                     	;# 
  4951  0ECA                     	;# 
  4952  0ECB                     	;# 
  4953  0ECC                     	;# 
  4954  0F10                     	;# 
  4955  0F11                     	;# 
  4956  0F12                     	;# 
  4957  0F13                     	;# 
  4958  0F14                     	;# 
  4959  0F15                     	;# 
  4960  0F16                     	;# 
  4961  0F17                     	;# 
  4962  0F18                     	;# 
  4963  0F19                     	;# 
  4964  0F1A                     	;# 
  4965  0F1B                     	;# 
  4966  0F1C                     	;# 
  4967  0F1D                     	;# 
  4968  0F1E                     	;# 
  4969  0F1F                     	;# 
  4970  0F20                     	;# 
  4971  0F21                     	;# 
  4972  0F22                     	;# 
  4973  0F23                     	;# 
  4974  0F24                     	;# 
  4975  0F25                     	;# 
  4976  0F26                     	;# 
  4977  0F27                     	;# 
  4978  0F28                     	;# 
  4979  0F29                     	;# 
  4980  0F2A                     	;# 
  4981  0F2B                     	;# 
  4982  0F2C                     	;# 
  4983  0F2D                     	;# 
  4984  0F2E                     	;# 
  4985  0F2F                     	;# 
  4986  0F30                     	;# 
  4987  0F31                     	;# 
  4988  0F32                     	;# 
  4989  0F38                     	;# 
  4990  0F39                     	;# 
  4991  0F3A                     	;# 
  4992  0F3B                     	;# 
  4993  0F3C                     	;# 
  4994  0F3D                     	;# 
  4995  0F3E                     	;# 
  4996  0F3F                     	;# 
  4997  0F40                     	;# 
  4998  0F41                     	;# 
  4999  0F43                     	;# 
  5000  0F44                     	;# 
  5001  0F45                     	;# 
  5002  0F46                     	;# 
  5003  0F47                     	;# 
  5004  0F48                     	;# 
  5005  0F49                     	;# 
  5006  0F4A                     	;# 
  5007  0F4B                     	;# 
  5008  0F4C                     	;# 
  5009  0F4E                     	;# 
  5010  0F4F                     	;# 
  5011  0F50                     	;# 
  5012  0F51                     	;# 
  5013  0F52                     	;# 
  5014  0F53                     	;# 
  5015  0F54                     	;# 
  5016  0F55                     	;# 
  5017  0F56                     	;# 
  5018  0F57                     	;# 
  5019  0F59                     	;# 
  5020  0F5A                     	;# 
  5021  0F5B                     	;# 
  5022  0F5C                     	;# 
  5023  0F5D                     	;# 
  5024  0F61                     	;# 
  5025  0F62                     	;# 
  5026  0F64                     	;# 
  5027  0F65                     	;# 
  5028  0F66                     	;# 
  5029  0F67                     	;# 
  5030  0F68                     	;# 
  5031  0F69                     	;# 
  5032  0F6A                     	;# 
  5033  0F6B                     	;# 
  5034  0F6C                     	;# 
  5035  0F6D                     	;# 
  5036  0FE4                     	;# 
  5037  0FE5                     	;# 
  5038  0FE6                     	;# 
  5039  0FE7                     	;# 
  5040  0FE8                     	;# 
  5041  0FE9                     	;# 
  5042  0FEA                     	;# 
  5043  0FEB                     	;# 
  5044  0FED                     	;# 
  5045  0FEE                     	;# 
  5046  0FEF                     	;# 
  5047                           
  5048 ;; Function _sensor_ISR is unused but had its address taken
  5049  0000                     
  5050                           	psect	stringtext1
  5051  0000'                    __pstringtext1:
  5052  0000'                    __powers_:
  5053  0000' 3400               	retlw	0
  5054  0001' 3400               	retlw	0
  5055  0002' 3480               	retlw	128
  5056  0003' 343F               	retlw	63
  5057  0004' 3400               	retlw	0
  5058  0005' 3400               	retlw	0
  5059  0006' 3420               	retlw	32
  5060  0007' 3441               	retlw	65
  5061  0008' 3400               	retlw	0
  5062  0009' 3400               	retlw	0
  5063  000A' 34C8               	retlw	200
  5064  000B' 3442               	retlw	66
  5065  000C' 3400               	retlw	0
  5066  000D' 3400               	retlw	0
  5067  000E' 347A               	retlw	122
  5068  000F' 3444               	retlw	68
  5069  0010' 3400               	retlw	0
  5070  0011' 3440               	retlw	64
  5071  0012' 341C               	retlw	28
  5072  0013' 3446               	retlw	70
  5073  0014' 3400               	retlw	0
  5074  0015' 3450               	retlw	80
  5075  0016' 34C3               	retlw	195
  5076  0017' 3447               	retlw	71
  5077  0018' 3400               	retlw	0
  5078  0019' 3424               	retlw	36
  5079  001A' 3474               	retlw	116
  5080  001B' 3449               	retlw	73
  5081  001C' 3480               	retlw	128
  5082  001D' 3496               	retlw	150
  5083  001E' 3418               	retlw	24
  5084  001F' 344B               	retlw	75
  5085  0020' 3420               	retlw	32
  5086  0021' 34BC               	retlw	188
  5087  0022' 34BE               	retlw	190
  5088  0023' 344C               	retlw	76
  5089  0024' 3428               	retlw	40
  5090  0025' 346B               	retlw	107
  5091  0026' 346E               	retlw	110
  5092  0027' 344E               	retlw	78
  5093  0028' 34F9               	retlw	249
  5094  0029' 3402               	retlw	2
  5095  002A' 3415               	retlw	21
  5096  002B' 3450               	retlw	80
  5097  002C' 34EC               	retlw	236
  5098  002D' 3478               	retlw	120
  5099  002E' 34AD               	retlw	173
  5100  002F' 3460               	retlw	96
  5101  0030' 34CA               	retlw	202
  5102  0031' 34F2               	retlw	242
  5103  0032' 3449               	retlw	73
  5104  0033' 3471               	retlw	113
  5105  0034'                    __end_of__powers_:
  5106                           
  5107                           	psect	stringtext2
  5108  0000'                    __pstringtext2:
  5109  0000'                    __npowers_:
  5110  0000' 3400               	retlw	0
  5111  0001' 3400               	retlw	0
  5112  0002' 3480               	retlw	128
  5113  0003' 343F               	retlw	63
  5114  0004' 34CD               	retlw	205
  5115  0005' 34CC               	retlw	204
  5116  0006' 34CC               	retlw	204
  5117  0007' 343D               	retlw	61
  5118  0008' 340A               	retlw	10
  5119  0009' 34D7               	retlw	215
  5120  000A' 3423               	retlw	35
  5121  000B' 343C               	retlw	60
  5122  000C' 346F               	retlw	111
  5123  000D' 3412               	retlw	18
  5124  000E' 3483               	retlw	131
  5125  000F' 343A               	retlw	58
  5126  0010' 3417               	retlw	23
  5127  0011' 34B7               	retlw	183
  5128  0012' 34D1               	retlw	209
  5129  0013' 3438               	retlw	56
  5130  0014' 34AC               	retlw	172
  5131  0015' 34C5               	retlw	197
  5132  0016' 3427               	retlw	39
  5133  0017' 3437               	retlw	55
  5134  0018' 34BD               	retlw	189
  5135  0019' 3437               	retlw	55
  5136  001A' 3486               	retlw	134
  5137  001B' 3435               	retlw	53
  5138  001C' 3495               	retlw	149
  5139  001D' 34BF               	retlw	191
  5140  001E' 34D6               	retlw	214
  5141  001F' 3433               	retlw	51
  5142  0020' 3477               	retlw	119
  5143  0021' 34CC               	retlw	204
  5144  0022' 342B               	retlw	43
  5145  0023' 3432               	retlw	50
  5146  0024' 345F               	retlw	95
  5147  0025' 3470               	retlw	112
  5148  0026' 3489               	retlw	137
  5149  0027' 3430               	retlw	48
  5150  0028' 34FF               	retlw	255
  5151  0029' 34E6               	retlw	230
  5152  002A' 34DB               	retlw	219
  5153  002B' 342E               	retlw	46
  5154  002C' 3408               	retlw	8
  5155  002D' 34E5               	retlw	229
  5156  002E' 343C               	retlw	60
  5157  002F' 341E               	retlw	30
  5158  0030' 3460               	retlw	96
  5159  0031' 3442               	retlw	66
  5160  0032' 34A2               	retlw	162
  5161  0033' 340D               	retlw	13
  5162  0034'                    __end_of__npowers_:
  5163                           
  5164                           	psect	stringtext3
  5165  0000'                    __pstringtext3:
  5166  0000'                    _dpowers:
  5167  0000' 3401               	retlw	1
  5168  0001' 3400               	retlw	0
  5169  0002' 3400               	retlw	0
  5170  0003' 3400               	retlw	0
  5171  0004' 340A               	retlw	10
  5172  0005' 3400               	retlw	0
  5173  0006' 3400               	retlw	0
  5174  0007' 3400               	retlw	0
  5175  0008' 3464               	retlw	100
  5176  0009' 3400               	retlw	0
  5177  000A' 3400               	retlw	0
  5178  000B' 3400               	retlw	0
  5179  000C' 34E8               	retlw	232
  5180  000D' 3403               	retlw	3
  5181  000E' 3400               	retlw	0
  5182  000F' 3400               	retlw	0
  5183  0010' 3410               	retlw	16
  5184  0011' 3427               	retlw	39
  5185  0012' 3400               	retlw	0
  5186  0013' 3400               	retlw	0
  5187  0014' 34A0               	retlw	160
  5188  0015' 3486               	retlw	134
  5189  0016' 3401               	retlw	1
  5190  0017' 3400               	retlw	0
  5191  0018' 3440               	retlw	64
  5192  0019' 3442               	retlw	66
  5193  001A' 340F               	retlw	15
  5194  001B' 3400               	retlw	0
  5195  001C' 3480               	retlw	128
  5196  001D' 3496               	retlw	150
  5197  001E' 3498               	retlw	152
  5198  001F' 3400               	retlw	0
  5199  0020' 3400               	retlw	0
  5200  0021' 34E1               	retlw	225
  5201  0022' 34F5               	retlw	245
  5202  0023' 3405               	retlw	5
  5203  0024' 3400               	retlw	0
  5204  0025' 34CA               	retlw	202
  5205  0026' 349A               	retlw	154
  5206  0027' 343B               	retlw	59
  5207  0028'                    __end_of_dpowers:
  5208                           
  5209                           	psect	nvBANK1
  5210  0000'                    __pnvBANK1:
  5211  0000'                    _TMR1_InterruptHandler:
  5212  0000'                    	ds	2
  5213  0002'                    _timer1ReloadVal:
  5214  0002'                    	ds	2
  5215  0013                     _TRISCbits	set	19
  5216  000B                     _INTCONbits	set	11
  5217  0014                     _TRISD	set	20
  5218  0013                     _TRISC	set	19
  5219  0012                     _TRISB	set	18
  5220  0011                     _TRISA	set	17
  5221  0015                     _TRISE	set	21
  5222  0018                     _LATC	set	24
  5223  0017                     _LATB	set	23
  5224  0016                     _LATA	set	22
  5225  0019                     _LATD	set	25
  5226  001A                     _LATE	set	26
  5227  0094                     _ADCON1bits	set	148
  5228  008E                     _ADPREVL	set	142
  5229  008F                     _ADPREVH	set	143
  5230  0097                     _ADSTATbits	set	151
  5231  0090                     _ADACCL	set	144
  5232  0091                     _ADACCH	set	145
  5233  0095                     _ADCON2bits	set	149
  5234  009C                     _ADPRE	set	156
  5235  0096                     _ADCON3bits	set	150
  5236  008C                     _ADRESL	set	140
  5237  008D                     _ADRESH	set	141
  5238  0093                     _ADCON0bits	set	147
  5239  009D                     _ADACQ	set	157
  5240  0093                     _ADCON0	set	147
  5241  0098                     _ADCLK	set	152
  5242  0099                     _ADACT	set	153
  5243  009A                     _ADREF	set	154
  5244  0097                     _ADSTAT	set	151
  5245  0096                     _ADCON3	set	150
  5246  0095                     _ADCON2	set	149
  5247  0094                     _ADCON1	set	148
  5248  009B                     _ADCAP	set	155
  5249  009E                     _ADPCH	set	158
  5250  0116                     _ADERRL	set	278
  5251  0117                     _ADERRH	set	279
  5252  0114                     _ADFLTRL	set	276
  5253  0115                     _ADFLTRH	set	277
  5254  010C                     _ADCNT	set	268
  5255  010D                     _ADRPT	set	269
  5256  0113                     _ADSTPTH	set	275
  5257  0112                     _ADSTPTL	set	274
  5258  0111                     _ADUTHH	set	273
  5259  0110                     _ADUTHL	set	272
  5260  010F                     _ADLTHH	set	271
  5261  010E                     _ADLTHL	set	270
  5262  018E                     _SSP1MSK	set	398
  5263  018D                     _SSP1ADD	set	397
  5264  018F                     _SSP1STAT	set	399
  5265  0191                     _SSP1CON2	set	401
  5266  0190                     _SSP1CON1bits	set	400
  5267  018C                     _SSP1BUF	set	396
  5268  018F                     _SSP1STATbits	set	399
  5269  0191                     _SSP1CON2bits	set	401
  5270  0190                     _SSP1CON1	set	400
  5271  020F                     _T1GCONbits	set	527
  5272  020E                     _T1CONbits	set	526
  5273  020E                     _T1CON	set	526
  5274  020C                     _TMR1L	set	524
  5275  020D                     _TMR1H	set	525
  5276  0211                     _T1CLK	set	529
  5277  0210                     _T1GATE	set	528
  5278  020F                     _T1GCON	set	527
  5279  0710                     _PIR4bits	set	1808
  5280  071A                     _PIE4bits	set	1818
  5281  070C                     _PIR0bits	set	1804
  5282  0716                     _PIE0bits	set	1814
  5283  0719                     _PIE3bits	set	1817
  5284  070F                     _PIR3bits	set	1807
  5285  079B                     _PMD5	set	1947
  5286  079A                     _PMD4	set	1946
  5287  0799                     _PMD3	set	1945
  5288  0798                     _PMD2	set	1944
  5289  0797                     _PMD1	set	1943
  5290  0796                     _PMD0	set	1942
  5291  0892                     _OSCTUNE	set	2194
  5292  0893                     _OSCFRQ	set	2195
  5293  0891                     _OSCEN	set	2193
  5294  088F                     _OSCCON3	set	2191
  5295  088D                     _OSCCON1	set	2189
  5296  0EC6                     _SSP1DATPPS	set	3782
  5297  0E91                     _T0CKIPPS	set	3729
  5298  0EC5                     _SSP1CLKPPS	set	3781
  5299  0E90                     _INTPPS	set	3728
  5300  0F24                     _RC4PPS	set	3876
  5301  0F23                     _RC3PPS	set	3875
  5302  0F67                     _SLRCONE	set	3943
  5303  0F5C                     _SLRCOND	set	3932
  5304  0F51                     _SLRCONC	set	3921
  5305  0F46                     _SLRCONB	set	3910
  5306  0F3B                     _SLRCONA	set	3899
  5307  0F5B                     _ODCOND	set	3931
  5308  0F50                     _ODCONC	set	3920
  5309  0F45                     _ODCONB	set	3909
  5310  0F3A                     _ODCONA	set	3898
  5311  0F66                     _ODCONE	set	3942
  5312  0F4F                     _WPUC	set	3919
  5313  0F39                     _WPUA	set	3897
  5314  0F44                     _WPUB	set	3908
  5315  0F65                     _WPUE	set	3941
  5316  0F5A                     _WPUD	set	3930
  5317  0F38                     _ANSELA	set	3896
  5318  0F64                     _ANSELE	set	3940
  5319  0F43                     _ANSELB	set	3907
  5320  0F4E                     _ANSELC	set	3918
  5321  0F59                     _ANSELD	set	3929
  5322  7A7C                     _WPUC4	set	31356
  5323  7A7B                     _WPUC3	set	31355
  5324                           
  5325                           	psect	stringtext4
  5326  0000'                    __pstringtext4:
  5327  0000'                    STR_1:
  5328  0000' 3425               	retlw	37	;'%'
  5329  0001' 3430               	retlw	48	;'0'
  5330  0002' 3432               	retlw	50	;'2'
  5331  0003' 3464               	retlw	100	;'d'
  5332  0004' 343A               	retlw	58	;':'
  5333  0005' 3425               	retlw	37	;'%'
  5334  0006' 3430               	retlw	48	;'0'
  5335  0007' 3432               	retlw	50	;'2'
  5336  0008' 3464               	retlw	100	;'d'
  5337  0009' 343A               	retlw	58	;':'
  5338  000A' 3425               	retlw	37	;'%'
  5339  000B' 3430               	retlw	48	;'0'
  5340  000C' 3432               	retlw	50	;'2'
  5341  000D' 3464               	retlw	100	;'d'
  5342  000E' 3400               	retlw	0
  5343                           
  5344                           	psect	stringtext5
  5345  0000'                    __pstringtext5:
  5346  0000'                    STR_3:
  5347  0000' 3425               	retlw	37	;'%'
  5348  0001' 3430               	retlw	48	;'0'
  5349  0002' 3432               	retlw	50	;'2'
  5350  0003' 3464               	retlw	100	;'d'
  5351  0004' 343A               	retlw	58	;':'
  5352  0005' 3425               	retlw	37	;'%'
  5353  0006' 3430               	retlw	48	;'0'
  5354  0007' 3432               	retlw	50	;'2'
  5355  0008' 3464               	retlw	100	;'d'
  5356  0009' 343A               	retlw	58	;':'
  5357  000A' 3400               	retlw	0
  5358                           
  5359                           	psect	stringtext6
  5360  0000'                    __pstringtext6:
  5361  0000'                    STR_7:
  5362  0000' 3425               	retlw	37	;'%'
  5363  0001' 3431               	retlw	49	;'1'
  5364  0002' 342E               	retlw	46	;'.'
  5365  0003' 3431               	retlw	49	;'1'
  5366  0004' 3466               	retlw	102	;'f'
  5367  0005' 3420               	retlw	32	;' '
  5368  0006' 344C               	retlw	76	;'L'
  5369  0007' 3400               	retlw	0
  5370                           
  5371                           	psect	stringtext7
  5372  0000'                    __pstringtext7:
  5373  0000'                    STR_6:
  5374  0000' 3425               	retlw	37	;'%'
  5375  0001' 3430               	retlw	48	;'0'
  5376  0002' 3432               	retlw	50	;'2'
  5377  0003' 3464               	retlw	100	;'d'
  5378  0004' 3420               	retlw	32	;' '
  5379  0005' 3443               	retlw	67	;'C'
  5380  0006' 3400               	retlw	0
  5381                           
  5382                           	psect	stringtext8
  5383  0000'                    __pstringtext8:
  5384  0005'                    
  5385                           	psect	cinit
  5386  0000'                    start_initialization:	
  5387                           ; #config settings
  5388                           
  5389  0000'                    __initialization:
  5390                           
  5391                           ; Clear objects allocated to BANK0
  5392  0000' 0020               	movlb	0	; select bank0
  5393  0001' 0180'              	clrf	__pbssBANK0& (0+127)
  5394  0002' 0180'              	clrf	(__pbssBANK0+1)& (0+127)
  5395                           
  5396                           ; Clear objects allocated to BANK1
  5397  0003' 0021               	movlb	1	; select bank1
  5398  0004' 0180'              	clrf	__pbssBANK1& (0+127)
  5399  0005' 0180'              	clrf	(__pbssBANK1+1)& (0+127)
  5400                           
  5401                           ; Clear objects allocated to BANK2
  5402  0006' 0022               	movlb	2	; select bank2
  5403  0007' 0180'              	clrf	__pbssBANK2& (0+127)
  5404                           
  5405                           ; Clear objects allocated to BANK3
  5406  0008' 0023               	movlb	3	; select bank3
  5407  0009' 0180'              	clrf	__pbssBANK3& (0+127)
  5408  000A' 0180'              	clrf	(__pbssBANK3+1)& (0+127)
  5409  000B' 0180'              	clrf	(__pbssBANK3+2)& (0+127)
  5410  000C' 0180'              	clrf	(__pbssBANK3+3)& (0+127)
  5411  000D' 0180'              	clrf	(__pbssBANK3+4)& (0+127)
  5412  000E' 0180'              	clrf	(__pbssBANK3+5)& (0+127)
  5413  000F'                    end_of_initialization:	
  5414                           ;End of C runtime variable initialization code
  5415                           
  5416  000F'                    __end_of__initialization:
  5417  000F' 107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5418  0010' 0020               	movlb	0
  5419  0011' 3180' 2800'        	ljmp	_main	;jump to C main() function
  5420                           
  5421                           	psect	bssBANK0
  5422  0000'                    __pbssBANK0:
  5423  0000'                    _i2c1_driver_busCollisionISR:
  5424  0000'                    	ds	2
  5425                           
  5426                           	psect	bssBANK1
  5427  0000'                    __pbssBANK1:
  5428  0000'                    _i2c1_driver_i2cISR:
  5429  0000'                    	ds	2
  5430                           
  5431                           	psect	bssBANK2
  5432  0000'                    __pbssBANK2:
  5433  0000'                    _projectState:
  5434  0000'                    	ds	1
  5435                           
  5436                           	psect	bssBANK3
  5437  0000'                    __pbssBANK3:
  5438  0000'                    _seconds:
  5439  0000'                    	ds	2
  5440  0002'                    _minutes:
  5441  0002'                    	ds	2
  5442  0004'                    _hours:
  5443  0004'                    	ds	2
  5444                           
  5445                           	psect	cstackBANK3
  5446  0000'                    __pcstackBANK3:
  5447  0000'                    ___fladd@signs:
  5448                           
  5449                           ; 1 bytes @ 0x0
  5450  0000'                    	ds	1
  5451  0001'                    ___fladd@aexp:
  5452                           
  5453                           ; 1 bytes @ 0x1
  5454  0001'                    	ds	1
  5455  0002'                    ___fladd@bexp:
  5456                           
  5457                           ; 1 bytes @ 0x2
  5458  0002'                    	ds	1
  5459  0003'                    ___fladd@grs:
  5460                           
  5461                           ; 1 bytes @ 0x3
  5462  0003'                    	ds	1
  5463  0004'                    ?___flsub:
  5464  0004'                    ___flsub@a:	
  5465                           ; 4 bytes @ 0x4
  5466                           
  5467                           
  5468                           ; 4 bytes @ 0x4
  5469  0004'                    	ds	4
  5470  0008'                    ___flsub@b:
  5471                           
  5472                           ; 4 bytes @ 0x8
  5473  0008'                    	ds	4
  5474  000C'                    ?_sprintf:
  5475  000C'                    sprintf@sp:	
  5476                           ; 2 bytes @ 0xC
  5477                           
  5478                           
  5479                           ; 2 bytes @ 0xC
  5480  000C'                    	ds	2
  5481  000E'                    sprintf@f:
  5482                           
  5483                           ; 2 bytes @ 0xE
  5484  000E'                    	ds	8
  5485  0016'                    ??_sprintf:
  5486                           
  5487                           ; 1 bytes @ 0x16
  5488  0016'                    	ds	6
  5489  001C'                    _sprintf$2539:
  5490                           
  5491                           ; 4 bytes @ 0x1C
  5492  001C'                    	ds	4
  5493  0020'                    sprintf@ap:
  5494                           
  5495                           ; 1 bytes @ 0x20
  5496  0020'                    	ds	1
  5497  0021'                    sprintf@tmpval:
  5498                           
  5499                           ; 4 bytes @ 0x21
  5500  0021'                    	ds	4
  5501  0025'                    sprintf@val:
  5502                           
  5503                           ; 4 bytes @ 0x25
  5504  0025'                    	ds	4
  5505  0029'                    sprintf@eexp:
  5506                           
  5507                           ; 2 bytes @ 0x29
  5508  0029'                    	ds	2
  5509  002B'                    sprintf@flag:
  5510                           
  5511                           ; 2 bytes @ 0x2B
  5512  002B'                    	ds	2
  5513  002D'                    sprintf@width:
  5514                           
  5515                           ; 2 bytes @ 0x2D
  5516  002D'                    	ds	2
  5517  002F'                    sprintf@fval:
  5518                           
  5519                           ; 4 bytes @ 0x2F
  5520  002F'                    	ds	4
  5521  0033'                    sprintf@prec:
  5522                           
  5523                           ; 2 bytes @ 0x33
  5524  0033'                    	ds	2
  5525  0035'                    sprintf@c:
  5526                           
  5527                           ; 1 bytes @ 0x35
  5528  0035'                    	ds	1
  5529  0036'                    main@buf:
  5530                           
  5531                           ; 17 bytes @ 0x36
  5532  0036'                    	ds	17
  5533                           
  5534                           	psect	cstackBANK2
  5535  0000'                    __pcstackBANK2:
  5536  0000'                    ?___fleq:
  5537  0000'                    ?___flge:	
  5538                           ; 1 bit 
  5539                           
  5540  0000'                    ??_PMD_Initialize:	
  5541                           ; 1 bit 
  5542                           
  5543  0000'                    ??_OSCILLATOR_Initialize:	
  5544                           ; 1 bytes @ 0x0
  5545                           
  5546  0000'                    ??_ADCC_Initialize:	
  5547                           ; 1 bytes @ 0x0
  5548                           
  5549  0000'                    ??_EXT_INT_Initialize:	
  5550                           ; 1 bytes @ 0x0
  5551                           
  5552  0000'                    ??_TMR0_Initialize:	
  5553                           ; 1 bytes @ 0x0
  5554                           
  5555  0000'                    ?_TMR1_SetInterruptHandler:	
  5556                           ; 1 bytes @ 0x0
  5557                           
  5558  0000'                    ?_TMR0_SetInterruptHandler:	
  5559                           ; 1 bytes @ 0x0
  5560                           
  5561  0000'                    ??_TMR0_SetInterruptHandler:	
  5562                           ; 1 bytes @ 0x0
  5563                           
  5564  0000'                    ??_isdigit:	
  5565                           ; 1 bytes @ 0x0
  5566                           
  5567  0000'                    ??_WriteI2C:	
  5568                           ; 1 bytes @ 0x0
  5569                           
  5570  0000'                    ??_PIN_MANAGER_Initialize:	
  5571                           ; 1 bytes @ 0x0
  5572                           
  5573  0000'                    ??_i2c1_driver_open:	
  5574                           ; 1 bytes @ 0x0
  5575                           
  5576  0000'                    ?__Umul8_16:	
  5577                           ; 1 bytes @ 0x0
  5578                           
  5579  0000'                    ?___wmul:	
  5580                           ; 2 bytes @ 0x0
  5581                           
  5582  0000'                    ?___awmod:	
  5583                           ; 2 bytes @ 0x0
  5584                           
  5585  0000'                    ?___lwmod:	
  5586                           ; 2 bytes @ 0x0
  5587                           
  5588  0000'                    ?__tdiv_to_l_:	
  5589                           ; 2 bytes @ 0x0
  5590                           
  5591  0000'                    ?__div_to_l_:	
  5592                           ; 4 bytes @ 0x0
  5593                           
  5594  0000'                    ?___lldiv:	
  5595                           ; 4 bytes @ 0x0
  5596                           
  5597  0000'                    ?___flneg:	
  5598                           ; 4 bytes @ 0x0
  5599                           
  5600  0000'                    ?___xxtofl:	
  5601                           ; 4 bytes @ 0x0
  5602                           
  5603  0000'                    __Umul8_16@multiplicand:	
  5604                           ; 4 bytes @ 0x0
  5605                           
  5606  0000'                    _isdigit$2131:	
  5607                           ; 1 bytes @ 0x0
  5608                           
  5609  0000'                    TMR1_SetInterruptHandler@InterruptHandler:	
  5610                           ; 1 bytes @ 0x0
  5611                           
  5612  0000'                    _TMR0_SetInterruptHandler$0:	
  5613                           ; 2 bytes @ 0x0
  5614                           
  5615  0000'                    ___wmul@multiplier:	
  5616                           ; 2 bytes @ 0x0
  5617                           
  5618  0000'                    ___awmod@divisor:	
  5619                           ; 2 bytes @ 0x0
  5620                           
  5621  0000'                    ___lwmod@divisor:	
  5622                           ; 2 bytes @ 0x0
  5623                           
  5624  0000'                    ___lldiv@divisor:	
  5625                           ; 2 bytes @ 0x0
  5626                           
  5627  0000'                    __div_to_l_@f1:	
  5628                           ; 4 bytes @ 0x0
  5629                           
  5630  0000'                    ___fleq@ff1:	
  5631                           ; 4 bytes @ 0x0
  5632                           
  5633  0000'                    ___flge@ff1:	
  5634                           ; 4 bytes @ 0x0
  5635                           
  5636  0000'                    ___flneg@f1:	
  5637                           ; 4 bytes @ 0x0
  5638                           
  5639  0000'                    __tdiv_to_l_@f1:	
  5640                           ; 4 bytes @ 0x0
  5641                           
  5642  0000'                    ___xxtofl@val:	
  5643                           ; 4 bytes @ 0x0
  5644                           
  5645                           
  5646                           ; 4 bytes @ 0x0
  5647  0000'                    	ds	1
  5648  0001'                    WriteI2C@data_out:
  5649  0001'                    isdigit@c:	
  5650                           ; 1 bytes @ 0x1
  5651                           
  5652                           
  5653                           ; 1 bytes @ 0x1
  5654  0001'                    	ds	1
  5655  0002'                    ??_TMR1_Initialize:
  5656  0002'                    ??_TMR1_SetInterruptHandler:	
  5657                           ; 1 bytes @ 0x2
  5658                           
  5659  0002'                    ??_Timer1:	
  5660                           ; 1 bytes @ 0x2
  5661                           
  5662  0002'                    ??__Umul8_16:	
  5663                           ; 1 bytes @ 0x2
  5664                           
  5665  0002'                    ??_SYSTEM_Initialize:	
  5666                           ; 1 bytes @ 0x2
  5667                           
  5668  0002'                    ??_LCDsend:	
  5669                           ; 1 bytes @ 0x2
  5670                           
  5671  0002'                    ?_LCDsend2x4:	
  5672                           ; 1 bytes @ 0x2
  5673                           
  5674  0002'                    LCDsend2x4@mode:	
  5675                           ; 1 bytes @ 0x2
  5676                           
  5677  0002'                    ___wmul@multiplicand:	
  5678                           ; 1 bytes @ 0x2
  5679                           
  5680  0002'                    ___awmod@dividend:	
  5681                           ; 2 bytes @ 0x2
  5682                           
  5683  0002'                    ___lwmod@dividend:	
  5684                           ; 2 bytes @ 0x2
  5685                           
  5686                           
  5687                           ; 2 bytes @ 0x2
  5688  0002'                    	ds	1
  5689  0003'                    ??_LCDsend2x4:
  5690  0003'                    LCDsend@c:	
  5691                           ; 1 bytes @ 0x3
  5692                           
  5693                           
  5694                           ; 1 bytes @ 0x3
  5695  0003'                    	ds	1
  5696  0004'                    ??___wmul:
  5697  0004'                    ??___awmod:	
  5698                           ; 1 bytes @ 0x4
  5699                           
  5700  0004'                    ??___flneg:	
  5701                           ; 1 bytes @ 0x4
  5702                           
  5703  0004'                    ??___lwmod:	
  5704                           ; 1 bytes @ 0x4
  5705                           
  5706  0004'                    ??___xxtofl:	
  5707                           ; 1 bytes @ 0x4
  5708                           
  5709  0004'                    ___wmul@product:	
  5710                           ; 1 bytes @ 0x4
  5711                           
  5712  0004'                    __Umul8_16@product:	
  5713                           ; 2 bytes @ 0x4
  5714                           
  5715  0004'                    ___lldiv@dividend:	
  5716                           ; 2 bytes @ 0x4
  5717                           
  5718  0004'                    __div_to_l_@f2:	
  5719                           ; 4 bytes @ 0x4
  5720                           
  5721  0004'                    ___fleq@ff2:	
  5722                           ; 4 bytes @ 0x4
  5723                           
  5724  0004'                    ___flge@ff2:	
  5725                           ; 4 bytes @ 0x4
  5726                           
  5727  0004'                    __tdiv_to_l_@f2:	
  5728                           ; 4 bytes @ 0x4
  5729                           
  5730                           
  5731                           ; 4 bytes @ 0x4
  5732  0004'                    	ds	1
  5733  0005'                    LCDsend2x4@c:
  5734  0005'                    ___awmod@counter:	
  5735                           ; 1 bytes @ 0x5
  5736                           
  5737  0005'                    ___lwmod@counter:	
  5738                           ; 1 bytes @ 0x5
  5739                           
  5740                           
  5741                           ; 1 bytes @ 0x5
  5742  0005'                    	ds	1
  5743  0006'                    ?___lwdiv:
  5744  0006'                    LCDsend2x4@hc:	
  5745                           ; 2 bytes @ 0x6
  5746                           
  5747  0006'                    ___awmod@sign:	
  5748                           ; 1 bytes @ 0x6
  5749                           
  5750  0006'                    ___lwdiv@divisor:	
  5751                           ; 1 bytes @ 0x6
  5752                           
  5753  0006'                    __Umul8_16@word_mpld:	
  5754                           ; 2 bytes @ 0x6
  5755                           
  5756                           
  5757                           ; 2 bytes @ 0x6
  5758  0006'                    	ds	1
  5759  0007'                    ?___awdiv:
  5760  0007'                    LCDsend2x4@lc:	
  5761                           ; 2 bytes @ 0x7
  5762                           
  5763  0007'                    ___awdiv@divisor:	
  5764                           ; 1 bytes @ 0x7
  5765                           
  5766                           
  5767                           ; 2 bytes @ 0x7
  5768  0007'                    	ds	1
  5769  0008'                    ??__tdiv_to_l_:
  5770  0008'                    ??__div_to_l_:	
  5771                           ; 1 bytes @ 0x8
  5772                           
  5773  0008'                    ??_LCDinit:	
  5774                           ; 1 bytes @ 0x8
  5775                           
  5776  0008'                    ??_LCDcmd:	
  5777                           ; 1 bytes @ 0x8
  5778                           
  5779  0008'                    ??_LCDchar:	
  5780                           ; 1 bytes @ 0x8
  5781                           
  5782  0008'                    ??___lldiv:	
  5783                           ; 1 bytes @ 0x8
  5784                           
  5785  0008'                    ??___fleq:	
  5786                           ; 1 bytes @ 0x8
  5787                           
  5788  0008'                    ??___flge:	
  5789                           ; 1 bytes @ 0x8
  5790                           
  5791  0008'                    LCDcmd@c:	
  5792                           ; 1 bytes @ 0x8
  5793                           
  5794  0008'                    LCDchar@c:	
  5795                           ; 1 bytes @ 0x8
  5796                           
  5797  0008'                    __Umul8_16@multiplier:	
  5798                           ; 1 bytes @ 0x8
  5799                           
  5800  0008'                    ___xxtofl@sign:	
  5801                           ; 1 bytes @ 0x8
  5802                           
  5803  0008'                    ___lwdiv@dividend:	
  5804                           ; 1 bytes @ 0x8
  5805                           
  5806                           
  5807                           ; 2 bytes @ 0x8
  5808  0008'                    	ds	1
  5809  0009'                    ?_LCDstr:
  5810  0009'                    ___xxtofl@exp:	
  5811                           ; 1 bytes @ 0x9
  5812                           
  5813  0009'                    LCDstr@p:	
  5814                           ; 1 bytes @ 0x9
  5815                           
  5816  0009'                    ___awdiv@dividend:	
  5817                           ; 2 bytes @ 0x9
  5818                           
  5819  0009'                    ___lldiv@quotient:	
  5820                           ; 2 bytes @ 0x9
  5821                           
  5822  0009'                    __div_to_l_@quot:	
  5823                           ; 4 bytes @ 0x9
  5824                           
  5825                           
  5826                           ; 4 bytes @ 0x9
  5827  0009'                    	ds	1
  5828  000A'                    ??___lwdiv:
  5829  000A'                    ___xxtofl@arg:	
  5830                           ; 1 bytes @ 0xA
  5831                           
  5832                           
  5833                           ; 4 bytes @ 0xA
  5834  000A'                    	ds	1
  5835  000B'                    ??_LCDstr:
  5836  000B'                    ??___awdiv:	
  5837                           ; 1 bytes @ 0xB
  5838                           
  5839  000B'                    ___lwdiv@counter:	
  5840                           ; 1 bytes @ 0xB
  5841                           
  5842                           
  5843                           ; 1 bytes @ 0xB
  5844  000B'                    	ds	1
  5845  000C'                    ___awdiv@counter:
  5846  000C'                    ___lwdiv@quotient:	
  5847                           ; 1 bytes @ 0xC
  5848                           
  5849  000C'                    __tdiv_to_l_@quot:	
  5850                           ; 2 bytes @ 0xC
  5851                           
  5852                           
  5853                           ; 4 bytes @ 0xC
  5854  000C'                    	ds	1
  5855  000D'                    ___lldiv@counter:
  5856  000D'                    ___awdiv@sign:	
  5857                           ; 1 bytes @ 0xD
  5858                           
  5859  000D'                    __div_to_l_@cntr:	
  5860                           ; 1 bytes @ 0xD
  5861                           
  5862                           
  5863                           ; 1 bytes @ 0xD
  5864  000D'                    	ds	1
  5865  000E'                    ?___llmod:
  5866  000E'                    LCDstr@c:	
  5867                           ; 4 bytes @ 0xE
  5868                           
  5869  000E'                    __div_to_l_@exp1:	
  5870                           ; 1 bytes @ 0xE
  5871                           
  5872  000E'                    ___awdiv@quotient:	
  5873                           ; 1 bytes @ 0xE
  5874                           
  5875  000E'                    ___llmod@divisor:	
  5876                           ; 2 bytes @ 0xE
  5877                           
  5878                           
  5879                           ; 4 bytes @ 0xE
  5880  000E'                    	ds	2
  5881  0010'                    ?___flmul:
  5882  0010'                    __tdiv_to_l_@cntr:	
  5883                           ; 4 bytes @ 0x10
  5884                           
  5885  0010'                    ___flmul@b:	
  5886                           ; 1 bytes @ 0x10
  5887                           
  5888                           
  5889                           ; 4 bytes @ 0x10
  5890  0010'                    	ds	1
  5891  0011'                    __tdiv_to_l_@exp1:
  5892                           
  5893                           ; 1 bytes @ 0x11
  5894  0011'                    	ds	1
  5895  0012'                    ___llmod@dividend:
  5896                           
  5897                           ; 4 bytes @ 0x12
  5898  0012'                    	ds	2
  5899  0014'                    ___flmul@a:
  5900                           
  5901                           ; 4 bytes @ 0x14
  5902  0014'                    	ds	2
  5903  0016'                    ??___llmod:
  5904                           
  5905                           ; 1 bytes @ 0x16
  5906  0016'                    	ds	1
  5907  0017'                    ___llmod@counter:
  5908                           
  5909                           ; 1 bytes @ 0x17
  5910  0017'                    	ds	1
  5911  0018'                    ??___flmul:
  5912                           
  5913                           ; 1 bytes @ 0x18
  5914  0018'                    	ds	5
  5915  001D'                    ___flmul@sign:
  5916                           
  5917                           ; 1 bytes @ 0x1D
  5918  001D'                    	ds	1
  5919  001E'                    ___flmul@aexp:
  5920                           
  5921                           ; 1 bytes @ 0x1E
  5922  001E'                    	ds	1
  5923  001F'                    ___flmul@grs:
  5924                           
  5925                           ; 4 bytes @ 0x1F
  5926  001F'                    	ds	4
  5927  0023'                    ___flmul@bexp:
  5928                           
  5929                           ; 1 bytes @ 0x23
  5930  0023'                    	ds	1
  5931  0024'                    ___flmul@prod:
  5932                           
  5933                           ; 4 bytes @ 0x24
  5934  0024'                    	ds	4
  5935  0028'                    ___flmul@temp:
  5936                           
  5937                           ; 2 bytes @ 0x28
  5938  0028'                    	ds	2
  5939  002A'                    ?_fround:
  5940  002A'                    ?_scale:	
  5941                           ; 4 bytes @ 0x2A
  5942                           
  5943                           
  5944                           ; 4 bytes @ 0x2A
  5945  002A'                    	ds	4
  5946  002E'                    ??_fround:
  5947  002E'                    ??_scale:	
  5948                           ; 1 bytes @ 0x2E
  5949                           
  5950                           
  5951                           ; 1 bytes @ 0x2E
  5952  002E'                    	ds	6
  5953  0034'                    _fround$2537:
  5954                           
  5955                           ; 4 bytes @ 0x34
  5956  0034'                    	ds	4
  5957  0038'                    _fround$2536:
  5958                           
  5959                           ; 4 bytes @ 0x38
  5960  0038'                    	ds	2
  5961  003A'                    _scale$2538:
  5962                           
  5963                           ; 4 bytes @ 0x3A
  5964  003A'                    	ds	2
  5965  003C'                    fround@prec:
  5966                           
  5967                           ; 1 bytes @ 0x3C
  5968  003C'                    	ds	1
  5969  003D'                    ?___fladd:
  5970  003D'                    ___fladd@b:	
  5971                           ; 4 bytes @ 0x3D
  5972                           
  5973                           
  5974                           ; 4 bytes @ 0x3D
  5975  003D'                    	ds	1
  5976  003E'                    scale@scl:
  5977                           
  5978                           ; 1 bytes @ 0x3E
  5979  003E'                    	ds	1
  5980  003F'                    ?___fltol:
  5981  003F'                    ___fltol@f1:	
  5982                           ; 4 bytes @ 0x3F
  5983                           
  5984                           
  5985                           ; 4 bytes @ 0x3F
  5986  003F'                    	ds	2
  5987  0041'                    ___fladd@a:
  5988                           
  5989                           ; 4 bytes @ 0x41
  5990  0041'                    	ds	2
  5991  0043'                    ??___fltol:
  5992                           
  5993                           ; 1 bytes @ 0x43
  5994  0043'                    	ds	2
  5995  0045'                    ??___fladd:
  5996                           
  5997                           ; 1 bytes @ 0x45
  5998  0045'                    	ds	3
  5999  0048'                    ___fltol@sign1:
  6000                           
  6001                           ; 1 bytes @ 0x48
  6002  0048'                    	ds	1
  6003  0049'                    ___fltol@exp1:
  6004                           
  6005                           ; 1 bytes @ 0x49
  6006  0049'                    	ds	4
  6007  004D'                    ??_main:
  6008  004D'                    ??___flsub:	
  6009                           ; 1 bytes @ 0x4D
  6010                           
  6011                           
  6012                           	psect	cstackBANK1
  6013  0000'                    __pcstackBANK1:	
  6014                           ; 1 bytes @ 0x4D
  6015                           
  6016  0000'                    ?i1_sprintf:
  6017  0000'                    i1sprintf@sp:	
  6018                           ; 2 bytes @ 0x0
  6019                           
  6020                           
  6021                           ; 2 bytes @ 0x0
  6022  0000'                    	ds	2
  6023  0002'                    i1sprintf@f:
  6024                           
  6025                           ; 2 bytes @ 0x2
  6026  0002'                    	ds	6
  6027  0008'                    ??i1_sprintf:
  6028                           
  6029                           ; 1 bytes @ 0x8
  6030  0008'                    	ds	6
  6031  000E'                    i1_sprintf$2783:
  6032                           
  6033                           ; 4 bytes @ 0xE
  6034  000E'                    	ds	4
  6035  0012'                    i1sprintf@ap:
  6036                           
  6037                           ; 1 bytes @ 0x12
  6038  0012'                    	ds	1
  6039  0013'                    i1sprintf@tmpval:
  6040                           
  6041                           ; 4 bytes @ 0x13
  6042  0013'                    	ds	4
  6043  0017'                    i1sprintf@val:
  6044                           
  6045                           ; 4 bytes @ 0x17
  6046  0017'                    	ds	4
  6047  001B'                    i1sprintf@eexp:
  6048                           
  6049                           ; 2 bytes @ 0x1B
  6050  001B'                    	ds	2
  6051  001D'                    i1sprintf@flag:
  6052                           
  6053                           ; 2 bytes @ 0x1D
  6054  001D'                    	ds	2
  6055  001F'                    i1sprintf@width:
  6056                           
  6057                           ; 2 bytes @ 0x1F
  6058  001F'                    	ds	2
  6059  0021'                    i1sprintf@fval:
  6060                           
  6061                           ; 4 bytes @ 0x21
  6062  0021'                    	ds	4
  6063  0025'                    i1sprintf@prec:
  6064                           
  6065                           ; 2 bytes @ 0x25
  6066  0025'                    	ds	2
  6067  0027'                    i1sprintf@c:
  6068                           
  6069                           ; 1 bytes @ 0x27
  6070  0027'                    	ds	1
  6071  0028'                    count_time_ISR@buf:
  6072                           
  6073                           ; 17 bytes @ 0x28
  6074  0028'                    	ds	17
  6075                           
  6076                           	psect	cstackCOMMON
  6077  0000'                    __pcstackCOMMON:
  6078  0000'                    ?_isdigit:
  6079  0000'                    ?_i2c1_driver_open:	
  6080                           ; 1 bit 
  6081                           
  6082  0000'                    ?i1___fleq:	
  6083                           ; 1 bit 
  6084                           
  6085  0000'                    ?i1___flge:	
  6086                           ; 1 bit 
  6087                           
  6088  0000'                    ?i1_isdigit:	
  6089                           ; 1 bit 
  6090                           
  6091  0000'                    ?_PMD_Initialize:	
  6092                           ; 1 bit 
  6093                           
  6094  0000'                    ?_OSCILLATOR_Initialize:	
  6095                           ; 1 bytes @ 0x0
  6096                           
  6097  0000'                    ?_ADCC_Initialize:	
  6098                           ; 1 bytes @ 0x0
  6099                           
  6100  0000'                    ?_TMR1_Initialize:	
  6101                           ; 1 bytes @ 0x0
  6102                           
  6103  0000'                    ?_EXT_INT_Initialize:	
  6104                           ; 1 bytes @ 0x0
  6105                           
  6106  0000'                    ?_TMR0_Initialize:	
  6107                           ; 1 bytes @ 0x0
  6108                           
  6109  0000'                    ?_TMR0_ISR:	
  6110                           ; 1 bytes @ 0x0
  6111                           
  6112  0000'                    ??_TMR0_ISR:	
  6113                           ; 1 bytes @ 0x0
  6114                           
  6115  0000'                    ?_INT_ISR:	
  6116                           ; 1 bytes @ 0x0
  6117                           
  6118  0000'                    ??_INT_ISR:	
  6119                           ; 1 bytes @ 0x0
  6120                           
  6121  0000'                    ?_TMR1_ISR:	
  6122                           ; 1 bytes @ 0x0
  6123                           
  6124  0000'                    ?_TMR1_DefaultInterruptHandler:	
  6125                           ; 1 bytes @ 0x0
  6126                           
  6127  0000'                    ??_TMR1_DefaultInterruptHandler:	
  6128                           ; 1 bytes @ 0x0
  6129                           
  6130  0000'                    ?_Timer1:	
  6131                           ; 1 bytes @ 0x0
  6132                           
  6133  0000'                    ?_count_time_ISR:	
  6134                           ; 1 bytes @ 0x0
  6135                           
  6136  0000'                    ?_WriteI2C:	
  6137                           ; 1 bytes @ 0x0
  6138                           
  6139  0000'                    ?_PIN_MANAGER_Initialize:	
  6140                           ; 1 bytes @ 0x0
  6141                           
  6142  0000'                    ?_SYSTEM_Initialize:	
  6143                           ; 1 bytes @ 0x0
  6144                           
  6145  0000'                    ?_INTERRUPT_InterruptManager:	
  6146                           ; 1 bytes @ 0x0
  6147                           
  6148  0000'                    ?_TMR1_WriteTimer:	
  6149                           ; 1 bytes @ 0x0
  6150                           
  6151  0000'                    ?_LCDsend:	
  6152                           ; 1 bytes @ 0x0
  6153                           
  6154  0000'                    ?_LCDinit:	
  6155                           ; 1 bytes @ 0x0
  6156                           
  6157  0000'                    ?_LCDcmd:	
  6158                           ; 1 bytes @ 0x0
  6159                           
  6160  0000'                    ?_LCDchar:	
  6161                           ; 1 bytes @ 0x0
  6162                           
  6163  0000'                    ?_main:	
  6164                           ; 1 bytes @ 0x0
  6165                           
  6166  0000'                    ?i1_WriteI2C:	
  6167                           ; 1 bytes @ 0x0
  6168                           
  6169  0000'                    ??i1_WriteI2C:	
  6170                           ; 1 bytes @ 0x0
  6171                           
  6172  0000'                    ?i1_LCDcmd:	
  6173                           ; 1 bytes @ 0x0
  6174                           
  6175  0000'                    ?i1_LCDchar:	
  6176                           ; 1 bytes @ 0x0
  6177                           
  6178  0000'                    ??i1_isdigit:	
  6179                           ; 1 bytes @ 0x0
  6180                           
  6181  0000'                    ?i1___wmul:	
  6182                           ; 1 bytes @ 0x0
  6183                           
  6184  0000'                    ?i1___awmod:	
  6185                           ; 2 bytes @ 0x0
  6186                           
  6187  0000'                    ?i1___lwmod:	
  6188                           ; 2 bytes @ 0x0
  6189                           
  6190  0000'                    ?i1__Umul8_16:	
  6191                           ; 2 bytes @ 0x0
  6192                           
  6193  0000'                    ?i1___lldiv:	
  6194                           ; 2 bytes @ 0x0
  6195                           
  6196  0000'                    ?i1__div_to_l_:	
  6197                           ; 4 bytes @ 0x0
  6198                           
  6199  0000'                    ?i1___flneg:	
  6200                           ; 4 bytes @ 0x0
  6201                           
  6202  0000'                    ?i1__tdiv_to_l_:	
  6203                           ; 4 bytes @ 0x0
  6204                           
  6205  0000'                    ?i1___xxtofl:	
  6206                           ; 4 bytes @ 0x0
  6207                           
  6208  0000'                    i1__Umul8_16@multiplicand:	
  6209                           ; 4 bytes @ 0x0
  6210                           
  6211  0000'                    i1_isdigit$2131:	
  6212                           ; 1 bytes @ 0x0
  6213                           
  6214  0000'                    TMR1_WriteTimer@timerVal:	
  6215                           ; 1 bytes @ 0x0
  6216                           
  6217  0000'                    i1___wmul@multiplier:	
  6218                           ; 2 bytes @ 0x0
  6219                           
  6220  0000'                    i1___awmod@divisor:	
  6221                           ; 2 bytes @ 0x0
  6222                           
  6223  0000'                    i1___lwmod@divisor:	
  6224                           ; 2 bytes @ 0x0
  6225                           
  6226  0000'                    i1___lldiv@divisor:	
  6227                           ; 2 bytes @ 0x0
  6228                           
  6229  0000'                    i1__div_to_l_@f1:	
  6230                           ; 4 bytes @ 0x0
  6231                           
  6232  0000'                    i1___fleq@ff1:	
  6233                           ; 4 bytes @ 0x0
  6234                           
  6235  0000'                    i1___flge@ff1:	
  6236                           ; 4 bytes @ 0x0
  6237                           
  6238  0000'                    i1___flneg@f1:	
  6239                           ; 4 bytes @ 0x0
  6240                           
  6241  0000'                    i1__tdiv_to_l_@f1:	
  6242                           ; 4 bytes @ 0x0
  6243                           
  6244  0000'                    i1___xxtofl@val:	
  6245                           ; 4 bytes @ 0x0
  6246                           
  6247                           
  6248                           ; 4 bytes @ 0x0
  6249  0000'                    	ds	1
  6250  0001'                    i1WriteI2C@data_out:
  6251  0001'                    i1isdigit@c:	
  6252                           ; 1 bytes @ 0x1
  6253                           
  6254                           
  6255                           ; 1 bytes @ 0x1
  6256  0001'                    	ds	1
  6257  0002'                    ??_TMR1_WriteTimer:
  6258  0002'                    ?i1_LCDsend2x4:	
  6259                           ; 1 bytes @ 0x2
  6260                           
  6261  0002'                    ??i1__Umul8_16:	
  6262                           ; 1 bytes @ 0x2
  6263                           
  6264  0002'                    i1LCDsend2x4@mode:	
  6265                           ; 1 bytes @ 0x2
  6266                           
  6267  0002'                    i1___wmul@multiplicand:	
  6268                           ; 1 bytes @ 0x2
  6269                           
  6270  0002'                    i1___awmod@dividend:	
  6271                           ; 2 bytes @ 0x2
  6272                           
  6273  0002'                    i1___lwmod@dividend:	
  6274                           ; 2 bytes @ 0x2
  6275                           
  6276                           
  6277                           ; 2 bytes @ 0x2
  6278  0002'                    	ds	1
  6279  0003'                    ??i1_LCDsend2x4:
  6280                           
  6281                           ; 1 bytes @ 0x3
  6282  0003'                    	ds	1
  6283  0004'                    ??i1___wmul:
  6284  0004'                    ??i1___awmod:	
  6285                           ; 1 bytes @ 0x4
  6286                           
  6287  0004'                    ??i1___flneg:	
  6288                           ; 1 bytes @ 0x4
  6289                           
  6290  0004'                    ??i1___lwmod:	
  6291                           ; 1 bytes @ 0x4
  6292                           
  6293  0004'                    ??i1___xxtofl:	
  6294                           ; 1 bytes @ 0x4
  6295                           
  6296  0004'                    i1___wmul@product:	
  6297                           ; 1 bytes @ 0x4
  6298                           
  6299  0004'                    i1__Umul8_16@product:	
  6300                           ; 2 bytes @ 0x4
  6301                           
  6302  0004'                    i1___lldiv@dividend:	
  6303                           ; 2 bytes @ 0x4
  6304                           
  6305  0004'                    i1__div_to_l_@f2:	
  6306                           ; 4 bytes @ 0x4
  6307                           
  6308  0004'                    i1___fleq@ff2:	
  6309                           ; 4 bytes @ 0x4
  6310                           
  6311  0004'                    i1___flge@ff2:	
  6312                           ; 4 bytes @ 0x4
  6313                           
  6314  0004'                    i1__tdiv_to_l_@f2:	
  6315                           ; 4 bytes @ 0x4
  6316                           
  6317                           
  6318                           ; 4 bytes @ 0x4
  6319  0004'                    	ds	1
  6320  0005'                    i1LCDsend2x4@c:
  6321  0005'                    i1___awmod@counter:	
  6322                           ; 1 bytes @ 0x5
  6323                           
  6324  0005'                    i1___lwmod@counter:	
  6325                           ; 1 bytes @ 0x5
  6326                           
  6327                           
  6328                           ; 1 bytes @ 0x5
  6329  0005'                    	ds	1
  6330  0006'                    ?i1___lwdiv:
  6331  0006'                    i1LCDsend2x4@hc:	
  6332                           ; 2 bytes @ 0x6
  6333                           
  6334  0006'                    i1___awmod@sign:	
  6335                           ; 1 bytes @ 0x6
  6336                           
  6337  0006'                    i1___lwdiv@divisor:	
  6338                           ; 1 bytes @ 0x6
  6339                           
  6340  0006'                    i1__Umul8_16@word_mpld:	
  6341                           ; 2 bytes @ 0x6
  6342                           
  6343                           
  6344                           ; 2 bytes @ 0x6
  6345  0006'                    	ds	1
  6346  0007'                    ?i1___awdiv:
  6347  0007'                    i1LCDsend2x4@lc:	
  6348                           ; 2 bytes @ 0x7
  6349                           
  6350  0007'                    i1___awdiv@divisor:	
  6351                           ; 1 bytes @ 0x7
  6352                           
  6353                           
  6354                           ; 2 bytes @ 0x7
  6355  0007'                    	ds	1
  6356  0008'                    ??i1_LCDcmd:
  6357  0008'                    ??i1_LCDchar:	
  6358                           ; 1 bytes @ 0x8
  6359                           
  6360  0008'                    ??i1___lldiv:	
  6361                           ; 1 bytes @ 0x8
  6362                           
  6363  0008'                    ??i1__div_to_l_:	
  6364                           ; 1 bytes @ 0x8
  6365                           
  6366  0008'                    ??i1___fleq:	
  6367                           ; 1 bytes @ 0x8
  6368                           
  6369  0008'                    ??i1___flge:	
  6370                           ; 1 bytes @ 0x8
  6371                           
  6372  0008'                    ??i1__tdiv_to_l_:	
  6373                           ; 1 bytes @ 0x8
  6374                           
  6375  0008'                    i1LCDcmd@c:	
  6376                           ; 1 bytes @ 0x8
  6377                           
  6378  0008'                    i1LCDchar@c:	
  6379                           ; 1 bytes @ 0x8
  6380                           
  6381  0008'                    i1__Umul8_16@multiplier:	
  6382                           ; 1 bytes @ 0x8
  6383                           
  6384  0008'                    i1___xxtofl@sign:	
  6385                           ; 1 bytes @ 0x8
  6386                           
  6387  0008'                    i1___lwdiv@dividend:	
  6388                           ; 1 bytes @ 0x8
  6389                           
  6390                           
  6391                           ; 2 bytes @ 0x8
  6392  0008'                    	ds	1
  6393  0009'                    ?i1_LCDstr:
  6394  0009'                    i1___xxtofl@exp:	
  6395                           ; 1 bytes @ 0x9
  6396                           
  6397  0009'                    i1LCDstr@p:	
  6398                           ; 1 bytes @ 0x9
  6399                           
  6400  0009'                    i1___awdiv@dividend:	
  6401                           ; 2 bytes @ 0x9
  6402                           
  6403  0009'                    i1___lldiv@quotient:	
  6404                           ; 2 bytes @ 0x9
  6405                           
  6406                           
  6407                           ; 4 bytes @ 0x9
  6408  0009'                    	ds	1
  6409  000A'                    ??i1___lwdiv:
  6410  000A'                    i1___xxtofl@arg:	
  6411                           ; 1 bytes @ 0xA
  6412                           
  6413                           
  6414                           ; 4 bytes @ 0xA
  6415  000A'                    	ds	1
  6416  000B'                    ??i1_LCDstr:
  6417  000B'                    ??i1___awdiv:	
  6418                           ; 1 bytes @ 0xB
  6419                           
  6420  000B'                    i1___lwdiv@quotient:	
  6421                           ; 1 bytes @ 0xB
  6422                           
  6423                           
  6424                           ; 2 bytes @ 0xB
  6425  000B'                    	ds	2
  6426  000D'                    i1___lldiv@counter:
  6427  000D'                    i1___lwdiv@counter:	
  6428                           ; 1 bytes @ 0xD
  6429                           
  6430                           
  6431                           ; 1 bytes @ 0xD
  6432  000D'                    	ds	1
  6433  000E'                    ??_TMR1_ISR:
  6434  000E'                    ??_count_time_ISR:	
  6435                           ; 1 bytes @ 0xE
  6436                           
  6437  000E'                    ??_INTERRUPT_InterruptManager:	
  6438                           ; 1 bytes @ 0xE
  6439                           
  6440  000E'                    ??i1___flsub:	
  6441                           ; 1 bytes @ 0xE
  6442                           
  6443                           
  6444                           	psect	cstackBANK0
  6445  0000'                    __pcstackBANK0:	
  6446                           ; 1 bytes @ 0xE
  6447                           
  6448  0000'                    ?i1___llmod:
  6449  0000'                    i1LCDstr@c:	
  6450                           ; 4 bytes @ 0x0
  6451                           
  6452  0000'                    i1___awdiv@counter:	
  6453                           ; 1 bytes @ 0x0
  6454                           
  6455  0000'                    i1__div_to_l_@quot:	
  6456                           ; 1 bytes @ 0x0
  6457                           
  6458  0000'                    i1__tdiv_to_l_@quot:	
  6459                           ; 4 bytes @ 0x0
  6460                           
  6461  0000'                    i1___llmod@divisor:	
  6462                           ; 4 bytes @ 0x0
  6463                           
  6464                           
  6465                           ; 4 bytes @ 0x0
  6466  0000'                    	ds	1
  6467  0001'                    i1___awdiv@sign:
  6468                           
  6469                           ; 1 bytes @ 0x1
  6470  0001'                    	ds	1
  6471  0002'                    i1___awdiv@quotient:
  6472                           
  6473                           ; 2 bytes @ 0x2
  6474  0002'                    	ds	2
  6475  0004'                    ?i1___flmul:
  6476  0004'                    i1__div_to_l_@cntr:	
  6477                           ; 4 bytes @ 0x4
  6478                           
  6479  0004'                    i1__tdiv_to_l_@cntr:	
  6480                           ; 1 bytes @ 0x4
  6481                           
  6482  0004'                    i1___llmod@dividend:	
  6483                           ; 1 bytes @ 0x4
  6484                           
  6485  0004'                    i1___flmul@b:	
  6486                           ; 4 bytes @ 0x4
  6487                           
  6488                           
  6489                           ; 4 bytes @ 0x4
  6490  0004'                    	ds	1
  6491  0005'                    i1__div_to_l_@exp1:
  6492  0005'                    i1__tdiv_to_l_@exp1:	
  6493                           ; 1 bytes @ 0x5
  6494                           
  6495                           
  6496                           ; 1 bytes @ 0x5
  6497  0005'                    	ds	3
  6498  0008'                    ??i1___llmod:
  6499  0008'                    i1___flmul@a:	
  6500                           ; 1 bytes @ 0x8
  6501                           
  6502                           
  6503                           ; 4 bytes @ 0x8
  6504  0008'                    	ds	1
  6505  0009'                    i1___llmod@counter:
  6506                           
  6507                           ; 1 bytes @ 0x9
  6508  0009'                    	ds	3
  6509  000C'                    ??i1___flmul:
  6510                           
  6511                           ; 1 bytes @ 0xC
  6512  000C'                    	ds	5
  6513  0011'                    i1___flmul@sign:
  6514                           
  6515                           ; 1 bytes @ 0x11
  6516  0011'                    	ds	1
  6517  0012'                    i1___flmul@grs:
  6518                           
  6519                           ; 4 bytes @ 0x12
  6520  0012'                    	ds	4
  6521  0016'                    i1___flmul@aexp:
  6522                           
  6523                           ; 1 bytes @ 0x16
  6524  0016'                    	ds	1
  6525  0017'                    i1___flmul@bexp:
  6526                           
  6527                           ; 1 bytes @ 0x17
  6528  0017'                    	ds	1
  6529  0018'                    i1___flmul@prod:
  6530                           
  6531                           ; 4 bytes @ 0x18
  6532  0018'                    	ds	4
  6533  001C'                    i1___flmul@temp:
  6534                           
  6535                           ; 2 bytes @ 0x1C
  6536  001C'                    	ds	2
  6537  001E'                    ?i1_fround:
  6538  001E'                    ?i1_scale:	
  6539                           ; 4 bytes @ 0x1E
  6540                           
  6541  001E'                    ?i1___fltol:	
  6542                           ; 4 bytes @ 0x1E
  6543                           
  6544  001E'                    i1___fltol@f1:	
  6545                           ; 4 bytes @ 0x1E
  6546                           
  6547                           
  6548                           ; 4 bytes @ 0x1E
  6549  001E'                    	ds	4
  6550  0022'                    ??i1_fround:
  6551  0022'                    ??i1_scale:	
  6552                           ; 1 bytes @ 0x22
  6553                           
  6554  0022'                    ??i1___fltol:	
  6555                           ; 1 bytes @ 0x22
  6556                           
  6557                           
  6558                           ; 1 bytes @ 0x22
  6559  0022'                    	ds	5
  6560  0027'                    i1___fltol@sign1:
  6561                           
  6562                           ; 1 bytes @ 0x27
  6563  0027'                    	ds	1
  6564  0028'                    i1___fltol@exp1:
  6565  0028'                    i1_fround$2781:	
  6566                           ; 1 bytes @ 0x28
  6567                           
  6568                           
  6569                           ; 4 bytes @ 0x28
  6570  0028'                    	ds	4
  6571  002C'                    i1_fround$2780:
  6572                           
  6573                           ; 4 bytes @ 0x2C
  6574  002C'                    	ds	2
  6575  002E'                    i1_scale$2782:
  6576                           
  6577                           ; 4 bytes @ 0x2E
  6578  002E'                    	ds	2
  6579  0030'                    i1fround@prec:
  6580                           
  6581                           ; 1 bytes @ 0x30
  6582  0030'                    	ds	1
  6583  0031'                    ?i1___fladd:
  6584  0031'                    i1___fladd@b:	
  6585                           ; 4 bytes @ 0x31
  6586                           
  6587                           
  6588                           ; 4 bytes @ 0x31
  6589  0031'                    	ds	1
  6590  0032'                    i1scale@scl:
  6591                           
  6592                           ; 1 bytes @ 0x32
  6593  0032'                    	ds	3
  6594  0035'                    i1___fladd@a:
  6595                           
  6596                           ; 4 bytes @ 0x35
  6597  0035'                    	ds	4
  6598  0039'                    ??i1___fladd:
  6599                           
  6600                           ; 1 bytes @ 0x39
  6601  0039'                    	ds	8
  6602  0041'                    i1___fladd@signs:
  6603                           
  6604                           ; 1 bytes @ 0x41
  6605  0041'                    	ds	1
  6606  0042'                    i1___fladd@aexp:
  6607                           
  6608                           ; 1 bytes @ 0x42
  6609  0042'                    	ds	1
  6610  0043'                    i1___fladd@bexp:
  6611                           
  6612                           ; 1 bytes @ 0x43
  6613  0043'                    	ds	1
  6614  0044'                    i1___fladd@grs:
  6615                           
  6616                           ; 1 bytes @ 0x44
  6617  0044'                    	ds	1
  6618  0045'                    ?i1___flsub:
  6619  0045'                    i1___flsub@a:	
  6620                           ; 4 bytes @ 0x45
  6621                           
  6622                           
  6623                           ; 4 bytes @ 0x45
  6624  0045'                    	ds	4
  6625  0049'                    i1___flsub@b:
  6626                           
  6627                           ; 4 bytes @ 0x49
  6628  0049'                    	ds	4
  6629                           
  6630                           	psect	maintext
  6631  0000'                    __pmaintext:	
  6632 ;;
  6633 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6634 ;;
  6635 ;; *************** function _main *****************
  6636 ;; Defined at:
  6637 ;;		line 173 in file "main.c"
  6638 ;; Parameters:    Size  Location     Type
  6639 ;;		None
  6640 ;; Auto vars:     Size  Location     Type
  6641 ;;  buf            17   54[BANK3 ] unsigned char [17]
  6642 ;;  c2              1    0        unsigned char 
  6643 ;;  c1              1    0        unsigned char 
  6644 ;;  lc              1    0        unsigned char 
  6645 ;;  hc              1    0        unsigned char 
  6646 ;;  c               1    0        unsigned char 
  6647 ;; Return value:  Size  Location     Type
  6648 ;;                  1    wreg      void 
  6649 ;; Registers used:
  6650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6651 ;; Tracked objects:
  6652 ;;		On entry : B1F/0
  6653 ;;		On exit  : 0/0
  6654 ;;		Unchanged: 0/0
  6655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6657 ;;      Locals:         0       0       0       0      17       0       0       0       0       0       0       0       
      +0       0
  6658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6659 ;;      Totals:         0       0       0       0      17       0       0       0       0       0       0       0       
      +0       0
  6660 ;;Total ram usage:       17 bytes
  6661 ;; Hardware stack levels required when called:   11
  6662 ;; This function calls:
  6663 ;;		_LCDcmd
  6664 ;;		_LCDinit
  6665 ;;		_LCDstr
  6666 ;;		_SYSTEM_Initialize
  6667 ;;		_Timer1
  6668 ;;		_i2c1_driver_open
  6669 ;;		_sprintf
  6670 ;; This function is called by:
  6671 ;;		Startup code after reset
  6672 ;; This function uses a non-reentrant model
  6673 ;;
  6674                           
  6675                           
  6676                           ;psect for function _main
  6677  0000'                    _main:
  6678  0000'                    l9254:	
  6679                           ;incstack = 0
  6680                           ; Regs used in _main: [allreg]
  6681                           
  6682                           
  6683                           ;main.c: 175: unsigned char c;;main.c: 176: unsigned char hc;;main.c: 177: unsigned char
      +                           lc;;main.c: 178: unsigned char c1;;main.c: 179: unsigned char c2;;main.c: 180: unsigned
      +                           char buf[17];;main.c: 186: SYSTEM_Initialize();
  6684  0000' 3180' 2000' 3180'  	fcall	_SYSTEM_Initialize
  6685  0003'                    l9256:
  6686                           
  6687                           ;main.c: 192: (INTCONbits.GIE = 1);
  6688  0003' 178B               	bsf	11,7	;volatile
  6689  0004'                    l9258:
  6690                           
  6691                           ;main.c: 195: (INTCONbits.PEIE = 1);
  6692  0004' 170B               	bsf	11,6	;volatile
  6693  0005'                    l9260:
  6694                           
  6695                           ;main.c: 203: i2c1_driver_open();
  6696  0005' 3180' 2000' 3180'  	fcall	_i2c1_driver_open
  6697  0008'                    l9262:
  6698                           
  6699                           ;main.c: 204: TRISCbits.TRISC3 = 1;
  6700  0008' 0020               	movlb	0	; select bank0
  6701  0009' 1593               	bsf	19,3	;volatile
  6702  000A'                    l9264:
  6703                           
  6704                           ;main.c: 205: TRISCbits.TRISC4 = 1;
  6705  000A' 1613               	bsf	19,4	;volatile
  6706  000B'                    l9266:
  6707                           
  6708                           ;main.c: 206: WPUC3 = 1;
  6709  000B' 003E               	movlb	30	; select bank30
  6710  000C' 15CF               	bsf	79,3	;volatile
  6711  000D'                    l9268:
  6712                           
  6713                           ;main.c: 207: WPUC4 = 1;
  6714  000D' 164F               	bsf	79,4	;volatile
  6715  000E'                    l9270:
  6716                           
  6717                           ;main.c: 208: LCDinit();
  6718  000E' 3180' 2000' 3180'  	fcall	_LCDinit
  6719  0011'                    l9272:
  6720                           
  6721                           ;main.c: 210: LCDcmd(0x80);
  6722  0011' 3080               	movlw	128
  6723  0012' 3180' 2000' 3180'  	fcall	_LCDcmd
  6724  0015'                    l9274:
  6725                           
  6726                           ;main.c: 212: sprintf(buf, "%02d:%02d:%02d", hours, minutes,seconds);
  6727  0015' 3000'              	movlw	low main@buf
  6728  0016' 0023               	movlb	3	; select bank3
  6729  0017' 0080'              	movwf	sprintf@sp^(0+384)
  6730  0018' 3000'              	movlw	high main@buf
  6731  0019' 0080'              	movwf	(sprintf@sp+1)^(0+384)
  6732  001A' 3000'              	movlw	low (STR_1| (0+32768))
  6733  001B' 0080'              	movwf	sprintf@f^(0+384)
  6734  001C' 3000'              	movlw	high (STR_1| (0+32768))
  6735  001D' 0081'              	movwf	(sprintf@f^(0+384)+1)
  6736  001E' 0800'              	movf	(_hours+1)^(0+384),w
  6737  001F' 0084'              	movwf	((?_sprintf+1)^(0+384)+4)
  6738  0020' 0800'              	movf	_hours^(0+384),w
  6739  0021' 0084'              	movwf	(?_sprintf^(0+384)+4)
  6740  0022' 0800'              	movf	(_minutes+1)^(0+384),w
  6741  0023' 0086'              	movwf	((?_sprintf+1)^(0+384)+6)
  6742  0024' 0800'              	movf	_minutes^(0+384),w
  6743  0025' 0086'              	movwf	(?_sprintf^(0+384)+6)
  6744  0026' 0800'              	movf	(_seconds+1)^(0+384),w
  6745  0027' 0088'              	movwf	((?_sprintf+1)^(0+384)+8)
  6746  0028' 0800'              	movf	_seconds^(0+384),w
  6747  0029' 0088'              	movwf	(?_sprintf^(0+384)+8)
  6748  002A' 3180' 2000' 3180'  	fcall	_sprintf
  6749  002D'                    l9276:
  6750                           
  6751                           ;main.c: 213: LCDstr(buf);
  6752  002D' 3000'              	movlw	low main@buf
  6753  002E' 0022               	movlb	2	; select bank2
  6754  002F' 0080'              	movwf	LCDstr@p^(0+256)
  6755  0030' 3000'              	movlw	high main@buf
  6756  0031' 0080'              	movwf	(LCDstr@p+1)^(0+256)
  6757  0032' 3180' 2000' 3180'  	fcall	_LCDstr
  6758  0035'                    l9278:
  6759                           
  6760                           ;main.c: 214: Timer1();
  6761  0035' 3180' 2000' 3180'  	fcall	_Timer1
  6762  0038'                    l796:	
  6763                           ;main.c: 216: while (1) {
  6764                           
  6765  0038'                    l797:
  6766  0038' 2800'              	goto	l796
  6767  0039' 3180' 2800'        	ljmp	start
  6768  003B'                    __end_of_main:
  6769                           
  6770                           	psect	text1
  6771  0000'                    __ptext1:	
  6772 ;; *************** function _sprintf *****************
  6773 ;; Defined at:
  6774 ;;		line 505 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/doprnt.c"
  6775 ;; Parameters:    Size  Location     Type
  6776 ;;  sp              2   12[BANK3 ] PTR unsigned char 
  6777 ;;		 -> sensor_ISR@buf(17), count_time_ISR@buf(17), main@buf(17), 
  6778 ;;  f               2   14[BANK3 ] PTR const unsigned char 
  6779 ;;		 -> STR_7(8), STR_6(7), STR_5(5), STR_4(6), 
  6780 ;;		 -> STR_3(11), STR_2(6), STR_1(15), 
  6781 ;; Auto vars:     Size  Location     Type
  6782 ;;  fval            4   47[BANK3 ] PTR const unsigned char 
  6783 ;;  val             4   37[BANK3 ] unsigned long 
  6784 ;;  tmpval          4   33[BANK3 ] struct .
  6785 ;;  prec            2   51[BANK3 ] int 
  6786 ;;  width           2   45[BANK3 ] int 
  6787 ;;  flag            2   43[BANK3 ] unsigned short 
  6788 ;;  eexp            2   41[BANK3 ] int 
  6789 ;;  cp              2    0        PTR const unsigned char 
  6790 ;;  len             2    0        unsigned int 
  6791 ;;  c               1   53[BANK3 ] unsigned char 
  6792 ;;  ap              1   32[BANK3 ] PTR void [1]
  6793 ;;		 -> ?_sprintf(2), 
  6794 ;;  d               1    0        unsigned char 
  6795 ;; Return value:  Size  Location     Type
  6796 ;;                  2   12[BANK3 ] int 
  6797 ;; Registers used:
  6798 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6799 ;; Tracked objects:
  6800 ;;		On entry : 0/0
  6801 ;;		On exit  : 0/0
  6802 ;;		Unchanged: 0/0
  6803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6804 ;;      Params:         0       0       0       0      10       0       0       0       0       0       0       0       
      +0       0
  6805 ;;      Locals:         0       0       0       0      26       0       0       0       0       0       0       0       
      +0       0
  6806 ;;      Temps:          0       0       0       0       6       0       0       0       0       0       0       0       
      +0       0
  6807 ;;      Totals:         0       0       0       0      42       0       0       0       0       0       0       0       
      +0       0
  6808 ;;Total ram usage:       42 bytes
  6809 ;; Hardware stack levels used:    1
  6810 ;; Hardware stack levels required when called:   10
  6811 ;; This function calls:
  6812 ;;		___awdiv
  6813 ;;		___fladd
  6814 ;;		___fleq
  6815 ;;		___flge
  6816 ;;		___flmul
  6817 ;;		___flneg
  6818 ;;		___flsub
  6819 ;;		___fltol
  6820 ;;		___lldiv
  6821 ;;		___llmod
  6822 ;;		___wmul
  6823 ;;		___xxtofl
  6824 ;;		__div_to_l_
  6825 ;;		__tdiv_to_l_
  6826 ;;		_fround
  6827 ;;		_isdigit
  6828 ;;		_scale
  6829 ;; This function is called by:
  6830 ;;		_main
  6831 ;;		_sensor_ISR
  6832 ;; This function uses a non-reentrant model
  6833 ;;
  6834                           
  6835                           
  6836                           ;psect for function _sprintf
  6837  0000'                    _sprintf:
  6838  0000'                    l8904:	
  6839                           ;incstack = 0
  6840                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6841                           
  6842                           
  6843                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  6844  0000' 3000'              	movlw	(low ((?_sprintf| (0+256)+4)))& (0+255)
  6845  0001' 0023               	movlb	3	; select bank3
  6846  0002' 0080'              	movwf	??_sprintf^(0+384)
  6847  0003' 0800'              	movf	??_sprintf^(0+384),w
  6848  0004' 0080'              	movwf	sprintf@ap^(0+384)
  6849  0005'                    L1:
  6850                           
  6851                           ;doprnt.c: 553: while((c = *f++)) {
  6852  0005' 3180' 2800'        	goto	l9226
  6853  0007'                    l8906:
  6854                           
  6855                           ;doprnt.c: 555: if(c != '%')
  6856  0007' 3025               	movlw	37
  6857  0008' 0600'              	xorwf	sprintf@c^(0+384),w
  6858  0009' 1903               	btfsc	3,2
  6859  000A' 2800'              	goto	u14421
  6860  000B' 2800'              	goto	u14420
  6861  000C'                    u14421:
  6862  000C' 2800'              	goto	l8912
  6863  000D'                    u14420:
  6864  000D'                    l8908:
  6865                           
  6866                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  6867  000D' 0800'              	movf	sprintf@sp^(0+384),w
  6868  000E' 0086               	movwf	6
  6869  000F' 0800'              	movf	(sprintf@sp+1)^(0+384),w
  6870  0010' 0087               	movwf	7
  6871  0011' 0800'              	movf	sprintf@c^(0+384),w
  6872  0012' 0081               	movwf	1
  6873  0013'                    l8910:
  6874  0013' 3001               	movlw	1
  6875  0014' 0780'              	addwf	sprintf@sp^(0+384),f
  6876  0015' 3000               	movlw	0
  6877  0016' 3D80'              	addwfc	(sprintf@sp+1)^(0+384),f
  6878                           
  6879                           ;doprnt.c: 559: continue;
  6880  0017' 2800'              	goto	L1
  6881  0018'                    l8912:
  6882                           
  6883                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  6884  0018' 0180'              	clrf	sprintf@width^(0+384)
  6885  0019' 0180'              	clrf	(sprintf@width+1)^(0+384)
  6886                           
  6887                           ;doprnt.c: 565: flag = 0;
  6888  001A' 0180'              	clrf	sprintf@flag^(0+384)
  6889  001B' 0180'              	clrf	(sprintf@flag+1)^(0+384)
  6890  001C' 2800'              	goto	l8918
  6891  001D'                    l1080:	
  6892                           ;doprnt.c: 596: case '0':
  6893                           
  6894                           
  6895                           ;doprnt.c: 597: flag |= 0x04;
  6896  001D' 1500'              	bsf	sprintf@flag^(0+384),2
  6897  001E'                    l8914:
  6898                           
  6899                           ;doprnt.c: 598: f++;
  6900  001E' 3001               	movlw	1
  6901  001F' 0780'              	addwf	sprintf@f^(0+384),f
  6902  0020' 3000               	movlw	0
  6903  0021' 3D80'              	addwfc	(sprintf@f+1)^(0+384),f
  6904  0022'                    l8918:	
  6905                           ;doprnt.c: 599: continue;
  6906                           
  6907  0022' 0800'              	movf	sprintf@f^(0+384),w
  6908  0023' 0084               	movwf	4
  6909  0024' 0800'              	movf	(sprintf@f+1)^(0+384),w
  6910  0025' 0085               	movwf	5
  6911  0026' 0800               	movf	0,w	;code access
  6912                           
  6913                           ; Switch size 1, requested type "simple"
  6914                           ; Number of cases is 1, Range of values is 48 to 48
  6915                           ; switch strategies available:
  6916                           ; Name         Instructions Cycles
  6917                           ; simple_byte            4     3 (average)
  6918                           ; direct_byte           11     9 (fixed)
  6919                           ; jumptable            263     9 (fixed)
  6920                           ;	Chosen strategy is simple_byte
  6921  0027' 3A30               	xorlw	48	; case 48
  6922  0028' 1903               	skipnz
  6923  0029' 2800'              	goto	l1080
  6924  002A' 2800'              	goto	l8920
  6925  002B'                    l8920:
  6926                           
  6927                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  6928  002B' 0800'              	movf	sprintf@f^(0+384),w
  6929  002C' 0084               	movwf	4
  6930  002D' 0800'              	movf	(sprintf@f+1)^(0+384),w
  6931  002E' 0085               	movwf	5
  6932  002F' 0800               	movf	0,w	;code access
  6933  0030' 3180' 2000' 3180'  	fcall	_isdigit
  6934  0033' 1C03               	btfss	3,0
  6935  0034' 2800'              	goto	u14431
  6936  0035' 2800'              	goto	u14430
  6937  0036'                    u14431:
  6938  0036' 2800'              	goto	l8932
  6939  0037'                    u14430:
  6940  0037'                    l8922:
  6941                           
  6942                           ;doprnt.c: 615: width = 0;
  6943  0037' 0023               	movlb	3	; select bank3
  6944  0038' 0180'              	clrf	sprintf@width^(0+384)
  6945  0039' 0180'              	clrf	(sprintf@width+1)^(0+384)
  6946  003A'                    l8924:
  6947                           
  6948                           ;doprnt.c: 617: width *= 10;
  6949  003A' 300A               	movlw	10
  6950  003B' 0022               	movlb	2	; select bank2
  6951  003C' 0080'              	movwf	___wmul@multiplier^(0+256)
  6952  003D' 3000               	movlw	0
  6953  003E' 0081'              	movwf	(___wmul@multiplier^(0+256)+1)
  6954  003F' 0023               	movlb	3	; select bank3
  6955  0040' 0800'              	movf	(sprintf@width+1)^(0+384),w
  6956  0041' 0022               	movlb	2	; select bank2
  6957  0042' 0080'              	movwf	(___wmul@multiplicand+1)^(0+256)
  6958  0043' 0023               	movlb	3	; select bank3
  6959  0044' 0800'              	movf	sprintf@width^(0+384),w
  6960  0045' 0022               	movlb	2	; select bank2
  6961  0046' 0080'              	movwf	___wmul@multiplicand^(0+256)
  6962  0047' 3180' 2000' 3180'  	fcall	___wmul
  6963  004A' 0022               	movlb	2	; select bank2
  6964  004B' 0800'              	movf	(?___wmul+1)^(0+256),w
  6965  004C' 0023               	movlb	3	; select bank3
  6966  004D' 0080'              	movwf	(sprintf@width+1)^(0+384)
  6967  004E' 0022               	movlb	2	; select bank2
  6968  004F' 0800'              	movf	?___wmul^(0+256),w
  6969  0050' 0023               	movlb	3	; select bank3
  6970  0051' 0080'              	movwf	sprintf@width^(0+384)
  6971  0052'                    l8926:
  6972                           
  6973                           ;doprnt.c: 618: width += *f++ - '0';
  6974  0052' 0800'              	movf	sprintf@f^(0+384),w
  6975  0053' 0084               	movwf	4
  6976  0054' 0800'              	movf	(sprintf@f+1)^(0+384),w
  6977  0055' 0085               	movwf	5
  6978  0056' 0800               	movf	0,w	;code access
  6979  0057' 3ED0               	addlw	208
  6980  0058' 0080'              	movwf	??_sprintf^(0+384)
  6981  0059' 30FF               	movlw	255
  6982  005A' 1803               	skipnc
  6983  005B' 3000               	movlw	0
  6984  005C' 0081'              	movwf	(??_sprintf^(0+384)+1)
  6985  005D' 0800'              	movf	??_sprintf^(0+384),w
  6986  005E' 0780'              	addwf	sprintf@width^(0+384),f
  6987  005F' 0800'              	movf	(??_sprintf+1)^(0+384),w
  6988  0060' 3D80'              	addwfc	(sprintf@width+1)^(0+384),f
  6989  0061'                    l8928:
  6990  0061' 3001               	movlw	1
  6991  0062' 0780'              	addwf	sprintf@f^(0+384),f
  6992  0063' 3000               	movlw	0
  6993  0064' 3D80'              	addwfc	(sprintf@f+1)^(0+384),f
  6994  0065'                    l8930:
  6995                           
  6996                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  6997  0065' 0800'              	movf	sprintf@f^(0+384),w
  6998  0066' 0084               	movwf	4
  6999  0067' 0800'              	movf	(sprintf@f+1)^(0+384),w
  7000  0068' 0085               	movwf	5
  7001  0069' 0800               	movf	0,w	;code access
  7002  006A' 3180' 2000' 3180'  	fcall	_isdigit
  7003  006D' 1803               	btfsc	3,0
  7004  006E' 2800'              	goto	u14441
  7005  006F' 2800'              	goto	u14440
  7006  0070'                    u14441:
  7007  0070' 2800'              	goto	l8924
  7008  0071'                    u14440:
  7009  0071'                    l8932:
  7010                           
  7011                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
  7012  0071' 0023               	movlb	3	; select bank3
  7013  0072' 0800'              	movf	sprintf@f^(0+384),w
  7014  0073' 0084               	movwf	4
  7015  0074' 0800'              	movf	(sprintf@f+1)^(0+384),w
  7016  0075' 0085               	movwf	5
  7017  0076' 0012               	moviw fsr0++
  7018  0077' 3A2E               	xorlw	46
  7019  0078' 1D03               	btfss	3,2
  7020  0079' 2800'              	goto	u14451
  7021  007A' 2800'              	goto	u14450
  7022  007B'                    u14451:
  7023  007B' 2800'              	goto	l8948
  7024  007C'                    u14450:
  7025  007C'                    l8934:
  7026                           
  7027                           ;doprnt.c: 629: flag |= 0x4000;
  7028  007C' 1701'              	bsf	(sprintf@flag^(0+384)+1),6
  7029  007D'                    l8936:
  7030                           
  7031                           ;doprnt.c: 630: f++;
  7032  007D' 3001               	movlw	1
  7033  007E' 0780'              	addwf	sprintf@f^(0+384),f
  7034  007F' 3000               	movlw	0
  7035  0080' 3D80'              	addwfc	(sprintf@f+1)^(0+384),f
  7036  0081'                    l8938:
  7037                           
  7038                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  7039  0081' 0180'              	clrf	sprintf@prec^(0+384)
  7040  0082' 0180'              	clrf	(sprintf@prec+1)^(0+384)
  7041                           
  7042                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  7043  0083' 2800'              	goto	l8946
  7044  0084'                    l8940:
  7045                           
  7046                           ;doprnt.c: 647: prec *= 10;
  7047  0084' 300A               	movlw	10
  7048  0085' 0022               	movlb	2	; select bank2
  7049  0086' 0080'              	movwf	___wmul@multiplier^(0+256)
  7050  0087' 3000               	movlw	0
  7051  0088' 0081'              	movwf	(___wmul@multiplier^(0+256)+1)
  7052  0089' 0023               	movlb	3	; select bank3
  7053  008A' 0800'              	movf	(sprintf@prec+1)^(0+384),w
  7054  008B' 0022               	movlb	2	; select bank2
  7055  008C' 0080'              	movwf	(___wmul@multiplicand+1)^(0+256)
  7056  008D' 0023               	movlb	3	; select bank3
  7057  008E' 0800'              	movf	sprintf@prec^(0+384),w
  7058  008F' 0022               	movlb	2	; select bank2
  7059  0090' 0080'              	movwf	___wmul@multiplicand^(0+256)
  7060  0091' 3180' 2000' 3180'  	fcall	___wmul
  7061  0094' 0022               	movlb	2	; select bank2
  7062  0095' 0800'              	movf	(?___wmul+1)^(0+256),w
  7063  0096' 0023               	movlb	3	; select bank3
  7064  0097' 0080'              	movwf	(sprintf@prec+1)^(0+384)
  7065  0098' 0022               	movlb	2	; select bank2
  7066  0099' 0800'              	movf	?___wmul^(0+256),w
  7067  009A' 0023               	movlb	3	; select bank3
  7068  009B' 0080'              	movwf	sprintf@prec^(0+384)
  7069  009C'                    l8942:
  7070                           
  7071                           ;doprnt.c: 648: prec += *f++ - '0';
  7072  009C' 0800'              	movf	sprintf@f^(0+384),w
  7073  009D' 0084               	movwf	4
  7074  009E' 0800'              	movf	(sprintf@f+1)^(0+384),w
  7075  009F' 0085               	movwf	5
  7076  00A0' 0800               	movf	0,w	;code access
  7077  00A1' 3ED0               	addlw	208
  7078  00A2' 0080'              	movwf	??_sprintf^(0+384)
  7079  00A3' 30FF               	movlw	255
  7080  00A4' 1803               	skipnc
  7081  00A5' 3000               	movlw	0
  7082  00A6' 0081'              	movwf	(??_sprintf^(0+384)+1)
  7083  00A7' 0800'              	movf	??_sprintf^(0+384),w
  7084  00A8' 0780'              	addwf	sprintf@prec^(0+384),f
  7085  00A9' 0800'              	movf	(??_sprintf+1)^(0+384),w
  7086  00AA' 3D80'              	addwfc	(sprintf@prec+1)^(0+384),f
  7087  00AB'                    l8944:
  7088  00AB' 3001               	movlw	1
  7089  00AC' 0780'              	addwf	sprintf@f^(0+384),f
  7090  00AD' 3000               	movlw	0
  7091  00AE' 3D80'              	addwfc	(sprintf@f+1)^(0+384),f
  7092  00AF'                    l8946:
  7093  00AF' 0800'              	movf	sprintf@f^(0+384),w
  7094  00B0' 0084               	movwf	4
  7095  00B1' 0800'              	movf	(sprintf@f+1)^(0+384),w
  7096  00B2' 0085               	movwf	5
  7097  00B3' 0800               	movf	0,w	;code access
  7098  00B4' 3180' 2000' 3180'  	fcall	_isdigit
  7099  00B7' 1803               	btfsc	3,0
  7100  00B8' 2800'              	goto	u14461
  7101  00B9' 2800'              	goto	u14460
  7102  00BA'                    u14461:
  7103  00BA' 2800'              	goto	l8940
  7104  00BB'                    u14460:
  7105  00BB' 2800'              	goto	l8954
  7106  00BC'                    l8948:
  7107                           
  7108                           ;doprnt.c: 652: prec = 0;
  7109  00BC' 0180'              	clrf	sprintf@prec^(0+384)
  7110  00BD' 0180'              	clrf	(sprintf@prec+1)^(0+384)
  7111  00BE'                    l8950:
  7112                           
  7113                           ;doprnt.c: 654: flag |= 0x1000;
  7114  00BE' 1601'              	bsf	(sprintf@flag^(0+384)+1),4
  7115  00BF' 2800'              	goto	l8954
  7116  00C0'                    l1095:	
  7117                           ;doprnt.c: 688: case 'f':
  7118                           
  7119                           
  7120                           ;doprnt.c: 689: flag |= 0x400;
  7121  00C0' 1501'              	bsf	(sprintf@flag^(0+384)+1),2
  7122                           
  7123                           ;doprnt.c: 690: break;
  7124  00C1' 2800'              	goto	l8956
  7125  00C2'                    l8954:
  7126  00C2' 0023               	movlb	3	; select bank3
  7127  00C3' 0800'              	movf	(sprintf@f+1)^(0+384),w
  7128  00C4' 0081'              	movwf	(??_sprintf^(0+384)+1)
  7129  00C5' 0800'              	movf	sprintf@f^(0+384),w
  7130  00C6' 0080'              	movwf	??_sprintf^(0+384)
  7131  00C7' 0A80'              	incf	sprintf@f^(0+384),f
  7132  00C8' 1903               	skipnz
  7133  00C9' 0A80'              	incf	(sprintf@f+1)^(0+384),f
  7134  00CA' 0800'              	movf	??_sprintf^(0+384),w
  7135  00CB' 0084               	movwf	4
  7136  00CC' 0800'              	movf	(??_sprintf+1)^(0+384),w
  7137  00CD' 0085               	movwf	5
  7138  00CE' 0800               	movf	0,w	;code access
  7139  00CF' 0080'              	movwf	sprintf@c^(0+384)
  7140                           
  7141                           ; Switch size 1, requested type "simple"
  7142                           ; Number of cases is 4, Range of values is 0 to 105
  7143                           ; switch strategies available:
  7144                           ; Name         Instructions Cycles
  7145                           ; simple_byte           13     7 (average)
  7146                           ; direct_byte          218     6 (fixed)
  7147                           ; jumptable            260     6 (fixed)
  7148                           ;	Chosen strategy is simple_byte
  7149  00D0' 3A00               	xorlw	0	; case 0
  7150  00D1' 1903               	skipnz
  7151  00D2' 2800'              	goto	L3
  7152  00D3' 3A64               	xorlw	100	; case 100
  7153  00D4' 1903               	skipnz
  7154  00D5' 2800'              	goto	l8956
  7155  00D6' 3A02               	xorlw	2	; case 102
  7156  00D7' 1903               	skipnz
  7157  00D8' 2800'              	goto	l1095
  7158  00D9' 3A0F               	xorlw	15	; case 105
  7159  00DA' 1903               	skipnz
  7160  00DB' 2800'              	goto	l8956
  7161  00DC' 2800'              	goto	L1
  7162  00DD'                    l8956:
  7163                           
  7164                           ;doprnt.c: 851: if(flag & (0x700)) {
  7165  00DD' 3000               	movlw	0
  7166  00DE' 0500'              	andwf	sprintf@flag^(0+384),w
  7167  00DF' 0080'              	movwf	??_sprintf^(0+384)
  7168  00E0' 3007               	movlw	7
  7169  00E1' 0500'              	andwf	(sprintf@flag+1)^(0+384),w
  7170  00E2' 0080'              	movwf	(??_sprintf+1)^(0+384)
  7171  00E3' 0800'              	movf	??_sprintf^(0+384),w
  7172  00E4' 0401'              	iorwf	(??_sprintf^(0+384)+1),w
  7173  00E5' 1903               	btfsc	3,2
  7174  00E6' 2800'              	goto	u14471
  7175  00E7' 2800'              	goto	u14470
  7176  00E8'                    u14471:
  7177  00E8' 3180' 2800'        	goto	l9132
  7178  00EA'                    u14470:
  7179  00EA'                    l8958:
  7180                           
  7181                           ;doprnt.c: 853: if(flag & 0x1000)
  7182  00EA' 1E00'              	btfss	(sprintf@flag+1)^(0+384),4
  7183  00EB' 2800'              	goto	u14481
  7184  00EC' 2800'              	goto	u14480
  7185  00ED'                    u14481:
  7186  00ED' 2800'              	goto	l8962
  7187  00EE'                    u14480:
  7188  00EE'                    l8960:
  7189                           
  7190                           ;doprnt.c: 855: prec = 6;
  7191  00EE' 3006               	movlw	6
  7192  00EF' 0080'              	movwf	sprintf@prec^(0+384)
  7193  00F0' 3000               	movlw	0
  7194  00F1' 0081'              	movwf	(sprintf@prec^(0+384)+1)
  7195  00F2'                    l8962:
  7196                           
  7197                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  7198  00F2' 0800'              	movf	sprintf@ap^(0+384),w
  7199  00F3' 0086               	movwf	6
  7200  00F4' 3001               	movlw	1	; select bank2/3
  7201  00F5' 0087               	movwf	7
  7202  00F6' 3F40               	moviw [0]fsr1
  7203  00F7' 0080'              	movwf	sprintf@fval^(0+384)
  7204  00F8' 3F41               	moviw [1]fsr1
  7205  00F9' 0080'              	movwf	(sprintf@fval+1)^(0+384)
  7206  00FA' 3F42               	moviw [2]fsr1
  7207  00FB' 0080'              	movwf	(sprintf@fval+2)^(0+384)
  7208  00FC' 3F43               	moviw [3]fsr1
  7209  00FD' 0080'              	movwf	(sprintf@fval+3)^(0+384)
  7210  00FE'                    l8964:
  7211  00FE' 3004               	movlw	4
  7212  00FF' 0080'              	movwf	??_sprintf^(0+384)
  7213  0100' 0800'              	movf	??_sprintf^(0+384),w
  7214  0101' 0780'              	addwf	sprintf@ap^(0+384),f
  7215  0102'                    l8966:
  7216                           
  7217                           ;doprnt.c: 857: if(fval < 0.0) {
  7218  0102' 0800'              	movf	(sprintf@fval+3)^(0+384),w
  7219  0103' 0022               	movlb	2	; select bank2
  7220  0104' 0080'              	movwf	(___flge@ff1+3)^(0+256)
  7221  0105' 0023               	movlb	3	; select bank3
  7222  0106' 0800'              	movf	(sprintf@fval+2)^(0+384),w
  7223  0107' 0022               	movlb	2	; select bank2
  7224  0108' 0080'              	movwf	(___flge@ff1+2)^(0+256)
  7225  0109' 0023               	movlb	3	; select bank3
  7226  010A' 0800'              	movf	(sprintf@fval+1)^(0+384),w
  7227  010B' 0022               	movlb	2	; select bank2
  7228  010C' 0080'              	movwf	(___flge@ff1+1)^(0+256)
  7229  010D' 0023               	movlb	3	; select bank3
  7230  010E' 0800'              	movf	sprintf@fval^(0+384),w
  7231  010F' 0022               	movlb	2	; select bank2
  7232  0110' 0080'              	movwf	___flge@ff1^(0+256)
  7233  0111' 3000               	movlw	0
  7234  0112' 0080'              	movwf	(___flge@ff2+3)^(0+256)
  7235  0113' 3000               	movlw	0
  7236  0114' 0080'              	movwf	(___flge@ff2+2)^(0+256)
  7237  0115' 3000               	movlw	0
  7238  0116' 0080'              	movwf	(___flge@ff2+1)^(0+256)
  7239  0117' 3000               	movlw	0
  7240  0118' 0080'              	movwf	___flge@ff2^(0+256)
  7241  0119' 3180' 2000' 3180'  	fcall	___flge
  7242  011C' 1803               	btfsc	3,0
  7243  011D' 2800'              	goto	u14491
  7244  011E' 2800'              	goto	u14490
  7245  011F'                    u14491:
  7246  011F' 2800'              	goto	l8972
  7247  0120'                    u14490:
  7248  0120'                    l8968:
  7249                           
  7250                           ;doprnt.c: 858: fval = -fval;
  7251  0120' 0023               	movlb	3	; select bank3
  7252  0121' 0800'              	movf	(sprintf@fval+3)^(0+384),w
  7253  0122' 0022               	movlb	2	; select bank2
  7254  0123' 0080'              	movwf	(___flneg@f1+3)^(0+256)
  7255  0124' 0023               	movlb	3	; select bank3
  7256  0125' 0800'              	movf	(sprintf@fval+2)^(0+384),w
  7257  0126' 0022               	movlb	2	; select bank2
  7258  0127' 0080'              	movwf	(___flneg@f1+2)^(0+256)
  7259  0128' 0023               	movlb	3	; select bank3
  7260  0129' 0800'              	movf	(sprintf@fval+1)^(0+384),w
  7261  012A' 0022               	movlb	2	; select bank2
  7262  012B' 0080'              	movwf	(___flneg@f1+1)^(0+256)
  7263  012C' 0023               	movlb	3	; select bank3
  7264  012D' 0800'              	movf	sprintf@fval^(0+384),w
  7265  012E' 0022               	movlb	2	; select bank2
  7266  012F' 0080'              	movwf	___flneg@f1^(0+256)
  7267  0130' 3180' 2000' 3180'  	fcall	___flneg
  7268  0133' 0022               	movlb	2	; select bank2
  7269  0134' 0800'              	movf	(?___flneg+3)^(0+256),w
  7270  0135' 0023               	movlb	3	; select bank3
  7271  0136' 0080'              	movwf	(sprintf@fval+3)^(0+384)
  7272  0137' 0022               	movlb	2	; select bank2
  7273  0138' 0800'              	movf	(?___flneg+2)^(0+256),w
  7274  0139' 0023               	movlb	3	; select bank3
  7275  013A' 0080'              	movwf	(sprintf@fval+2)^(0+384)
  7276  013B' 0022               	movlb	2	; select bank2
  7277  013C' 0800'              	movf	(?___flneg+1)^(0+256),w
  7278  013D' 0023               	movlb	3	; select bank3
  7279  013E' 0080'              	movwf	(sprintf@fval+1)^(0+384)
  7280  013F' 0022               	movlb	2	; select bank2
  7281  0140' 0800'              	movf	?___flneg^(0+256),w
  7282  0141' 0023               	movlb	3	; select bank3
  7283  0142' 0080'              	movwf	sprintf@fval^(0+384)
  7284  0143'                    l8970:
  7285                           
  7286                           ;doprnt.c: 859: flag |= 0x03;
  7287  0143' 3003               	movlw	3
  7288  0144' 0480'              	iorwf	sprintf@flag^(0+384),f
  7289  0145' 3000               	movlw	0
  7290  0146' 0480'              	iorwf	(sprintf@flag+1)^(0+384),f
  7291  0147'                    l8972:
  7292                           
  7293                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  7294  0147' 0023               	movlb	3	; select bank3
  7295  0148' 0180'              	clrf	sprintf@eexp^(0+384)
  7296  0149' 0180'              	clrf	(sprintf@eexp+1)^(0+384)
  7297  014A'                    l8974:
  7298                           
  7299                           ;doprnt.c: 862: if( fval!=0) {
  7300  014A' 0800'              	movf	(sprintf@fval+3)^(0+384),w
  7301  014B' 0022               	movlb	2	; select bank2
  7302  014C' 0080'              	movwf	(___fleq@ff1+3)^(0+256)
  7303  014D' 0023               	movlb	3	; select bank3
  7304  014E' 0800'              	movf	(sprintf@fval+2)^(0+384),w
  7305  014F' 0022               	movlb	2	; select bank2
  7306  0150' 0080'              	movwf	(___fleq@ff1+2)^(0+256)
  7307  0151' 0023               	movlb	3	; select bank3
  7308  0152' 0800'              	movf	(sprintf@fval+1)^(0+384),w
  7309  0153' 0022               	movlb	2	; select bank2
  7310  0154' 0080'              	movwf	(___fleq@ff1+1)^(0+256)
  7311  0155' 0023               	movlb	3	; select bank3
  7312  0156' 0800'              	movf	sprintf@fval^(0+384),w
  7313  0157' 0022               	movlb	2	; select bank2
  7314  0158' 0080'              	movwf	___fleq@ff1^(0+256)
  7315  0159' 3000               	movlw	0
  7316  015A' 0080'              	movwf	(___fleq@ff2+3)^(0+256)
  7317  015B' 3000               	movlw	0
  7318  015C' 0080'              	movwf	(___fleq@ff2+2)^(0+256)
  7319  015D' 3000               	movlw	0
  7320  015E' 0080'              	movwf	(___fleq@ff2+1)^(0+256)
  7321  015F' 3000               	movlw	0
  7322  0160' 0080'              	movwf	___fleq@ff2^(0+256)
  7323  0161' 3180' 2000' 3180'  	fcall	___fleq
  7324  0164' 1803               	btfsc	3,0
  7325  0165' 2800'              	goto	u14501
  7326  0166' 2800'              	goto	u14500
  7327  0167'                    u14501:
  7328  0167' 2800'              	goto	l1103
  7329  0168'                    u14500:
  7330  0168'                    l8976:
  7331                           
  7332                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  7333  0168' 1003               	clrc
  7334  0169' 0023               	movlb	3	; select bank3
  7335  016A' 0D00'              	rlf	(sprintf@fval+2)^(0+384),w
  7336  016B' 0D00'              	rlf	(sprintf@fval+3)^(0+384),w
  7337  016C' 3E82               	addlw	130
  7338  016D' 0080'              	movwf	sprintf@eexp^(0+384)
  7339  016E' 30FF               	movlw	255
  7340  016F' 1803               	skipnc
  7341  0170' 3000               	movlw	0
  7342  0171' 0081'              	movwf	(sprintf@eexp^(0+384)+1)
  7343  0172'                    l8978:
  7344                           
  7345                           ;doprnt.c: 864: eexp--;
  7346  0172' 30FF               	movlw	255
  7347  0173' 0780'              	addwf	sprintf@eexp^(0+384),f
  7348  0174' 30FF               	movlw	255
  7349  0175' 3D80'              	addwfc	(sprintf@eexp+1)^(0+384),f
  7350  0176'                    l8980:
  7351                           
  7352                           ;doprnt.c: 865: eexp *= 3;
  7353  0176' 3003               	movlw	3
  7354  0177' 0022               	movlb	2	; select bank2
  7355  0178' 0080'              	movwf	___wmul@multiplier^(0+256)
  7356  0179' 3000               	movlw	0
  7357  017A' 0081'              	movwf	(___wmul@multiplier^(0+256)+1)
  7358  017B' 0023               	movlb	3	; select bank3
  7359  017C' 0800'              	movf	(sprintf@eexp+1)^(0+384),w
  7360  017D' 0022               	movlb	2	; select bank2
  7361  017E' 0080'              	movwf	(___wmul@multiplicand+1)^(0+256)
  7362  017F' 0023               	movlb	3	; select bank3
  7363  0180' 0800'              	movf	sprintf@eexp^(0+384),w
  7364  0181' 0022               	movlb	2	; select bank2
  7365  0182' 0080'              	movwf	___wmul@multiplicand^(0+256)
  7366  0183' 3180' 2000' 3180'  	fcall	___wmul
  7367  0186' 0022               	movlb	2	; select bank2
  7368  0187' 0800'              	movf	(?___wmul+1)^(0+256),w
  7369  0188' 0023               	movlb	3	; select bank3
  7370  0189' 0080'              	movwf	(sprintf@eexp+1)^(0+384)
  7371  018A' 0022               	movlb	2	; select bank2
  7372  018B' 0800'              	movf	?___wmul^(0+256),w
  7373  018C' 0023               	movlb	3	; select bank3
  7374  018D' 0080'              	movwf	sprintf@eexp^(0+384)
  7375  018E'                    l8982:
  7376                           
  7377                           ;doprnt.c: 866: eexp /= 10;
  7378  018E' 300A               	movlw	10
  7379  018F' 0022               	movlb	2	; select bank2
  7380  0190' 0080'              	movwf	___awdiv@divisor^(0+256)
  7381  0191' 3000               	movlw	0
  7382  0192' 0081'              	movwf	(___awdiv@divisor^(0+256)+1)
  7383  0193' 0023               	movlb	3	; select bank3
  7384  0194' 0800'              	movf	(sprintf@eexp+1)^(0+384),w
  7385  0195' 0022               	movlb	2	; select bank2
  7386  0196' 0080'              	movwf	(___awdiv@dividend+1)^(0+256)
  7387  0197' 0023               	movlb	3	; select bank3
  7388  0198' 0800'              	movf	sprintf@eexp^(0+384),w
  7389  0199' 0022               	movlb	2	; select bank2
  7390  019A' 0080'              	movwf	___awdiv@dividend^(0+256)
  7391  019B' 3180' 2000' 3180'  	fcall	___awdiv
  7392  019E' 0022               	movlb	2	; select bank2
  7393  019F' 0800'              	movf	(?___awdiv+1)^(0+256),w
  7394  01A0' 0023               	movlb	3	; select bank3
  7395  01A1' 0080'              	movwf	(sprintf@eexp+1)^(0+384)
  7396  01A2' 0022               	movlb	2	; select bank2
  7397  01A3' 0800'              	movf	?___awdiv^(0+256),w
  7398  01A4' 0023               	movlb	3	; select bank3
  7399  01A5' 0080'              	movwf	sprintf@eexp^(0+384)
  7400  01A6'                    l8984:
  7401                           
  7402                           ;doprnt.c: 867: if(eexp < 0)
  7403  01A6' 1F80'              	btfss	(sprintf@eexp+1)^(0+384),7
  7404  01A7' 2800'              	goto	u14511
  7405  01A8' 2800'              	goto	u14510
  7406  01A9'                    u14511:
  7407  01A9' 2800'              	goto	l8988
  7408  01AA'                    u14510:
  7409  01AA'                    l8986:
  7410                           
  7411                           ;doprnt.c: 868: eexp--;
  7412  01AA' 30FF               	movlw	255
  7413  01AB' 0780'              	addwf	sprintf@eexp^(0+384),f
  7414  01AC' 30FF               	movlw	255
  7415  01AD' 3D80'              	addwfc	(sprintf@eexp+1)^(0+384),f
  7416  01AE'                    l8988:
  7417                           
  7418                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  7419  01AE' 0300'              	decf	sprintf@eexp^(0+384),w
  7420  01AF' 3AFF               	xorlw	255
  7421  01B0' 3180' 2000' 3180'  	fcall	_scale
  7422  01B3' 0022               	movlb	2	; select bank2
  7423  01B4' 0800'              	movf	(?_scale+3)^(0+256),w
  7424  01B5' 0023               	movlb	3	; select bank3
  7425  01B6' 0080'              	movwf	(sprintf@tmpval+3)^(0+384)
  7426  01B7' 0022               	movlb	2	; select bank2
  7427  01B8' 0800'              	movf	(?_scale+2)^(0+256),w
  7428  01B9' 0023               	movlb	3	; select bank3
  7429  01BA' 0080'              	movwf	(sprintf@tmpval+2)^(0+384)
  7430  01BB' 0022               	movlb	2	; select bank2
  7431  01BC' 0800'              	movf	(?_scale+1)^(0+256),w
  7432  01BD' 0023               	movlb	3	; select bank3
  7433  01BE' 0080'              	movwf	(sprintf@tmpval+1)^(0+384)
  7434  01BF' 0022               	movlb	2	; select bank2
  7435  01C0' 0800'              	movf	?_scale^(0+256),w
  7436  01C1' 0023               	movlb	3	; select bank3
  7437  01C2' 0080'              	movwf	sprintf@tmpval^(0+384)
  7438  01C3'                    l8990:
  7439                           
  7440                           ;doprnt.c: 873: tmpval.integ *= fval;
  7441  01C3' 0800'              	movf	(sprintf@fval+3)^(0+384),w
  7442  01C4' 0022               	movlb	2	; select bank2
  7443  01C5' 0080'              	movwf	(___flmul@b+3)^(0+256)
  7444  01C6' 0023               	movlb	3	; select bank3
  7445  01C7' 0800'              	movf	(sprintf@fval+2)^(0+384),w
  7446  01C8' 0022               	movlb	2	; select bank2
  7447  01C9' 0080'              	movwf	(___flmul@b+2)^(0+256)
  7448  01CA' 0023               	movlb	3	; select bank3
  7449  01CB' 0800'              	movf	(sprintf@fval+1)^(0+384),w
  7450  01CC' 0022               	movlb	2	; select bank2
  7451  01CD' 0080'              	movwf	(___flmul@b+1)^(0+256)
  7452  01CE' 0023               	movlb	3	; select bank3
  7453  01CF' 0800'              	movf	sprintf@fval^(0+384),w
  7454  01D0' 0022               	movlb	2	; select bank2
  7455  01D1' 0080'              	movwf	___flmul@b^(0+256)
  7456  01D2' 0023               	movlb	3	; select bank3
  7457  01D3' 0800'              	movf	(sprintf@tmpval+3)^(0+384),w
  7458  01D4' 0022               	movlb	2	; select bank2
  7459  01D5' 0080'              	movwf	(___flmul@a+3)^(0+256)
  7460  01D6' 0023               	movlb	3	; select bank3
  7461  01D7' 0800'              	movf	(sprintf@tmpval+2)^(0+384),w
  7462  01D8' 0022               	movlb	2	; select bank2
  7463  01D9' 0080'              	movwf	(___flmul@a+2)^(0+256)
  7464  01DA' 0023               	movlb	3	; select bank3
  7465  01DB' 0800'              	movf	(sprintf@tmpval+1)^(0+384),w
  7466  01DC' 0022               	movlb	2	; select bank2
  7467  01DD' 0080'              	movwf	(___flmul@a+1)^(0+256)
  7468  01DE' 0023               	movlb	3	; select bank3
  7469  01DF' 0800'              	movf	sprintf@tmpval^(0+384),w
  7470  01E0' 0022               	movlb	2	; select bank2
  7471  01E1' 0080'              	movwf	___flmul@a^(0+256)
  7472  01E2' 3180' 2000' 3180'  	fcall	___flmul
  7473  01E5' 0022               	movlb	2	; select bank2
  7474  01E6' 0800'              	movf	(?___flmul+3)^(0+256),w
  7475  01E7' 0023               	movlb	3	; select bank3
  7476  01E8' 0080'              	movwf	(sprintf@tmpval+3)^(0+384)
  7477  01E9' 0022               	movlb	2	; select bank2
  7478  01EA' 0800'              	movf	(?___flmul+2)^(0+256),w
  7479  01EB' 0023               	movlb	3	; select bank3
  7480  01EC' 0080'              	movwf	(sprintf@tmpval+2)^(0+384)
  7481  01ED' 0022               	movlb	2	; select bank2
  7482  01EE' 0800'              	movf	(?___flmul+1)^(0+256),w
  7483  01EF' 0023               	movlb	3	; select bank3
  7484  01F0' 0080'              	movwf	(sprintf@tmpval+1)^(0+384)
  7485  01F1' 0022               	movlb	2	; select bank2
  7486  01F2' 0800'              	movf	?___flmul^(0+256),w
  7487  01F3' 0023               	movlb	3	; select bank3
  7488  01F4' 0080'              	movwf	sprintf@tmpval^(0+384)
  7489  01F5'                    l8992:
  7490                           
  7491                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  7492  01F5' 0800'              	movf	(sprintf@tmpval+3)^(0+384),w
  7493  01F6' 0022               	movlb	2	; select bank2
  7494  01F7' 0080'              	movwf	(___flge@ff1+3)^(0+256)
  7495  01F8' 0023               	movlb	3	; select bank3
  7496  01F9' 0800'              	movf	(sprintf@tmpval+2)^(0+384),w
  7497  01FA' 0022               	movlb	2	; select bank2
  7498  01FB' 0080'              	movwf	(___flge@ff1+2)^(0+256)
  7499  01FC' 0023               	movlb	3	; select bank3
  7500  01FD' 0800'              	movf	(sprintf@tmpval+1)^(0+384),w
  7501  01FE' 0022               	movlb	2	; select bank2
  7502  01FF' 0080'              	movwf	(___flge@ff1+1)^(0+256)
  7503  0200' 0023               	movlb	3	; select bank3
  7504  0201' 0800'              	movf	sprintf@tmpval^(0+384),w
  7505  0202' 0022               	movlb	2	; select bank2
  7506  0203' 0080'              	movwf	___flge@ff1^(0+256)
  7507  0204' 303F               	movlw	63
  7508  0205' 0080'              	movwf	(___flge@ff2+3)^(0+256)
  7509  0206' 3080               	movlw	128
  7510  0207' 0080'              	movwf	(___flge@ff2+2)^(0+256)
  7511  0208' 3000               	movlw	0
  7512  0209' 0080'              	movwf	(___flge@ff2+1)^(0+256)
  7513  020A' 3000               	movlw	0
  7514  020B' 0080'              	movwf	___flge@ff2^(0+256)
  7515  020C' 3180' 2000' 3180'  	fcall	___flge
  7516  020F' 1803               	btfsc	3,0
  7517  0210' 2800'              	goto	u14521
  7518  0211' 2800'              	goto	u14520
  7519  0212'                    u14521:
  7520  0212' 2800'              	goto	l8996
  7521  0213'                    u14520:
  7522  0213'                    l8994:
  7523                           
  7524                           ;doprnt.c: 875: eexp--;
  7525  0213' 30FF               	movlw	255
  7526  0214' 0023               	movlb	3	; select bank3
  7527  0215' 0780'              	addwf	sprintf@eexp^(0+384),f
  7528  0216' 30FF               	movlw	255
  7529  0217' 3D80'              	addwfc	(sprintf@eexp+1)^(0+384),f
  7530  0218' 2800'              	goto	l1103
  7531  0219'                    l8996:
  7532                           
  7533                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  7534  0219' 0023               	movlb	3	; select bank3
  7535  021A' 0800'              	movf	(sprintf@tmpval+3)^(0+384),w
  7536  021B' 0022               	movlb	2	; select bank2
  7537  021C' 0080'              	movwf	(___flge@ff1+3)^(0+256)
  7538  021D' 0023               	movlb	3	; select bank3
  7539  021E' 0800'              	movf	(sprintf@tmpval+2)^(0+384),w
  7540  021F' 0022               	movlb	2	; select bank2
  7541  0220' 0080'              	movwf	(___flge@ff1+2)^(0+256)
  7542  0221' 0023               	movlb	3	; select bank3
  7543  0222' 0800'              	movf	(sprintf@tmpval+1)^(0+384),w
  7544  0223' 0022               	movlb	2	; select bank2
  7545  0224' 0080'              	movwf	(___flge@ff1+1)^(0+256)
  7546  0225' 0023               	movlb	3	; select bank3
  7547  0226' 0800'              	movf	sprintf@tmpval^(0+384),w
  7548  0227' 0022               	movlb	2	; select bank2
  7549  0228' 0080'              	movwf	___flge@ff1^(0+256)
  7550  0229' 3041               	movlw	65
  7551  022A' 0080'              	movwf	(___flge@ff2+3)^(0+256)
  7552  022B' 3020               	movlw	32
  7553  022C' 0080'              	movwf	(___flge@ff2+2)^(0+256)
  7554  022D' 3000               	movlw	0
  7555  022E' 0080'              	movwf	(___flge@ff2+1)^(0+256)
  7556  022F' 3000               	movlw	0
  7557  0230' 0080'              	movwf	___flge@ff2^(0+256)
  7558  0231' 3180' 2000' 3180'  	fcall	___flge
  7559  0234' 1C03               	btfss	3,0
  7560  0235' 2800'              	goto	u14531
  7561  0236' 2800'              	goto	u14530
  7562  0237'                    u14531:
  7563  0237' 2800'              	goto	l1103
  7564  0238'                    u14530:
  7565  0238'                    l8998:
  7566                           
  7567                           ;doprnt.c: 877: eexp++;
  7568  0238' 3001               	movlw	1
  7569  0239' 0023               	movlb	3	; select bank3
  7570  023A' 0780'              	addwf	sprintf@eexp^(0+384),f
  7571  023B' 3000               	movlw	0
  7572  023C' 3D80'              	addwfc	(sprintf@eexp+1)^(0+384),f
  7573  023D'                    l1103:
  7574                           
  7575                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  7576  023D' 0023               	movlb	3	; select bank3
  7577  023E' 0800'              	movf	(sprintf@prec+1)^(0+384),w
  7578  023F' 3A80               	xorlw	128
  7579  0240' 0080'              	movwf	??_sprintf^(0+384)
  7580  0241' 3080               	movlw	128
  7581  0242' 0200'              	subwf	??_sprintf^(0+384),w
  7582  0243' 1D03               	skipz
  7583  0244' 2800'              	goto	u14545
  7584  0245' 300D               	movlw	13
  7585  0246' 0200'              	subwf	sprintf@prec^(0+384),w
  7586  0247'                    u14545:
  7587  0247' 1803               	skipnc
  7588  0248' 2800'              	goto	u14541
  7589  0249' 2800'              	goto	u14540
  7590  024A'                    u14541:
  7591  024A' 2800'              	goto	l9002
  7592  024B'                    u14540:
  7593  024B'                    l9000:
  7594                           
  7595                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  7596  024B' 0023               	movlb	3	; select bank3
  7597  024C' 0800'              	movf	sprintf@prec^(0+384),w
  7598  024D' 3180' 2000' 3180'  	fcall	_fround
  7599  0250' 0022               	movlb	2	; select bank2
  7600  0251' 0800'              	movf	(?_fround+3)^(0+256),w
  7601  0252' 0080'              	movwf	(___fladd@b+3)^(0+256)
  7602  0253' 0800'              	movf	(?_fround+2)^(0+256),w
  7603  0254' 0080'              	movwf	(___fladd@b+2)^(0+256)
  7604  0255' 0800'              	movf	(?_fround+1)^(0+256),w
  7605  0256' 0080'              	movwf	(___fladd@b+1)^(0+256)
  7606  0257' 0800'              	movf	?_fround^(0+256),w
  7607  0258' 0080'              	movwf	___fladd@b^(0+256)
  7608  0259' 0023               	movlb	3	; select bank3
  7609  025A' 0800'              	movf	(sprintf@fval+3)^(0+384),w
  7610  025B' 0022               	movlb	2	; select bank2
  7611  025C' 0080'              	movwf	(___fladd@a+3)^(0+256)
  7612  025D' 0023               	movlb	3	; select bank3
  7613  025E' 0800'              	movf	(sprintf@fval+2)^(0+384),w
  7614  025F' 0022               	movlb	2	; select bank2
  7615  0260' 0080'              	movwf	(___fladd@a+2)^(0+256)
  7616  0261' 0023               	movlb	3	; select bank3
  7617  0262' 0800'              	movf	(sprintf@fval+1)^(0+384),w
  7618  0263' 0022               	movlb	2	; select bank2
  7619  0264' 0080'              	movwf	(___fladd@a+1)^(0+256)
  7620  0265' 0023               	movlb	3	; select bank3
  7621  0266' 0800'              	movf	sprintf@fval^(0+384),w
  7622  0267' 0022               	movlb	2	; select bank2
  7623  0268' 0080'              	movwf	___fladd@a^(0+256)
  7624  0269' 3180' 2000' 3180'  	fcall	___fladd
  7625  026C' 0022               	movlb	2	; select bank2
  7626  026D' 0800'              	movf	(?___fladd+3)^(0+256),w
  7627  026E' 0023               	movlb	3	; select bank3
  7628  026F' 0080'              	movwf	(sprintf@fval+3)^(0+384)
  7629  0270' 0022               	movlb	2	; select bank2
  7630  0271' 0800'              	movf	(?___fladd+2)^(0+256),w
  7631  0272' 0023               	movlb	3	; select bank3
  7632  0273' 0080'              	movwf	(sprintf@fval+2)^(0+384)
  7633  0274' 0022               	movlb	2	; select bank2
  7634  0275' 0800'              	movf	(?___fladd+1)^(0+256),w
  7635  0276' 0023               	movlb	3	; select bank3
  7636  0277' 0080'              	movwf	(sprintf@fval+1)^(0+384)
  7637  0278' 0022               	movlb	2	; select bank2
  7638  0279' 0800'              	movf	?___fladd^(0+256),w
  7639  027A' 0023               	movlb	3	; select bank3
  7640  027B' 0080'              	movwf	sprintf@fval^(0+384)
  7641  027C'                    l9002:
  7642                           
  7643                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  7644  027C' 0023               	movlb	3	; select bank3
  7645  027D' 0800'              	movf	(sprintf@eexp+1)^(0+384),w
  7646  027E' 3A80               	xorlw	128
  7647  027F' 0080'              	movwf	??_sprintf^(0+384)
  7648  0280' 3080               	movlw	128
  7649  0281' 0200'              	subwf	??_sprintf^(0+384),w
  7650  0282' 1D03               	skipz
  7651  0283' 2800'              	goto	u14555
  7652  0284' 300A               	movlw	10
  7653  0285' 0200'              	subwf	sprintf@eexp^(0+384),w
  7654  0286'                    u14555:
  7655  0286' 1803               	skipnc
  7656  0287' 2800'              	goto	u14551
  7657  0288' 3180' 2800'        	goto	u14550
  7658  028A'                    u14551:
  7659  028A' 3180' 2800'        	goto	l9010
  7660  028C'                    L3:
  7661  028C'                    L2:
  7662  028C' 3180' 2800'        	ljmp	l9228
  7663                           
  7664                           	psect	text2
  7665  0000'                    __ptext2:	
  7666 ;; *************** function _scale *****************
  7667 ;; Defined at:
  7668 ;;		line 433 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/doprnt.c"
  7669 ;; Parameters:    Size  Location     Type
  7670 ;;  scl             1    wreg     char 
  7671 ;; Auto vars:     Size  Location     Type
  7672 ;;  scl             1   62[BANK2 ] char 
  7673 ;; Return value:  Size  Location     Type
  7674 ;;                  4   42[BANK2 ] char 
  7675 ;; Registers used:
  7676 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7677 ;; Tracked objects:
  7678 ;;		On entry : 0/0
  7679 ;;		On exit  : 0/0
  7680 ;;		Unchanged: 0/0
  7681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7682 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  7683 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  7684 ;;      Temps:          0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
  7685 ;;      Totals:         0       0       0      21       0       0       0       0       0       0       0       0       
      +0       0
  7686 ;;Total ram usage:       21 bytes
  7687 ;; Hardware stack levels used:    1
  7688 ;; Hardware stack levels required when called:    9
  7689 ;; This function calls:
  7690 ;;		___awdiv
  7691 ;;		___awmod
  7692 ;;		___flmul
  7693 ;; This function is called by:
  7694 ;;		_sprintf
  7695 ;; This function uses a non-reentrant model
  7696 ;;
  7697                           
  7698                           
  7699                           ;psect for function _scale
  7700  0000'                    _scale:
  7701                           
  7702                           ;incstack = 0
  7703                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7704                           ;scale@scl stored from wreg
  7705  0000' 0022               	movlb	2	; select bank2
  7706  0001' 0080'              	movwf	scale@scl^(0+256)
  7707  0002'                    l8564:
  7708                           
  7709                           ;doprnt.c: 436: if(scl < 0) {
  7710  0002' 1F80'              	btfss	scale@scl^(0+256),7
  7711  0003' 2800'              	goto	u13591
  7712  0004' 2800'              	goto	u13590
  7713  0005'                    u13591:
  7714  0005' 2800'              	goto	l8586
  7715  0006'                    u13590:
  7716  0006'                    l8566:
  7717                           
  7718                           ;doprnt.c: 437: scl = -scl;
  7719  0006' 0980'              	comf	scale@scl^(0+256),f
  7720  0007' 0A80'              	incf	scale@scl^(0+256),f
  7721  0008'                    l8568:
  7722                           
  7723                           ;doprnt.c: 438: if(scl>=110)
  7724  0008' 0800'              	movf	scale@scl^(0+256),w
  7725  0009' 3A80               	xorlw	128
  7726  000A' 3E12               	addlw	-238
  7727  000B' 1C03               	skipc
  7728  000C' 2800'              	goto	u13601
  7729  000D' 2800'              	goto	u13600
  7730  000E'                    u13601:
  7731  000E' 2800'              	goto	l8576
  7732  000F'                    u13600:
  7733  000F'                    l8570:
  7734                           
  7735                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  7736  000F' 300A               	movlw	10
  7737  0010' 0080'              	movwf	___awdiv@divisor^(0+256)
  7738  0011' 3000               	movlw	0
  7739  0012' 0081'              	movwf	(___awdiv@divisor^(0+256)+1)
  7740  0013' 0800'              	movf	scale@scl^(0+256),w
  7741  0014' 0080'              	movwf	___awmod@dividend^(0+256)
  7742  0015' 0180'              	clrf	(___awmod@dividend+1)^(0+256)
  7743  0016' 1B80'              	btfsc	___awmod@dividend^(0+256),7
  7744  0017' 0380'              	decf	(___awmod@dividend+1)^(0+256),f
  7745  0018' 3064               	movlw	100
  7746  0019' 0080'              	movwf	___awmod@divisor^(0+256)
  7747  001A' 3000               	movlw	0
  7748  001B' 0081'              	movwf	(___awmod@divisor^(0+256)+1)
  7749  001C' 3180' 2000' 3180'  	fcall	___awmod
  7750  001F' 0022               	movlb	2	; select bank2
  7751  0020' 0800'              	movf	(?___awmod+1)^(0+256),w
  7752  0021' 0080'              	movwf	(___awdiv@dividend+1)^(0+256)
  7753  0022' 0800'              	movf	?___awmod^(0+256),w
  7754  0023' 0080'              	movwf	___awdiv@dividend^(0+256)
  7755  0024' 3180' 2000' 3180'  	fcall	___awdiv
  7756  0027' 0022               	movlb	2	; select bank2
  7757  0028' 0800'              	movf	?___awdiv^(0+256),w
  7758  0029' 3E09               	addlw	9
  7759  002A' 0080'              	movwf	??_scale^(0+256)
  7760  002B' 0181'              	clrf	(??_scale^(0+256)+1)
  7761  002C' 3580'              	lslf	??_scale^(0+256),f
  7762  002D' 0D81'              	rlf	(??_scale^(0+256)+1),f
  7763  002E' 3580'              	lslf	??_scale^(0+256),f
  7764  002F' 0D81'              	rlf	(??_scale^(0+256)+1),f
  7765  0030' 3000'              	movlw	low (__npowers_| (0+32768))
  7766  0031' 0700'              	addwf	??_scale^(0+256),w
  7767  0032' 0084               	movwf	4
  7768  0033' 3000'              	movlw	high (__npowers_| (0+32768))
  7769  0034' 3D00'              	addwfc	(??_scale+1)^(0+256),w
  7770  0035' 0085               	movwf	5
  7771  0036' 3F00               	moviw [0]fsr0
  7772  0037' 0080'              	movwf	(??_scale+2)^(0+256)
  7773  0038' 3F01               	moviw [1]fsr0
  7774  0039' 0081'              	movwf	((??_scale+2)^(0+256)+1)
  7775  003A' 3F02               	moviw [2]fsr0
  7776  003B' 0082'              	movwf	((??_scale+2)^(0+256)+2)
  7777  003C' 3F03               	moviw [3]fsr0
  7778  003D' 0083'              	movwf	((??_scale+2)^(0+256)+3)
  7779  003E' 0800'              	movf	(??_scale+5)^(0+256),w
  7780  003F' 0080'              	movwf	(___flmul@b+3)^(0+256)
  7781  0040' 0800'              	movf	(??_scale+4)^(0+256),w
  7782  0041' 0080'              	movwf	(___flmul@b+2)^(0+256)
  7783  0042' 0800'              	movf	(??_scale+3)^(0+256),w
  7784  0043' 0080'              	movwf	(___flmul@b+1)^(0+256)
  7785  0044' 0800'              	movf	(??_scale+2)^(0+256),w
  7786  0045' 0080'              	movwf	___flmul@b^(0+256)
  7787  0046' 3064               	movlw	100
  7788  0047' 0080'              	movwf	___awdiv@divisor^(0+256)
  7789  0048' 3000               	movlw	0
  7790  0049' 0081'              	movwf	(___awdiv@divisor^(0+256)+1)
  7791  004A' 0800'              	movf	scale@scl^(0+256),w
  7792  004B' 0080'              	movwf	___awdiv@dividend^(0+256)
  7793  004C' 0180'              	clrf	(___awdiv@dividend+1)^(0+256)
  7794  004D' 1B80'              	btfsc	___awdiv@dividend^(0+256),7
  7795  004E' 0380'              	decf	(___awdiv@dividend+1)^(0+256),f
  7796  004F' 3180' 2000' 3180'  	fcall	___awdiv
  7797  0052' 0022               	movlb	2	; select bank2
  7798  0053' 0800'              	movf	?___awdiv^(0+256),w
  7799  0054' 3E12               	addlw	18
  7800  0055' 0080'              	movwf	(??_scale+6)^(0+256)
  7801  0056' 0181'              	clrf	((??_scale+6)^(0+256)+1)
  7802  0057' 3580'              	lslf	(??_scale+6)^(0+256),f
  7803  0058' 0D81'              	rlf	((??_scale+6)^(0+256)+1),f
  7804  0059' 3580'              	lslf	(??_scale+6)^(0+256),f
  7805  005A' 0D81'              	rlf	((??_scale+6)^(0+256)+1),f
  7806  005B' 3000'              	movlw	low (__npowers_| (0+32768))
  7807  005C' 0700'              	addwf	(??_scale+6)^(0+256),w
  7808  005D' 0084               	movwf	4
  7809  005E' 3000'              	movlw	high (__npowers_| (0+32768))
  7810  005F' 3D00'              	addwfc	(??_scale+7)^(0+256),w
  7811  0060' 0085               	movwf	5
  7812  0061' 3F00               	moviw [0]fsr0
  7813  0062' 0080'              	movwf	(??_scale+8)^(0+256)
  7814  0063' 3F01               	moviw [1]fsr0
  7815  0064' 0081'              	movwf	((??_scale+8)^(0+256)+1)
  7816  0065' 3F02               	moviw [2]fsr0
  7817  0066' 0082'              	movwf	((??_scale+8)^(0+256)+2)
  7818  0067' 3F03               	moviw [3]fsr0
  7819  0068' 0083'              	movwf	((??_scale+8)^(0+256)+3)
  7820  0069' 0800'              	movf	(??_scale+11)^(0+256),w
  7821  006A' 0080'              	movwf	(___flmul@a+3)^(0+256)
  7822  006B' 0800'              	movf	(??_scale+10)^(0+256),w
  7823  006C' 0080'              	movwf	(___flmul@a+2)^(0+256)
  7824  006D' 0800'              	movf	(??_scale+9)^(0+256),w
  7825  006E' 0080'              	movwf	(___flmul@a+1)^(0+256)
  7826  006F' 0800'              	movf	(??_scale+8)^(0+256),w
  7827  0070' 0080'              	movwf	___flmul@a^(0+256)
  7828  0071' 3180' 2000' 3180'  	fcall	___flmul
  7829  0074' 0022               	movlb	2	; select bank2
  7830  0075' 0800'              	movf	(?___flmul+3)^(0+256),w
  7831  0076' 0080'              	movwf	(_scale$2538+3)^(0+256)
  7832  0077' 0800'              	movf	(?___flmul+2)^(0+256),w
  7833  0078' 0080'              	movwf	(_scale$2538+2)^(0+256)
  7834  0079' 0800'              	movf	(?___flmul+1)^(0+256),w
  7835  007A' 0080'              	movwf	(_scale$2538+1)^(0+256)
  7836  007B' 0800'              	movf	?___flmul^(0+256),w
  7837  007C' 0080'              	movwf	_scale$2538^(0+256)
  7838                           
  7839                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  7840  007D' 300A               	movlw	10
  7841  007E' 0080'              	movwf	___awmod@divisor^(0+256)
  7842  007F' 3000               	movlw	0
  7843  0080' 0081'              	movwf	(___awmod@divisor^(0+256)+1)
  7844  0081' 0800'              	movf	scale@scl^(0+256),w
  7845  0082' 0080'              	movwf	___awmod@dividend^(0+256)
  7846  0083' 0180'              	clrf	(___awmod@dividend+1)^(0+256)
  7847  0084' 1B80'              	btfsc	___awmod@dividend^(0+256),7
  7848  0085' 0380'              	decf	(___awmod@dividend+1)^(0+256),f
  7849  0086' 3180' 2000' 3180'  	fcall	___awmod
  7850  0089' 0022               	movlb	2	; select bank2
  7851  008A' 0800'              	movf	?___awmod^(0+256),w
  7852  008B' 0080'              	movwf	??_scale^(0+256)
  7853  008C' 0181'              	clrf	(??_scale^(0+256)+1)
  7854  008D' 3580'              	lslf	??_scale^(0+256),f
  7855  008E' 0D81'              	rlf	(??_scale^(0+256)+1),f
  7856  008F' 3580'              	lslf	??_scale^(0+256),f
  7857  0090' 0D81'              	rlf	(??_scale^(0+256)+1),f
  7858  0091' 3000'              	movlw	low (__npowers_| (0+32768))
  7859  0092' 0700'              	addwf	??_scale^(0+256),w
  7860  0093' 0084               	movwf	4
  7861  0094' 3000'              	movlw	high (__npowers_| (0+32768))
  7862  0095' 3D00'              	addwfc	(??_scale+1)^(0+256),w
  7863  0096' 0085               	movwf	5
  7864  0097' 3F00               	moviw [0]fsr0
  7865  0098' 0080'              	movwf	(??_scale+2)^(0+256)
  7866  0099' 3F01               	moviw [1]fsr0
  7867  009A' 0081'              	movwf	((??_scale+2)^(0+256)+1)
  7868  009B' 3F02               	moviw [2]fsr0
  7869  009C' 0082'              	movwf	((??_scale+2)^(0+256)+2)
  7870  009D' 3F03               	moviw [3]fsr0
  7871  009E' 0083'              	movwf	((??_scale+2)^(0+256)+3)
  7872  009F' 0800'              	movf	(??_scale+5)^(0+256),w
  7873  00A0' 0080'              	movwf	(___flmul@b+3)^(0+256)
  7874  00A1' 0800'              	movf	(??_scale+4)^(0+256),w
  7875  00A2' 0080'              	movwf	(___flmul@b+2)^(0+256)
  7876  00A3' 0800'              	movf	(??_scale+3)^(0+256),w
  7877  00A4' 0080'              	movwf	(___flmul@b+1)^(0+256)
  7878  00A5' 0800'              	movf	(??_scale+2)^(0+256),w
  7879  00A6' 0080'              	movwf	___flmul@b^(0+256)
  7880  00A7' 0800'              	movf	(_scale$2538+3)^(0+256),w
  7881  00A8' 0080'              	movwf	(___flmul@a+3)^(0+256)
  7882  00A9' 0800'              	movf	(_scale$2538+2)^(0+256),w
  7883  00AA' 0080'              	movwf	(___flmul@a+2)^(0+256)
  7884  00AB' 0800'              	movf	(_scale$2538+1)^(0+256),w
  7885  00AC' 0080'              	movwf	(___flmul@a+1)^(0+256)
  7886  00AD' 0800'              	movf	_scale$2538^(0+256),w
  7887  00AE' 0080'              	movwf	___flmul@a^(0+256)
  7888  00AF' 3180' 2000' 3180'  	fcall	___flmul
  7889  00B2' 0022               	movlb	2	; select bank2
  7890  00B3' 0800'              	movf	(?___flmul+3)^(0+256),w
  7891  00B4' 0080'              	movwf	(?_scale+3)^(0+256)
  7892  00B5' 0800'              	movf	(?___flmul+2)^(0+256),w
  7893  00B6' 0080'              	movwf	(?_scale+2)^(0+256)
  7894  00B7' 0800'              	movf	(?___flmul+1)^(0+256),w
  7895  00B8' 0080'              	movwf	(?_scale+1)^(0+256)
  7896  00B9' 0800'              	movf	?___flmul^(0+256),w
  7897  00BA' 0080'              	movwf	?_scale^(0+256)
  7898  00BB' 2800'              	goto	l1067
  7899  00BC'                    l8576:
  7900                           
  7901                           ;doprnt.c: 440: else if(scl > 10)
  7902  00BC' 0800'              	movf	scale@scl^(0+256),w
  7903  00BD' 3A80               	xorlw	128
  7904  00BE' 3E75               	addlw	-139
  7905  00BF' 1C03               	skipc
  7906  00C0' 2800'              	goto	u13611
  7907  00C1' 2800'              	goto	u13610
  7908  00C2'                    u13611:
  7909  00C2' 2800'              	goto	l8582
  7910  00C3'                    u13610:
  7911  00C3'                    l8578:
  7912                           
  7913                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  7914  00C3' 300A               	movlw	10
  7915  00C4' 0080'              	movwf	___awmod@divisor^(0+256)
  7916  00C5' 3000               	movlw	0
  7917  00C6' 0081'              	movwf	(___awmod@divisor^(0+256)+1)
  7918  00C7' 0800'              	movf	scale@scl^(0+256),w
  7919  00C8' 0080'              	movwf	___awmod@dividend^(0+256)
  7920  00C9' 0180'              	clrf	(___awmod@dividend+1)^(0+256)
  7921  00CA' 1B80'              	btfsc	___awmod@dividend^(0+256),7
  7922  00CB' 0380'              	decf	(___awmod@dividend+1)^(0+256),f
  7923  00CC' 3180' 2000' 3180'  	fcall	___awmod
  7924  00CF' 0022               	movlb	2	; select bank2
  7925  00D0' 0800'              	movf	?___awmod^(0+256),w
  7926  00D1' 0080'              	movwf	??_scale^(0+256)
  7927  00D2' 0181'              	clrf	(??_scale^(0+256)+1)
  7928  00D3' 3580'              	lslf	??_scale^(0+256),f
  7929  00D4' 0D81'              	rlf	(??_scale^(0+256)+1),f
  7930  00D5' 3580'              	lslf	??_scale^(0+256),f
  7931  00D6' 0D81'              	rlf	(??_scale^(0+256)+1),f
  7932  00D7' 3000'              	movlw	low (__npowers_| (0+32768))
  7933  00D8' 0700'              	addwf	??_scale^(0+256),w
  7934  00D9' 0084               	movwf	4
  7935  00DA' 3000'              	movlw	high (__npowers_| (0+32768))
  7936  00DB' 3D00'              	addwfc	(??_scale+1)^(0+256),w
  7937  00DC' 0085               	movwf	5
  7938  00DD' 3F00               	moviw [0]fsr0
  7939  00DE' 0080'              	movwf	(??_scale+2)^(0+256)
  7940  00DF' 3F01               	moviw [1]fsr0
  7941  00E0' 0081'              	movwf	((??_scale+2)^(0+256)+1)
  7942  00E1' 3F02               	moviw [2]fsr0
  7943  00E2' 0082'              	movwf	((??_scale+2)^(0+256)+2)
  7944  00E3' 3F03               	moviw [3]fsr0
  7945  00E4' 0083'              	movwf	((??_scale+2)^(0+256)+3)
  7946  00E5' 0800'              	movf	(??_scale+5)^(0+256),w
  7947  00E6' 0080'              	movwf	(___flmul@b+3)^(0+256)
  7948  00E7' 0800'              	movf	(??_scale+4)^(0+256),w
  7949  00E8' 0080'              	movwf	(___flmul@b+2)^(0+256)
  7950  00E9' 0800'              	movf	(??_scale+3)^(0+256),w
  7951  00EA' 0080'              	movwf	(___flmul@b+1)^(0+256)
  7952  00EB' 0800'              	movf	(??_scale+2)^(0+256),w
  7953  00EC' 0080'              	movwf	___flmul@b^(0+256)
  7954  00ED' 300A               	movlw	10
  7955  00EE' 0080'              	movwf	___awdiv@divisor^(0+256)
  7956  00EF' 3000               	movlw	0
  7957  00F0' 0081'              	movwf	(___awdiv@divisor^(0+256)+1)
  7958  00F1' 0800'              	movf	scale@scl^(0+256),w
  7959  00F2' 0080'              	movwf	___awdiv@dividend^(0+256)
  7960  00F3' 0180'              	clrf	(___awdiv@dividend+1)^(0+256)
  7961  00F4' 1B80'              	btfsc	___awdiv@dividend^(0+256),7
  7962  00F5' 0380'              	decf	(___awdiv@dividend+1)^(0+256),f
  7963  00F6' 3180' 2000' 3180'  	fcall	___awdiv
  7964  00F9' 0022               	movlb	2	; select bank2
  7965  00FA' 0800'              	movf	?___awdiv^(0+256),w
  7966  00FB' 3E09               	addlw	9
  7967  00FC' 0080'              	movwf	(??_scale+6)^(0+256)
  7968  00FD' 0181'              	clrf	((??_scale+6)^(0+256)+1)
  7969  00FE' 3580'              	lslf	(??_scale+6)^(0+256),f
  7970  00FF' 0D81'              	rlf	((??_scale+6)^(0+256)+1),f
  7971  0100' 3580'              	lslf	(??_scale+6)^(0+256),f
  7972  0101' 0D81'              	rlf	((??_scale+6)^(0+256)+1),f
  7973  0102' 3000'              	movlw	low (__npowers_| (0+32768))
  7974  0103' 0700'              	addwf	(??_scale+6)^(0+256),w
  7975  0104' 0084               	movwf	4
  7976  0105' 3000'              	movlw	high (__npowers_| (0+32768))
  7977  0106' 3D00'              	addwfc	(??_scale+7)^(0+256),w
  7978  0107' 0085               	movwf	5
  7979  0108' 3F00               	moviw [0]fsr0
  7980  0109' 0080'              	movwf	(??_scale+8)^(0+256)
  7981  010A' 3F01               	moviw [1]fsr0
  7982  010B' 0081'              	movwf	((??_scale+8)^(0+256)+1)
  7983  010C' 3F02               	moviw [2]fsr0
  7984  010D' 0082'              	movwf	((??_scale+8)^(0+256)+2)
  7985  010E' 3F03               	moviw [3]fsr0
  7986  010F' 0083'              	movwf	((??_scale+8)^(0+256)+3)
  7987  0110' 0800'              	movf	(??_scale+11)^(0+256),w
  7988  0111' 0080'              	movwf	(___flmul@a+3)^(0+256)
  7989  0112' 0800'              	movf	(??_scale+10)^(0+256),w
  7990  0113' 0080'              	movwf	(___flmul@a+2)^(0+256)
  7991  0114' 0800'              	movf	(??_scale+9)^(0+256),w
  7992  0115' 0080'              	movwf	(___flmul@a+1)^(0+256)
  7993  0116' 0800'              	movf	(??_scale+8)^(0+256),w
  7994  0117' 0080'              	movwf	___flmul@a^(0+256)
  7995  0118' 3180' 2000' 3180'  	fcall	___flmul
  7996  011B' 0022               	movlb	2	; select bank2
  7997  011C' 0800'              	movf	(?___flmul+3)^(0+256),w
  7998  011D' 0080'              	movwf	(?_scale+3)^(0+256)
  7999  011E' 0800'              	movf	(?___flmul+2)^(0+256),w
  8000  011F' 0080'              	movwf	(?_scale+2)^(0+256)
  8001  0120' 0800'              	movf	(?___flmul+1)^(0+256),w
  8002  0121' 0080'              	movwf	(?_scale+1)^(0+256)
  8003  0122' 0800'              	movf	?___flmul^(0+256),w
  8004  0123' 0080'              	movwf	?_scale^(0+256)
  8005  0124' 2800'              	goto	l1067
  8006  0125'                    l8582:
  8007                           
  8008                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  8009  0125' 0800'              	movf	scale@scl^(0+256),w
  8010  0126' 0080'              	movwf	??_scale^(0+256)
  8011  0127' 0181'              	clrf	(??_scale^(0+256)+1)
  8012  0128' 3580'              	lslf	??_scale^(0+256),f
  8013  0129' 0D81'              	rlf	(??_scale^(0+256)+1),f
  8014  012A' 3580'              	lslf	??_scale^(0+256),f
  8015  012B' 0D81'              	rlf	(??_scale^(0+256)+1),f
  8016  012C' 3000'              	movlw	low (__npowers_| (0+32768))
  8017  012D' 0700'              	addwf	??_scale^(0+256),w
  8018  012E' 0084               	movwf	4
  8019  012F' 3000'              	movlw	high (__npowers_| (0+32768))
  8020  0130' 3D00'              	addwfc	(??_scale+1)^(0+256),w
  8021  0131' 0085               	movwf	5
  8022  0132' 3F00               	moviw [0]fsr0
  8023  0133' 0080'              	movwf	(??_scale+2)^(0+256)
  8024  0134' 3F01               	moviw [1]fsr0
  8025  0135' 0081'              	movwf	((??_scale+2)^(0+256)+1)
  8026  0136' 3F02               	moviw [2]fsr0
  8027  0137' 0082'              	movwf	((??_scale+2)^(0+256)+2)
  8028  0138' 3F03               	moviw [3]fsr0
  8029  0139' 0083'              	movwf	((??_scale+2)^(0+256)+3)
  8030  013A' 0800'              	movf	(??_scale+5)^(0+256),w
  8031  013B' 0080'              	movwf	(?_scale+3)^(0+256)
  8032  013C' 0800'              	movf	(??_scale+4)^(0+256),w
  8033  013D' 0080'              	movwf	(?_scale+2)^(0+256)
  8034  013E' 0800'              	movf	(??_scale+3)^(0+256),w
  8035  013F' 0080'              	movwf	(?_scale+1)^(0+256)
  8036  0140' 0800'              	movf	(??_scale+2)^(0+256),w
  8037  0141' 0080'              	movwf	?_scale^(0+256)
  8038  0142' 2800'              	goto	l1067
  8039  0143'                    l8586:
  8040                           
  8041                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  8042  0143' 0800'              	movf	scale@scl^(0+256),w
  8043  0144' 3A80               	xorlw	128
  8044  0145' 3E12               	addlw	-238
  8045  0146' 1C03               	skipc
  8046  0147' 2800'              	goto	u13621
  8047  0148' 2800'              	goto	u13620
  8048  0149'                    u13621:
  8049  0149' 2800'              	goto	l8594
  8050  014A'                    u13620:
  8051  014A'                    l8588:
  8052                           
  8053                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  8054  014A' 300A               	movlw	10
  8055  014B' 0080'              	movwf	___awdiv@divisor^(0+256)
  8056  014C' 3000               	movlw	0
  8057  014D' 0081'              	movwf	(___awdiv@divisor^(0+256)+1)
  8058  014E' 0800'              	movf	scale@scl^(0+256),w
  8059  014F' 0080'              	movwf	___awmod@dividend^(0+256)
  8060  0150' 0180'              	clrf	(___awmod@dividend+1)^(0+256)
  8061  0151' 1B80'              	btfsc	___awmod@dividend^(0+256),7
  8062  0152' 0380'              	decf	(___awmod@dividend+1)^(0+256),f
  8063  0153' 3064               	movlw	100
  8064  0154' 0080'              	movwf	___awmod@divisor^(0+256)
  8065  0155' 3000               	movlw	0
  8066  0156' 0081'              	movwf	(___awmod@divisor^(0+256)+1)
  8067  0157' 3180' 2000' 3180'  	fcall	___awmod
  8068  015A' 0022               	movlb	2	; select bank2
  8069  015B' 0800'              	movf	(?___awmod+1)^(0+256),w
  8070  015C' 0080'              	movwf	(___awdiv@dividend+1)^(0+256)
  8071  015D' 0800'              	movf	?___awmod^(0+256),w
  8072  015E' 0080'              	movwf	___awdiv@dividend^(0+256)
  8073  015F' 3180' 2000' 3180'  	fcall	___awdiv
  8074  0162' 0022               	movlb	2	; select bank2
  8075  0163' 0800'              	movf	?___awdiv^(0+256),w
  8076  0164' 3E09               	addlw	9
  8077  0165' 0080'              	movwf	??_scale^(0+256)
  8078  0166' 0181'              	clrf	(??_scale^(0+256)+1)
  8079  0167' 3580'              	lslf	??_scale^(0+256),f
  8080  0168' 0D81'              	rlf	(??_scale^(0+256)+1),f
  8081  0169' 3580'              	lslf	??_scale^(0+256),f
  8082  016A' 0D81'              	rlf	(??_scale^(0+256)+1),f
  8083  016B' 3000'              	movlw	low (__powers_| (0+32768))
  8084  016C' 0700'              	addwf	??_scale^(0+256),w
  8085  016D' 0084               	movwf	4
  8086  016E' 3000'              	movlw	high (__powers_| (0+32768))
  8087  016F' 3D00'              	addwfc	(??_scale+1)^(0+256),w
  8088  0170' 0085               	movwf	5
  8089  0171' 3F00               	moviw [0]fsr0
  8090  0172' 0080'              	movwf	(??_scale+2)^(0+256)
  8091  0173' 3F01               	moviw [1]fsr0
  8092  0174' 0081'              	movwf	((??_scale+2)^(0+256)+1)
  8093  0175' 3F02               	moviw [2]fsr0
  8094  0176' 0082'              	movwf	((??_scale+2)^(0+256)+2)
  8095  0177' 3F03               	moviw [3]fsr0
  8096  0178' 0083'              	movwf	((??_scale+2)^(0+256)+3)
  8097  0179' 0800'              	movf	(??_scale+5)^(0+256),w
  8098  017A' 0080'              	movwf	(___flmul@b+3)^(0+256)
  8099  017B' 0800'              	movf	(??_scale+4)^(0+256),w
  8100  017C' 0080'              	movwf	(___flmul@b+2)^(0+256)
  8101  017D' 0800'              	movf	(??_scale+3)^(0+256),w
  8102  017E' 0080'              	movwf	(___flmul@b+1)^(0+256)
  8103  017F' 0800'              	movf	(??_scale+2)^(0+256),w
  8104  0180' 0080'              	movwf	___flmul@b^(0+256)
  8105  0181' 3064               	movlw	100
  8106  0182' 0080'              	movwf	___awdiv@divisor^(0+256)
  8107  0183' 3000               	movlw	0
  8108  0184' 0081'              	movwf	(___awdiv@divisor^(0+256)+1)
  8109  0185' 0800'              	movf	scale@scl^(0+256),w
  8110  0186' 0080'              	movwf	___awdiv@dividend^(0+256)
  8111  0187' 0180'              	clrf	(___awdiv@dividend+1)^(0+256)
  8112  0188' 1B80'              	btfsc	___awdiv@dividend^(0+256),7
  8113  0189' 0380'              	decf	(___awdiv@dividend+1)^(0+256),f
  8114  018A' 3180' 2000' 3180'  	fcall	___awdiv
  8115  018D' 0022               	movlb	2	; select bank2
  8116  018E' 0800'              	movf	?___awdiv^(0+256),w
  8117  018F' 3E12               	addlw	18
  8118  0190' 0080'              	movwf	(??_scale+6)^(0+256)
  8119  0191' 0181'              	clrf	((??_scale+6)^(0+256)+1)
  8120  0192' 3580'              	lslf	(??_scale+6)^(0+256),f
  8121  0193' 0D81'              	rlf	((??_scale+6)^(0+256)+1),f
  8122  0194' 3580'              	lslf	(??_scale+6)^(0+256),f
  8123  0195' 0D81'              	rlf	((??_scale+6)^(0+256)+1),f
  8124  0196' 3000'              	movlw	low (__powers_| (0+32768))
  8125  0197' 0700'              	addwf	(??_scale+6)^(0+256),w
  8126  0198' 0084               	movwf	4
  8127  0199' 3000'              	movlw	high (__powers_| (0+32768))
  8128  019A' 3D00'              	addwfc	(??_scale+7)^(0+256),w
  8129  019B' 0085               	movwf	5
  8130  019C' 3F00               	moviw [0]fsr0
  8131  019D' 0080'              	movwf	(??_scale+8)^(0+256)
  8132  019E' 3F01               	moviw [1]fsr0
  8133  019F' 0081'              	movwf	((??_scale+8)^(0+256)+1)
  8134  01A0' 3F02               	moviw [2]fsr0
  8135  01A1' 0082'              	movwf	((??_scale+8)^(0+256)+2)
  8136  01A2' 3F03               	moviw [3]fsr0
  8137  01A3' 0083'              	movwf	((??_scale+8)^(0+256)+3)
  8138  01A4' 0800'              	movf	(??_scale+11)^(0+256),w
  8139  01A5' 0080'              	movwf	(___flmul@a+3)^(0+256)
  8140  01A6' 0800'              	movf	(??_scale+10)^(0+256),w
  8141  01A7' 0080'              	movwf	(___flmul@a+2)^(0+256)
  8142  01A8' 0800'              	movf	(??_scale+9)^(0+256),w
  8143  01A9' 0080'              	movwf	(___flmul@a+1)^(0+256)
  8144  01AA' 0800'              	movf	(??_scale+8)^(0+256),w
  8145  01AB' 0080'              	movwf	___flmul@a^(0+256)
  8146  01AC' 3180' 2000' 3180'  	fcall	___flmul
  8147  01AF' 0022               	movlb	2	; select bank2
  8148  01B0' 0800'              	movf	(?___flmul+3)^(0+256),w
  8149  01B1' 0080'              	movwf	(_scale$2538+3)^(0+256)
  8150  01B2' 0800'              	movf	(?___flmul+2)^(0+256),w
  8151  01B3' 0080'              	movwf	(_scale$2538+2)^(0+256)
  8152  01B4' 0800'              	movf	(?___flmul+1)^(0+256),w
  8153  01B5' 0080'              	movwf	(_scale$2538+1)^(0+256)
  8154  01B6' 0800'              	movf	?___flmul^(0+256),w
  8155  01B7' 0080'              	movwf	_scale$2538^(0+256)
  8156                           
  8157                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  8158  01B8' 300A               	movlw	10
  8159  01B9' 0080'              	movwf	___awmod@divisor^(0+256)
  8160  01BA' 3000               	movlw	0
  8161  01BB' 0081'              	movwf	(___awmod@divisor^(0+256)+1)
  8162  01BC' 0800'              	movf	scale@scl^(0+256),w
  8163  01BD' 0080'              	movwf	___awmod@dividend^(0+256)
  8164  01BE' 0180'              	clrf	(___awmod@dividend+1)^(0+256)
  8165  01BF' 1B80'              	btfsc	___awmod@dividend^(0+256),7
  8166  01C0' 0380'              	decf	(___awmod@dividend+1)^(0+256),f
  8167  01C1' 3180' 2000' 3180'  	fcall	___awmod
  8168  01C4' 0022               	movlb	2	; select bank2
  8169  01C5' 0800'              	movf	?___awmod^(0+256),w
  8170  01C6' 0080'              	movwf	??_scale^(0+256)
  8171  01C7' 0181'              	clrf	(??_scale^(0+256)+1)
  8172  01C8' 3580'              	lslf	??_scale^(0+256),f
  8173  01C9' 0D81'              	rlf	(??_scale^(0+256)+1),f
  8174  01CA' 3580'              	lslf	??_scale^(0+256),f
  8175  01CB' 0D81'              	rlf	(??_scale^(0+256)+1),f
  8176  01CC' 3000'              	movlw	low (__powers_| (0+32768))
  8177  01CD' 0700'              	addwf	??_scale^(0+256),w
  8178  01CE' 0084               	movwf	4
  8179  01CF' 3000'              	movlw	high (__powers_| (0+32768))
  8180  01D0' 3D00'              	addwfc	(??_scale+1)^(0+256),w
  8181  01D1' 0085               	movwf	5
  8182  01D2' 3F00               	moviw [0]fsr0
  8183  01D3' 0080'              	movwf	(??_scale+2)^(0+256)
  8184  01D4' 3F01               	moviw [1]fsr0
  8185  01D5' 0081'              	movwf	((??_scale+2)^(0+256)+1)
  8186  01D6' 3F02               	moviw [2]fsr0
  8187  01D7' 0082'              	movwf	((??_scale+2)^(0+256)+2)
  8188  01D8' 3F03               	moviw [3]fsr0
  8189  01D9' 0083'              	movwf	((??_scale+2)^(0+256)+3)
  8190  01DA' 0800'              	movf	(??_scale+5)^(0+256),w
  8191  01DB' 0080'              	movwf	(___flmul@b+3)^(0+256)
  8192  01DC' 0800'              	movf	(??_scale+4)^(0+256),w
  8193  01DD' 0080'              	movwf	(___flmul@b+2)^(0+256)
  8194  01DE' 0800'              	movf	(??_scale+3)^(0+256),w
  8195  01DF' 0080'              	movwf	(___flmul@b+1)^(0+256)
  8196  01E0' 0800'              	movf	(??_scale+2)^(0+256),w
  8197  01E1' 0080'              	movwf	___flmul@b^(0+256)
  8198  01E2' 0800'              	movf	(_scale$2538+3)^(0+256),w
  8199  01E3' 0080'              	movwf	(___flmul@a+3)^(0+256)
  8200  01E4' 0800'              	movf	(_scale$2538+2)^(0+256),w
  8201  01E5' 0080'              	movwf	(___flmul@a+2)^(0+256)
  8202  01E6' 0800'              	movf	(_scale$2538+1)^(0+256),w
  8203  01E7' 0080'              	movwf	(___flmul@a+1)^(0+256)
  8204  01E8' 0800'              	movf	_scale$2538^(0+256),w
  8205  01E9' 0080'              	movwf	___flmul@a^(0+256)
  8206  01EA' 3180' 2000' 3180'  	fcall	___flmul
  8207  01ED' 0022               	movlb	2	; select bank2
  8208  01EE' 0800'              	movf	(?___flmul+3)^(0+256),w
  8209  01EF' 0080'              	movwf	(?_scale+3)^(0+256)
  8210  01F0' 0800'              	movf	(?___flmul+2)^(0+256),w
  8211  01F1' 0080'              	movwf	(?_scale+2)^(0+256)
  8212  01F2' 0800'              	movf	(?___flmul+1)^(0+256),w
  8213  01F3' 0080'              	movwf	(?_scale+1)^(0+256)
  8214  01F4' 0800'              	movf	?___flmul^(0+256),w
  8215  01F5' 0080'              	movwf	?_scale^(0+256)
  8216  01F6' 2800'              	goto	l1067
  8217  01F7'                    l8594:
  8218                           
  8219                           ;doprnt.c: 446: else if(scl > 10)
  8220  01F7' 0800'              	movf	scale@scl^(0+256),w
  8221  01F8' 3A80               	xorlw	128
  8222  01F9' 3E75               	addlw	-139
  8223  01FA' 1C03               	skipc
  8224  01FB' 2800'              	goto	u13631
  8225  01FC' 2800'              	goto	u13630
  8226  01FD'                    u13631:
  8227  01FD' 2800'              	goto	l8600
  8228  01FE'                    u13630:
  8229  01FE'                    l8596:
  8230                           
  8231                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  8232  01FE' 300A               	movlw	10
  8233  01FF' 0080'              	movwf	___awmod@divisor^(0+256)
  8234  0200' 3000               	movlw	0
  8235  0201' 0081'              	movwf	(___awmod@divisor^(0+256)+1)
  8236  0202' 0800'              	movf	scale@scl^(0+256),w
  8237  0203' 0080'              	movwf	___awmod@dividend^(0+256)
  8238  0204' 0180'              	clrf	(___awmod@dividend+1)^(0+256)
  8239  0205' 1B80'              	btfsc	___awmod@dividend^(0+256),7
  8240  0206' 0380'              	decf	(___awmod@dividend+1)^(0+256),f
  8241  0207' 3180' 2000' 3180'  	fcall	___awmod
  8242  020A' 0022               	movlb	2	; select bank2
  8243  020B' 0800'              	movf	?___awmod^(0+256),w
  8244  020C' 0080'              	movwf	??_scale^(0+256)
  8245  020D' 0181'              	clrf	(??_scale^(0+256)+1)
  8246  020E' 3580'              	lslf	??_scale^(0+256),f
  8247  020F' 0D81'              	rlf	(??_scale^(0+256)+1),f
  8248  0210' 3580'              	lslf	??_scale^(0+256),f
  8249  0211' 0D81'              	rlf	(??_scale^(0+256)+1),f
  8250  0212' 3000'              	movlw	low (__powers_| (0+32768))
  8251  0213' 0700'              	addwf	??_scale^(0+256),w
  8252  0214' 0084               	movwf	4
  8253  0215' 3000'              	movlw	high (__powers_| (0+32768))
  8254  0216' 3D00'              	addwfc	(??_scale+1)^(0+256),w
  8255  0217' 0085               	movwf	5
  8256  0218' 3F00               	moviw [0]fsr0
  8257  0219' 0080'              	movwf	(??_scale+2)^(0+256)
  8258  021A' 3F01               	moviw [1]fsr0
  8259  021B' 0081'              	movwf	((??_scale+2)^(0+256)+1)
  8260  021C' 3F02               	moviw [2]fsr0
  8261  021D' 0082'              	movwf	((??_scale+2)^(0+256)+2)
  8262  021E' 3F03               	moviw [3]fsr0
  8263  021F' 0083'              	movwf	((??_scale+2)^(0+256)+3)
  8264  0220' 0800'              	movf	(??_scale+5)^(0+256),w
  8265  0221' 0080'              	movwf	(___flmul@b+3)^(0+256)
  8266  0222' 0800'              	movf	(??_scale+4)^(0+256),w
  8267  0223' 0080'              	movwf	(___flmul@b+2)^(0+256)
  8268  0224' 0800'              	movf	(??_scale+3)^(0+256),w
  8269  0225' 0080'              	movwf	(___flmul@b+1)^(0+256)
  8270  0226' 0800'              	movf	(??_scale+2)^(0+256),w
  8271  0227' 0080'              	movwf	___flmul@b^(0+256)
  8272  0228' 300A               	movlw	10
  8273  0229' 0080'              	movwf	___awdiv@divisor^(0+256)
  8274  022A' 3000               	movlw	0
  8275  022B' 0081'              	movwf	(___awdiv@divisor^(0+256)+1)
  8276  022C' 0800'              	movf	scale@scl^(0+256),w
  8277  022D' 0080'              	movwf	___awdiv@dividend^(0+256)
  8278  022E' 0180'              	clrf	(___awdiv@dividend+1)^(0+256)
  8279  022F' 1B80'              	btfsc	___awdiv@dividend^(0+256),7
  8280  0230' 0380'              	decf	(___awdiv@dividend+1)^(0+256),f
  8281  0231' 3180' 2000' 3180'  	fcall	___awdiv
  8282  0234' 0022               	movlb	2	; select bank2
  8283  0235' 0800'              	movf	?___awdiv^(0+256),w
  8284  0236' 3E09               	addlw	9
  8285  0237' 0080'              	movwf	(??_scale+6)^(0+256)
  8286  0238' 0181'              	clrf	((??_scale+6)^(0+256)+1)
  8287  0239' 3580'              	lslf	(??_scale+6)^(0+256),f
  8288  023A' 0D81'              	rlf	((??_scale+6)^(0+256)+1),f
  8289  023B' 3580'              	lslf	(??_scale+6)^(0+256),f
  8290  023C' 0D81'              	rlf	((??_scale+6)^(0+256)+1),f
  8291  023D' 3000'              	movlw	low (__powers_| (0+32768))
  8292  023E' 0700'              	addwf	(??_scale+6)^(0+256),w
  8293  023F' 0084               	movwf	4
  8294  0240' 3000'              	movlw	high (__powers_| (0+32768))
  8295  0241' 3D00'              	addwfc	(??_scale+7)^(0+256),w
  8296  0242' 0085               	movwf	5
  8297  0243' 3F00               	moviw [0]fsr0
  8298  0244' 0080'              	movwf	(??_scale+8)^(0+256)
  8299  0245' 3F01               	moviw [1]fsr0
  8300  0246' 0081'              	movwf	((??_scale+8)^(0+256)+1)
  8301  0247' 3F02               	moviw [2]fsr0
  8302  0248' 0082'              	movwf	((??_scale+8)^(0+256)+2)
  8303  0249' 3F03               	moviw [3]fsr0
  8304  024A' 0083'              	movwf	((??_scale+8)^(0+256)+3)
  8305  024B' 0800'              	movf	(??_scale+11)^(0+256),w
  8306  024C' 0080'              	movwf	(___flmul@a+3)^(0+256)
  8307  024D' 0800'              	movf	(??_scale+10)^(0+256),w
  8308  024E' 0080'              	movwf	(___flmul@a+2)^(0+256)
  8309  024F' 0800'              	movf	(??_scale+9)^(0+256),w
  8310  0250' 0080'              	movwf	(___flmul@a+1)^(0+256)
  8311  0251' 0800'              	movf	(??_scale+8)^(0+256),w
  8312  0252' 0080'              	movwf	___flmul@a^(0+256)
  8313  0253' 3180' 2000' 3180'  	fcall	___flmul
  8314  0256' 0022               	movlb	2	; select bank2
  8315  0257' 0800'              	movf	(?___flmul+3)^(0+256),w
  8316  0258' 0080'              	movwf	(?_scale+3)^(0+256)
  8317  0259' 0800'              	movf	(?___flmul+2)^(0+256),w
  8318  025A' 0080'              	movwf	(?_scale+2)^(0+256)
  8319  025B' 0800'              	movf	(?___flmul+1)^(0+256),w
  8320  025C' 0080'              	movwf	(?_scale+1)^(0+256)
  8321  025D' 0800'              	movf	?___flmul^(0+256),w
  8322  025E' 0080'              	movwf	?_scale^(0+256)
  8323  025F' 2800'              	goto	l1067
  8324  0260'                    l8600:
  8325                           
  8326                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  8327  0260' 0800'              	movf	scale@scl^(0+256),w
  8328  0261' 0080'              	movwf	??_scale^(0+256)
  8329  0262' 0181'              	clrf	(??_scale^(0+256)+1)
  8330  0263' 3580'              	lslf	??_scale^(0+256),f
  8331  0264' 0D81'              	rlf	(??_scale^(0+256)+1),f
  8332  0265' 3580'              	lslf	??_scale^(0+256),f
  8333  0266' 0D81'              	rlf	(??_scale^(0+256)+1),f
  8334  0267' 3000'              	movlw	low (__powers_| (0+32768))
  8335  0268' 0700'              	addwf	??_scale^(0+256),w
  8336  0269' 0084               	movwf	4
  8337  026A' 3000'              	movlw	high (__powers_| (0+32768))
  8338  026B' 3D00'              	addwfc	(??_scale+1)^(0+256),w
  8339  026C' 0085               	movwf	5
  8340  026D' 3F00               	moviw [0]fsr0
  8341  026E' 0080'              	movwf	(??_scale+2)^(0+256)
  8342  026F' 3F01               	moviw [1]fsr0
  8343  0270' 0081'              	movwf	((??_scale+2)^(0+256)+1)
  8344  0271' 3F02               	moviw [2]fsr0
  8345  0272' 0082'              	movwf	((??_scale+2)^(0+256)+2)
  8346  0273' 3F03               	moviw [3]fsr0
  8347  0274' 0083'              	movwf	((??_scale+2)^(0+256)+3)
  8348  0275' 0800'              	movf	(??_scale+5)^(0+256),w
  8349  0276' 0080'              	movwf	(?_scale+3)^(0+256)
  8350  0277' 0800'              	movf	(??_scale+4)^(0+256),w
  8351  0278' 0080'              	movwf	(?_scale+2)^(0+256)
  8352  0279' 0800'              	movf	(??_scale+3)^(0+256),w
  8353  027A' 0080'              	movwf	(?_scale+1)^(0+256)
  8354  027B' 0800'              	movf	(??_scale+2)^(0+256),w
  8355  027C' 0080'              	movwf	?_scale^(0+256)
  8356  027D'                    l1067:
  8357  027D' 0008               	return
  8358  027E'                    __end_of_scale:
  8359                           
  8360                           	psect	text3
  8361  0000'                    __ptext3:	
  8362 ;; *************** function ___awmod *****************
  8363 ;; Defined at:
  8364 ;;		line 5 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/awmod.c"
  8365 ;; Parameters:    Size  Location     Type
  8366 ;;  divisor         2    0[BANK2 ] int 
  8367 ;;  dividend        2    2[BANK2 ] int 
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;  sign            1    6[BANK2 ] unsigned char 
  8370 ;;  counter         1    5[BANK2 ] unsigned char 
  8371 ;; Return value:  Size  Location     Type
  8372 ;;                  2    0[BANK2 ] int 
  8373 ;; Registers used:
  8374 ;;		wreg, status,2, status,0
  8375 ;; Tracked objects:
  8376 ;;		On entry : 0/0
  8377 ;;		On exit  : 0/0
  8378 ;;		Unchanged: 0/0
  8379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8380 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  8381 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  8382 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  8383 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0
  8384 ;;Total ram usage:        7 bytes
  8385 ;; Hardware stack levels used:    1
  8386 ;; Hardware stack levels required when called:    7
  8387 ;; This function calls:
  8388 ;;		Nothing
  8389 ;; This function is called by:
  8390 ;;		_scale
  8391 ;; This function uses a non-reentrant model
  8392 ;;
  8393                           
  8394                           
  8395                           ;psect for function ___awmod
  8396  0000'                    ___awmod:
  8397  0000'                    l8126:	
  8398                           ;incstack = 0
  8399                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8400                           
  8401  0000' 0022               	movlb	2	; select bank2
  8402  0001' 0180'              	clrf	___awmod@sign^(0+256)
  8403  0002'                    l8128:
  8404  0002' 1F80'              	btfss	(___awmod@dividend+1)^(0+256),7
  8405  0003' 2800'              	goto	u12661
  8406  0004' 2800'              	goto	u12660
  8407  0005'                    u12661:
  8408  0005' 2800'              	goto	l8134
  8409  0006'                    u12660:
  8410  0006'                    l8130:
  8411  0006' 0980'              	comf	___awmod@dividend^(0+256),f
  8412  0007' 0980'              	comf	(___awmod@dividend+1)^(0+256),f
  8413  0008' 0A80'              	incf	___awmod@dividend^(0+256),f
  8414  0009' 1903               	skipnz
  8415  000A' 0A80'              	incf	(___awmod@dividend+1)^(0+256),f
  8416  000B'                    l8132:
  8417  000B' 0180'              	clrf	___awmod@sign^(0+256)
  8418  000C' 0A80'              	incf	___awmod@sign^(0+256),f
  8419  000D'                    l8134:
  8420  000D' 1F80'              	btfss	(___awmod@divisor+1)^(0+256),7
  8421  000E' 2800'              	goto	u12671
  8422  000F' 2800'              	goto	u12670
  8423  0010'                    u12671:
  8424  0010' 2800'              	goto	l8138
  8425  0011'                    u12670:
  8426  0011'                    l8136:
  8427  0011' 0980'              	comf	___awmod@divisor^(0+256),f
  8428  0012' 0980'              	comf	(___awmod@divisor+1)^(0+256),f
  8429  0013' 0A80'              	incf	___awmod@divisor^(0+256),f
  8430  0014' 1903               	skipnz
  8431  0015' 0A80'              	incf	(___awmod@divisor+1)^(0+256),f
  8432  0016'                    l8138:
  8433  0016' 0800'              	movf	___awmod@divisor^(0+256),w
  8434  0017' 0400'              	iorwf	(___awmod@divisor+1)^(0+256),w
  8435  0018' 1903               	btfsc	3,2
  8436  0019' 2800'              	goto	u12681
  8437  001A' 2800'              	goto	u12680
  8438  001B'                    u12681:
  8439  001B' 2800'              	goto	l8156
  8440  001C'                    u12680:
  8441  001C'                    l8140:
  8442  001C' 0180'              	clrf	___awmod@counter^(0+256)
  8443  001D' 0A80'              	incf	___awmod@counter^(0+256),f
  8444  001E' 2800'              	goto	l8146
  8445  001F'                    l8142:
  8446  001F' 3001               	movlw	1
  8447  0020'                    u12695:
  8448  0020' 3580'              	lslf	___awmod@divisor^(0+256),f
  8449  0021' 0D80'              	rlf	(___awmod@divisor+1)^(0+256),f
  8450  0022' 0B89               	decfsz	9,f
  8451  0023' 2800'              	goto	u12695
  8452  0024'                    l8144:
  8453  0024' 3001               	movlw	1
  8454  0025' 0080'              	movwf	??___awmod^(0+256)
  8455  0026' 0800'              	movf	??___awmod^(0+256),w
  8456  0027' 0780'              	addwf	___awmod@counter^(0+256),f
  8457  0028'                    l8146:
  8458  0028' 1F80'              	btfss	(___awmod@divisor+1)^(0+256),7
  8459  0029' 2800'              	goto	u12701
  8460  002A' 2800'              	goto	u12700
  8461  002B'                    u12701:
  8462  002B' 2800'              	goto	l8142
  8463  002C'                    u12700:
  8464  002C'                    l8148:
  8465  002C' 0800'              	movf	(___awmod@divisor+1)^(0+256),w
  8466  002D' 0200'              	subwf	(___awmod@dividend+1)^(0+256),w
  8467  002E' 1D03               	skipz
  8468  002F' 2800'              	goto	u12715
  8469  0030' 0800'              	movf	___awmod@divisor^(0+256),w
  8470  0031' 0200'              	subwf	___awmod@dividend^(0+256),w
  8471  0032'                    u12715:
  8472  0032' 1C03               	skipc
  8473  0033' 2800'              	goto	u12711
  8474  0034' 2800'              	goto	u12710
  8475  0035'                    u12711:
  8476  0035' 2800'              	goto	l8152
  8477  0036'                    u12710:
  8478  0036'                    l8150:
  8479  0036' 0800'              	movf	___awmod@divisor^(0+256),w
  8480  0037' 0280'              	subwf	___awmod@dividend^(0+256),f
  8481  0038' 0800'              	movf	(___awmod@divisor+1)^(0+256),w
  8482  0039' 3B80'              	subwfb	(___awmod@dividend+1)^(0+256),f
  8483  003A'                    l8152:
  8484  003A' 3001               	movlw	1
  8485  003B'                    u12725:
  8486  003B' 3680'              	lsrf	(___awmod@divisor+1)^(0+256),f
  8487  003C' 0C80'              	rrf	___awmod@divisor^(0+256),f
  8488  003D' 0B89               	decfsz	9,f
  8489  003E' 2800'              	goto	u12725
  8490  003F'                    l8154:
  8491  003F' 3001               	movlw	1
  8492  0040' 0280'              	subwf	___awmod@counter^(0+256),f
  8493  0041' 1D03               	btfss	3,2
  8494  0042' 2800'              	goto	u12731
  8495  0043' 2800'              	goto	u12730
  8496  0044'                    u12731:
  8497  0044' 2800'              	goto	l8148
  8498  0045'                    u12730:
  8499  0045'                    l8156:
  8500  0045' 0800'              	movf	___awmod@sign^(0+256),w
  8501  0046' 1903               	btfsc	3,2
  8502  0047' 2800'              	goto	u12741
  8503  0048' 2800'              	goto	u12740
  8504  0049'                    u12741:
  8505  0049' 2800'              	goto	l8160
  8506  004A'                    u12740:
  8507  004A'                    l8158:
  8508  004A' 0980'              	comf	___awmod@dividend^(0+256),f
  8509  004B' 0980'              	comf	(___awmod@dividend+1)^(0+256),f
  8510  004C' 0A80'              	incf	___awmod@dividend^(0+256),f
  8511  004D' 1903               	skipnz
  8512  004E' 0A80'              	incf	(___awmod@dividend+1)^(0+256),f
  8513  004F'                    l8160:
  8514  004F' 0800'              	movf	(___awmod@dividend+1)^(0+256),w
  8515  0050' 0080'              	movwf	(?___awmod+1)^(0+256)
  8516  0051' 0800'              	movf	___awmod@dividend^(0+256),w
  8517  0052' 0080'              	movwf	?___awmod^(0+256)
  8518  0053'                    l1347:
  8519  0053' 0008               	return
  8520  0054'                    __end_of___awmod:
  8521                           
  8522                           	psect	text4
  8523  0000'                    __ptext4:	
  8524 ;; *************** function ___awdiv *****************
  8525 ;; Defined at:
  8526 ;;		line 5 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/awdiv.c"
  8527 ;; Parameters:    Size  Location     Type
  8528 ;;  divisor         2    7[BANK2 ] int 
  8529 ;;  dividend        2    9[BANK2 ] int 
  8530 ;; Auto vars:     Size  Location     Type
  8531 ;;  quotient        2   14[BANK2 ] int 
  8532 ;;  sign            1   13[BANK2 ] unsigned char 
  8533 ;;  counter         1   12[BANK2 ] unsigned char 
  8534 ;; Return value:  Size  Location     Type
  8535 ;;                  2    7[BANK2 ] int 
  8536 ;; Registers used:
  8537 ;;		wreg, status,2, status,0
  8538 ;; Tracked objects:
  8539 ;;		On entry : 0/0
  8540 ;;		On exit  : 0/0
  8541 ;;		Unchanged: 0/0
  8542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8543 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  8544 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  8545 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  8546 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0
  8547 ;;Total ram usage:        9 bytes
  8548 ;; Hardware stack levels used:    1
  8549 ;; Hardware stack levels required when called:    7
  8550 ;; This function calls:
  8551 ;;		Nothing
  8552 ;; This function is called by:
  8553 ;;		_scale
  8554 ;;		_sprintf
  8555 ;; This function uses a non-reentrant model
  8556 ;;
  8557                           
  8558                           
  8559                           ;psect for function ___awdiv
  8560  0000'                    ___awdiv:
  8561  0000'                    l8082:	
  8562                           ;incstack = 0
  8563                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8564                           
  8565  0000' 0022               	movlb	2	; select bank2
  8566  0001' 0180'              	clrf	___awdiv@sign^(0+256)
  8567  0002'                    l8084:
  8568  0002' 1F80'              	btfss	(___awdiv@divisor+1)^(0+256),7
  8569  0003' 2800'              	goto	u12561
  8570  0004' 2800'              	goto	u12560
  8571  0005'                    u12561:
  8572  0005' 2800'              	goto	l8090
  8573  0006'                    u12560:
  8574  0006'                    l8086:
  8575  0006' 0980'              	comf	___awdiv@divisor^(0+256),f
  8576  0007' 0980'              	comf	(___awdiv@divisor+1)^(0+256),f
  8577  0008' 0A80'              	incf	___awdiv@divisor^(0+256),f
  8578  0009' 1903               	skipnz
  8579  000A' 0A80'              	incf	(___awdiv@divisor+1)^(0+256),f
  8580  000B'                    l8088:
  8581  000B' 0180'              	clrf	___awdiv@sign^(0+256)
  8582  000C' 0A80'              	incf	___awdiv@sign^(0+256),f
  8583  000D'                    l8090:
  8584  000D' 1F80'              	btfss	(___awdiv@dividend+1)^(0+256),7
  8585  000E' 2800'              	goto	u12571
  8586  000F' 2800'              	goto	u12570
  8587  0010'                    u12571:
  8588  0010' 2800'              	goto	l8096
  8589  0011'                    u12570:
  8590  0011'                    l8092:
  8591  0011' 0980'              	comf	___awdiv@dividend^(0+256),f
  8592  0012' 0980'              	comf	(___awdiv@dividend+1)^(0+256),f
  8593  0013' 0A80'              	incf	___awdiv@dividend^(0+256),f
  8594  0014' 1903               	skipnz
  8595  0015' 0A80'              	incf	(___awdiv@dividend+1)^(0+256),f
  8596  0016'                    l8094:
  8597  0016' 3001               	movlw	1
  8598  0017' 0080'              	movwf	??___awdiv^(0+256)
  8599  0018' 0800'              	movf	??___awdiv^(0+256),w
  8600  0019' 0680'              	xorwf	___awdiv@sign^(0+256),f
  8601  001A'                    l8096:
  8602  001A' 0180'              	clrf	___awdiv@quotient^(0+256)
  8603  001B' 0180'              	clrf	(___awdiv@quotient+1)^(0+256)
  8604  001C'                    l8098:
  8605  001C' 0800'              	movf	___awdiv@divisor^(0+256),w
  8606  001D' 0400'              	iorwf	(___awdiv@divisor+1)^(0+256),w
  8607  001E' 1903               	btfsc	3,2
  8608  001F' 2800'              	goto	u12581
  8609  0020' 2800'              	goto	u12580
  8610  0021'                    u12581:
  8611  0021' 2800'              	goto	l8118
  8612  0022'                    u12580:
  8613  0022'                    l8100:
  8614  0022' 0180'              	clrf	___awdiv@counter^(0+256)
  8615  0023' 0A80'              	incf	___awdiv@counter^(0+256),f
  8616  0024' 2800'              	goto	l8106
  8617  0025'                    l8102:
  8618  0025' 3001               	movlw	1
  8619  0026'                    u12595:
  8620  0026' 3580'              	lslf	___awdiv@divisor^(0+256),f
  8621  0027' 0D80'              	rlf	(___awdiv@divisor+1)^(0+256),f
  8622  0028' 0B89               	decfsz	9,f
  8623  0029' 2800'              	goto	u12595
  8624  002A'                    l8104:
  8625  002A' 3001               	movlw	1
  8626  002B' 0080'              	movwf	??___awdiv^(0+256)
  8627  002C' 0800'              	movf	??___awdiv^(0+256),w
  8628  002D' 0780'              	addwf	___awdiv@counter^(0+256),f
  8629  002E'                    l8106:
  8630  002E' 1F80'              	btfss	(___awdiv@divisor+1)^(0+256),7
  8631  002F' 2800'              	goto	u12601
  8632  0030' 2800'              	goto	u12600
  8633  0031'                    u12601:
  8634  0031' 2800'              	goto	l8102
  8635  0032'                    u12600:
  8636  0032'                    l8108:
  8637  0032' 3001               	movlw	1
  8638  0033'                    u12615:
  8639  0033' 3580'              	lslf	___awdiv@quotient^(0+256),f
  8640  0034' 0D80'              	rlf	(___awdiv@quotient+1)^(0+256),f
  8641  0035' 0B89               	decfsz	9,f
  8642  0036' 2800'              	goto	u12615
  8643  0037' 0800'              	movf	(___awdiv@divisor+1)^(0+256),w
  8644  0038' 0200'              	subwf	(___awdiv@dividend+1)^(0+256),w
  8645  0039' 1D03               	skipz
  8646  003A' 2800'              	goto	u12625
  8647  003B' 0800'              	movf	___awdiv@divisor^(0+256),w
  8648  003C' 0200'              	subwf	___awdiv@dividend^(0+256),w
  8649  003D'                    u12625:
  8650  003D' 1C03               	skipc
  8651  003E' 2800'              	goto	u12621
  8652  003F' 2800'              	goto	u12620
  8653  0040'                    u12621:
  8654  0040' 2800'              	goto	l8114
  8655  0041'                    u12620:
  8656  0041'                    l8110:
  8657  0041' 0800'              	movf	___awdiv@divisor^(0+256),w
  8658  0042' 0280'              	subwf	___awdiv@dividend^(0+256),f
  8659  0043' 0800'              	movf	(___awdiv@divisor+1)^(0+256),w
  8660  0044' 3B80'              	subwfb	(___awdiv@dividend+1)^(0+256),f
  8661  0045'                    l8112:
  8662  0045' 1400'              	bsf	___awdiv@quotient^(0+256),0
  8663  0046'                    l8114:
  8664  0046' 3001               	movlw	1
  8665  0047'                    u12635:
  8666  0047' 3680'              	lsrf	(___awdiv@divisor+1)^(0+256),f
  8667  0048' 0C80'              	rrf	___awdiv@divisor^(0+256),f
  8668  0049' 0B89               	decfsz	9,f
  8669  004A' 2800'              	goto	u12635
  8670  004B'                    l8116:
  8671  004B' 3001               	movlw	1
  8672  004C' 0280'              	subwf	___awdiv@counter^(0+256),f
  8673  004D' 1D03               	btfss	3,2
  8674  004E' 2800'              	goto	u12641
  8675  004F' 2800'              	goto	u12640
  8676  0050'                    u12641:
  8677  0050' 2800'              	goto	l8108
  8678  0051'                    u12640:
  8679  0051'                    l8118:
  8680  0051' 0800'              	movf	___awdiv@sign^(0+256),w
  8681  0052' 1903               	btfsc	3,2
  8682  0053' 2800'              	goto	u12651
  8683  0054' 2800'              	goto	u12650
  8684  0055'                    u12651:
  8685  0055' 2800'              	goto	l8122
  8686  0056'                    u12650:
  8687  0056'                    l8120:
  8688  0056' 0980'              	comf	___awdiv@quotient^(0+256),f
  8689  0057' 0980'              	comf	(___awdiv@quotient+1)^(0+256),f
  8690  0058' 0A80'              	incf	___awdiv@quotient^(0+256),f
  8691  0059' 1903               	skipnz
  8692  005A' 0A80'              	incf	(___awdiv@quotient+1)^(0+256),f
  8693  005B'                    l8122:
  8694  005B' 0800'              	movf	(___awdiv@quotient+1)^(0+256),w
  8695  005C' 0080'              	movwf	(?___awdiv+1)^(0+256)
  8696  005D' 0800'              	movf	___awdiv@quotient^(0+256),w
  8697  005E' 0080'              	movwf	?___awdiv^(0+256)
  8698  005F'                    l1334:
  8699  005F' 0008               	return
  8700  0060'                    __end_of___awdiv:
  8701                           
  8702                           	psect	text5
  8703  0000'                    __ptext5:	
  8704 ;; *************** function _isdigit *****************
  8705 ;; Defined at:
  8706 ;;		line 8 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/isdigit.c"
  8707 ;; Parameters:    Size  Location     Type
  8708 ;;  c               1    wreg     unsigned char 
  8709 ;; Auto vars:     Size  Location     Type
  8710 ;;  c               1    1[BANK2 ] unsigned char 
  8711 ;; Return value:  Size  Location     Type
  8712 ;;		None               void
  8713 ;; Registers used:
  8714 ;;		wreg, status,2, status,0
  8715 ;; Tracked objects:
  8716 ;;		On entry : 0/0
  8717 ;;		On exit  : 0/0
  8718 ;;		Unchanged: 0/0
  8719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8721 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  8722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8723 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  8724 ;;Total ram usage:        2 bytes
  8725 ;; Hardware stack levels used:    1
  8726 ;; Hardware stack levels required when called:    7
  8727 ;; This function calls:
  8728 ;;		Nothing
  8729 ;; This function is called by:
  8730 ;;		_sprintf
  8731 ;; This function uses a non-reentrant model
  8732 ;;
  8733                           
  8734                           
  8735                           ;psect for function _isdigit
  8736  0000'                    _isdigit:
  8737                           
  8738                           ;incstack = 0
  8739                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  8740                           ;isdigit@c stored from wreg
  8741  0000' 0022               	movlb	2	; select bank2
  8742  0001' 0080'              	movwf	isdigit@c^(0+256)
  8743  0002'                    l8604:
  8744  0002' 0180'              	clrf	_isdigit$2131^(0+256)
  8745  0003'                    l8606:
  8746  0003' 303A               	movlw	58
  8747  0004' 0200'              	subwf	isdigit@c^(0+256),w
  8748  0005' 1803               	skipnc
  8749  0006' 2800'              	goto	u13641
  8750  0007' 2800'              	goto	u13640
  8751  0008'                    u13641:
  8752  0008' 2800'              	goto	l8612
  8753  0009'                    u13640:
  8754  0009'                    l8608:
  8755  0009' 3030               	movlw	48
  8756  000A' 0200'              	subwf	isdigit@c^(0+256),w
  8757  000B' 1C03               	skipc
  8758  000C' 2800'              	goto	u13651
  8759  000D' 2800'              	goto	u13650
  8760  000E'                    u13651:
  8761  000E' 2800'              	goto	l8612
  8762  000F'                    u13650:
  8763  000F'                    l8610:
  8764  000F' 0180'              	clrf	_isdigit$2131^(0+256)
  8765  0010' 0A80'              	incf	_isdigit$2131^(0+256),f
  8766  0011'                    l8612:
  8767  0011' 0C00'              	rrf	_isdigit$2131^(0+256),w
  8768  0012'                    l1668:
  8769  0012' 0008               	return
  8770  0013'                    __end_of_isdigit:
  8771                           
  8772                           	psect	text6
  8773  0000'                    __ptext6:	
  8774 ;; *************** function _fround *****************
  8775 ;; Defined at:
  8776 ;;		line 417 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/doprnt.c"
  8777 ;; Parameters:    Size  Location     Type
  8778 ;;  prec            1    wreg     unsigned char 
  8779 ;; Auto vars:     Size  Location     Type
  8780 ;;  prec            1   60[BANK2 ] unsigned char 
  8781 ;; Return value:  Size  Location     Type
  8782 ;;                  4   42[BANK2 ] unsigned char 
  8783 ;; Registers used:
  8784 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8785 ;; Tracked objects:
  8786 ;;		On entry : 0/0
  8787 ;;		On exit  : 0/0
  8788 ;;		Unchanged: 0/0
  8789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8790 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  8791 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0
  8792 ;;      Temps:          0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  8793 ;;      Totals:         0       0       0      19       0       0       0       0       0       0       0       0       
      +0       0
  8794 ;;Total ram usage:       19 bytes
  8795 ;; Hardware stack levels used:    1
  8796 ;; Hardware stack levels required when called:    9
  8797 ;; This function calls:
  8798 ;;		___flmul
  8799 ;;		___lwdiv
  8800 ;;		___lwmod
  8801 ;; This function is called by:
  8802 ;;		_sprintf
  8803 ;; This function uses a non-reentrant model
  8804 ;;
  8805                           
  8806                           
  8807                           ;psect for function _fround
  8808  0000'                    _fround:
  8809                           
  8810                           ;incstack = 0
  8811                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8812                           ;fround@prec stored from wreg
  8813  0000' 0022               	movlb	2	; select bank2
  8814  0001' 0080'              	movwf	fround@prec^(0+256)
  8815  0002'                    l8546:
  8816                           
  8817                           ;doprnt.c: 421: if(prec>=110)
  8818  0002' 306E               	movlw	110
  8819  0003' 0200'              	subwf	fround@prec^(0+256),w
  8820  0004' 1C03               	skipc
  8821  0005' 2800'              	goto	u13571
  8822  0006' 2800'              	goto	u13570
  8823  0007'                    u13571:
  8824  0007' 2800'              	goto	l8554
  8825  0008'                    u13570:
  8826  0008'                    l8548:
  8827                           
  8828                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  8829  0008' 303F               	movlw	63
  8830  0009' 0080'              	movwf	(___flmul@b+3)^(0+256)
  8831  000A' 3000               	movlw	0
  8832  000B' 0080'              	movwf	(___flmul@b+2)^(0+256)
  8833  000C' 3000               	movlw	0
  8834  000D' 0080'              	movwf	(___flmul@b+1)^(0+256)
  8835  000E' 3000               	movlw	0
  8836  000F' 0080'              	movwf	___flmul@b^(0+256)
  8837  0010' 3064               	movlw	100
  8838  0011' 0080'              	movwf	___lwdiv@divisor^(0+256)
  8839  0012' 3000               	movlw	0
  8840  0013' 0081'              	movwf	(___lwdiv@divisor^(0+256)+1)
  8841  0014' 0800'              	movf	fround@prec^(0+256),w
  8842  0015' 0080'              	movwf	??_fround^(0+256)
  8843  0016' 0181'              	clrf	(??_fround^(0+256)+1)
  8844  0017' 0800'              	movf	??_fround^(0+256),w
  8845  0018' 0080'              	movwf	___lwdiv@dividend^(0+256)
  8846  0019' 0800'              	movf	(??_fround+1)^(0+256),w
  8847  001A' 0080'              	movwf	(___lwdiv@dividend+1)^(0+256)
  8848  001B' 3180' 2000' 3180'  	fcall	___lwdiv
  8849  001E' 0022               	movlb	2	; select bank2
  8850  001F' 0800'              	movf	(?___lwdiv+1)^(0+256),w
  8851  0020' 0085               	movwf	5
  8852  0021' 0800'              	movf	?___lwdiv^(0+256),w
  8853  0022' 0084               	movwf	4
  8854  0023' 3584               	lslf	4,f
  8855  0024' 0D85               	rlf	5,f
  8856  0025' 3584               	lslf	4,f
  8857  0026' 0D85               	rlf	5,f
  8858  0027' 3000'              	movlw	low ((__npowers_+72)| (0+32768))
  8859  0028' 0784               	addwf	4,f
  8860  0029' 3000'              	movlw	high ((__npowers_+72)| (0+32768))
  8861  002A' 3D85               	addwfc	5,f
  8862  002B' 3F00               	moviw [0]fsr0
  8863  002C' 0080'              	movwf	(??_fround+2)^(0+256)
  8864  002D' 3F01               	moviw [1]fsr0
  8865  002E' 0081'              	movwf	((??_fround+2)^(0+256)+1)
  8866  002F' 3F02               	moviw [2]fsr0
  8867  0030' 0082'              	movwf	((??_fround+2)^(0+256)+2)
  8868  0031' 3F03               	moviw [3]fsr0
  8869  0032' 0083'              	movwf	((??_fround+2)^(0+256)+3)
  8870  0033' 0800'              	movf	(??_fround+5)^(0+256),w
  8871  0034' 0080'              	movwf	(___flmul@a+3)^(0+256)
  8872  0035' 0800'              	movf	(??_fround+4)^(0+256),w
  8873  0036' 0080'              	movwf	(___flmul@a+2)^(0+256)
  8874  0037' 0800'              	movf	(??_fround+3)^(0+256),w
  8875  0038' 0080'              	movwf	(___flmul@a+1)^(0+256)
  8876  0039' 0800'              	movf	(??_fround+2)^(0+256),w
  8877  003A' 0080'              	movwf	___flmul@a^(0+256)
  8878  003B' 3180' 2000' 3180'  	fcall	___flmul
  8879  003E' 0022               	movlb	2	; select bank2
  8880  003F' 0800'              	movf	(?___flmul+3)^(0+256),w
  8881  0040' 0080'              	movwf	(_fround$2536+3)^(0+256)
  8882  0041' 0800'              	movf	(?___flmul+2)^(0+256),w
  8883  0042' 0080'              	movwf	(_fround$2536+2)^(0+256)
  8884  0043' 0800'              	movf	(?___flmul+1)^(0+256),w
  8885  0044' 0080'              	movwf	(_fround$2536+1)^(0+256)
  8886  0045' 0800'              	movf	?___flmul^(0+256),w
  8887  0046' 0080'              	movwf	_fround$2536^(0+256)
  8888                           
  8889                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  8890  0047' 300A               	movlw	10
  8891  0048' 0080'              	movwf	___lwdiv@divisor^(0+256)
  8892  0049' 3000               	movlw	0
  8893  004A' 0081'              	movwf	(___lwdiv@divisor^(0+256)+1)
  8894  004B' 0800'              	movf	fround@prec^(0+256),w
  8895  004C' 0080'              	movwf	??_fround^(0+256)
  8896  004D' 0181'              	clrf	(??_fround^(0+256)+1)
  8897  004E' 0800'              	movf	??_fround^(0+256),w
  8898  004F' 0080'              	movwf	___lwmod@dividend^(0+256)
  8899  0050' 0800'              	movf	(??_fround+1)^(0+256),w
  8900  0051' 0080'              	movwf	(___lwmod@dividend+1)^(0+256)
  8901  0052' 3064               	movlw	100
  8902  0053' 0080'              	movwf	___lwmod@divisor^(0+256)
  8903  0054' 3000               	movlw	0
  8904  0055' 0081'              	movwf	(___lwmod@divisor^(0+256)+1)
  8905  0056' 3180' 2000' 3180'  	fcall	___lwmod
  8906  0059' 0022               	movlb	2	; select bank2
  8907  005A' 0800'              	movf	(?___lwmod+1)^(0+256),w
  8908  005B' 0080'              	movwf	(___lwdiv@dividend+1)^(0+256)
  8909  005C' 0800'              	movf	?___lwmod^(0+256),w
  8910  005D' 0080'              	movwf	___lwdiv@dividend^(0+256)
  8911  005E' 3180' 2000' 3180'  	fcall	___lwdiv
  8912  0061' 0022               	movlb	2	; select bank2
  8913  0062' 0800'              	movf	(?___lwdiv+1)^(0+256),w
  8914  0063' 0085               	movwf	5
  8915  0064' 0800'              	movf	?___lwdiv^(0+256),w
  8916  0065' 0084               	movwf	4
  8917  0066' 3584               	lslf	4,f
  8918  0067' 0D85               	rlf	5,f
  8919  0068' 3584               	lslf	4,f
  8920  0069' 0D85               	rlf	5,f
  8921  006A' 3000'              	movlw	low ((__npowers_+36)| (0+32768))
  8922  006B' 0784               	addwf	4,f
  8923  006C' 3000'              	movlw	high ((__npowers_+36)| (0+32768))
  8924  006D' 3D85               	addwfc	5,f
  8925  006E' 3F00               	moviw [0]fsr0
  8926  006F' 0080'              	movwf	(??_fround+2)^(0+256)
  8927  0070' 3F01               	moviw [1]fsr0
  8928  0071' 0081'              	movwf	((??_fround+2)^(0+256)+1)
  8929  0072' 3F02               	moviw [2]fsr0
  8930  0073' 0082'              	movwf	((??_fround+2)^(0+256)+2)
  8931  0074' 3F03               	moviw [3]fsr0
  8932  0075' 0083'              	movwf	((??_fround+2)^(0+256)+3)
  8933  0076' 0800'              	movf	(??_fround+5)^(0+256),w
  8934  0077' 0080'              	movwf	(___flmul@b+3)^(0+256)
  8935  0078' 0800'              	movf	(??_fround+4)^(0+256),w
  8936  0079' 0080'              	movwf	(___flmul@b+2)^(0+256)
  8937  007A' 0800'              	movf	(??_fround+3)^(0+256),w
  8938  007B' 0080'              	movwf	(___flmul@b+1)^(0+256)
  8939  007C' 0800'              	movf	(??_fround+2)^(0+256),w
  8940  007D' 0080'              	movwf	___flmul@b^(0+256)
  8941  007E' 0800'              	movf	(_fround$2536+3)^(0+256),w
  8942  007F' 0080'              	movwf	(___flmul@a+3)^(0+256)
  8943  0080' 0800'              	movf	(_fround$2536+2)^(0+256),w
  8944  0081' 0080'              	movwf	(___flmul@a+2)^(0+256)
  8945  0082' 0800'              	movf	(_fround$2536+1)^(0+256),w
  8946  0083' 0080'              	movwf	(___flmul@a+1)^(0+256)
  8947  0084' 0800'              	movf	_fround$2536^(0+256),w
  8948  0085' 0080'              	movwf	___flmul@a^(0+256)
  8949  0086' 3180' 2000' 3180'  	fcall	___flmul
  8950  0089' 0022               	movlb	2	; select bank2
  8951  008A' 0800'              	movf	(?___flmul+3)^(0+256),w
  8952  008B' 0080'              	movwf	(_fround$2537+3)^(0+256)
  8953  008C' 0800'              	movf	(?___flmul+2)^(0+256),w
  8954  008D' 0080'              	movwf	(_fround$2537+2)^(0+256)
  8955  008E' 0800'              	movf	(?___flmul+1)^(0+256),w
  8956  008F' 0080'              	movwf	(_fround$2537+1)^(0+256)
  8957  0090' 0800'              	movf	?___flmul^(0+256),w
  8958  0091' 0080'              	movwf	_fround$2537^(0+256)
  8959                           
  8960                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  8961  0092' 300A               	movlw	10
  8962  0093' 0080'              	movwf	___lwmod@divisor^(0+256)
  8963  0094' 3000               	movlw	0
  8964  0095' 0081'              	movwf	(___lwmod@divisor^(0+256)+1)
  8965  0096' 0800'              	movf	fround@prec^(0+256),w
  8966  0097' 0080'              	movwf	??_fround^(0+256)
  8967  0098' 0181'              	clrf	(??_fround^(0+256)+1)
  8968  0099' 0800'              	movf	??_fround^(0+256),w
  8969  009A' 0080'              	movwf	___lwmod@dividend^(0+256)
  8970  009B' 0800'              	movf	(??_fround+1)^(0+256),w
  8971  009C' 0080'              	movwf	(___lwmod@dividend+1)^(0+256)
  8972  009D' 3180' 2000' 3180'  	fcall	___lwmod
  8973  00A0' 0022               	movlb	2	; select bank2
  8974  00A1' 0800'              	movf	(?___lwmod+1)^(0+256),w
  8975  00A2' 0085               	movwf	5
  8976  00A3' 0800'              	movf	?___lwmod^(0+256),w
  8977  00A4' 0084               	movwf	4
  8978  00A5' 3584               	lslf	4,f
  8979  00A6' 0D85               	rlf	5,f
  8980  00A7' 3584               	lslf	4,f
  8981  00A8' 0D85               	rlf	5,f
  8982  00A9' 3000'              	movlw	low (__npowers_| (0+32768))
  8983  00AA' 0784               	addwf	4,f
  8984  00AB' 3000'              	movlw	high (__npowers_| (0+32768))
  8985  00AC' 3D85               	addwfc	5,f
  8986  00AD' 3F00               	moviw [0]fsr0
  8987  00AE' 0080'              	movwf	(??_fround+2)^(0+256)
  8988  00AF' 3F01               	moviw [1]fsr0
  8989  00B0' 0081'              	movwf	((??_fround+2)^(0+256)+1)
  8990  00B1' 3F02               	moviw [2]fsr0
  8991  00B2' 0082'              	movwf	((??_fround+2)^(0+256)+2)
  8992  00B3' 3F03               	moviw [3]fsr0
  8993  00B4' 0083'              	movwf	((??_fround+2)^(0+256)+3)
  8994  00B5' 0800'              	movf	(??_fround+5)^(0+256),w
  8995  00B6' 0080'              	movwf	(___flmul@b+3)^(0+256)
  8996  00B7' 0800'              	movf	(??_fround+4)^(0+256),w
  8997  00B8' 0080'              	movwf	(___flmul@b+2)^(0+256)
  8998  00B9' 0800'              	movf	(??_fround+3)^(0+256),w
  8999  00BA' 0080'              	movwf	(___flmul@b+1)^(0+256)
  9000  00BB' 0800'              	movf	(??_fround+2)^(0+256),w
  9001  00BC' 0080'              	movwf	___flmul@b^(0+256)
  9002  00BD' 0800'              	movf	(_fround$2537+3)^(0+256),w
  9003  00BE' 0080'              	movwf	(___flmul@a+3)^(0+256)
  9004  00BF' 0800'              	movf	(_fround$2537+2)^(0+256),w
  9005  00C0' 0080'              	movwf	(___flmul@a+2)^(0+256)
  9006  00C1' 0800'              	movf	(_fround$2537+1)^(0+256),w
  9007  00C2' 0080'              	movwf	(___flmul@a+1)^(0+256)
  9008  00C3' 0800'              	movf	_fround$2537^(0+256),w
  9009  00C4' 0080'              	movwf	___flmul@a^(0+256)
  9010  00C5' 3180' 2000' 3180'  	fcall	___flmul
  9011  00C8' 0022               	movlb	2	; select bank2
  9012  00C9' 0800'              	movf	(?___flmul+3)^(0+256),w
  9013  00CA' 0080'              	movwf	(?_fround+3)^(0+256)
  9014  00CB' 0800'              	movf	(?___flmul+2)^(0+256),w
  9015  00CC' 0080'              	movwf	(?_fround+2)^(0+256)
  9016  00CD' 0800'              	movf	(?___flmul+1)^(0+256),w
  9017  00CE' 0080'              	movwf	(?_fround+1)^(0+256)
  9018  00CF' 0800'              	movf	?___flmul^(0+256),w
  9019  00D0' 0080'              	movwf	?_fround^(0+256)
  9020  00D1' 2800'              	goto	l1060
  9021  00D2'                    l8554:
  9022                           
  9023                           ;doprnt.c: 423: else if(prec > 10)
  9024  00D2' 300B               	movlw	11
  9025  00D3' 0200'              	subwf	fround@prec^(0+256),w
  9026  00D4' 1C03               	skipc
  9027  00D5' 2800'              	goto	u13581
  9028  00D6' 2800'              	goto	u13580
  9029  00D7'                    u13581:
  9030  00D7' 2800'              	goto	l8560
  9031  00D8'                    u13580:
  9032  00D8'                    l8556:
  9033                           
  9034                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  9035  00D8' 303F               	movlw	63
  9036  00D9' 0080'              	movwf	(___flmul@b+3)^(0+256)
  9037  00DA' 3000               	movlw	0
  9038  00DB' 0080'              	movwf	(___flmul@b+2)^(0+256)
  9039  00DC' 3000               	movlw	0
  9040  00DD' 0080'              	movwf	(___flmul@b+1)^(0+256)
  9041  00DE' 3000               	movlw	0
  9042  00DF' 0080'              	movwf	___flmul@b^(0+256)
  9043  00E0' 300A               	movlw	10
  9044  00E1' 0080'              	movwf	___lwdiv@divisor^(0+256)
  9045  00E2' 3000               	movlw	0
  9046  00E3' 0081'              	movwf	(___lwdiv@divisor^(0+256)+1)
  9047  00E4' 0800'              	movf	fround@prec^(0+256),w
  9048  00E5' 0080'              	movwf	??_fround^(0+256)
  9049  00E6' 0181'              	clrf	(??_fround^(0+256)+1)
  9050  00E7' 0800'              	movf	??_fround^(0+256),w
  9051  00E8' 0080'              	movwf	___lwdiv@dividend^(0+256)
  9052  00E9' 0800'              	movf	(??_fround+1)^(0+256),w
  9053  00EA' 0080'              	movwf	(___lwdiv@dividend+1)^(0+256)
  9054  00EB' 3180' 2000' 3180'  	fcall	___lwdiv
  9055  00EE' 0022               	movlb	2	; select bank2
  9056  00EF' 0800'              	movf	(?___lwdiv+1)^(0+256),w
  9057  00F0' 0085               	movwf	5
  9058  00F1' 0800'              	movf	?___lwdiv^(0+256),w
  9059  00F2' 0084               	movwf	4
  9060  00F3' 3584               	lslf	4,f
  9061  00F4' 0D85               	rlf	5,f
  9062  00F5' 3584               	lslf	4,f
  9063  00F6' 0D85               	rlf	5,f
  9064  00F7' 3000'              	movlw	low ((__npowers_+36)| (0+32768))
  9065  00F8' 0784               	addwf	4,f
  9066  00F9' 3000'              	movlw	high ((__npowers_+36)| (0+32768))
  9067  00FA' 3D85               	addwfc	5,f
  9068  00FB' 3F00               	moviw [0]fsr0
  9069  00FC' 0080'              	movwf	(??_fround+2)^(0+256)
  9070  00FD' 3F01               	moviw [1]fsr0
  9071  00FE' 0081'              	movwf	((??_fround+2)^(0+256)+1)
  9072  00FF' 3F02               	moviw [2]fsr0
  9073  0100' 0082'              	movwf	((??_fround+2)^(0+256)+2)
  9074  0101' 3F03               	moviw [3]fsr0
  9075  0102' 0083'              	movwf	((??_fround+2)^(0+256)+3)
  9076  0103' 0800'              	movf	(??_fround+5)^(0+256),w
  9077  0104' 0080'              	movwf	(___flmul@a+3)^(0+256)
  9078  0105' 0800'              	movf	(??_fround+4)^(0+256),w
  9079  0106' 0080'              	movwf	(___flmul@a+2)^(0+256)
  9080  0107' 0800'              	movf	(??_fround+3)^(0+256),w
  9081  0108' 0080'              	movwf	(___flmul@a+1)^(0+256)
  9082  0109' 0800'              	movf	(??_fround+2)^(0+256),w
  9083  010A' 0080'              	movwf	___flmul@a^(0+256)
  9084  010B' 3180' 2000' 3180'  	fcall	___flmul
  9085  010E' 0022               	movlb	2	; select bank2
  9086  010F' 0800'              	movf	(?___flmul+3)^(0+256),w
  9087  0110' 0080'              	movwf	(_fround$2536+3)^(0+256)
  9088  0111' 0800'              	movf	(?___flmul+2)^(0+256),w
  9089  0112' 0080'              	movwf	(_fround$2536+2)^(0+256)
  9090  0113' 0800'              	movf	(?___flmul+1)^(0+256),w
  9091  0114' 0080'              	movwf	(_fround$2536+1)^(0+256)
  9092  0115' 0800'              	movf	?___flmul^(0+256),w
  9093  0116' 0080'              	movwf	_fround$2536^(0+256)
  9094                           
  9095                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  9096  0117' 300A               	movlw	10
  9097  0118' 0080'              	movwf	___lwmod@divisor^(0+256)
  9098  0119' 3000               	movlw	0
  9099  011A' 0081'              	movwf	(___lwmod@divisor^(0+256)+1)
  9100  011B' 0800'              	movf	fround@prec^(0+256),w
  9101  011C' 0080'              	movwf	??_fround^(0+256)
  9102  011D' 0181'              	clrf	(??_fround^(0+256)+1)
  9103  011E' 0800'              	movf	??_fround^(0+256),w
  9104  011F' 0080'              	movwf	___lwmod@dividend^(0+256)
  9105  0120' 0800'              	movf	(??_fround+1)^(0+256),w
  9106  0121' 0080'              	movwf	(___lwmod@dividend+1)^(0+256)
  9107  0122' 3180' 2000' 3180'  	fcall	___lwmod
  9108  0125' 0022               	movlb	2	; select bank2
  9109  0126' 0800'              	movf	(?___lwmod+1)^(0+256),w
  9110  0127' 0085               	movwf	5
  9111  0128' 0800'              	movf	?___lwmod^(0+256),w
  9112  0129' 0084               	movwf	4
  9113  012A' 3584               	lslf	4,f
  9114  012B' 0D85               	rlf	5,f
  9115  012C' 3584               	lslf	4,f
  9116  012D' 0D85               	rlf	5,f
  9117  012E' 3000'              	movlw	low (__npowers_| (0+32768))
  9118  012F' 0784               	addwf	4,f
  9119  0130' 3000'              	movlw	high (__npowers_| (0+32768))
  9120  0131' 3D85               	addwfc	5,f
  9121  0132' 3F00               	moviw [0]fsr0
  9122  0133' 0080'              	movwf	(??_fround+2)^(0+256)
  9123  0134' 3F01               	moviw [1]fsr0
  9124  0135' 0081'              	movwf	((??_fround+2)^(0+256)+1)
  9125  0136' 3F02               	moviw [2]fsr0
  9126  0137' 0082'              	movwf	((??_fround+2)^(0+256)+2)
  9127  0138' 3F03               	moviw [3]fsr0
  9128  0139' 0083'              	movwf	((??_fround+2)^(0+256)+3)
  9129  013A' 0800'              	movf	(??_fround+5)^(0+256),w
  9130  013B' 0080'              	movwf	(___flmul@b+3)^(0+256)
  9131  013C' 0800'              	movf	(??_fround+4)^(0+256),w
  9132  013D' 0080'              	movwf	(___flmul@b+2)^(0+256)
  9133  013E' 0800'              	movf	(??_fround+3)^(0+256),w
  9134  013F' 0080'              	movwf	(___flmul@b+1)^(0+256)
  9135  0140' 0800'              	movf	(??_fround+2)^(0+256),w
  9136  0141' 0080'              	movwf	___flmul@b^(0+256)
  9137  0142' 0800'              	movf	(_fround$2536+3)^(0+256),w
  9138  0143' 0080'              	movwf	(___flmul@a+3)^(0+256)
  9139  0144' 0800'              	movf	(_fround$2536+2)^(0+256),w
  9140  0145' 0080'              	movwf	(___flmul@a+2)^(0+256)
  9141  0146' 0800'              	movf	(_fround$2536+1)^(0+256),w
  9142  0147' 0080'              	movwf	(___flmul@a+1)^(0+256)
  9143  0148' 0800'              	movf	_fround$2536^(0+256),w
  9144  0149' 0080'              	movwf	___flmul@a^(0+256)
  9145  014A' 3180' 2000' 3180'  	fcall	___flmul
  9146  014D' 0022               	movlb	2	; select bank2
  9147  014E' 0800'              	movf	(?___flmul+3)^(0+256),w
  9148  014F' 0080'              	movwf	(?_fround+3)^(0+256)
  9149  0150' 0800'              	movf	(?___flmul+2)^(0+256),w
  9150  0151' 0080'              	movwf	(?_fround+2)^(0+256)
  9151  0152' 0800'              	movf	(?___flmul+1)^(0+256),w
  9152  0153' 0080'              	movwf	(?_fround+1)^(0+256)
  9153  0154' 0800'              	movf	?___flmul^(0+256),w
  9154  0155' 0080'              	movwf	?_fround^(0+256)
  9155  0156' 2800'              	goto	l1060
  9156  0157'                    l8560:
  9157                           
  9158                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  9159  0157' 303F               	movlw	63
  9160  0158' 0080'              	movwf	(___flmul@b+3)^(0+256)
  9161  0159' 3000               	movlw	0
  9162  015A' 0080'              	movwf	(___flmul@b+2)^(0+256)
  9163  015B' 3000               	movlw	0
  9164  015C' 0080'              	movwf	(___flmul@b+1)^(0+256)
  9165  015D' 3000               	movlw	0
  9166  015E' 0080'              	movwf	___flmul@b^(0+256)
  9167  015F' 0800'              	movf	fround@prec^(0+256),w
  9168  0160' 0080'              	movwf	??_fround^(0+256)
  9169  0161' 0181'              	clrf	(??_fround^(0+256)+1)
  9170  0162' 3580'              	lslf	??_fround^(0+256),f
  9171  0163' 0D81'              	rlf	(??_fround^(0+256)+1),f
  9172  0164' 3580'              	lslf	??_fround^(0+256),f
  9173  0165' 0D81'              	rlf	(??_fround^(0+256)+1),f
  9174  0166' 3000'              	movlw	low (__npowers_| (0+32768))
  9175  0167' 0700'              	addwf	??_fround^(0+256),w
  9176  0168' 0084               	movwf	4
  9177  0169' 3000'              	movlw	high (__npowers_| (0+32768))
  9178  016A' 3D00'              	addwfc	(??_fround+1)^(0+256),w
  9179  016B' 0085               	movwf	5
  9180  016C' 3F00               	moviw [0]fsr0
  9181  016D' 0080'              	movwf	(??_fround+2)^(0+256)
  9182  016E' 3F01               	moviw [1]fsr0
  9183  016F' 0081'              	movwf	((??_fround+2)^(0+256)+1)
  9184  0170' 3F02               	moviw [2]fsr0
  9185  0171' 0082'              	movwf	((??_fround+2)^(0+256)+2)
  9186  0172' 3F03               	moviw [3]fsr0
  9187  0173' 0083'              	movwf	((??_fround+2)^(0+256)+3)
  9188  0174' 0800'              	movf	(??_fround+5)^(0+256),w
  9189  0175' 0080'              	movwf	(___flmul@a+3)^(0+256)
  9190  0176' 0800'              	movf	(??_fround+4)^(0+256),w
  9191  0177' 0080'              	movwf	(___flmul@a+2)^(0+256)
  9192  0178' 0800'              	movf	(??_fround+3)^(0+256),w
  9193  0179' 0080'              	movwf	(___flmul@a+1)^(0+256)
  9194  017A' 0800'              	movf	(??_fround+2)^(0+256),w
  9195  017B' 0080'              	movwf	___flmul@a^(0+256)
  9196  017C' 3180' 2000' 3180'  	fcall	___flmul
  9197  017F' 0022               	movlb	2	; select bank2
  9198  0180' 0800'              	movf	(?___flmul+3)^(0+256),w
  9199  0181' 0080'              	movwf	(?_fround+3)^(0+256)
  9200  0182' 0800'              	movf	(?___flmul+2)^(0+256),w
  9201  0183' 0080'              	movwf	(?_fround+2)^(0+256)
  9202  0184' 0800'              	movf	(?___flmul+1)^(0+256),w
  9203  0185' 0080'              	movwf	(?_fround+1)^(0+256)
  9204  0186' 0800'              	movf	?___flmul^(0+256),w
  9205  0187' 0080'              	movwf	?_fround^(0+256)
  9206  0188'                    l1060:
  9207  0188' 0008               	return
  9208  0189'                    __end_of_fround:
  9209                           
  9210                           	psect	text7
  9211  0000'                    __ptext7:	
  9212 ;; *************** function ___lwmod *****************
  9213 ;; Defined at:
  9214 ;;		line 5 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/lwmod.c"
  9215 ;; Parameters:    Size  Location     Type
  9216 ;;  divisor         2    0[BANK2 ] unsigned int 
  9217 ;;  dividend        2    2[BANK2 ] unsigned int 
  9218 ;; Auto vars:     Size  Location     Type
  9219 ;;  counter         1    5[BANK2 ] unsigned char 
  9220 ;; Return value:  Size  Location     Type
  9221 ;;                  2    0[BANK2 ] unsigned int 
  9222 ;; Registers used:
  9223 ;;		wreg, status,2, status,0
  9224 ;; Tracked objects:
  9225 ;;		On entry : 0/0
  9226 ;;		On exit  : 0/0
  9227 ;;		Unchanged: 0/0
  9228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9229 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  9230 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  9231 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  9232 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  9233 ;;Total ram usage:        6 bytes
  9234 ;; Hardware stack levels used:    1
  9235 ;; Hardware stack levels required when called:    7
  9236 ;; This function calls:
  9237 ;;		Nothing
  9238 ;; This function is called by:
  9239 ;;		_fround
  9240 ;; This function uses a non-reentrant model
  9241 ;;
  9242                           
  9243                           
  9244                           ;psect for function ___lwmod
  9245  0000'                    ___lwmod:
  9246  0000'                    l8190:	
  9247                           ;incstack = 0
  9248                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  9249                           
  9250  0000' 0022               	movlb	2	; select bank2
  9251  0001' 0800'              	movf	___lwmod@divisor^(0+256),w
  9252  0002' 0400'              	iorwf	(___lwmod@divisor+1)^(0+256),w
  9253  0003' 1903               	btfsc	3,2
  9254  0004' 2800'              	goto	u12821
  9255  0005' 2800'              	goto	u12820
  9256  0006'                    u12821:
  9257  0006' 2800'              	goto	l8208
  9258  0007'                    u12820:
  9259  0007'                    l8192:
  9260  0007' 0180'              	clrf	___lwmod@counter^(0+256)
  9261  0008' 0A80'              	incf	___lwmod@counter^(0+256),f
  9262  0009' 2800'              	goto	l8198
  9263  000A'                    l8194:
  9264  000A' 3001               	movlw	1
  9265  000B'                    u12835:
  9266  000B' 3580'              	lslf	___lwmod@divisor^(0+256),f
  9267  000C' 0D80'              	rlf	(___lwmod@divisor+1)^(0+256),f
  9268  000D' 0B89               	decfsz	9,f
  9269  000E' 2800'              	goto	u12835
  9270  000F'                    l8196:
  9271  000F' 3001               	movlw	1
  9272  0010' 0080'              	movwf	??___lwmod^(0+256)
  9273  0011' 0800'              	movf	??___lwmod^(0+256),w
  9274  0012' 0780'              	addwf	___lwmod@counter^(0+256),f
  9275  0013'                    l8198:
  9276  0013' 1F80'              	btfss	(___lwmod@divisor+1)^(0+256),7
  9277  0014' 2800'              	goto	u12841
  9278  0015' 2800'              	goto	u12840
  9279  0016'                    u12841:
  9280  0016' 2800'              	goto	l8194
  9281  0017'                    u12840:
  9282  0017'                    l8200:
  9283  0017' 0800'              	movf	(___lwmod@divisor+1)^(0+256),w
  9284  0018' 0200'              	subwf	(___lwmod@dividend+1)^(0+256),w
  9285  0019' 1D03               	skipz
  9286  001A' 2800'              	goto	u12855
  9287  001B' 0800'              	movf	___lwmod@divisor^(0+256),w
  9288  001C' 0200'              	subwf	___lwmod@dividend^(0+256),w
  9289  001D'                    u12855:
  9290  001D' 1C03               	skipc
  9291  001E' 2800'              	goto	u12851
  9292  001F' 2800'              	goto	u12850
  9293  0020'                    u12851:
  9294  0020' 2800'              	goto	l8204
  9295  0021'                    u12850:
  9296  0021'                    l8202:
  9297  0021' 0800'              	movf	___lwmod@divisor^(0+256),w
  9298  0022' 0280'              	subwf	___lwmod@dividend^(0+256),f
  9299  0023' 0800'              	movf	(___lwmod@divisor+1)^(0+256),w
  9300  0024' 3B80'              	subwfb	(___lwmod@dividend+1)^(0+256),f
  9301  0025'                    l8204:
  9302  0025' 3001               	movlw	1
  9303  0026'                    u12865:
  9304  0026' 3680'              	lsrf	(___lwmod@divisor+1)^(0+256),f
  9305  0027' 0C80'              	rrf	___lwmod@divisor^(0+256),f
  9306  0028' 0B89               	decfsz	9,f
  9307  0029' 2800'              	goto	u12865
  9308  002A'                    l8206:
  9309  002A' 3001               	movlw	1
  9310  002B' 0280'              	subwf	___lwmod@counter^(0+256),f
  9311  002C' 1D03               	btfss	3,2
  9312  002D' 2800'              	goto	u12871
  9313  002E' 2800'              	goto	u12870
  9314  002F'                    u12871:
  9315  002F' 2800'              	goto	l8200
  9316  0030'                    u12870:
  9317  0030'                    l8208:
  9318  0030' 0800'              	movf	(___lwmod@dividend+1)^(0+256),w
  9319  0031' 0080'              	movwf	(?___lwmod+1)^(0+256)
  9320  0032' 0800'              	movf	___lwmod@dividend^(0+256),w
  9321  0033' 0080'              	movwf	?___lwmod^(0+256)
  9322  0034'                    l1497:
  9323  0034' 0008               	return
  9324  0035'                    __end_of___lwmod:
  9325                           
  9326                           	psect	text8
  9327  0000'                    __ptext8:	
  9328 ;; *************** function ___lwdiv *****************
  9329 ;; Defined at:
  9330 ;;		line 5 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/lwdiv.c"
  9331 ;; Parameters:    Size  Location     Type
  9332 ;;  divisor         2    6[BANK2 ] unsigned int 
  9333 ;;  dividend        2    8[BANK2 ] unsigned int 
  9334 ;; Auto vars:     Size  Location     Type
  9335 ;;  quotient        2   12[BANK2 ] unsigned int 
  9336 ;;  counter         1   11[BANK2 ] unsigned char 
  9337 ;; Return value:  Size  Location     Type
  9338 ;;                  2    6[BANK2 ] unsigned int 
  9339 ;; Registers used:
  9340 ;;		wreg, status,2, status,0
  9341 ;; Tracked objects:
  9342 ;;		On entry : 0/0
  9343 ;;		On exit  : 0/0
  9344 ;;		Unchanged: 0/0
  9345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9346 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  9347 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  9348 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  9349 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  9350 ;;Total ram usage:        8 bytes
  9351 ;; Hardware stack levels used:    1
  9352 ;; Hardware stack levels required when called:    7
  9353 ;; This function calls:
  9354 ;;		Nothing
  9355 ;; This function is called by:
  9356 ;;		_fround
  9357 ;; This function uses a non-reentrant model
  9358 ;;
  9359                           
  9360                           
  9361                           ;psect for function ___lwdiv
  9362  0000'                    ___lwdiv:
  9363  0000'                    l8164:	
  9364                           ;incstack = 0
  9365                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9366                           
  9367  0000' 0022               	movlb	2	; select bank2
  9368  0001' 0180'              	clrf	___lwdiv@quotient^(0+256)
  9369  0002' 0180'              	clrf	(___lwdiv@quotient+1)^(0+256)
  9370  0003'                    l8166:
  9371  0003' 0800'              	movf	___lwdiv@divisor^(0+256),w
  9372  0004' 0400'              	iorwf	(___lwdiv@divisor+1)^(0+256),w
  9373  0005' 1903               	btfsc	3,2
  9374  0006' 2800'              	goto	u12751
  9375  0007' 2800'              	goto	u12750
  9376  0008'                    u12751:
  9377  0008' 2800'              	goto	l8186
  9378  0009'                    u12750:
  9379  0009'                    l8168:
  9380  0009' 0180'              	clrf	___lwdiv@counter^(0+256)
  9381  000A' 0A80'              	incf	___lwdiv@counter^(0+256),f
  9382  000B' 2800'              	goto	l8174
  9383  000C'                    l8170:
  9384  000C' 3001               	movlw	1
  9385  000D'                    u12765:
  9386  000D' 3580'              	lslf	___lwdiv@divisor^(0+256),f
  9387  000E' 0D80'              	rlf	(___lwdiv@divisor+1)^(0+256),f
  9388  000F' 0B89               	decfsz	9,f
  9389  0010' 2800'              	goto	u12765
  9390  0011'                    l8172:
  9391  0011' 3001               	movlw	1
  9392  0012' 0080'              	movwf	??___lwdiv^(0+256)
  9393  0013' 0800'              	movf	??___lwdiv^(0+256),w
  9394  0014' 0780'              	addwf	___lwdiv@counter^(0+256),f
  9395  0015'                    l8174:
  9396  0015' 1F80'              	btfss	(___lwdiv@divisor+1)^(0+256),7
  9397  0016' 2800'              	goto	u12771
  9398  0017' 2800'              	goto	u12770
  9399  0018'                    u12771:
  9400  0018' 2800'              	goto	l8170
  9401  0019'                    u12770:
  9402  0019'                    l8176:
  9403  0019' 3001               	movlw	1
  9404  001A'                    u12785:
  9405  001A' 3580'              	lslf	___lwdiv@quotient^(0+256),f
  9406  001B' 0D80'              	rlf	(___lwdiv@quotient+1)^(0+256),f
  9407  001C' 0B89               	decfsz	9,f
  9408  001D' 2800'              	goto	u12785
  9409  001E' 0800'              	movf	(___lwdiv@divisor+1)^(0+256),w
  9410  001F' 0200'              	subwf	(___lwdiv@dividend+1)^(0+256),w
  9411  0020' 1D03               	skipz
  9412  0021' 2800'              	goto	u12795
  9413  0022' 0800'              	movf	___lwdiv@divisor^(0+256),w
  9414  0023' 0200'              	subwf	___lwdiv@dividend^(0+256),w
  9415  0024'                    u12795:
  9416  0024' 1C03               	skipc
  9417  0025' 2800'              	goto	u12791
  9418  0026' 2800'              	goto	u12790
  9419  0027'                    u12791:
  9420  0027' 2800'              	goto	l8182
  9421  0028'                    u12790:
  9422  0028'                    l8178:
  9423  0028' 0800'              	movf	___lwdiv@divisor^(0+256),w
  9424  0029' 0280'              	subwf	___lwdiv@dividend^(0+256),f
  9425  002A' 0800'              	movf	(___lwdiv@divisor+1)^(0+256),w
  9426  002B' 3B80'              	subwfb	(___lwdiv@dividend+1)^(0+256),f
  9427  002C'                    l8180:
  9428  002C' 1400'              	bsf	___lwdiv@quotient^(0+256),0
  9429  002D'                    l8182:
  9430  002D' 3001               	movlw	1
  9431  002E'                    u12805:
  9432  002E' 3680'              	lsrf	(___lwdiv@divisor+1)^(0+256),f
  9433  002F' 0C80'              	rrf	___lwdiv@divisor^(0+256),f
  9434  0030' 0B89               	decfsz	9,f
  9435  0031' 2800'              	goto	u12805
  9436  0032'                    l8184:
  9437  0032' 3001               	movlw	1
  9438  0033' 0280'              	subwf	___lwdiv@counter^(0+256),f
  9439  0034' 1D03               	btfss	3,2
  9440  0035' 2800'              	goto	u12811
  9441  0036' 2800'              	goto	u12810
  9442  0037'                    u12811:
  9443  0037' 2800'              	goto	l8176
  9444  0038'                    u12810:
  9445  0038'                    l8186:
  9446  0038' 0800'              	movf	(___lwdiv@quotient+1)^(0+256),w
  9447  0039' 0080'              	movwf	(?___lwdiv+1)^(0+256)
  9448  003A' 0800'              	movf	___lwdiv@quotient^(0+256),w
  9449  003B' 0080'              	movwf	?___lwdiv^(0+256)
  9450  003C'                    l1487:
  9451  003C' 0008               	return
  9452  003D'                    __end_of___lwdiv:
  9453                           
  9454                           	psect	text9
  9455  0000'                    __ptext9:	
  9456 ;; *************** function ___flmul *****************
  9457 ;; Defined at:
  9458 ;;		line 8 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/sprcmul.c"
  9459 ;; Parameters:    Size  Location     Type
  9460 ;;  b               4   16[BANK2 ] unsigned int 
  9461 ;;  a               4   20[BANK2 ] unsigned int 
  9462 ;; Auto vars:     Size  Location     Type
  9463 ;;  prod            4   36[BANK2 ] struct .
  9464 ;;  grs             4   31[BANK2 ] unsigned long 
  9465 ;;  temp            2   40[BANK2 ] struct .
  9466 ;;  bexp            1   35[BANK2 ] unsigned char 
  9467 ;;  aexp            1   30[BANK2 ] unsigned char 
  9468 ;;  sign            1   29[BANK2 ] unsigned char 
  9469 ;; Return value:  Size  Location     Type
  9470 ;;                  4   16[BANK2 ] unsigned char 
  9471 ;; Registers used:
  9472 ;;		wreg, status,2, status,0, pclath, cstack
  9473 ;; Tracked objects:
  9474 ;;		On entry : 0/0
  9475 ;;		On exit  : 0/0
  9476 ;;		Unchanged: 0/0
  9477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9478 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  9479 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0
  9480 ;;      Temps:          0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  9481 ;;      Totals:         0       0       0      26       0       0       0       0       0       0       0       0       
      +0       0
  9482 ;;Total ram usage:       26 bytes
  9483 ;; Hardware stack levels used:    1
  9484 ;; Hardware stack levels required when called:    8
  9485 ;; This function calls:
  9486 ;;		__Umul8_16
  9487 ;; This function is called by:
  9488 ;;		_fround
  9489 ;;		_scale
  9490 ;;		_sprintf
  9491 ;;		_get_Luminosity
  9492 ;; This function uses a non-reentrant model
  9493 ;;
  9494                           
  9495                           
  9496                           ;psect for function ___flmul
  9497  0000'                    ___flmul:
  9498  0000'                    l8406:	
  9499                           ;incstack = 0
  9500                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  9501                           
  9502  0000' 0022               	movlb	2	; select bank2
  9503  0001' 0803'              	movf	(___flmul@b^(0+256)+3),w
  9504  0002' 3980               	andlw	128
  9505  0003' 0080'              	movwf	??___flmul^(0+256)
  9506  0004' 0800'              	movf	??___flmul^(0+256),w
  9507  0005' 0080'              	movwf	___flmul@sign^(0+256)
  9508  0006'                    l8408:
  9509  0006' 3503'              	lslf	(___flmul@b^(0+256)+3),w
  9510  0007' 0080'              	movwf	??___flmul^(0+256)
  9511  0008' 0800'              	movf	??___flmul^(0+256),w
  9512  0009' 0080'              	movwf	___flmul@bexp^(0+256)
  9513  000A'                    l8410:
  9514  000A' 1F82'              	btfss	(___flmul@b^(0+256)+2),7
  9515  000B' 2800'              	goto	u13311
  9516  000C' 2800'              	goto	u13310
  9517  000D'                    u13311:
  9518  000D' 2800'              	goto	l8414
  9519  000E'                    u13310:
  9520  000E'                    l8412:
  9521  000E' 1400'              	bsf	___flmul@bexp^(0+256),0
  9522  000F'                    l8414:
  9523  000F' 0800'              	movf	___flmul@bexp^(0+256),w
  9524  0010' 1903               	btfsc	3,2
  9525  0011' 2800'              	goto	u13321
  9526  0012' 2800'              	goto	u13320
  9527  0013'                    u13321:
  9528  0013' 2800'              	goto	l8422
  9529  0014'                    u13320:
  9530  0014'                    l8416:
  9531  0014' 0A00'              	incf	___flmul@bexp^(0+256),w
  9532  0015' 1D03               	btfss	3,2
  9533  0016' 2800'              	goto	u13331
  9534  0017' 2800'              	goto	u13330
  9535  0018'                    u13331:
  9536  0018' 2800'              	goto	l8420
  9537  0019'                    u13330:
  9538  0019'                    l8418:
  9539  0019' 3000               	movlw	0
  9540  001A' 0080'              	movwf	(___flmul@b+3)^(0+256)
  9541  001B' 3000               	movlw	0
  9542  001C' 0080'              	movwf	(___flmul@b+2)^(0+256)
  9543  001D' 3000               	movlw	0
  9544  001E' 0080'              	movwf	(___flmul@b+1)^(0+256)
  9545  001F' 3000               	movlw	0
  9546  0020' 0080'              	movwf	___flmul@b^(0+256)
  9547  0021'                    l8420:
  9548  0021' 1782'              	bsf	(___flmul@b^(0+256)+2),7
  9549  0022' 2800'              	goto	l8424
  9550  0023'                    l8422:
  9551  0023' 3000               	movlw	0
  9552  0024' 0080'              	movwf	(___flmul@b+3)^(0+256)
  9553  0025' 3000               	movlw	0
  9554  0026' 0080'              	movwf	(___flmul@b+2)^(0+256)
  9555  0027' 3000               	movlw	0
  9556  0028' 0080'              	movwf	(___flmul@b+1)^(0+256)
  9557  0029' 3000               	movlw	0
  9558  002A' 0080'              	movwf	___flmul@b^(0+256)
  9559  002B'                    l8424:
  9560  002B' 0803'              	movf	(___flmul@a^(0+256)+3),w
  9561  002C' 3980               	andlw	128
  9562  002D' 0080'              	movwf	??___flmul^(0+256)
  9563  002E' 0800'              	movf	??___flmul^(0+256),w
  9564  002F' 0680'              	xorwf	___flmul@sign^(0+256),f
  9565  0030'                    l8426:
  9566  0030' 3503'              	lslf	(___flmul@a^(0+256)+3),w
  9567  0031' 0080'              	movwf	??___flmul^(0+256)
  9568  0032' 0800'              	movf	??___flmul^(0+256),w
  9569  0033' 0080'              	movwf	___flmul@aexp^(0+256)
  9570  0034'                    l8428:
  9571  0034' 1F82'              	btfss	(___flmul@a^(0+256)+2),7
  9572  0035' 2800'              	goto	u13341
  9573  0036' 2800'              	goto	u13340
  9574  0037'                    u13341:
  9575  0037' 2800'              	goto	l8432
  9576  0038'                    u13340:
  9577  0038'                    l8430:
  9578  0038' 1400'              	bsf	___flmul@aexp^(0+256),0
  9579  0039'                    l8432:
  9580  0039' 0800'              	movf	___flmul@aexp^(0+256),w
  9581  003A' 1903               	btfsc	3,2
  9582  003B' 2800'              	goto	u13351
  9583  003C' 2800'              	goto	u13350
  9584  003D'                    u13351:
  9585  003D' 2800'              	goto	l8440
  9586  003E'                    u13350:
  9587  003E'                    l8434:
  9588  003E' 0A00'              	incf	___flmul@aexp^(0+256),w
  9589  003F' 1D03               	btfss	3,2
  9590  0040' 2800'              	goto	u13361
  9591  0041' 2800'              	goto	u13360
  9592  0042'                    u13361:
  9593  0042' 2800'              	goto	l8438
  9594  0043'                    u13360:
  9595  0043'                    l8436:
  9596  0043' 3000               	movlw	0
  9597  0044' 0080'              	movwf	(___flmul@a+3)^(0+256)
  9598  0045' 3000               	movlw	0
  9599  0046' 0080'              	movwf	(___flmul@a+2)^(0+256)
  9600  0047' 3000               	movlw	0
  9601  0048' 0080'              	movwf	(___flmul@a+1)^(0+256)
  9602  0049' 3000               	movlw	0
  9603  004A' 0080'              	movwf	___flmul@a^(0+256)
  9604  004B'                    l8438:
  9605  004B' 1782'              	bsf	(___flmul@a^(0+256)+2),7
  9606  004C' 2800'              	goto	l8442
  9607  004D'                    l8440:
  9608  004D' 3000               	movlw	0
  9609  004E' 0080'              	movwf	(___flmul@a+3)^(0+256)
  9610  004F' 3000               	movlw	0
  9611  0050' 0080'              	movwf	(___flmul@a+2)^(0+256)
  9612  0051' 3000               	movlw	0
  9613  0052' 0080'              	movwf	(___flmul@a+1)^(0+256)
  9614  0053' 3000               	movlw	0
  9615  0054' 0080'              	movwf	___flmul@a^(0+256)
  9616  0055'                    l8442:
  9617  0055' 0800'              	movf	___flmul@aexp^(0+256),w
  9618  0056' 1903               	btfsc	3,2
  9619  0057' 2800'              	goto	u13371
  9620  0058' 2800'              	goto	u13370
  9621  0059'                    u13371:
  9622  0059' 2800'              	goto	l8446
  9623  005A'                    u13370:
  9624  005A'                    l8444:
  9625  005A' 0800'              	movf	___flmul@bexp^(0+256),w
  9626  005B' 1D03               	btfss	3,2
  9627  005C' 2800'              	goto	u13381
  9628  005D' 2800'              	goto	u13380
  9629  005E'                    u13381:
  9630  005E' 2800'              	goto	l8450
  9631  005F'                    u13380:
  9632  005F'                    l8446:
  9633  005F' 3000               	movlw	0
  9634  0060' 0080'              	movwf	(?___flmul+3)^(0+256)
  9635  0061' 3000               	movlw	0
  9636  0062' 0080'              	movwf	(?___flmul+2)^(0+256)
  9637  0063' 3000               	movlw	0
  9638  0064' 0080'              	movwf	(?___flmul+1)^(0+256)
  9639  0065' 3000               	movlw	0
  9640  0066' 0080'              	movwf	?___flmul^(0+256)
  9641  0067' 2800'              	goto	l1604
  9642  0068'                    l8450:
  9643  0068' 0800'              	movf	___flmul@b^(0+256),w
  9644  0069' 0080'              	movwf	??___flmul^(0+256)
  9645  006A' 0800'              	movf	??___flmul^(0+256),w
  9646  006B' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  9647  006C' 0802'              	movf	(___flmul@a^(0+256)+2),w
  9648  006D' 3180' 2000' 3180'  	fcall	__Umul8_16
  9649  0070' 0022               	movlb	2	; select bank2
  9650  0071' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  9651  0072' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  9652  0073' 0800'              	movf	?__Umul8_16^(0+256),w
  9653  0074' 0080'              	movwf	___flmul@temp^(0+256)
  9654  0075'                    l8452:
  9655  0075' 0800'              	movf	___flmul@temp^(0+256),w
  9656  0076' 0080'              	movwf	??___flmul^(0+256)
  9657  0077' 0181'              	clrf	(??___flmul^(0+256)+1)
  9658  0078' 0182'              	clrf	(??___flmul^(0+256)+2)
  9659  0079' 0183'              	clrf	(??___flmul^(0+256)+3)
  9660  007A' 0800'              	movf	(??___flmul+3)^(0+256),w
  9661  007B' 0080'              	movwf	(___flmul@grs+3)^(0+256)
  9662  007C' 0800'              	movf	(??___flmul+2)^(0+256),w
  9663  007D' 0080'              	movwf	(___flmul@grs+2)^(0+256)
  9664  007E' 0800'              	movf	(??___flmul+1)^(0+256),w
  9665  007F' 0080'              	movwf	(___flmul@grs+1)^(0+256)
  9666  0080' 0800'              	movf	??___flmul^(0+256),w
  9667  0081' 0080'              	movwf	___flmul@grs^(0+256)
  9668  0082'                    l8454:
  9669  0082' 0801'              	movf	(___flmul@temp^(0+256)+1),w
  9670  0083' 0080'              	movwf	??___flmul^(0+256)
  9671  0084' 0181'              	clrf	(??___flmul^(0+256)+1)
  9672  0085' 0182'              	clrf	(??___flmul^(0+256)+2)
  9673  0086' 0183'              	clrf	(??___flmul^(0+256)+3)
  9674  0087' 0800'              	movf	(??___flmul+3)^(0+256),w
  9675  0088' 0080'              	movwf	(___flmul@prod+3)^(0+256)
  9676  0089' 0800'              	movf	(??___flmul+2)^(0+256),w
  9677  008A' 0080'              	movwf	(___flmul@prod+2)^(0+256)
  9678  008B' 0800'              	movf	(??___flmul+1)^(0+256),w
  9679  008C' 0080'              	movwf	(___flmul@prod+1)^(0+256)
  9680  008D' 0800'              	movf	??___flmul^(0+256),w
  9681  008E' 0080'              	movwf	___flmul@prod^(0+256)
  9682  008F' 0801'              	movf	(___flmul@b^(0+256)+1),w
  9683  0090' 0080'              	movwf	??___flmul^(0+256)
  9684  0091' 0800'              	movf	??___flmul^(0+256),w
  9685  0092' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  9686  0093' 0801'              	movf	(___flmul@a^(0+256)+1),w
  9687  0094' 3180' 2000' 3180'  	fcall	__Umul8_16
  9688  0097' 0022               	movlb	2	; select bank2
  9689  0098' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  9690  0099' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  9691  009A' 0800'              	movf	?__Umul8_16^(0+256),w
  9692  009B' 0080'              	movwf	___flmul@temp^(0+256)
  9693  009C'                    l8456:
  9694  009C' 0800'              	movf	___flmul@temp^(0+256),w
  9695  009D' 0080'              	movwf	??___flmul^(0+256)
  9696  009E' 0181'              	clrf	(??___flmul^(0+256)+1)
  9697  009F' 0182'              	clrf	(??___flmul^(0+256)+2)
  9698  00A0' 0183'              	clrf	(??___flmul^(0+256)+3)
  9699  00A1' 0800'              	movf	??___flmul^(0+256),w
  9700  00A2' 0780'              	addwf	___flmul@grs^(0+256),f
  9701  00A3' 0800'              	movf	(??___flmul+1)^(0+256),w
  9702  00A4' 3D80'              	addwfc	(___flmul@grs+1)^(0+256),f
  9703  00A5' 0800'              	movf	(??___flmul+2)^(0+256),w
  9704  00A6' 3D80'              	addwfc	(___flmul@grs+2)^(0+256),f
  9705  00A7' 0800'              	movf	(??___flmul+3)^(0+256),w
  9706  00A8' 3D80'              	addwfc	(___flmul@grs+3)^(0+256),f
  9707  00A9'                    l8458:
  9708  00A9' 0801'              	movf	(___flmul@temp^(0+256)+1),w
  9709  00AA' 0080'              	movwf	??___flmul^(0+256)
  9710  00AB' 0181'              	clrf	(??___flmul^(0+256)+1)
  9711  00AC' 0182'              	clrf	(??___flmul^(0+256)+2)
  9712  00AD' 0183'              	clrf	(??___flmul^(0+256)+3)
  9713  00AE' 0800'              	movf	??___flmul^(0+256),w
  9714  00AF' 0780'              	addwf	___flmul@prod^(0+256),f
  9715  00B0' 0800'              	movf	(??___flmul+1)^(0+256),w
  9716  00B1' 3D80'              	addwfc	(___flmul@prod+1)^(0+256),f
  9717  00B2' 0800'              	movf	(??___flmul+2)^(0+256),w
  9718  00B3' 3D80'              	addwfc	(___flmul@prod+2)^(0+256),f
  9719  00B4' 0800'              	movf	(??___flmul+3)^(0+256),w
  9720  00B5' 3D80'              	addwfc	(___flmul@prod+3)^(0+256),f
  9721  00B6' 0802'              	movf	(___flmul@b^(0+256)+2),w
  9722  00B7' 0080'              	movwf	??___flmul^(0+256)
  9723  00B8' 0800'              	movf	??___flmul^(0+256),w
  9724  00B9' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  9725  00BA' 0800'              	movf	___flmul@a^(0+256),w
  9726  00BB' 3180' 2000' 3180'  	fcall	__Umul8_16
  9727  00BE' 0022               	movlb	2	; select bank2
  9728  00BF' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  9729  00C0' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  9730  00C1' 0800'              	movf	?__Umul8_16^(0+256),w
  9731  00C2' 0080'              	movwf	___flmul@temp^(0+256)
  9732  00C3'                    l8460:
  9733  00C3' 0800'              	movf	___flmul@temp^(0+256),w
  9734  00C4' 0080'              	movwf	??___flmul^(0+256)
  9735  00C5' 0181'              	clrf	(??___flmul^(0+256)+1)
  9736  00C6' 0182'              	clrf	(??___flmul^(0+256)+2)
  9737  00C7' 0183'              	clrf	(??___flmul^(0+256)+3)
  9738  00C8' 0800'              	movf	??___flmul^(0+256),w
  9739  00C9' 0780'              	addwf	___flmul@grs^(0+256),f
  9740  00CA' 0800'              	movf	(??___flmul+1)^(0+256),w
  9741  00CB' 3D80'              	addwfc	(___flmul@grs+1)^(0+256),f
  9742  00CC' 0800'              	movf	(??___flmul+2)^(0+256),w
  9743  00CD' 3D80'              	addwfc	(___flmul@grs+2)^(0+256),f
  9744  00CE' 0800'              	movf	(??___flmul+3)^(0+256),w
  9745  00CF' 3D80'              	addwfc	(___flmul@grs+3)^(0+256),f
  9746  00D0'                    l8462:
  9747  00D0' 0801'              	movf	(___flmul@temp^(0+256)+1),w
  9748  00D1' 0080'              	movwf	??___flmul^(0+256)
  9749  00D2' 0181'              	clrf	(??___flmul^(0+256)+1)
  9750  00D3' 0182'              	clrf	(??___flmul^(0+256)+2)
  9751  00D4' 0183'              	clrf	(??___flmul^(0+256)+3)
  9752  00D5' 0800'              	movf	??___flmul^(0+256),w
  9753  00D6' 0780'              	addwf	___flmul@prod^(0+256),f
  9754  00D7' 0800'              	movf	(??___flmul+1)^(0+256),w
  9755  00D8' 3D80'              	addwfc	(___flmul@prod+1)^(0+256),f
  9756  00D9' 0800'              	movf	(??___flmul+2)^(0+256),w
  9757  00DA' 3D80'              	addwfc	(___flmul@prod+2)^(0+256),f
  9758  00DB' 0800'              	movf	(??___flmul+3)^(0+256),w
  9759  00DC' 3D80'              	addwfc	(___flmul@prod+3)^(0+256),f
  9760  00DD'                    l8464:
  9761  00DD' 3008               	movlw	8
  9762  00DE'                    u13395:
  9763  00DE' 3580'              	lslf	___flmul@grs^(0+256),f
  9764  00DF' 0D80'              	rlf	(___flmul@grs+1)^(0+256),f
  9765  00E0' 0D80'              	rlf	(___flmul@grs+2)^(0+256),f
  9766  00E1' 0D80'              	rlf	(___flmul@grs+3)^(0+256),f
  9767  00E2' 0B89               	decfsz	9,f
  9768  00E3' 2800'              	goto	u13395
  9769  00E4'                    l8466:
  9770  00E4' 0801'              	movf	(___flmul@b^(0+256)+1),w
  9771  00E5' 0080'              	movwf	??___flmul^(0+256)
  9772  00E6' 0800'              	movf	??___flmul^(0+256),w
  9773  00E7' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  9774  00E8' 0800'              	movf	___flmul@a^(0+256),w
  9775  00E9' 3180' 2000' 3180'  	fcall	__Umul8_16
  9776  00EC' 0022               	movlb	2	; select bank2
  9777  00ED' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  9778  00EE' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  9779  00EF' 0800'              	movf	?__Umul8_16^(0+256),w
  9780  00F0' 0080'              	movwf	___flmul@temp^(0+256)
  9781  00F1'                    l8468:
  9782  00F1' 0800'              	movf	___flmul@temp^(0+256),w
  9783  00F2' 0780'              	addwf	___flmul@grs^(0+256),f
  9784  00F3' 0800'              	movf	(___flmul@temp+1)^(0+256),w
  9785  00F4' 3D80'              	addwfc	(___flmul@grs+1)^(0+256),f
  9786  00F5' 3000               	movlw	0
  9787  00F6' 3D80'              	addwfc	(___flmul@grs+2)^(0+256),f
  9788  00F7' 3D80'              	addwfc	(___flmul@grs+3)^(0+256),f
  9789  00F8'                    l8470:
  9790  00F8' 0800'              	movf	___flmul@b^(0+256),w
  9791  00F9' 0080'              	movwf	??___flmul^(0+256)
  9792  00FA' 0800'              	movf	??___flmul^(0+256),w
  9793  00FB' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  9794  00FC' 0801'              	movf	(___flmul@a^(0+256)+1),w
  9795  00FD' 3180' 2000' 3180'  	fcall	__Umul8_16
  9796  0100' 0022               	movlb	2	; select bank2
  9797  0101' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  9798  0102' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  9799  0103' 0800'              	movf	?__Umul8_16^(0+256),w
  9800  0104' 0080'              	movwf	___flmul@temp^(0+256)
  9801  0105'                    l8472:
  9802  0105' 0800'              	movf	___flmul@temp^(0+256),w
  9803  0106' 0780'              	addwf	___flmul@grs^(0+256),f
  9804  0107' 0800'              	movf	(___flmul@temp+1)^(0+256),w
  9805  0108' 3D80'              	addwfc	(___flmul@grs+1)^(0+256),f
  9806  0109' 3000               	movlw	0
  9807  010A' 3D80'              	addwfc	(___flmul@grs+2)^(0+256),f
  9808  010B' 3D80'              	addwfc	(___flmul@grs+3)^(0+256),f
  9809  010C'                    l8474:
  9810  010C' 3008               	movlw	8
  9811  010D'                    u13405:
  9812  010D' 3580'              	lslf	___flmul@grs^(0+256),f
  9813  010E' 0D80'              	rlf	(___flmul@grs+1)^(0+256),f
  9814  010F' 0D80'              	rlf	(___flmul@grs+2)^(0+256),f
  9815  0110' 0D80'              	rlf	(___flmul@grs+3)^(0+256),f
  9816  0111' 0B89               	decfsz	9,f
  9817  0112' 2800'              	goto	u13405
  9818  0113' 0800'              	movf	___flmul@b^(0+256),w
  9819  0114' 0080'              	movwf	??___flmul^(0+256)
  9820  0115' 0800'              	movf	??___flmul^(0+256),w
  9821  0116' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  9822  0117' 0800'              	movf	___flmul@a^(0+256),w
  9823  0118' 3180' 2000' 3180'  	fcall	__Umul8_16
  9824  011B' 0022               	movlb	2	; select bank2
  9825  011C' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  9826  011D' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  9827  011E' 0800'              	movf	?__Umul8_16^(0+256),w
  9828  011F' 0080'              	movwf	___flmul@temp^(0+256)
  9829  0120'                    l8476:
  9830  0120' 0800'              	movf	___flmul@temp^(0+256),w
  9831  0121' 0780'              	addwf	___flmul@grs^(0+256),f
  9832  0122' 0800'              	movf	(___flmul@temp+1)^(0+256),w
  9833  0123' 3D80'              	addwfc	(___flmul@grs+1)^(0+256),f
  9834  0124' 3000               	movlw	0
  9835  0125' 3D80'              	addwfc	(___flmul@grs+2)^(0+256),f
  9836  0126' 3D80'              	addwfc	(___flmul@grs+3)^(0+256),f
  9837  0127'                    l8478:
  9838  0127' 0801'              	movf	(___flmul@b^(0+256)+1),w
  9839  0128' 0080'              	movwf	??___flmul^(0+256)
  9840  0129' 0800'              	movf	??___flmul^(0+256),w
  9841  012A' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  9842  012B' 0802'              	movf	(___flmul@a^(0+256)+2),w
  9843  012C' 3180' 2000' 3180'  	fcall	__Umul8_16
  9844  012F' 0022               	movlb	2	; select bank2
  9845  0130' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  9846  0131' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  9847  0132' 0800'              	movf	?__Umul8_16^(0+256),w
  9848  0133' 0080'              	movwf	___flmul@temp^(0+256)
  9849  0134' 0800'              	movf	___flmul@temp^(0+256),w
  9850  0135' 0780'              	addwf	___flmul@prod^(0+256),f
  9851  0136' 0800'              	movf	(___flmul@temp+1)^(0+256),w
  9852  0137' 3D80'              	addwfc	(___flmul@prod+1)^(0+256),f
  9853  0138' 3000               	movlw	0
  9854  0139' 3D80'              	addwfc	(___flmul@prod+2)^(0+256),f
  9855  013A' 3D80'              	addwfc	(___flmul@prod+3)^(0+256),f
  9856  013B'                    l8480:
  9857  013B' 0802'              	movf	(___flmul@b^(0+256)+2),w
  9858  013C' 0080'              	movwf	??___flmul^(0+256)
  9859  013D' 0800'              	movf	??___flmul^(0+256),w
  9860  013E' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  9861  013F' 0801'              	movf	(___flmul@a^(0+256)+1),w
  9862  0140' 3180' 2000' 3180'  	fcall	__Umul8_16
  9863  0143' 0022               	movlb	2	; select bank2
  9864  0144' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  9865  0145' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  9866  0146' 0800'              	movf	?__Umul8_16^(0+256),w
  9867  0147' 0080'              	movwf	___flmul@temp^(0+256)
  9868  0148'                    l8482:
  9869  0148' 0800'              	movf	___flmul@temp^(0+256),w
  9870  0149' 0780'              	addwf	___flmul@prod^(0+256),f
  9871  014A' 0800'              	movf	(___flmul@temp+1)^(0+256),w
  9872  014B' 3D80'              	addwfc	(___flmul@prod+1)^(0+256),f
  9873  014C' 3000               	movlw	0
  9874  014D' 3D80'              	addwfc	(___flmul@prod+2)^(0+256),f
  9875  014E' 3D80'              	addwfc	(___flmul@prod+3)^(0+256),f
  9876  014F' 0802'              	movf	(___flmul@b^(0+256)+2),w
  9877  0150' 0080'              	movwf	??___flmul^(0+256)
  9878  0151' 0800'              	movf	??___flmul^(0+256),w
  9879  0152' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  9880  0153' 0802'              	movf	(___flmul@a^(0+256)+2),w
  9881  0154' 3180' 2000' 3180'  	fcall	__Umul8_16
  9882  0157' 0022               	movlb	2	; select bank2
  9883  0158' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  9884  0159' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  9885  015A' 0800'              	movf	?__Umul8_16^(0+256),w
  9886  015B' 0080'              	movwf	___flmul@temp^(0+256)
  9887  015C'                    l8484:
  9888  015C' 0800'              	movf	___flmul@temp^(0+256),w
  9889  015D' 0080'              	movwf	??___flmul^(0+256)
  9890  015E' 0800'              	movf	(___flmul@temp+1)^(0+256),w
  9891  015F' 0081'              	movwf	(??___flmul^(0+256)+1)
  9892  0160' 0182'              	clrf	(??___flmul^(0+256)+2)
  9893  0161' 0183'              	clrf	(??___flmul^(0+256)+3)
  9894  0162' 3008               	movlw	8
  9895  0163'                    u13415:
  9896  0163' 3580'              	lslf	??___flmul^(0+256),f
  9897  0164' 0D81'              	rlf	(??___flmul^(0+256)+1),f
  9898  0165' 0D82'              	rlf	(??___flmul^(0+256)+2),f
  9899  0166' 0D83'              	rlf	(??___flmul^(0+256)+3),f
  9900  0167'                    u13410:
  9901  0167' 0B89               	decfsz	9,f
  9902  0168' 2800'              	goto	u13415
  9903  0169' 0800'              	movf	??___flmul^(0+256),w
  9904  016A' 0780'              	addwf	___flmul@prod^(0+256),f
  9905  016B' 0800'              	movf	(??___flmul+1)^(0+256),w
  9906  016C' 3D80'              	addwfc	(___flmul@prod+1)^(0+256),f
  9907  016D' 0800'              	movf	(??___flmul+2)^(0+256),w
  9908  016E' 3D80'              	addwfc	(___flmul@prod+2)^(0+256),f
  9909  016F' 0800'              	movf	(??___flmul+3)^(0+256),w
  9910  0170' 3D80'              	addwfc	(___flmul@prod+3)^(0+256),f
  9911  0171'                    l8486:
  9912  0171' 0800'              	movf	___flmul@grs^(0+256),w
  9913  0172' 0080'              	movwf	??___flmul^(0+256)
  9914  0173' 0800'              	movf	(___flmul@grs+1)^(0+256),w
  9915  0174' 0081'              	movwf	(??___flmul^(0+256)+1)
  9916  0175' 0800'              	movf	(___flmul@grs+2)^(0+256),w
  9917  0176' 0082'              	movwf	(??___flmul^(0+256)+2)
  9918  0177' 0800'              	movf	(___flmul@grs+3)^(0+256),w
  9919  0178' 0083'              	movwf	(??___flmul^(0+256)+3)
  9920  0179' 3018               	movlw	24
  9921  017A'                    u13425:
  9922  017A' 3683'              	lsrf	(??___flmul^(0+256)+3),f
  9923  017B' 0C82'              	rrf	(??___flmul^(0+256)+2),f
  9924  017C' 0C81'              	rrf	(??___flmul^(0+256)+1),f
  9925  017D' 0C80'              	rrf	??___flmul^(0+256),f
  9926  017E'                    u13420:
  9927  017E' 0B89               	decfsz	9,f
  9928  017F' 2800'              	goto	u13425
  9929  0180' 0800'              	movf	??___flmul^(0+256),w
  9930  0181' 0780'              	addwf	___flmul@prod^(0+256),f
  9931  0182' 0800'              	movf	(??___flmul+1)^(0+256),w
  9932  0183' 3D80'              	addwfc	(___flmul@prod+1)^(0+256),f
  9933  0184' 0800'              	movf	(??___flmul+2)^(0+256),w
  9934  0185' 3D80'              	addwfc	(___flmul@prod+2)^(0+256),f
  9935  0186' 0800'              	movf	(??___flmul+3)^(0+256),w
  9936  0187' 3D80'              	addwfc	(___flmul@prod+3)^(0+256),f
  9937  0188'                    l8488:
  9938  0188' 3008               	movlw	8
  9939  0189'                    u13435:
  9940  0189' 3580'              	lslf	___flmul@grs^(0+256),f
  9941  018A' 0D80'              	rlf	(___flmul@grs+1)^(0+256),f
  9942  018B' 0D80'              	rlf	(___flmul@grs+2)^(0+256),f
  9943  018C' 0D80'              	rlf	(___flmul@grs+3)^(0+256),f
  9944  018D' 0B89               	decfsz	9,f
  9945  018E' 2800'              	goto	u13435
  9946  018F'                    l8490:
  9947  018F' 0800'              	movf	___flmul@bexp^(0+256),w
  9948  0190' 0700'              	addwf	___flmul@aexp^(0+256),w
  9949  0191' 0080'              	movwf	??___flmul^(0+256)
  9950  0192' 0181'              	clrf	(??___flmul^(0+256)+1)
  9951  0193' 0D80'              	rlf	(??___flmul+1)^(0+256),f
  9952  0194' 0800'              	movf	??___flmul^(0+256),w
  9953  0195' 3E82               	addlw	130
  9954  0196' 0080'              	movwf	___flmul@temp^(0+256)
  9955  0197' 30FF               	movlw	255
  9956  0198' 3D00'              	addwfc	(??___flmul+1)^(0+256),w
  9957  0199' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  9958  019A' 2800'              	goto	l8502
  9959  019B'                    l8492:
  9960  019B' 3001               	movlw	1
  9961  019C'                    u13445:
  9962  019C' 3580'              	lslf	___flmul@prod^(0+256),f
  9963  019D' 0D80'              	rlf	(___flmul@prod+1)^(0+256),f
  9964  019E' 0D80'              	rlf	(___flmul@prod+2)^(0+256),f
  9965  019F' 0D80'              	rlf	(___flmul@prod+3)^(0+256),f
  9966  01A0' 0B89               	decfsz	9,f
  9967  01A1' 2800'              	goto	u13445
  9968  01A2'                    l8494:
  9969  01A2' 1F80'              	btfss	(___flmul@grs+3)^(0+256),7
  9970  01A3' 2800'              	goto	u13451
  9971  01A4' 2800'              	goto	u13450
  9972  01A5'                    u13451:
  9973  01A5' 2800'              	goto	l8498
  9974  01A6'                    u13450:
  9975  01A6'                    l8496:
  9976  01A6' 1400'              	bsf	___flmul@prod^(0+256),0
  9977  01A7'                    l8498:
  9978  01A7' 3001               	movlw	1
  9979  01A8'                    u13465:
  9980  01A8' 3580'              	lslf	___flmul@grs^(0+256),f
  9981  01A9' 0D80'              	rlf	(___flmul@grs+1)^(0+256),f
  9982  01AA' 0D80'              	rlf	(___flmul@grs+2)^(0+256),f
  9983  01AB' 0D80'              	rlf	(___flmul@grs+3)^(0+256),f
  9984  01AC' 0B89               	decfsz	9,f
  9985  01AD' 2800'              	goto	u13465
  9986  01AE'                    l8500:
  9987  01AE' 30FF               	movlw	255
  9988  01AF' 0780'              	addwf	___flmul@temp^(0+256),f
  9989  01B0' 30FF               	movlw	255
  9990  01B1' 3D80'              	addwfc	(___flmul@temp+1)^(0+256),f
  9991  01B2'                    l8502:
  9992  01B2' 1F80'              	btfss	(___flmul@prod+2)^(0+256),7
  9993  01B3' 2800'              	goto	u13471
  9994  01B4' 2800'              	goto	u13470
  9995  01B5'                    u13471:
  9996  01B5' 2800'              	goto	l8492
  9997  01B6'                    u13470:
  9998  01B6'                    l8504:
  9999  01B6' 0180'              	clrf	___flmul@aexp^(0+256)
 10000  01B7'                    l8506:
 10001  01B7' 1F80'              	btfss	(___flmul@grs+3)^(0+256),7
 10002  01B8' 2800'              	goto	u13481
 10003  01B9' 2800'              	goto	u13480
 10004  01BA'                    u13481:
 10005  01BA' 2800'              	goto	l8514
 10006  01BB'                    u13480:
 10007  01BB'                    l8508:
 10008  01BB' 30FF               	movlw	255
 10009  01BC' 0500'              	andwf	___flmul@grs^(0+256),w
 10010  01BD' 0080'              	movwf	??___flmul^(0+256)
 10011  01BE' 30FF               	movlw	255
 10012  01BF' 0500'              	andwf	(___flmul@grs+1)^(0+256),w
 10013  01C0' 0081'              	movwf	(??___flmul^(0+256)+1)
 10014  01C1' 30FF               	movlw	255
 10015  01C2' 0500'              	andwf	(___flmul@grs+2)^(0+256),w
 10016  01C3' 0082'              	movwf	(??___flmul^(0+256)+2)
 10017  01C4' 307F               	movlw	127
 10018  01C5' 0500'              	andwf	(___flmul@grs+3)^(0+256),w
 10019  01C6' 0083'              	movwf	(??___flmul^(0+256)+3)
 10020  01C7' 0800'              	movf	(??___flmul+3)^(0+256),w
 10021  01C8' 0400'              	iorwf	(??___flmul+2)^(0+256),w
 10022  01C9' 0400'              	iorwf	(??___flmul+1)^(0+256),w
 10023  01CA' 0400'              	iorwf	??___flmul^(0+256),w
 10024  01CB' 1903               	skipnz
 10025  01CC' 2800'              	goto	u13491
 10026  01CD' 2800'              	goto	u13490
 10027  01CE'                    u13491:
 10028  01CE' 2800'              	goto	l1610
 10029  01CF'                    u13490:
 10030  01CF'                    l8510:
 10031  01CF' 0180'              	clrf	___flmul@aexp^(0+256)
 10032  01D0' 0A80'              	incf	___flmul@aexp^(0+256),f
 10033  01D1' 2800'              	goto	l8514
 10034  01D2'                    l1610:
 10035  01D2' 1C00'              	btfss	___flmul@prod^(0+256),0
 10036  01D3' 2800'              	goto	u13501
 10037  01D4' 2800'              	goto	u13500
 10038  01D5'                    u13501:
 10039  01D5' 2800'              	goto	l8514
 10040  01D6'                    u13500:
 10041  01D6' 2800'              	goto	l8510
 10042  01D7'                    l8514:
 10043  01D7' 0800'              	movf	___flmul@aexp^(0+256),w
 10044  01D8' 1903               	btfsc	3,2
 10045  01D9' 2800'              	goto	u13511
 10046  01DA' 2800'              	goto	u13510
 10047  01DB'                    u13511:
 10048  01DB' 2800'              	goto	l8524
 10049  01DC'                    u13510:
 10050  01DC'                    l8516:
 10051  01DC' 3001               	movlw	1
 10052  01DD' 0780'              	addwf	___flmul@prod^(0+256),f
 10053  01DE' 3000               	movlw	0
 10054  01DF' 3D80'              	addwfc	(___flmul@prod+1)^(0+256),f
 10055  01E0' 3000               	movlw	0
 10056  01E1' 3D80'              	addwfc	(___flmul@prod+2)^(0+256),f
 10057  01E2' 3000               	movlw	0
 10058  01E3' 3D80'              	addwfc	(___flmul@prod+3)^(0+256),f
 10059  01E4'                    l8518:
 10060  01E4' 1C00'              	btfss	(___flmul@prod+3)^(0+256),0
 10061  01E5' 2800'              	goto	u13521
 10062  01E6' 2800'              	goto	u13520
 10063  01E7'                    u13521:
 10064  01E7' 2800'              	goto	l8524
 10065  01E8'                    u13520:
 10066  01E8'                    l8520:
 10067  01E8' 0800'              	movf	___flmul@prod^(0+256),w
 10068  01E9' 0080'              	movwf	??___flmul^(0+256)
 10069  01EA' 0800'              	movf	(___flmul@prod+1)^(0+256),w
 10070  01EB' 0081'              	movwf	(??___flmul^(0+256)+1)
 10071  01EC' 0800'              	movf	(___flmul@prod+2)^(0+256),w
 10072  01ED' 0082'              	movwf	(??___flmul^(0+256)+2)
 10073  01EE' 0800'              	movf	(___flmul@prod+3)^(0+256),w
 10074  01EF' 0083'              	movwf	(??___flmul^(0+256)+3)
 10075  01F0' 3001               	movlw	1
 10076  01F1' 0080'              	movwf	(??___flmul+4)^(0+256)
 10077  01F2'                    u13535:
 10078  01F2' 3783'              	asrf	(??___flmul^(0+256)+3),f
 10079  01F3' 0C82'              	rrf	(??___flmul^(0+256)+2),f
 10080  01F4' 0C81'              	rrf	(??___flmul^(0+256)+1),f
 10081  01F5' 0C80'              	rrf	??___flmul^(0+256),f
 10082  01F6'                    u13530:
 10083  01F6' 0B80'              	decfsz	(??___flmul+4)^(0+256),f
 10084  01F7' 2800'              	goto	u13535
 10085  01F8' 0800'              	movf	(??___flmul+3)^(0+256),w
 10086  01F9' 0080'              	movwf	(___flmul@prod+3)^(0+256)
 10087  01FA' 0800'              	movf	(??___flmul+2)^(0+256),w
 10088  01FB' 0080'              	movwf	(___flmul@prod+2)^(0+256)
 10089  01FC' 0800'              	movf	(??___flmul+1)^(0+256),w
 10090  01FD' 0080'              	movwf	(___flmul@prod+1)^(0+256)
 10091  01FE' 0800'              	movf	??___flmul^(0+256),w
 10092  01FF' 0080'              	movwf	___flmul@prod^(0+256)
 10093  0200'                    l8522:
 10094  0200' 3001               	movlw	1
 10095  0201' 0780'              	addwf	___flmul@temp^(0+256),f
 10096  0202' 3000               	movlw	0
 10097  0203' 3D80'              	addwfc	(___flmul@temp+1)^(0+256),f
 10098  0204'                    l8524:
 10099  0204' 0800'              	movf	(___flmul@temp+1)^(0+256),w
 10100  0205' 3A80               	xorlw	128
 10101  0206' 0080'              	movwf	??___flmul^(0+256)
 10102  0207' 3080               	movlw	128
 10103  0208' 0200'              	subwf	??___flmul^(0+256),w
 10104  0209' 1D03               	skipz
 10105  020A' 2800'              	goto	u13545
 10106  020B' 30FF               	movlw	255
 10107  020C' 0200'              	subwf	___flmul@temp^(0+256),w
 10108  020D'                    u13545:
 10109  020D' 1C03               	skipc
 10110  020E' 2800'              	goto	u13541
 10111  020F' 2800'              	goto	u13540
 10112  0210'                    u13541:
 10113  0210' 2800'              	goto	l8528
 10114  0211'                    u13540:
 10115  0211'                    l8526:
 10116  0211' 307F               	movlw	127
 10117  0212' 0022               	movlb	2	; select bank2
 10118  0213' 0080'              	movwf	(___flmul@prod+3)^(0+256)
 10119  0214' 3080               	movlw	128
 10120  0215' 0080'              	movwf	(___flmul@prod+2)^(0+256)
 10121  0216' 3000               	movlw	0
 10122  0217' 0080'              	movwf	(___flmul@prod+1)^(0+256)
 10123  0218' 3000               	movlw	0
 10124  0219' 0080'              	movwf	___flmul@prod^(0+256)
 10125  021A' 2800'              	goto	l1616
 10126  021B'                    l8528:
 10127  021B' 0022               	movlb	2	; select bank2
 10128  021C' 0800'              	movf	(___flmul@temp+1)^(0+256),w
 10129  021D' 3A80               	xorlw	128
 10130  021E' 0080'              	movwf	??___flmul^(0+256)
 10131  021F' 3080               	movlw	128
 10132  0220' 0200'              	subwf	??___flmul^(0+256),w
 10133  0221' 1D03               	skipz
 10134  0222' 2800'              	goto	u13555
 10135  0223' 3001               	movlw	1
 10136  0224' 0200'              	subwf	___flmul@temp^(0+256),w
 10137  0225'                    u13555:
 10138  0225' 1803               	skipnc
 10139  0226' 2800'              	goto	u13551
 10140  0227' 2800'              	goto	u13550
 10141  0228'                    u13551:
 10142  0228' 2800'              	goto	l8534
 10143  0229'                    u13550:
 10144  0229'                    l8530:
 10145  0229' 3000               	movlw	0
 10146  022A' 0022               	movlb	2	; select bank2
 10147  022B' 0080'              	movwf	(___flmul@prod+3)^(0+256)
 10148  022C' 3000               	movlw	0
 10149  022D' 0080'              	movwf	(___flmul@prod+2)^(0+256)
 10150  022E' 3000               	movlw	0
 10151  022F' 0080'              	movwf	(___flmul@prod+1)^(0+256)
 10152  0230' 3000               	movlw	0
 10153  0231' 0080'              	movwf	___flmul@prod^(0+256)
 10154  0232'                    l8532:
 10155  0232' 0180'              	clrf	___flmul@sign^(0+256)
 10156  0233' 2800'              	goto	l1616
 10157  0234'                    l8534:
 10158  0234' 0022               	movlb	2	; select bank2
 10159  0235' 0800'              	movf	___flmul@temp^(0+256),w
 10160  0236' 0080'              	movwf	??___flmul^(0+256)
 10161  0237' 0800'              	movf	??___flmul^(0+256),w
 10162  0238' 0080'              	movwf	___flmul@bexp^(0+256)
 10163  0239' 30FF               	movlw	255
 10164  023A' 0580'              	andwf	___flmul@prod^(0+256),f
 10165  023B' 30FF               	movlw	255
 10166  023C' 0580'              	andwf	(___flmul@prod+1)^(0+256),f
 10167  023D' 307F               	movlw	127
 10168  023E' 0580'              	andwf	(___flmul@prod+2)^(0+256),f
 10169  023F' 3000               	movlw	0
 10170  0240' 0580'              	andwf	(___flmul@prod+3)^(0+256),f
 10171  0241'                    l8536:
 10172  0241' 1C00'              	btfss	___flmul@bexp^(0+256),0
 10173  0242' 2800'              	goto	u13561
 10174  0243' 2800'              	goto	u13560
 10175  0244'                    u13561:
 10176  0244' 2800'              	goto	l8540
 10177  0245'                    u13560:
 10178  0245'                    l8538:
 10179  0245' 1782'              	bsf	(___flmul@prod^(0+256)+2),7
 10180  0246'                    l8540:
 10181  0246' 3600'              	lsrf	___flmul@bexp^(0+256),w
 10182  0247' 0080'              	movwf	??___flmul^(0+256)
 10183  0248' 0800'              	movf	??___flmul^(0+256),w
 10184  0249' 0083'              	movwf	(___flmul@prod^(0+256)+3)
 10185  024A'                    l1616:
 10186  024A' 0800'              	movf	___flmul@sign^(0+256),w
 10187  024B' 0080'              	movwf	??___flmul^(0+256)
 10188  024C' 0800'              	movf	??___flmul^(0+256),w
 10189  024D' 0483'              	iorwf	(___flmul@prod^(0+256)+3),f
 10190  024E'                    l8542:
 10191  024E' 0800'              	movf	(___flmul@prod+3)^(0+256),w
 10192  024F' 0080'              	movwf	(?___flmul+3)^(0+256)
 10193  0250' 0800'              	movf	(___flmul@prod+2)^(0+256),w
 10194  0251' 0080'              	movwf	(?___flmul+2)^(0+256)
 10195  0252' 0800'              	movf	(___flmul@prod+1)^(0+256),w
 10196  0253' 0080'              	movwf	(?___flmul+1)^(0+256)
 10197  0254' 0800'              	movf	___flmul@prod^(0+256),w
 10198  0255' 0080'              	movwf	?___flmul^(0+256)
 10199  0256'                    l1604:
 10200  0256' 0008               	return
 10201  0257'                    __end_of___flmul:
 10202                           
 10203                           	psect	text10
 10204  0000'                    __ptext10:	
 10205 ;; *************** function __Umul8_16 *****************
 10206 ;; Defined at:
 10207 ;;		line 4 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/Umul8_16.c"
 10208 ;; Parameters:    Size  Location     Type
 10209 ;;  multiplier      1    wreg     unsigned char 
 10210 ;;  multiplicand    1    0[BANK2 ] unsigned char 
 10211 ;; Auto vars:     Size  Location     Type
 10212 ;;  multiplier      1    8[BANK2 ] unsigned char 
 10213 ;;  word_mpld       2    6[BANK2 ] unsigned int 
 10214 ;;  product         2    4[BANK2 ] unsigned int 
 10215 ;; Return value:  Size  Location     Type
 10216 ;;                  2    0[BANK2 ] unsigned int 
 10217 ;; Registers used:
 10218 ;;		wreg, status,2, status,0
 10219 ;; Tracked objects:
 10220 ;;		On entry : 0/0
 10221 ;;		On exit  : 0/0
 10222 ;;		Unchanged: 0/0
 10223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10224 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 10225 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
 10226 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 10227 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0
 10228 ;;Total ram usage:        9 bytes
 10229 ;; Hardware stack levels used:    1
 10230 ;; Hardware stack levels required when called:    7
 10231 ;; This function calls:
 10232 ;;		Nothing
 10233 ;; This function is called by:
 10234 ;;		___flmul
 10235 ;; This function uses a non-reentrant model
 10236 ;;
 10237                           
 10238                           
 10239                           ;psect for function __Umul8_16
 10240  0000'                    __Umul8_16:
 10241                           
 10242                           ;incstack = 0
 10243                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 10244                           ;__Umul8_16@multiplier stored from wreg
 10245  0000' 0022               	movlb	2	; select bank2
 10246  0001' 0080'              	movwf	__Umul8_16@multiplier^(0+256)
 10247  0002'                    l8068:
 10248  0002' 0180'              	clrf	__Umul8_16@product^(0+256)
 10249  0003' 0180'              	clrf	(__Umul8_16@product+1)^(0+256)
 10250  0004'                    l8070:
 10251  0004' 0800'              	movf	__Umul8_16@multiplicand^(0+256),w
 10252  0005' 0080'              	movwf	??__Umul8_16^(0+256)
 10253  0006' 0181'              	clrf	(??__Umul8_16^(0+256)+1)
 10254  0007' 0800'              	movf	??__Umul8_16^(0+256),w
 10255  0008' 0080'              	movwf	__Umul8_16@word_mpld^(0+256)
 10256  0009' 0800'              	movf	(??__Umul8_16+1)^(0+256),w
 10257  000A' 0080'              	movwf	(__Umul8_16@word_mpld+1)^(0+256)
 10258  000B'                    l8072:
 10259  000B' 1C00'              	btfss	__Umul8_16@multiplier^(0+256),0
 10260  000C' 2800'              	goto	u12531
 10261  000D' 2800'              	goto	u12530
 10262  000E'                    u12531:
 10263  000E' 2800'              	goto	l1623
 10264  000F'                    u12530:
 10265  000F'                    l8074:
 10266  000F' 0800'              	movf	__Umul8_16@word_mpld^(0+256),w
 10267  0010' 0780'              	addwf	__Umul8_16@product^(0+256),f
 10268  0011' 0800'              	movf	(__Umul8_16@word_mpld+1)^(0+256),w
 10269  0012' 3D80'              	addwfc	(__Umul8_16@product+1)^(0+256),f
 10270  0013'                    l1623:
 10271  0013' 3001               	movlw	1
 10272  0014'                    u12545:
 10273  0014' 3580'              	lslf	__Umul8_16@word_mpld^(0+256),f
 10274  0015' 0D80'              	rlf	(__Umul8_16@word_mpld+1)^(0+256),f
 10275  0016' 0B89               	decfsz	9,f
 10276  0017' 2800'              	goto	u12545
 10277  0018' 1003               	clrc
 10278  0019' 0C80'              	rrf	__Umul8_16@multiplier^(0+256),f
 10279  001A'                    l8076:
 10280  001A' 0800'              	movf	__Umul8_16@multiplier^(0+256),w
 10281  001B' 1D03               	btfss	3,2
 10282  001C' 2800'              	goto	u12551
 10283  001D' 2800'              	goto	u12550
 10284  001E'                    u12551:
 10285  001E' 2800'              	goto	l8072
 10286  001F'                    u12550:
 10287  001F'                    l8078:
 10288  001F' 0800'              	movf	(__Umul8_16@product+1)^(0+256),w
 10289  0020' 0080'              	movwf	(?__Umul8_16+1)^(0+256)
 10290  0021' 0800'              	movf	__Umul8_16@product^(0+256),w
 10291  0022' 0080'              	movwf	?__Umul8_16^(0+256)
 10292  0023'                    l1625:
 10293  0023' 0008               	return
 10294  0024'                    __end_of__Umul8_16:
 10295                           
 10296                           	psect	text11
 10297  0000'                    __ptext11:	
 10298 ;; *************** function __tdiv_to_l_ *****************
 10299 ;; Defined at:
 10300 ;;		line 60 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/ftdivl.c"
 10301 ;; Parameters:    Size  Location     Type
 10302 ;;  f1              4    0[BANK2 ] float 
 10303 ;;  f2              4    4[BANK2 ] float 
 10304 ;; Auto vars:     Size  Location     Type
 10305 ;;  quot            4   12[BANK2 ] unsigned long 
 10306 ;;  exp1            1   17[BANK2 ] unsigned char 
 10307 ;;  cntr            1   16[BANK2 ] unsigned char 
 10308 ;; Return value:  Size  Location     Type
 10309 ;;                  4    0[BANK2 ] unsigned long 
 10310 ;; Registers used:
 10311 ;;		wreg, status,2, status,0
 10312 ;; Tracked objects:
 10313 ;;		On entry : 0/0
 10314 ;;		On exit  : 0/0
 10315 ;;		Unchanged: 0/0
 10316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10317 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
 10318 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
 10319 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
 10320 ;;      Totals:         0       0       0      18       0       0       0       0       0       0       0       0       
      +0       0
 10321 ;;Total ram usage:       18 bytes
 10322 ;; Hardware stack levels used:    1
 10323 ;; Hardware stack levels required when called:    7
 10324 ;; This function calls:
 10325 ;;		Nothing
 10326 ;; This function is called by:
 10327 ;;		_sprintf
 10328 ;; This function uses a non-reentrant model
 10329 ;;
 10330                           
 10331                           
 10332                           ;psect for function __tdiv_to_l_
 10333  0000'                    __tdiv_to_l_:
 10334  0000'                    l8616:	
 10335                           ;incstack = 0
 10336                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
 10337                           
 10338  0000' 0022               	movlb	2	; select bank2
 10339  0001' 0800'              	movf	__tdiv_to_l_@f1^(0+256),w
 10340  0002' 0080'              	movwf	??__tdiv_to_l_^(0+256)
 10341  0003' 0800'              	movf	(__tdiv_to_l_@f1+1)^(0+256),w
 10342  0004' 0081'              	movwf	(??__tdiv_to_l_^(0+256)+1)
 10343  0005' 0800'              	movf	(__tdiv_to_l_@f1+2)^(0+256),w
 10344  0006' 0082'              	movwf	(??__tdiv_to_l_^(0+256)+2)
 10345  0007' 1003               	clrc
 10346  0008' 0D01'              	rlf	(??__tdiv_to_l_^(0+256)+1),w
 10347  0009' 0D02'              	rlf	(??__tdiv_to_l_^(0+256)+2),w
 10348  000A' 0080'              	movwf	(??__tdiv_to_l_+3)^(0+256)
 10349  000B' 0800'              	movf	(??__tdiv_to_l_+3)^(0+256),w
 10350  000C' 0080'              	movwf	__tdiv_to_l_@exp1^(0+256)
 10351  000D' 0800'              	movf	__tdiv_to_l_@exp1^(0+256),w
 10352  000E' 1D03               	btfss	3,2
 10353  000F' 2800'              	goto	u13661
 10354  0010' 2800'              	goto	u13660
 10355  0011'                    u13661:
 10356  0011' 2800'              	goto	l8622
 10357  0012'                    u13660:
 10358  0012'                    l8618:
 10359  0012' 3000               	movlw	0
 10360  0013' 0080'              	movwf	(?__tdiv_to_l_+3)^(0+256)
 10361  0014' 3000               	movlw	0
 10362  0015' 0080'              	movwf	(?__tdiv_to_l_+2)^(0+256)
 10363  0016' 3000               	movlw	0
 10364  0017' 0080'              	movwf	(?__tdiv_to_l_+1)^(0+256)
 10365  0018' 3000               	movlw	0
 10366  0019' 0080'              	movwf	?__tdiv_to_l_^(0+256)
 10367  001A' 2800'              	goto	l1398
 10368  001B'                    l8622:
 10369  001B' 0800'              	movf	__tdiv_to_l_@f2^(0+256),w
 10370  001C' 0080'              	movwf	??__tdiv_to_l_^(0+256)
 10371  001D' 0800'              	movf	(__tdiv_to_l_@f2+1)^(0+256),w
 10372  001E' 0081'              	movwf	(??__tdiv_to_l_^(0+256)+1)
 10373  001F' 0800'              	movf	(__tdiv_to_l_@f2+2)^(0+256),w
 10374  0020' 0082'              	movwf	(??__tdiv_to_l_^(0+256)+2)
 10375  0021' 1003               	clrc
 10376  0022' 0D01'              	rlf	(??__tdiv_to_l_^(0+256)+1),w
 10377  0023' 0D02'              	rlf	(??__tdiv_to_l_^(0+256)+2),w
 10378  0024' 0080'              	movwf	(??__tdiv_to_l_+3)^(0+256)
 10379  0025' 0800'              	movf	(??__tdiv_to_l_+3)^(0+256),w
 10380  0026' 0080'              	movwf	__tdiv_to_l_@cntr^(0+256)
 10381  0027' 0800'              	movf	__tdiv_to_l_@cntr^(0+256),w
 10382  0028' 1D03               	btfss	3,2
 10383  0029' 2800'              	goto	u13671
 10384  002A' 2800'              	goto	u13670
 10385  002B'                    u13671:
 10386  002B' 2800'              	goto	l1399
 10387  002C'                    u13670:
 10388  002C' 2800'              	goto	l8618
 10389  002D'                    l1399:
 10390  002D' 1781'              	bsf	(__tdiv_to_l_@f1^(0+256)+1),7
 10391  002E'                    l8628:
 10392  002E' 30FF               	movlw	255
 10393  002F' 0580'              	andwf	__tdiv_to_l_@f1^(0+256),f
 10394  0030' 30FF               	movlw	255
 10395  0031' 0580'              	andwf	(__tdiv_to_l_@f1+1)^(0+256),f
 10396  0032' 3000               	movlw	0
 10397  0033' 0580'              	andwf	(__tdiv_to_l_@f1+2)^(0+256),f
 10398  0034'                    l8630:
 10399  0034' 1781'              	bsf	(__tdiv_to_l_@f2^(0+256)+1),7
 10400  0035' 30FF               	movlw	255
 10401  0036' 0580'              	andwf	__tdiv_to_l_@f2^(0+256),f
 10402  0037' 30FF               	movlw	255
 10403  0038' 0580'              	andwf	(__tdiv_to_l_@f2+1)^(0+256),f
 10404  0039' 3000               	movlw	0
 10405  003A' 0580'              	andwf	(__tdiv_to_l_@f2+2)^(0+256),f
 10406  003B' 3000               	movlw	0
 10407  003C' 0080'              	movwf	(__tdiv_to_l_@quot+3)^(0+256)
 10408  003D' 3000               	movlw	0
 10409  003E' 0080'              	movwf	(__tdiv_to_l_@quot+2)^(0+256)
 10410  003F' 3000               	movlw	0
 10411  0040' 0080'              	movwf	(__tdiv_to_l_@quot+1)^(0+256)
 10412  0041' 3000               	movlw	0
 10413  0042' 0080'              	movwf	__tdiv_to_l_@quot^(0+256)
 10414  0043'                    l8632:
 10415  0043' 307F               	movlw	127
 10416  0044' 0280'              	subwf	__tdiv_to_l_@exp1^(0+256),f
 10417  0045'                    l8634:
 10418  0045' 3098               	movlw	152
 10419  0046' 0700'              	addwf	__tdiv_to_l_@cntr^(0+256),w
 10420  0047' 0080'              	movwf	??__tdiv_to_l_^(0+256)
 10421  0048' 0800'              	movf	??__tdiv_to_l_^(0+256),w
 10422  0049' 0280'              	subwf	__tdiv_to_l_@exp1^(0+256),f
 10423  004A' 3018               	movlw	24
 10424  004B' 0080'              	movwf	??__tdiv_to_l_^(0+256)
 10425  004C' 0800'              	movf	??__tdiv_to_l_^(0+256),w
 10426  004D' 0080'              	movwf	__tdiv_to_l_@cntr^(0+256)
 10427  004E'                    l8636:
 10428  004E' 3001               	movlw	1
 10429  004F'                    u13685:
 10430  004F' 3580'              	lslf	__tdiv_to_l_@quot^(0+256),f
 10431  0050' 0D80'              	rlf	(__tdiv_to_l_@quot+1)^(0+256),f
 10432  0051' 0D80'              	rlf	(__tdiv_to_l_@quot+2)^(0+256),f
 10433  0052' 0D80'              	rlf	(__tdiv_to_l_@quot+3)^(0+256),f
 10434  0053' 0B89               	decfsz	9,f
 10435  0054' 2800'              	goto	u13685
 10436  0055'                    l8638:
 10437  0055' 0800'              	movf	(__tdiv_to_l_@f2+2)^(0+256),w
 10438  0056' 0200'              	subwf	(__tdiv_to_l_@f1+2)^(0+256),w
 10439  0057' 1D03               	skipz
 10440  0058' 2800'              	goto	u13695
 10441  0059' 0800'              	movf	(__tdiv_to_l_@f2+1)^(0+256),w
 10442  005A' 0200'              	subwf	(__tdiv_to_l_@f1+1)^(0+256),w
 10443  005B' 1D03               	skipz
 10444  005C' 2800'              	goto	u13695
 10445  005D' 0800'              	movf	__tdiv_to_l_@f2^(0+256),w
 10446  005E' 0200'              	subwf	__tdiv_to_l_@f1^(0+256),w
 10447  005F'                    u13695:
 10448  005F' 1C03               	skipc
 10449  0060' 2800'              	goto	u13691
 10450  0061' 2800'              	goto	u13690
 10451  0062'                    u13691:
 10452  0062' 2800'              	goto	l8644
 10453  0063'                    u13690:
 10454  0063'                    l8640:
 10455  0063' 0800'              	movf	__tdiv_to_l_@f2^(0+256),w
 10456  0064' 0280'              	subwf	__tdiv_to_l_@f1^(0+256),f
 10457  0065' 0800'              	movf	(__tdiv_to_l_@f2+1)^(0+256),w
 10458  0066' 3B80'              	subwfb	(__tdiv_to_l_@f1+1)^(0+256),f
 10459  0067' 0800'              	movf	(__tdiv_to_l_@f2+2)^(0+256),w
 10460  0068' 3B80'              	subwfb	(__tdiv_to_l_@f1+2)^(0+256),f
 10461  0069'                    l8642:
 10462  0069' 1400'              	bsf	__tdiv_to_l_@quot^(0+256),0
 10463  006A'                    l8644:
 10464  006A' 3001               	movlw	1
 10465  006B'                    u13705:
 10466  006B' 3580'              	lslf	__tdiv_to_l_@f1^(0+256),f
 10467  006C' 0D80'              	rlf	(__tdiv_to_l_@f1+1)^(0+256),f
 10468  006D' 0D80'              	rlf	(__tdiv_to_l_@f1+2)^(0+256),f
 10469  006E' 0B89               	decfsz	9,f
 10470  006F' 2800'              	goto	u13705
 10471  0070'                    l8646:
 10472  0070' 3001               	movlw	1
 10473  0071' 0280'              	subwf	__tdiv_to_l_@cntr^(0+256),f
 10474  0072' 1D03               	btfss	3,2
 10475  0073' 2800'              	goto	u13711
 10476  0074' 2800'              	goto	u13710
 10477  0075'                    u13711:
 10478  0075' 2800'              	goto	l8636
 10479  0076'                    u13710:
 10480  0076'                    l1402:
 10481  0076' 1F80'              	btfss	__tdiv_to_l_@exp1^(0+256),7
 10482  0077' 2800'              	goto	u13721
 10483  0078' 2800'              	goto	u13720
 10484  0079'                    u13721:
 10485  0079' 2800'              	goto	l8656
 10486  007A'                    u13720:
 10487  007A'                    l8648:
 10488  007A' 0800'              	movf	__tdiv_to_l_@exp1^(0+256),w
 10489  007B' 3A80               	xorlw	128
 10490  007C' 3E97               	addlw	151
 10491  007D' 1803               	skipnc
 10492  007E' 2800'              	goto	u13731
 10493  007F' 2800'              	goto	u13730
 10494  0080'                    u13731:
 10495  0080' 2800'              	goto	l8654
 10496  0081'                    u13730:
 10497  0081' 2800'              	goto	l8618
 10498  0082'                    l8654:
 10499  0082' 3001               	movlw	1
 10500  0083'                    u13745:
 10501  0083' 3680'              	lsrf	(__tdiv_to_l_@quot+3)^(0+256),f
 10502  0084' 0C80'              	rrf	(__tdiv_to_l_@quot+2)^(0+256),f
 10503  0085' 0C80'              	rrf	(__tdiv_to_l_@quot+1)^(0+256),f
 10504  0086' 0C80'              	rrf	__tdiv_to_l_@quot^(0+256),f
 10505  0087' 0B89               	decfsz	9,f
 10506  0088' 2800'              	goto	u13745
 10507  0089' 3001               	movlw	1
 10508  008A' 0080'              	movwf	??__tdiv_to_l_^(0+256)
 10509  008B' 0800'              	movf	??__tdiv_to_l_^(0+256),w
 10510  008C' 0780'              	addwf	__tdiv_to_l_@exp1^(0+256),f
 10511  008D' 1D03               	btfss	3,2
 10512  008E' 2800'              	goto	u13751
 10513  008F' 2800'              	goto	u13750
 10514  0090'                    u13751:
 10515  0090' 2800'              	goto	l8654
 10516  0091'                    u13750:
 10517  0091' 2800'              	goto	l8664
 10518  0092'                    l8656:
 10519  0092' 3018               	movlw	24
 10520  0093' 0200'              	subwf	__tdiv_to_l_@exp1^(0+256),w
 10521  0094' 1C03               	skipc
 10522  0095' 2800'              	goto	u13761
 10523  0096' 2800'              	goto	u13760
 10524  0097'                    u13761:
 10525  0097' 2800'              	goto	l1409
 10526  0098'                    u13760:
 10527  0098' 2800'              	goto	l8618
 10528  0099'                    l8662:
 10529  0099' 3001               	movlw	1
 10530  009A'                    u13775:
 10531  009A' 3580'              	lslf	__tdiv_to_l_@quot^(0+256),f
 10532  009B' 0D80'              	rlf	(__tdiv_to_l_@quot+1)^(0+256),f
 10533  009C' 0D80'              	rlf	(__tdiv_to_l_@quot+2)^(0+256),f
 10534  009D' 0D80'              	rlf	(__tdiv_to_l_@quot+3)^(0+256),f
 10535  009E' 0B89               	decfsz	9,f
 10536  009F' 2800'              	goto	u13775
 10537  00A0' 3001               	movlw	1
 10538  00A1' 0280'              	subwf	__tdiv_to_l_@exp1^(0+256),f
 10539  00A2'                    l1409:
 10540  00A2' 0800'              	movf	__tdiv_to_l_@exp1^(0+256),w
 10541  00A3' 1D03               	btfss	3,2
 10542  00A4' 2800'              	goto	u13781
 10543  00A5' 2800'              	goto	u13780
 10544  00A6'                    u13781:
 10545  00A6' 2800'              	goto	l8662
 10546  00A7'                    u13780:
 10547  00A7'                    l8664:
 10548  00A7' 0800'              	movf	(__tdiv_to_l_@quot+3)^(0+256),w
 10549  00A8' 0080'              	movwf	(?__tdiv_to_l_+3)^(0+256)
 10550  00A9' 0800'              	movf	(__tdiv_to_l_@quot+2)^(0+256),w
 10551  00AA' 0080'              	movwf	(?__tdiv_to_l_+2)^(0+256)
 10552  00AB' 0800'              	movf	(__tdiv_to_l_@quot+1)^(0+256),w
 10553  00AC' 0080'              	movwf	(?__tdiv_to_l_+1)^(0+256)
 10554  00AD' 0800'              	movf	__tdiv_to_l_@quot^(0+256),w
 10555  00AE' 0080'              	movwf	?__tdiv_to_l_^(0+256)
 10556  00AF'                    l1398:
 10557  00AF' 0008               	return
 10558  00B0'                    __end_of__tdiv_to_l_:
 10559                           
 10560                           	psect	text12
 10561  0000'                    __ptext12:	
 10562 ;; *************** function __div_to_l_ *****************
 10563 ;; Defined at:
 10564 ;;		line 60 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/fldivl.c"
 10565 ;; Parameters:    Size  Location     Type
 10566 ;;  f1              4    0[BANK2 ] unsigned long 
 10567 ;;  f2              4    4[BANK2 ] unsigned long 
 10568 ;; Auto vars:     Size  Location     Type
 10569 ;;  quot            4    9[BANK2 ] unsigned long 
 10570 ;;  exp1            1   14[BANK2 ] unsigned char 
 10571 ;;  cntr            1   13[BANK2 ] unsigned char 
 10572 ;; Return value:  Size  Location     Type
 10573 ;;                  4    0[BANK2 ] unsigned long 
 10574 ;; Registers used:
 10575 ;;		wreg, status,2, status,0
 10576 ;; Tracked objects:
 10577 ;;		On entry : 0/0
 10578 ;;		On exit  : 0/0
 10579 ;;		Unchanged: 0/0
 10580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10581 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
 10582 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
 10583 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 10584 ;;      Totals:         0       0       0      15       0       0       0       0       0       0       0       0       
      +0       0
 10585 ;;Total ram usage:       15 bytes
 10586 ;; Hardware stack levels used:    1
 10587 ;; Hardware stack levels required when called:    7
 10588 ;; This function calls:
 10589 ;;		Nothing
 10590 ;; This function is called by:
 10591 ;;		_sprintf
 10592 ;; This function uses a non-reentrant model
 10593 ;;
 10594                           
 10595                           
 10596                           ;psect for function __div_to_l_
 10597  0000'                    __div_to_l_:
 10598  0000'                    l8668:	
 10599                           ;incstack = 0
 10600                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
 10601                           
 10602  0000' 1003               	clrc
 10603  0001' 0022               	movlb	2	; select bank2
 10604  0002' 0D00'              	rlf	(__div_to_l_@f1+2)^(0+256),w
 10605  0003' 0D00'              	rlf	(__div_to_l_@f1+3)^(0+256),w
 10606  0004' 0080'              	movwf	??__div_to_l_^(0+256)
 10607  0005' 0800'              	movf	??__div_to_l_^(0+256),w
 10608  0006' 0080'              	movwf	__div_to_l_@exp1^(0+256)
 10609  0007' 0800'              	movf	__div_to_l_@exp1^(0+256),w
 10610  0008' 1D03               	btfss	3,2
 10611  0009' 2800'              	goto	u13791
 10612  000A' 2800'              	goto	u13790
 10613  000B'                    u13791:
 10614  000B' 2800'              	goto	l8674
 10615  000C'                    u13790:
 10616  000C'                    l8670:
 10617  000C' 3000               	movlw	0
 10618  000D' 0080'              	movwf	(?__div_to_l_+3)^(0+256)
 10619  000E' 3000               	movlw	0
 10620  000F' 0080'              	movwf	(?__div_to_l_+2)^(0+256)
 10621  0010' 3000               	movlw	0
 10622  0011' 0080'              	movwf	(?__div_to_l_+1)^(0+256)
 10623  0012' 3000               	movlw	0
 10624  0013' 0080'              	movwf	?__div_to_l_^(0+256)
 10625  0014' 2800'              	goto	l1351
 10626  0015'                    l8674:
 10627  0015' 1003               	clrc
 10628  0016' 0D00'              	rlf	(__div_to_l_@f2+2)^(0+256),w
 10629  0017' 0D00'              	rlf	(__div_to_l_@f2+3)^(0+256),w
 10630  0018' 0080'              	movwf	??__div_to_l_^(0+256)
 10631  0019' 0800'              	movf	??__div_to_l_^(0+256),w
 10632  001A' 0080'              	movwf	__div_to_l_@cntr^(0+256)
 10633  001B' 0800'              	movf	__div_to_l_@cntr^(0+256),w
 10634  001C' 1D03               	btfss	3,2
 10635  001D' 2800'              	goto	u13801
 10636  001E' 2800'              	goto	u13800
 10637  001F'                    u13801:
 10638  001F' 2800'              	goto	l1352
 10639  0020'                    u13800:
 10640  0020' 2800'              	goto	l8670
 10641  0021'                    l1352:
 10642  0021' 1782'              	bsf	(__div_to_l_@f1^(0+256)+2),7
 10643  0022'                    l8680:
 10644  0022' 30FF               	movlw	255
 10645  0023' 0580'              	andwf	__div_to_l_@f1^(0+256),f
 10646  0024' 30FF               	movlw	255
 10647  0025' 0580'              	andwf	(__div_to_l_@f1+1)^(0+256),f
 10648  0026' 30FF               	movlw	255
 10649  0027' 0580'              	andwf	(__div_to_l_@f1+2)^(0+256),f
 10650  0028' 3000               	movlw	0
 10651  0029' 0580'              	andwf	(__div_to_l_@f1+3)^(0+256),f
 10652  002A'                    l8682:
 10653  002A' 1782'              	bsf	(__div_to_l_@f2^(0+256)+2),7
 10654  002B' 30FF               	movlw	255
 10655  002C' 0580'              	andwf	__div_to_l_@f2^(0+256),f
 10656  002D' 30FF               	movlw	255
 10657  002E' 0580'              	andwf	(__div_to_l_@f2+1)^(0+256),f
 10658  002F' 30FF               	movlw	255
 10659  0030' 0580'              	andwf	(__div_to_l_@f2+2)^(0+256),f
 10660  0031' 3000               	movlw	0
 10661  0032' 0580'              	andwf	(__div_to_l_@f2+3)^(0+256),f
 10662  0033' 3000               	movlw	0
 10663  0034' 0080'              	movwf	(__div_to_l_@quot+3)^(0+256)
 10664  0035' 3000               	movlw	0
 10665  0036' 0080'              	movwf	(__div_to_l_@quot+2)^(0+256)
 10666  0037' 3000               	movlw	0
 10667  0038' 0080'              	movwf	(__div_to_l_@quot+1)^(0+256)
 10668  0039' 3000               	movlw	0
 10669  003A' 0080'              	movwf	__div_to_l_@quot^(0+256)
 10670  003B'                    l8684:
 10671  003B' 307F               	movlw	127
 10672  003C' 0280'              	subwf	__div_to_l_@exp1^(0+256),f
 10673  003D'                    l8686:
 10674  003D' 30A0               	movlw	160
 10675  003E' 0700'              	addwf	__div_to_l_@cntr^(0+256),w
 10676  003F' 0080'              	movwf	??__div_to_l_^(0+256)
 10677  0040' 0800'              	movf	??__div_to_l_^(0+256),w
 10678  0041' 0280'              	subwf	__div_to_l_@exp1^(0+256),f
 10679  0042' 3020               	movlw	32
 10680  0043' 0080'              	movwf	??__div_to_l_^(0+256)
 10681  0044' 0800'              	movf	??__div_to_l_^(0+256),w
 10682  0045' 0080'              	movwf	__div_to_l_@cntr^(0+256)
 10683  0046'                    l8688:
 10684  0046' 3001               	movlw	1
 10685  0047'                    u13815:
 10686  0047' 3580'              	lslf	__div_to_l_@quot^(0+256),f
 10687  0048' 0D80'              	rlf	(__div_to_l_@quot+1)^(0+256),f
 10688  0049' 0D80'              	rlf	(__div_to_l_@quot+2)^(0+256),f
 10689  004A' 0D80'              	rlf	(__div_to_l_@quot+3)^(0+256),f
 10690  004B' 0B89               	decfsz	9,f
 10691  004C' 2800'              	goto	u13815
 10692  004D'                    l8690:
 10693  004D' 0800'              	movf	(__div_to_l_@f2+3)^(0+256),w
 10694  004E' 0200'              	subwf	(__div_to_l_@f1+3)^(0+256),w
 10695  004F' 1D03               	skipz
 10696  0050' 2800'              	goto	u13825
 10697  0051' 0800'              	movf	(__div_to_l_@f2+2)^(0+256),w
 10698  0052' 0200'              	subwf	(__div_to_l_@f1+2)^(0+256),w
 10699  0053' 1D03               	skipz
 10700  0054' 2800'              	goto	u13825
 10701  0055' 0800'              	movf	(__div_to_l_@f2+1)^(0+256),w
 10702  0056' 0200'              	subwf	(__div_to_l_@f1+1)^(0+256),w
 10703  0057' 1D03               	skipz
 10704  0058' 2800'              	goto	u13825
 10705  0059' 0800'              	movf	__div_to_l_@f2^(0+256),w
 10706  005A' 0200'              	subwf	__div_to_l_@f1^(0+256),w
 10707  005B'                    u13825:
 10708  005B' 1C03               	skipc
 10709  005C' 2800'              	goto	u13821
 10710  005D' 2800'              	goto	u13820
 10711  005E'                    u13821:
 10712  005E' 2800'              	goto	l8696
 10713  005F'                    u13820:
 10714  005F'                    l8692:
 10715  005F' 0800'              	movf	__div_to_l_@f2^(0+256),w
 10716  0060' 0280'              	subwf	__div_to_l_@f1^(0+256),f
 10717  0061' 0800'              	movf	(__div_to_l_@f2+1)^(0+256),w
 10718  0062' 3B80'              	subwfb	(__div_to_l_@f1+1)^(0+256),f
 10719  0063' 0800'              	movf	(__div_to_l_@f2+2)^(0+256),w
 10720  0064' 3B80'              	subwfb	(__div_to_l_@f1+2)^(0+256),f
 10721  0065' 0800'              	movf	(__div_to_l_@f2+3)^(0+256),w
 10722  0066' 3B80'              	subwfb	(__div_to_l_@f1+3)^(0+256),f
 10723  0067'                    l8694:
 10724  0067' 1400'              	bsf	__div_to_l_@quot^(0+256),0
 10725  0068'                    l8696:
 10726  0068' 3001               	movlw	1
 10727  0069'                    u13835:
 10728  0069' 3580'              	lslf	__div_to_l_@f1^(0+256),f
 10729  006A' 0D80'              	rlf	(__div_to_l_@f1+1)^(0+256),f
 10730  006B' 0D80'              	rlf	(__div_to_l_@f1+2)^(0+256),f
 10731  006C' 0D80'              	rlf	(__div_to_l_@f1+3)^(0+256),f
 10732  006D' 0B89               	decfsz	9,f
 10733  006E' 2800'              	goto	u13835
 10734  006F'                    l8698:
 10735  006F' 3001               	movlw	1
 10736  0070' 0280'              	subwf	__div_to_l_@cntr^(0+256),f
 10737  0071' 1D03               	btfss	3,2
 10738  0072' 2800'              	goto	u13841
 10739  0073' 2800'              	goto	u13840
 10740  0074'                    u13841:
 10741  0074' 2800'              	goto	l8688
 10742  0075'                    u13840:
 10743  0075'                    l1355:
 10744  0075' 1F80'              	btfss	__div_to_l_@exp1^(0+256),7
 10745  0076' 2800'              	goto	u13851
 10746  0077' 2800'              	goto	u13850
 10747  0078'                    u13851:
 10748  0078' 2800'              	goto	l8708
 10749  0079'                    u13850:
 10750  0079'                    l8700:
 10751  0079' 0800'              	movf	__div_to_l_@exp1^(0+256),w
 10752  007A' 3A80               	xorlw	128
 10753  007B' 3E9F               	addlw	159
 10754  007C' 1803               	skipnc
 10755  007D' 2800'              	goto	u13861
 10756  007E' 2800'              	goto	u13860
 10757  007F'                    u13861:
 10758  007F' 2800'              	goto	l8706
 10759  0080'                    u13860:
 10760  0080' 2800'              	goto	l8670
 10761  0081'                    l8706:
 10762  0081' 3001               	movlw	1
 10763  0082'                    u13875:
 10764  0082' 3680'              	lsrf	(__div_to_l_@quot+3)^(0+256),f
 10765  0083' 0C80'              	rrf	(__div_to_l_@quot+2)^(0+256),f
 10766  0084' 0C80'              	rrf	(__div_to_l_@quot+1)^(0+256),f
 10767  0085' 0C80'              	rrf	__div_to_l_@quot^(0+256),f
 10768  0086' 0B89               	decfsz	9,f
 10769  0087' 2800'              	goto	u13875
 10770  0088' 3001               	movlw	1
 10771  0089' 0080'              	movwf	??__div_to_l_^(0+256)
 10772  008A' 0800'              	movf	??__div_to_l_^(0+256),w
 10773  008B' 0780'              	addwf	__div_to_l_@exp1^(0+256),f
 10774  008C' 1D03               	btfss	3,2
 10775  008D' 2800'              	goto	u13881
 10776  008E' 2800'              	goto	u13880
 10777  008F'                    u13881:
 10778  008F' 2800'              	goto	l8706
 10779  0090'                    u13880:
 10780  0090' 2800'              	goto	l8716
 10781  0091'                    l8708:
 10782  0091' 3020               	movlw	32
 10783  0092' 0200'              	subwf	__div_to_l_@exp1^(0+256),w
 10784  0093' 1C03               	skipc
 10785  0094' 2800'              	goto	u13891
 10786  0095' 2800'              	goto	u13890
 10787  0096'                    u13891:
 10788  0096' 2800'              	goto	l1362
 10789  0097'                    u13890:
 10790  0097' 2800'              	goto	l8670
 10791  0098'                    l8714:
 10792  0098' 3001               	movlw	1
 10793  0099'                    u13905:
 10794  0099' 3580'              	lslf	__div_to_l_@quot^(0+256),f
 10795  009A' 0D80'              	rlf	(__div_to_l_@quot+1)^(0+256),f
 10796  009B' 0D80'              	rlf	(__div_to_l_@quot+2)^(0+256),f
 10797  009C' 0D80'              	rlf	(__div_to_l_@quot+3)^(0+256),f
 10798  009D' 0B89               	decfsz	9,f
 10799  009E' 2800'              	goto	u13905
 10800  009F' 3001               	movlw	1
 10801  00A0' 0280'              	subwf	__div_to_l_@exp1^(0+256),f
 10802  00A1'                    l1362:
 10803  00A1' 0800'              	movf	__div_to_l_@exp1^(0+256),w
 10804  00A2' 1D03               	btfss	3,2
 10805  00A3' 2800'              	goto	u13911
 10806  00A4' 2800'              	goto	u13910
 10807  00A5'                    u13911:
 10808  00A5' 2800'              	goto	l8714
 10809  00A6'                    u13910:
 10810  00A6'                    l8716:
 10811  00A6' 0800'              	movf	(__div_to_l_@quot+3)^(0+256),w
 10812  00A7' 0080'              	movwf	(?__div_to_l_+3)^(0+256)
 10813  00A8' 0800'              	movf	(__div_to_l_@quot+2)^(0+256),w
 10814  00A9' 0080'              	movwf	(?__div_to_l_+2)^(0+256)
 10815  00AA' 0800'              	movf	(__div_to_l_@quot+1)^(0+256),w
 10816  00AB' 0080'              	movwf	(?__div_to_l_+1)^(0+256)
 10817  00AC' 0800'              	movf	__div_to_l_@quot^(0+256),w
 10818  00AD' 0080'              	movwf	?__div_to_l_^(0+256)
 10819  00AE'                    l1351:
 10820  00AE' 0008               	return
 10821  00AF'                    __end_of__div_to_l_:
 10822                           
 10823                           	psect	text13
 10824  0000'                    __ptext13:	
 10825 ;; *************** function ___xxtofl *****************
 10826 ;; Defined at:
 10827 ;;		line 10 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/xxtofl.c"
 10828 ;; Parameters:    Size  Location     Type
 10829 ;;  sign            1    wreg     unsigned char 
 10830 ;;  val             4    0[BANK2 ] long 
 10831 ;; Auto vars:     Size  Location     Type
 10832 ;;  sign            1    8[BANK2 ] unsigned char 
 10833 ;;  arg             4   10[BANK2 ] unsigned long 
 10834 ;;  exp             1    9[BANK2 ] unsigned char 
 10835 ;; Return value:  Size  Location     Type
 10836 ;;                  4    0[BANK2 ] unsigned char 
 10837 ;; Registers used:
 10838 ;;		wreg, status,2, status,0
 10839 ;; Tracked objects:
 10840 ;;		On entry : 0/0
 10841 ;;		On exit  : 0/0
 10842 ;;		Unchanged: 0/0
 10843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10844 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
 10845 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
 10846 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
 10847 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0
 10848 ;;Total ram usage:       14 bytes
 10849 ;; Hardware stack levels used:    1
 10850 ;; Hardware stack levels required when called:    7
 10851 ;; This function calls:
 10852 ;;		Nothing
 10853 ;; This function is called by:
 10854 ;;		_sprintf
 10855 ;;		_get_Luminosity
 10856 ;; This function uses a non-reentrant model
 10857 ;;
 10858                           
 10859                           
 10860                           ;psect for function ___xxtofl
 10861  0000'                    ___xxtofl:
 10862                           
 10863                           ;incstack = 0
 10864                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 10865                           ;___xxtofl@sign stored from wreg
 10866  0000' 0022               	movlb	2	; select bank2
 10867  0001' 0080'              	movwf	___xxtofl@sign^(0+256)
 10868  0002'                    l8860:
 10869  0002' 0800'              	movf	___xxtofl@sign^(0+256),w
 10870  0003' 1903               	btfsc	3,2
 10871  0004' 2800'              	goto	u14281
 10872  0005' 2800'              	goto	u14280
 10873  0006'                    u14281:
 10874  0006' 2800'              	goto	l8866
 10875  0007'                    u14280:
 10876  0007'                    l8862:
 10877  0007' 1F80'              	btfss	(___xxtofl@val+3)^(0+256),7
 10878  0008' 2800'              	goto	u14291
 10879  0009' 2800'              	goto	u14290
 10880  000A'                    u14291:
 10881  000A' 2800'              	goto	l8866
 10882  000B'                    u14290:
 10883  000B'                    l8864:
 10884  000B' 0900'              	comf	___xxtofl@val^(0+256),w
 10885  000C' 0080'              	movwf	___xxtofl@arg^(0+256)
 10886  000D' 0901'              	comf	(___xxtofl@val^(0+256)+1),w
 10887  000E' 0080'              	movwf	(___xxtofl@arg+1)^(0+256)
 10888  000F' 0902'              	comf	(___xxtofl@val^(0+256)+2),w
 10889  0010' 0080'              	movwf	(___xxtofl@arg+2)^(0+256)
 10890  0011' 0903'              	comf	(___xxtofl@val^(0+256)+3),w
 10891  0012' 0080'              	movwf	(___xxtofl@arg+3)^(0+256)
 10892  0013' 0A80'              	incf	___xxtofl@arg^(0+256),f
 10893  0014' 1903               	skipnz
 10894  0015' 0A80'              	incf	(___xxtofl@arg+1)^(0+256),f
 10895  0016' 1903               	skipnz
 10896  0017' 0A80'              	incf	(___xxtofl@arg+2)^(0+256),f
 10897  0018' 1903               	skipnz
 10898  0019' 0A80'              	incf	(___xxtofl@arg+3)^(0+256),f
 10899  001A' 2800'              	goto	l1648
 10900  001B'                    l8866:
 10901  001B' 0800'              	movf	(___xxtofl@val+3)^(0+256),w
 10902  001C' 0080'              	movwf	(___xxtofl@arg+3)^(0+256)
 10903  001D' 0800'              	movf	(___xxtofl@val+2)^(0+256),w
 10904  001E' 0080'              	movwf	(___xxtofl@arg+2)^(0+256)
 10905  001F' 0800'              	movf	(___xxtofl@val+1)^(0+256),w
 10906  0020' 0080'              	movwf	(___xxtofl@arg+1)^(0+256)
 10907  0021' 0800'              	movf	___xxtofl@val^(0+256),w
 10908  0022' 0080'              	movwf	___xxtofl@arg^(0+256)
 10909  0023'                    l1648:
 10910  0023' 0800'              	movf	(___xxtofl@val+3)^(0+256),w
 10911  0024' 0400'              	iorwf	(___xxtofl@val+2)^(0+256),w
 10912  0025' 0400'              	iorwf	(___xxtofl@val+1)^(0+256),w
 10913  0026' 0400'              	iorwf	___xxtofl@val^(0+256),w
 10914  0027' 1D03               	skipz
 10915  0028' 2800'              	goto	u14301
 10916  0029' 2800'              	goto	u14300
 10917  002A'                    u14301:
 10918  002A' 2800'              	goto	l8872
 10919  002B'                    u14300:
 10920  002B'                    l8868:
 10921  002B' 3000               	movlw	0
 10922  002C' 0080'              	movwf	(?___xxtofl+3)^(0+256)
 10923  002D' 3000               	movlw	0
 10924  002E' 0080'              	movwf	(?___xxtofl+2)^(0+256)
 10925  002F' 3000               	movlw	0
 10926  0030' 0080'              	movwf	(?___xxtofl+1)^(0+256)
 10927  0031' 3000               	movlw	0
 10928  0032' 0080'              	movwf	?___xxtofl^(0+256)
 10929  0033' 2800'              	goto	l1650
 10930  0034'                    l8872:
 10931  0034' 3096               	movlw	150
 10932  0035' 0080'              	movwf	??___xxtofl^(0+256)
 10933  0036' 0800'              	movf	??___xxtofl^(0+256),w
 10934  0037' 0080'              	movwf	___xxtofl@exp^(0+256)
 10935  0038' 2800'              	goto	l8876
 10936  0039'                    l8874:
 10937  0039' 3001               	movlw	1
 10938  003A' 0080'              	movwf	??___xxtofl^(0+256)
 10939  003B' 0800'              	movf	??___xxtofl^(0+256),w
 10940  003C' 0780'              	addwf	___xxtofl@exp^(0+256),f
 10941  003D' 3001               	movlw	1
 10942  003E'                    u14315:
 10943  003E' 3680'              	lsrf	(___xxtofl@arg+3)^(0+256),f
 10944  003F' 0C80'              	rrf	(___xxtofl@arg+2)^(0+256),f
 10945  0040' 0C80'              	rrf	(___xxtofl@arg+1)^(0+256),f
 10946  0041' 0C80'              	rrf	___xxtofl@arg^(0+256),f
 10947  0042' 0B89               	decfsz	9,f
 10948  0043' 2800'              	goto	u14315
 10949  0044'                    l8876:
 10950  0044' 30FE               	movlw	254
 10951  0045' 0500'              	andwf	(___xxtofl@arg+3)^(0+256),w
 10952  0046' 1D03               	btfss	3,2
 10953  0047' 2800'              	goto	u14321
 10954  0048' 2800'              	goto	u14320
 10955  0049'                    u14321:
 10956  0049' 2800'              	goto	l8874
 10957  004A'                    u14320:
 10958  004A' 2800'              	goto	l1654
 10959  004B'                    l8878:
 10960  004B' 3001               	movlw	1
 10961  004C' 0080'              	movwf	??___xxtofl^(0+256)
 10962  004D' 0800'              	movf	??___xxtofl^(0+256),w
 10963  004E' 0780'              	addwf	___xxtofl@exp^(0+256),f
 10964  004F'                    l8880:
 10965  004F' 3001               	movlw	1
 10966  0050' 0780'              	addwf	___xxtofl@arg^(0+256),f
 10967  0051' 3000               	movlw	0
 10968  0052' 3D80'              	addwfc	(___xxtofl@arg+1)^(0+256),f
 10969  0053' 3000               	movlw	0
 10970  0054' 3D80'              	addwfc	(___xxtofl@arg+2)^(0+256),f
 10971  0055' 3000               	movlw	0
 10972  0056' 3D80'              	addwfc	(___xxtofl@arg+3)^(0+256),f
 10973  0057'                    l8882:
 10974  0057' 3001               	movlw	1
 10975  0058'                    u14335:
 10976  0058' 3680'              	lsrf	(___xxtofl@arg+3)^(0+256),f
 10977  0059' 0C80'              	rrf	(___xxtofl@arg+2)^(0+256),f
 10978  005A' 0C80'              	rrf	(___xxtofl@arg+1)^(0+256),f
 10979  005B' 0C80'              	rrf	___xxtofl@arg^(0+256),f
 10980  005C' 0B89               	decfsz	9,f
 10981  005D' 2800'              	goto	u14335
 10982  005E'                    l1654:
 10983  005E' 30FF               	movlw	255
 10984  005F' 0500'              	andwf	(___xxtofl@arg+3)^(0+256),w
 10985  0060' 1D03               	btfss	3,2
 10986  0061' 2800'              	goto	u14341
 10987  0062' 2800'              	goto	u14340
 10988  0063'                    u14341:
 10989  0063' 2800'              	goto	l8878
 10990  0064'                    u14340:
 10991  0064' 2800'              	goto	l8886
 10992  0065'                    l8884:
 10993  0065' 3001               	movlw	1
 10994  0066' 0280'              	subwf	___xxtofl@exp^(0+256),f
 10995  0067' 3001               	movlw	1
 10996  0068'                    u14355:
 10997  0068' 3580'              	lslf	___xxtofl@arg^(0+256),f
 10998  0069' 0D80'              	rlf	(___xxtofl@arg+1)^(0+256),f
 10999  006A' 0D80'              	rlf	(___xxtofl@arg+2)^(0+256),f
 11000  006B' 0D80'              	rlf	(___xxtofl@arg+3)^(0+256),f
 11001  006C' 0B89               	decfsz	9,f
 11002  006D' 2800'              	goto	u14355
 11003  006E'                    l8886:
 11004  006E' 1B80'              	btfsc	(___xxtofl@arg+2)^(0+256),7
 11005  006F' 2800'              	goto	u14361
 11006  0070' 2800'              	goto	u14360
 11007  0071'                    u14361:
 11008  0071' 2800'              	goto	l1661
 11009  0072'                    u14360:
 11010  0072'                    l8888:
 11011  0072' 3002               	movlw	2
 11012  0073' 0200'              	subwf	___xxtofl@exp^(0+256),w
 11013  0074' 1803               	skipnc
 11014  0075' 2800'              	goto	u14371
 11015  0076' 2800'              	goto	u14370
 11016  0077'                    u14371:
 11017  0077' 2800'              	goto	l8884
 11018  0078'                    u14370:
 11019  0078'                    l1661:
 11020  0078' 1800'              	btfsc	___xxtofl@exp^(0+256),0
 11021  0079' 2800'              	goto	u14381
 11022  007A' 2800'              	goto	u14380
 11023  007B'                    u14381:
 11024  007B' 2800'              	goto	l1662
 11025  007C'                    u14380:
 11026  007C'                    l8890:
 11027  007C' 30FF               	movlw	255
 11028  007D' 0580'              	andwf	___xxtofl@arg^(0+256),f
 11029  007E' 30FF               	movlw	255
 11030  007F' 0580'              	andwf	(___xxtofl@arg+1)^(0+256),f
 11031  0080' 307F               	movlw	127
 11032  0081' 0580'              	andwf	(___xxtofl@arg+2)^(0+256),f
 11033  0082' 30FF               	movlw	255
 11034  0083' 0580'              	andwf	(___xxtofl@arg+3)^(0+256),f
 11035  0084'                    l1662:
 11036  0084' 1003               	clrc
 11037  0085' 0C80'              	rrf	___xxtofl@exp^(0+256),f
 11038  0086'                    l8892:
 11039  0086' 0800'              	movf	___xxtofl@exp^(0+256),w
 11040  0087' 0080'              	movwf	??___xxtofl^(0+256)
 11041  0088' 0181'              	clrf	(??___xxtofl^(0+256)+1)
 11042  0089' 0182'              	clrf	(??___xxtofl^(0+256)+2)
 11043  008A' 0183'              	clrf	(??___xxtofl^(0+256)+3)
 11044  008B' 3018               	movlw	24
 11045  008C'                    u14395:
 11046  008C' 3580'              	lslf	??___xxtofl^(0+256),f
 11047  008D' 0D81'              	rlf	(??___xxtofl^(0+256)+1),f
 11048  008E' 0D82'              	rlf	(??___xxtofl^(0+256)+2),f
 11049  008F' 0D83'              	rlf	(??___xxtofl^(0+256)+3),f
 11050  0090'                    u14390:
 11051  0090' 0B89               	decfsz	9,f
 11052  0091' 2800'              	goto	u14395
 11053  0092' 0800'              	movf	??___xxtofl^(0+256),w
 11054  0093' 0480'              	iorwf	___xxtofl@arg^(0+256),f
 11055  0094' 0800'              	movf	(??___xxtofl+1)^(0+256),w
 11056  0095' 0480'              	iorwf	(___xxtofl@arg+1)^(0+256),f
 11057  0096' 0800'              	movf	(??___xxtofl+2)^(0+256),w
 11058  0097' 0480'              	iorwf	(___xxtofl@arg+2)^(0+256),f
 11059  0098' 0800'              	movf	(??___xxtofl+3)^(0+256),w
 11060  0099' 0480'              	iorwf	(___xxtofl@arg+3)^(0+256),f
 11061  009A'                    l8894:
 11062  009A' 0800'              	movf	___xxtofl@sign^(0+256),w
 11063  009B' 1903               	btfsc	3,2
 11064  009C' 2800'              	goto	u14401
 11065  009D' 2800'              	goto	u14400
 11066  009E'                    u14401:
 11067  009E' 2800'              	goto	l8900
 11068  009F'                    u14400:
 11069  009F'                    l8896:
 11070  009F' 1F80'              	btfss	(___xxtofl@val+3)^(0+256),7
 11071  00A0' 2800'              	goto	u14411
 11072  00A1' 2800'              	goto	u14410
 11073  00A2'                    u14411:
 11074  00A2' 2800'              	goto	l8900
 11075  00A3'                    u14410:
 11076  00A3'                    l8898:
 11077  00A3' 1783'              	bsf	(___xxtofl@arg^(0+256)+3),7
 11078  00A4'                    l8900:
 11079  00A4' 0800'              	movf	(___xxtofl@arg+3)^(0+256),w
 11080  00A5' 0080'              	movwf	(?___xxtofl+3)^(0+256)
 11081  00A6' 0800'              	movf	(___xxtofl@arg+2)^(0+256),w
 11082  00A7' 0080'              	movwf	(?___xxtofl+2)^(0+256)
 11083  00A8' 0800'              	movf	(___xxtofl@arg+1)^(0+256),w
 11084  00A9' 0080'              	movwf	(?___xxtofl+1)^(0+256)
 11085  00AA' 0800'              	movf	___xxtofl@arg^(0+256),w
 11086  00AB' 0080'              	movwf	?___xxtofl^(0+256)
 11087  00AC'                    l1650:
 11088  00AC' 0008               	return
 11089  00AD'                    __end_of___xxtofl:
 11090                           
 11091                           	psect	text14
 11092  0000'                    __ptext14:	
 11093 ;; *************** function ___wmul *****************
 11094 ;; Defined at:
 11095 ;;		line 15 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/Umul16.c"
 11096 ;; Parameters:    Size  Location     Type
 11097 ;;  multiplier      2    0[BANK2 ] unsigned int 
 11098 ;;  multiplicand    2    2[BANK2 ] unsigned int 
 11099 ;; Auto vars:     Size  Location     Type
 11100 ;;  product         2    4[BANK2 ] unsigned int 
 11101 ;; Return value:  Size  Location     Type
 11102 ;;                  2    0[BANK2 ] unsigned int 
 11103 ;; Registers used:
 11104 ;;		wreg, status,2, status,0
 11105 ;; Tracked objects:
 11106 ;;		On entry : 0/0
 11107 ;;		On exit  : 0/0
 11108 ;;		Unchanged: 0/0
 11109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11110 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
 11111 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 11112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11113 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
 11114 ;;Total ram usage:        6 bytes
 11115 ;; Hardware stack levels used:    1
 11116 ;; Hardware stack levels required when called:    7
 11117 ;; This function calls:
 11118 ;;		Nothing
 11119 ;; This function is called by:
 11120 ;;		_sprintf
 11121 ;; This function uses a non-reentrant model
 11122 ;;
 11123                           
 11124                           
 11125                           ;psect for function ___wmul
 11126  0000'                    ___wmul:
 11127  0000'                    l8720:	
 11128                           ;incstack = 0
 11129                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11130                           
 11131  0000' 0022               	movlb	2	; select bank2
 11132  0001' 0180'              	clrf	___wmul@product^(0+256)
 11133  0002' 0180'              	clrf	(___wmul@product+1)^(0+256)
 11134  0003'                    l8722:
 11135  0003' 1C00'              	btfss	___wmul@multiplier^(0+256),0
 11136  0004' 2800'              	goto	u13921
 11137  0005' 2800'              	goto	u13920
 11138  0006'                    u13921:
 11139  0006' 2800'              	goto	l1181
 11140  0007'                    u13920:
 11141  0007'                    l8724:
 11142  0007' 0800'              	movf	___wmul@multiplicand^(0+256),w
 11143  0008' 0780'              	addwf	___wmul@product^(0+256),f
 11144  0009' 0800'              	movf	(___wmul@multiplicand+1)^(0+256),w
 11145  000A' 3D80'              	addwfc	(___wmul@product+1)^(0+256),f
 11146  000B'                    l1181:
 11147  000B' 3001               	movlw	1
 11148  000C'                    u13935:
 11149  000C' 3580'              	lslf	___wmul@multiplicand^(0+256),f
 11150  000D' 0D80'              	rlf	(___wmul@multiplicand+1)^(0+256),f
 11151  000E' 0B89               	decfsz	9,f
 11152  000F' 2800'              	goto	u13935
 11153  0010'                    l8726:
 11154  0010' 3001               	movlw	1
 11155  0011'                    u13945:
 11156  0011' 3680'              	lsrf	(___wmul@multiplier+1)^(0+256),f
 11157  0012' 0C80'              	rrf	___wmul@multiplier^(0+256),f
 11158  0013' 0B89               	decfsz	9,f
 11159  0014' 2800'              	goto	u13945
 11160  0015'                    l8728:
 11161  0015' 0800'              	movf	___wmul@multiplier^(0+256),w
 11162  0016' 0400'              	iorwf	(___wmul@multiplier+1)^(0+256),w
 11163  0017' 1D03               	btfss	3,2
 11164  0018' 2800'              	goto	u13951
 11165  0019' 2800'              	goto	u13950
 11166  001A'                    u13951:
 11167  001A' 2800'              	goto	l8722
 11168  001B'                    u13950:
 11169  001B'                    l8730:
 11170  001B' 0800'              	movf	(___wmul@product+1)^(0+256),w
 11171  001C' 0080'              	movwf	(?___wmul+1)^(0+256)
 11172  001D' 0800'              	movf	___wmul@product^(0+256),w
 11173  001E' 0080'              	movwf	?___wmul^(0+256)
 11174  001F'                    l1183:
 11175  001F' 0008               	return
 11176  0020'                    __end_of___wmul:
 11177                           
 11178                           	psect	text15
 11179  0000'                    __ptext15:	
 11180 ;; *************** function ___llmod *****************
 11181 ;; Defined at:
 11182 ;;		line 5 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/llmod.c"
 11183 ;; Parameters:    Size  Location     Type
 11184 ;;  divisor         4   14[BANK2 ] unsigned long 
 11185 ;;  dividend        4   18[BANK2 ] unsigned long 
 11186 ;; Auto vars:     Size  Location     Type
 11187 ;;  counter         1   23[BANK2 ] unsigned char 
 11188 ;; Return value:  Size  Location     Type
 11189 ;;                  4   14[BANK2 ] unsigned long 
 11190 ;; Registers used:
 11191 ;;		wreg, status,2, status,0
 11192 ;; Tracked objects:
 11193 ;;		On entry : 0/0
 11194 ;;		On exit  : 0/0
 11195 ;;		Unchanged: 0/0
 11196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11197 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
 11198 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 11199 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 11200 ;;      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0
 11201 ;;Total ram usage:       10 bytes
 11202 ;; Hardware stack levels used:    1
 11203 ;; Hardware stack levels required when called:    7
 11204 ;; This function calls:
 11205 ;;		Nothing
 11206 ;; This function is called by:
 11207 ;;		_sprintf
 11208 ;; This function uses a non-reentrant model
 11209 ;;
 11210                           
 11211                           
 11212                           ;psect for function ___llmod
 11213  0000'                    ___llmod:
 11214  0000'                    l8834:	
 11215                           ;incstack = 0
 11216                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 11217                           
 11218  0000' 0022               	movlb	2	; select bank2
 11219  0001' 0800'              	movf	(___llmod@divisor+3)^(0+256),w
 11220  0002' 0400'              	iorwf	(___llmod@divisor+2)^(0+256),w
 11221  0003' 0400'              	iorwf	(___llmod@divisor+1)^(0+256),w
 11222  0004' 0400'              	iorwf	___llmod@divisor^(0+256),w
 11223  0005' 1903               	skipnz
 11224  0006' 2800'              	goto	u14221
 11225  0007' 2800'              	goto	u14220
 11226  0008'                    u14221:
 11227  0008' 2800'              	goto	l8850
 11228  0009'                    u14220:
 11229  0009'                    l8836:
 11230  0009' 0180'              	clrf	___llmod@counter^(0+256)
 11231  000A' 0A80'              	incf	___llmod@counter^(0+256),f
 11232  000B' 2800'              	goto	l8840
 11233  000C'                    l8838:
 11234  000C' 3001               	movlw	1
 11235  000D'                    u14235:
 11236  000D' 3580'              	lslf	___llmod@divisor^(0+256),f
 11237  000E' 0D80'              	rlf	(___llmod@divisor+1)^(0+256),f
 11238  000F' 0D80'              	rlf	(___llmod@divisor+2)^(0+256),f
 11239  0010' 0D80'              	rlf	(___llmod@divisor+3)^(0+256),f
 11240  0011' 0B89               	decfsz	9,f
 11241  0012' 2800'              	goto	u14235
 11242  0013' 3001               	movlw	1
 11243  0014' 0080'              	movwf	??___llmod^(0+256)
 11244  0015' 0800'              	movf	??___llmod^(0+256),w
 11245  0016' 0780'              	addwf	___llmod@counter^(0+256),f
 11246  0017'                    l8840:
 11247  0017' 1F80'              	btfss	(___llmod@divisor+3)^(0+256),7
 11248  0018' 2800'              	goto	u14241
 11249  0019' 2800'              	goto	u14240
 11250  001A'                    u14241:
 11251  001A' 2800'              	goto	l8838
 11252  001B'                    u14240:
 11253  001B'                    l8842:
 11254  001B' 0800'              	movf	(___llmod@divisor+3)^(0+256),w
 11255  001C' 0200'              	subwf	(___llmod@dividend+3)^(0+256),w
 11256  001D' 1D03               	skipz
 11257  001E' 2800'              	goto	u14255
 11258  001F' 0800'              	movf	(___llmod@divisor+2)^(0+256),w
 11259  0020' 0200'              	subwf	(___llmod@dividend+2)^(0+256),w
 11260  0021' 1D03               	skipz
 11261  0022' 2800'              	goto	u14255
 11262  0023' 0800'              	movf	(___llmod@divisor+1)^(0+256),w
 11263  0024' 0200'              	subwf	(___llmod@dividend+1)^(0+256),w
 11264  0025' 1D03               	skipz
 11265  0026' 2800'              	goto	u14255
 11266  0027' 0800'              	movf	___llmod@divisor^(0+256),w
 11267  0028' 0200'              	subwf	___llmod@dividend^(0+256),w
 11268  0029'                    u14255:
 11269  0029' 1C03               	skipc
 11270  002A' 2800'              	goto	u14251
 11271  002B' 2800'              	goto	u14250
 11272  002C'                    u14251:
 11273  002C' 2800'              	goto	l8846
 11274  002D'                    u14250:
 11275  002D'                    l8844:
 11276  002D' 0800'              	movf	___llmod@divisor^(0+256),w
 11277  002E' 0280'              	subwf	___llmod@dividend^(0+256),f
 11278  002F' 0800'              	movf	(___llmod@divisor+1)^(0+256),w
 11279  0030' 3B80'              	subwfb	(___llmod@dividend+1)^(0+256),f
 11280  0031' 0800'              	movf	(___llmod@divisor+2)^(0+256),w
 11281  0032' 3B80'              	subwfb	(___llmod@dividend+2)^(0+256),f
 11282  0033' 0800'              	movf	(___llmod@divisor+3)^(0+256),w
 11283  0034' 3B80'              	subwfb	(___llmod@dividend+3)^(0+256),f
 11284  0035'                    l8846:
 11285  0035' 3001               	movlw	1
 11286  0036'                    u14265:
 11287  0036' 3680'              	lsrf	(___llmod@divisor+3)^(0+256),f
 11288  0037' 0C80'              	rrf	(___llmod@divisor+2)^(0+256),f
 11289  0038' 0C80'              	rrf	(___llmod@divisor+1)^(0+256),f
 11290  0039' 0C80'              	rrf	___llmod@divisor^(0+256),f
 11291  003A' 0B89               	decfsz	9,f
 11292  003B' 2800'              	goto	u14265
 11293  003C'                    l8848:
 11294  003C' 3001               	movlw	1
 11295  003D' 0280'              	subwf	___llmod@counter^(0+256),f
 11296  003E' 1D03               	btfss	3,2
 11297  003F' 2800'              	goto	u14271
 11298  0040' 2800'              	goto	u14270
 11299  0041'                    u14271:
 11300  0041' 2800'              	goto	l8842
 11301  0042'                    u14270:
 11302  0042'                    l8850:
 11303  0042' 0800'              	movf	(___llmod@dividend+3)^(0+256),w
 11304  0043' 0080'              	movwf	(?___llmod+3)^(0+256)
 11305  0044' 0800'              	movf	(___llmod@dividend+2)^(0+256),w
 11306  0045' 0080'              	movwf	(?___llmod+2)^(0+256)
 11307  0046' 0800'              	movf	(___llmod@dividend+1)^(0+256),w
 11308  0047' 0080'              	movwf	(?___llmod+1)^(0+256)
 11309  0048' 0800'              	movf	___llmod@dividend^(0+256),w
 11310  0049' 0080'              	movwf	?___llmod^(0+256)
 11311  004A'                    l1437:
 11312  004A' 0008               	return
 11313  004B'                    __end_of___llmod:
 11314                           
 11315                           	psect	text16
 11316  0000'                    __ptext16:	
 11317 ;; *************** function ___lldiv *****************
 11318 ;; Defined at:
 11319 ;;		line 5 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/__lldiv.c"
 11320 ;; Parameters:    Size  Location     Type
 11321 ;;  divisor         4    0[BANK2 ] unsigned long 
 11322 ;;  dividend        4    4[BANK2 ] unsigned long 
 11323 ;; Auto vars:     Size  Location     Type
 11324 ;;  quotient        4    9[BANK2 ] unsigned long 
 11325 ;;  counter         1   13[BANK2 ] unsigned char 
 11326 ;; Return value:  Size  Location     Type
 11327 ;;                  4    0[BANK2 ] unsigned long 
 11328 ;; Registers used:
 11329 ;;		wreg, status,2, status,0
 11330 ;; Tracked objects:
 11331 ;;		On entry : 0/0
 11332 ;;		On exit  : 0/0
 11333 ;;		Unchanged: 0/0
 11334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11335 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
 11336 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
 11337 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 11338 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0
 11339 ;;Total ram usage:       14 bytes
 11340 ;; Hardware stack levels used:    1
 11341 ;; Hardware stack levels required when called:    7
 11342 ;; This function calls:
 11343 ;;		Nothing
 11344 ;; This function is called by:
 11345 ;;		_sprintf
 11346 ;; This function uses a non-reentrant model
 11347 ;;
 11348                           
 11349                           
 11350                           ;psect for function ___lldiv
 11351  0000'                    ___lldiv:
 11352  0000'                    l8734:	
 11353                           ;incstack = 0
 11354                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 11355                           
 11356  0000' 3000               	movlw	0
 11357  0001' 0022               	movlb	2	; select bank2
 11358  0002' 0080'              	movwf	(___lldiv@quotient+3)^(0+256)
 11359  0003' 3000               	movlw	0
 11360  0004' 0080'              	movwf	(___lldiv@quotient+2)^(0+256)
 11361  0005' 3000               	movlw	0
 11362  0006' 0080'              	movwf	(___lldiv@quotient+1)^(0+256)
 11363  0007' 3000               	movlw	0
 11364  0008' 0080'              	movwf	___lldiv@quotient^(0+256)
 11365  0009' 0800'              	movf	(___lldiv@divisor+3)^(0+256),w
 11366  000A' 0400'              	iorwf	(___lldiv@divisor+2)^(0+256),w
 11367  000B' 0400'              	iorwf	(___lldiv@divisor+1)^(0+256),w
 11368  000C' 0400'              	iorwf	___lldiv@divisor^(0+256),w
 11369  000D' 1903               	skipnz
 11370  000E' 2800'              	goto	u13961
 11371  000F' 2800'              	goto	u13960
 11372  0010'                    u13961:
 11373  0010' 2800'              	goto	l8754
 11374  0011'                    u13960:
 11375  0011'                    l8736:
 11376  0011' 0180'              	clrf	___lldiv@counter^(0+256)
 11377  0012' 0A80'              	incf	___lldiv@counter^(0+256),f
 11378  0013' 2800'              	goto	l8740
 11379  0014'                    l8738:
 11380  0014' 3001               	movlw	1
 11381  0015'                    u13975:
 11382  0015' 3580'              	lslf	___lldiv@divisor^(0+256),f
 11383  0016' 0D80'              	rlf	(___lldiv@divisor+1)^(0+256),f
 11384  0017' 0D80'              	rlf	(___lldiv@divisor+2)^(0+256),f
 11385  0018' 0D80'              	rlf	(___lldiv@divisor+3)^(0+256),f
 11386  0019' 0B89               	decfsz	9,f
 11387  001A' 2800'              	goto	u13975
 11388  001B' 3001               	movlw	1
 11389  001C' 0080'              	movwf	??___lldiv^(0+256)
 11390  001D' 0800'              	movf	??___lldiv^(0+256),w
 11391  001E' 0780'              	addwf	___lldiv@counter^(0+256),f
 11392  001F'                    l8740:
 11393  001F' 1F80'              	btfss	(___lldiv@divisor+3)^(0+256),7
 11394  0020' 2800'              	goto	u13981
 11395  0021' 2800'              	goto	u13980
 11396  0022'                    u13981:
 11397  0022' 2800'              	goto	l8738
 11398  0023'                    u13980:
 11399  0023'                    l8742:
 11400  0023' 3001               	movlw	1
 11401  0024'                    u13995:
 11402  0024' 3580'              	lslf	___lldiv@quotient^(0+256),f
 11403  0025' 0D80'              	rlf	(___lldiv@quotient+1)^(0+256),f
 11404  0026' 0D80'              	rlf	(___lldiv@quotient+2)^(0+256),f
 11405  0027' 0D80'              	rlf	(___lldiv@quotient+3)^(0+256),f
 11406  0028' 0B89               	decfsz	9,f
 11407  0029' 2800'              	goto	u13995
 11408  002A'                    l8744:
 11409  002A' 0800'              	movf	(___lldiv@divisor+3)^(0+256),w
 11410  002B' 0200'              	subwf	(___lldiv@dividend+3)^(0+256),w
 11411  002C' 1D03               	skipz
 11412  002D' 2800'              	goto	u14005
 11413  002E' 0800'              	movf	(___lldiv@divisor+2)^(0+256),w
 11414  002F' 0200'              	subwf	(___lldiv@dividend+2)^(0+256),w
 11415  0030' 1D03               	skipz
 11416  0031' 2800'              	goto	u14005
 11417  0032' 0800'              	movf	(___lldiv@divisor+1)^(0+256),w
 11418  0033' 0200'              	subwf	(___lldiv@dividend+1)^(0+256),w
 11419  0034' 1D03               	skipz
 11420  0035' 2800'              	goto	u14005
 11421  0036' 0800'              	movf	___lldiv@divisor^(0+256),w
 11422  0037' 0200'              	subwf	___lldiv@dividend^(0+256),w
 11423  0038'                    u14005:
 11424  0038' 1C03               	skipc
 11425  0039' 2800'              	goto	u14001
 11426  003A' 2800'              	goto	u14000
 11427  003B'                    u14001:
 11428  003B' 2800'              	goto	l8750
 11429  003C'                    u14000:
 11430  003C'                    l8746:
 11431  003C' 0800'              	movf	___lldiv@divisor^(0+256),w
 11432  003D' 0280'              	subwf	___lldiv@dividend^(0+256),f
 11433  003E' 0800'              	movf	(___lldiv@divisor+1)^(0+256),w
 11434  003F' 3B80'              	subwfb	(___lldiv@dividend+1)^(0+256),f
 11435  0040' 0800'              	movf	(___lldiv@divisor+2)^(0+256),w
 11436  0041' 3B80'              	subwfb	(___lldiv@dividend+2)^(0+256),f
 11437  0042' 0800'              	movf	(___lldiv@divisor+3)^(0+256),w
 11438  0043' 3B80'              	subwfb	(___lldiv@dividend+3)^(0+256),f
 11439  0044'                    l8748:
 11440  0044' 1400'              	bsf	___lldiv@quotient^(0+256),0
 11441  0045'                    l8750:
 11442  0045' 3001               	movlw	1
 11443  0046'                    u14015:
 11444  0046' 3680'              	lsrf	(___lldiv@divisor+3)^(0+256),f
 11445  0047' 0C80'              	rrf	(___lldiv@divisor+2)^(0+256),f
 11446  0048' 0C80'              	rrf	(___lldiv@divisor+1)^(0+256),f
 11447  0049' 0C80'              	rrf	___lldiv@divisor^(0+256),f
 11448  004A' 0B89               	decfsz	9,f
 11449  004B' 2800'              	goto	u14015
 11450  004C'                    l8752:
 11451  004C' 3001               	movlw	1
 11452  004D' 0280'              	subwf	___lldiv@counter^(0+256),f
 11453  004E' 1D03               	btfss	3,2
 11454  004F' 2800'              	goto	u14021
 11455  0050' 2800'              	goto	u14020
 11456  0051'                    u14021:
 11457  0051' 2800'              	goto	l8742
 11458  0052'                    u14020:
 11459  0052'                    l8754:
 11460  0052' 0800'              	movf	(___lldiv@quotient+3)^(0+256),w
 11461  0053' 0080'              	movwf	(?___lldiv+3)^(0+256)
 11462  0054' 0800'              	movf	(___lldiv@quotient+2)^(0+256),w
 11463  0055' 0080'              	movwf	(?___lldiv+2)^(0+256)
 11464  0056' 0800'              	movf	(___lldiv@quotient+1)^(0+256),w
 11465  0057' 0080'              	movwf	(?___lldiv+1)^(0+256)
 11466  0058' 0800'              	movf	___lldiv@quotient^(0+256),w
 11467  0059' 0080'              	movwf	?___lldiv^(0+256)
 11468  005A'                    l1217:
 11469  005A' 0008               	return
 11470  005B'                    __end_of___lldiv:
 11471                           
 11472                           	psect	text17
 11473  0000'                    __ptext17:	
 11474 ;; *************** function ___fltol *****************
 11475 ;; Defined at:
 11476 ;;		line 43 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/fltol.c"
 11477 ;; Parameters:    Size  Location     Type
 11478 ;;  f1              4   63[BANK2 ] unsigned long 
 11479 ;; Auto vars:     Size  Location     Type
 11480 ;;  exp1            1   73[BANK2 ] unsigned char 
 11481 ;;  sign1           1   72[BANK2 ] unsigned char 
 11482 ;; Return value:  Size  Location     Type
 11483 ;;                  4   63[BANK2 ] long 
 11484 ;; Registers used:
 11485 ;;		wreg, status,2, status,0
 11486 ;; Tracked objects:
 11487 ;;		On entry : 0/0
 11488 ;;		On exit  : 0/0
 11489 ;;		Unchanged: 0/0
 11490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11491 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
 11492 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 11493 ;;      Temps:          0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
 11494 ;;      Totals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0
 11495 ;;Total ram usage:       11 bytes
 11496 ;; Hardware stack levels used:    1
 11497 ;; Hardware stack levels required when called:    7
 11498 ;; This function calls:
 11499 ;;		Nothing
 11500 ;; This function is called by:
 11501 ;;		_sprintf
 11502 ;;		_get_Luminosity
 11503 ;; This function uses a non-reentrant model
 11504 ;;
 11505                           
 11506                           
 11507                           ;psect for function ___fltol
 11508  0000'                    ___fltol:
 11509  0000'                    l8798:	
 11510                           ;incstack = 0
 11511                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 11512                           
 11513  0000' 1003               	clrc
 11514  0001' 0022               	movlb	2	; select bank2
 11515  0002' 0D00'              	rlf	(___fltol@f1+2)^(0+256),w
 11516  0003' 0D00'              	rlf	(___fltol@f1+3)^(0+256),w
 11517  0004' 0080'              	movwf	??___fltol^(0+256)
 11518  0005' 0800'              	movf	??___fltol^(0+256),w
 11519  0006' 0080'              	movwf	___fltol@exp1^(0+256)
 11520  0007' 0800'              	movf	___fltol@exp1^(0+256),w
 11521  0008' 1D03               	btfss	3,2
 11522  0009' 2800'              	goto	u14121
 11523  000A' 2800'              	goto	u14120
 11524  000B'                    u14121:
 11525  000B' 2800'              	goto	l8804
 11526  000C'                    u14120:
 11527  000C'                    l8800:
 11528  000C' 3000               	movlw	0
 11529  000D' 0080'              	movwf	(?___fltol+3)^(0+256)
 11530  000E' 3000               	movlw	0
 11531  000F' 0080'              	movwf	(?___fltol+2)^(0+256)
 11532  0010' 3000               	movlw	0
 11533  0011' 0080'              	movwf	(?___fltol+1)^(0+256)
 11534  0012' 3000               	movlw	0
 11535  0013' 0080'              	movwf	?___fltol^(0+256)
 11536  0014' 2800'              	goto	l1384
 11537  0015'                    l8804:
 11538  0015' 0800'              	movf	___fltol@f1^(0+256),w
 11539  0016' 0080'              	movwf	??___fltol^(0+256)
 11540  0017' 0800'              	movf	(___fltol@f1+1)^(0+256),w
 11541  0018' 0081'              	movwf	(??___fltol^(0+256)+1)
 11542  0019' 0800'              	movf	(___fltol@f1+2)^(0+256),w
 11543  001A' 0082'              	movwf	(??___fltol^(0+256)+2)
 11544  001B' 0800'              	movf	(___fltol@f1+3)^(0+256),w
 11545  001C' 0083'              	movwf	(??___fltol^(0+256)+3)
 11546  001D' 301F               	movlw	31
 11547  001E'                    u14135:
 11548  001E' 3683'              	lsrf	(??___fltol^(0+256)+3),f
 11549  001F' 0C82'              	rrf	(??___fltol^(0+256)+2),f
 11550  0020' 0C81'              	rrf	(??___fltol^(0+256)+1),f
 11551  0021' 0C80'              	rrf	??___fltol^(0+256),f
 11552  0022'                    u14130:
 11553  0022' 0B89               	decfsz	9,f
 11554  0023' 2800'              	goto	u14135
 11555  0024' 0800'              	movf	??___fltol^(0+256),w
 11556  0025' 0080'              	movwf	(??___fltol+4)^(0+256)
 11557  0026' 0800'              	movf	(??___fltol+4)^(0+256),w
 11558  0027' 0080'              	movwf	___fltol@sign1^(0+256)
 11559  0028'                    l8806:
 11560  0028' 1782'              	bsf	(___fltol@f1^(0+256)+2),7
 11561  0029'                    l8808:
 11562  0029' 30FF               	movlw	255
 11563  002A' 0580'              	andwf	___fltol@f1^(0+256),f
 11564  002B' 30FF               	movlw	255
 11565  002C' 0580'              	andwf	(___fltol@f1+1)^(0+256),f
 11566  002D' 30FF               	movlw	255
 11567  002E' 0580'              	andwf	(___fltol@f1+2)^(0+256),f
 11568  002F' 3000               	movlw	0
 11569  0030' 0580'              	andwf	(___fltol@f1+3)^(0+256),f
 11570  0031'                    l8810:
 11571  0031' 3096               	movlw	150
 11572  0032' 0280'              	subwf	___fltol@exp1^(0+256),f
 11573  0033'                    l8812:
 11574  0033' 1F80'              	btfss	___fltol@exp1^(0+256),7
 11575  0034' 2800'              	goto	u14141
 11576  0035' 2800'              	goto	u14140
 11577  0036'                    u14141:
 11578  0036' 2800'              	goto	l8822
 11579  0037'                    u14140:
 11580  0037'                    l8814:
 11581  0037' 0800'              	movf	___fltol@exp1^(0+256),w
 11582  0038' 3A80               	xorlw	128
 11583  0039' 3E97               	addlw	151
 11584  003A' 1803               	skipnc
 11585  003B' 2800'              	goto	u14151
 11586  003C' 2800'              	goto	u14150
 11587  003D'                    u14151:
 11588  003D' 2800'              	goto	l8820
 11589  003E'                    u14150:
 11590  003E' 2800'              	goto	l8800
 11591  003F'                    l8820:
 11592  003F' 3001               	movlw	1
 11593  0040'                    u14165:
 11594  0040' 3680'              	lsrf	(___fltol@f1+3)^(0+256),f
 11595  0041' 0C80'              	rrf	(___fltol@f1+2)^(0+256),f
 11596  0042' 0C80'              	rrf	(___fltol@f1+1)^(0+256),f
 11597  0043' 0C80'              	rrf	___fltol@f1^(0+256),f
 11598  0044' 0B89               	decfsz	9,f
 11599  0045' 2800'              	goto	u14165
 11600  0046' 3001               	movlw	1
 11601  0047' 0080'              	movwf	??___fltol^(0+256)
 11602  0048' 0800'              	movf	??___fltol^(0+256),w
 11603  0049' 0780'              	addwf	___fltol@exp1^(0+256),f
 11604  004A' 1D03               	btfss	3,2
 11605  004B' 2800'              	goto	u14171
 11606  004C' 2800'              	goto	u14170
 11607  004D'                    u14171:
 11608  004D' 2800'              	goto	l8820
 11609  004E'                    u14170:
 11610  004E' 2800'              	goto	l8830
 11611  004F'                    l8822:
 11612  004F' 3020               	movlw	32
 11613  0050' 0200'              	subwf	___fltol@exp1^(0+256),w
 11614  0051' 1C03               	skipc
 11615  0052' 2800'              	goto	u14181
 11616  0053' 2800'              	goto	u14180
 11617  0054'                    u14181:
 11618  0054' 2800'              	goto	l1391
 11619  0055'                    u14180:
 11620  0055' 2800'              	goto	l8800
 11621  0056'                    l8828:
 11622  0056' 3001               	movlw	1
 11623  0057'                    u14195:
 11624  0057' 3580'              	lslf	___fltol@f1^(0+256),f
 11625  0058' 0D80'              	rlf	(___fltol@f1+1)^(0+256),f
 11626  0059' 0D80'              	rlf	(___fltol@f1+2)^(0+256),f
 11627  005A' 0D80'              	rlf	(___fltol@f1+3)^(0+256),f
 11628  005B' 0B89               	decfsz	9,f
 11629  005C' 2800'              	goto	u14195
 11630  005D' 3001               	movlw	1
 11631  005E' 0280'              	subwf	___fltol@exp1^(0+256),f
 11632  005F'                    l1391:
 11633  005F' 0800'              	movf	___fltol@exp1^(0+256),w
 11634  0060' 1D03               	btfss	3,2
 11635  0061' 2800'              	goto	u14201
 11636  0062' 2800'              	goto	u14200
 11637  0063'                    u14201:
 11638  0063' 2800'              	goto	l8828
 11639  0064'                    u14200:
 11640  0064'                    l8830:
 11641  0064' 0800'              	movf	___fltol@sign1^(0+256),w
 11642  0065' 1903               	btfsc	3,2
 11643  0066' 2800'              	goto	u14211
 11644  0067' 2800'              	goto	u14210
 11645  0068'                    u14211:
 11646  0068' 2800'              	goto	l1394
 11647  0069'                    u14210:
 11648  0069'                    l8832:
 11649  0069' 0980'              	comf	___fltol@f1^(0+256),f
 11650  006A' 0980'              	comf	(___fltol@f1+1)^(0+256),f
 11651  006B' 0980'              	comf	(___fltol@f1+2)^(0+256),f
 11652  006C' 0980'              	comf	(___fltol@f1+3)^(0+256),f
 11653  006D' 0A80'              	incf	___fltol@f1^(0+256),f
 11654  006E' 1903               	skipnz
 11655  006F' 0A80'              	incf	(___fltol@f1+1)^(0+256),f
 11656  0070' 1903               	skipnz
 11657  0071' 0A80'              	incf	(___fltol@f1+2)^(0+256),f
 11658  0072' 1903               	skipnz
 11659  0073' 0A80'              	incf	(___fltol@f1+3)^(0+256),f
 11660  0074'                    l1394:
 11661  0074'                    l1384:
 11662  0074' 0008               	return
 11663  0075'                    __end_of___fltol:
 11664                           
 11665                           	psect	text18
 11666  0000'                    __ptext18:	
 11667 ;; *************** function ___flsub *****************
 11668 ;; Defined at:
 11669 ;;		line 242 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/sprcadd.c"
 11670 ;; Parameters:    Size  Location     Type
 11671 ;;  a               4    4[BANK3 ] long 
 11672 ;;  b               4    8[BANK3 ] long 
 11673 ;; Auto vars:     Size  Location     Type
 11674 ;;		None
 11675 ;; Return value:  Size  Location     Type
 11676 ;;                  4    4[BANK3 ] long 
 11677 ;; Registers used:
 11678 ;;		wreg, status,2, status,0, pclath, cstack
 11679 ;; Tracked objects:
 11680 ;;		On entry : 0/0
 11681 ;;		On exit  : 0/0
 11682 ;;		Unchanged: 0/0
 11683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11684 ;;      Params:         0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0
 11685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11687 ;;      Totals:         0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0
 11688 ;;Total ram usage:        8 bytes
 11689 ;; Hardware stack levels used:    1
 11690 ;; Hardware stack levels required when called:    8
 11691 ;; This function calls:
 11692 ;;		___fladd
 11693 ;; This function is called by:
 11694 ;;		_sprintf
 11695 ;; This function uses a non-reentrant model
 11696 ;;
 11697                           
 11698                           
 11699                           ;psect for function ___flsub
 11700  0000'                    ___flsub:
 11701  0000'                    l8854:	
 11702                           ;incstack = 0
 11703                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 11704                           
 11705  0000' 3080               	movlw	128
 11706  0001' 0023               	movlb	3	; select bank3
 11707  0002' 0680'              	xorwf	(___flsub@a+3)^(0+384),f
 11708  0003'                    l8856:
 11709  0003' 0800'              	movf	(___flsub@b+3)^(0+384),w
 11710  0004' 0022               	movlb	2	; select bank2
 11711  0005' 0080'              	movwf	(___fladd@b+3)^(0+256)
 11712  0006' 0023               	movlb	3	; select bank3
 11713  0007' 0800'              	movf	(___flsub@b+2)^(0+384),w
 11714  0008' 0022               	movlb	2	; select bank2
 11715  0009' 0080'              	movwf	(___fladd@b+2)^(0+256)
 11716  000A' 0023               	movlb	3	; select bank3
 11717  000B' 0800'              	movf	(___flsub@b+1)^(0+384),w
 11718  000C' 0022               	movlb	2	; select bank2
 11719  000D' 0080'              	movwf	(___fladd@b+1)^(0+256)
 11720  000E' 0023               	movlb	3	; select bank3
 11721  000F' 0800'              	movf	___flsub@b^(0+384),w
 11722  0010' 0022               	movlb	2	; select bank2
 11723  0011' 0080'              	movwf	___fladd@b^(0+256)
 11724  0012' 0023               	movlb	3	; select bank3
 11725  0013' 0800'              	movf	(___flsub@a+3)^(0+384),w
 11726  0014' 0022               	movlb	2	; select bank2
 11727  0015' 0080'              	movwf	(___fladd@a+3)^(0+256)
 11728  0016' 0023               	movlb	3	; select bank3
 11729  0017' 0800'              	movf	(___flsub@a+2)^(0+384),w
 11730  0018' 0022               	movlb	2	; select bank2
 11731  0019' 0080'              	movwf	(___fladd@a+2)^(0+256)
 11732  001A' 0023               	movlb	3	; select bank3
 11733  001B' 0800'              	movf	(___flsub@a+1)^(0+384),w
 11734  001C' 0022               	movlb	2	; select bank2
 11735  001D' 0080'              	movwf	(___fladd@a+1)^(0+256)
 11736  001E' 0023               	movlb	3	; select bank3
 11737  001F' 0800'              	movf	___flsub@a^(0+384),w
 11738  0020' 0022               	movlb	2	; select bank2
 11739  0021' 0080'              	movwf	___fladd@a^(0+256)
 11740  0022' 3180' 2000' 3180'  	fcall	___fladd
 11741  0025' 0022               	movlb	2	; select bank2
 11742  0026' 0800'              	movf	(?___fladd+3)^(0+256),w
 11743  0027' 0023               	movlb	3	; select bank3
 11744  0028' 0080'              	movwf	(?___flsub+3)^(0+384)
 11745  0029' 0022               	movlb	2	; select bank2
 11746  002A' 0800'              	movf	(?___fladd+2)^(0+256),w
 11747  002B' 0023               	movlb	3	; select bank3
 11748  002C' 0080'              	movwf	(?___flsub+2)^(0+384)
 11749  002D' 0022               	movlb	2	; select bank2
 11750  002E' 0800'              	movf	(?___fladd+1)^(0+256),w
 11751  002F' 0023               	movlb	3	; select bank3
 11752  0030' 0080'              	movwf	(?___flsub+1)^(0+384)
 11753  0031' 0022               	movlb	2	; select bank2
 11754  0032' 0800'              	movf	?___fladd^(0+256),w
 11755  0033' 0023               	movlb	3	; select bank3
 11756  0034' 0080'              	movwf	?___flsub^(0+384)
 11757  0035'                    l1554:
 11758  0035' 0008               	return
 11759  0036'                    __end_of___flsub:
 11760                           
 11761                           	psect	text19
 11762  0000'                    __ptext19:	
 11763 ;; *************** function ___fladd *****************
 11764 ;; Defined at:
 11765 ;;		line 10 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/sprcadd.c"
 11766 ;; Parameters:    Size  Location     Type
 11767 ;;  b               4   61[BANK2 ] long 
 11768 ;;  a               4   65[BANK2 ] long 
 11769 ;; Auto vars:     Size  Location     Type
 11770 ;;  grs             1    3[BANK3 ] unsigned char 
 11771 ;;  bexp            1    2[BANK3 ] unsigned char 
 11772 ;;  aexp            1    1[BANK3 ] unsigned char 
 11773 ;;  signs           1    0[BANK3 ] unsigned char 
 11774 ;; Return value:  Size  Location     Type
 11775 ;;                  4   61[BANK2 ] unsigned char 
 11776 ;; Registers used:
 11777 ;;		wreg, status,2, status,0
 11778 ;; Tracked objects:
 11779 ;;		On entry : 0/0
 11780 ;;		On exit  : 0/0
 11781 ;;		Unchanged: 0/0
 11782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11783 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
 11784 ;;      Locals:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
 11785 ;;      Temps:          0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
 11786 ;;      Totals:         0       0       0      16       4       0       0       0       0       0       0       0       
      +0       0
 11787 ;;Total ram usage:       20 bytes
 11788 ;; Hardware stack levels used:    1
 11789 ;; Hardware stack levels required when called:    7
 11790 ;; This function calls:
 11791 ;;		Nothing
 11792 ;; This function is called by:
 11793 ;;		_sprintf
 11794 ;;		___flsub
 11795 ;; This function uses a non-reentrant model
 11796 ;;
 11797                           
 11798                           
 11799                           ;psect for function ___fladd
 11800  0000'                    ___fladd:
 11801  0000'                    l8212:	
 11802                           ;incstack = 0
 11803                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 11804                           
 11805  0000' 0022               	movlb	2	; select bank2
 11806  0001' 0803'              	movf	(___fladd@b^(0+256)+3),w
 11807  0002' 3980               	andlw	128
 11808  0003' 0080'              	movwf	??___fladd^(0+256)
 11809  0004' 0800'              	movf	??___fladd^(0+256),w
 11810  0005' 0023               	movlb	3	; select bank3
 11811  0006' 0080'              	movwf	___fladd@signs^(0+384)
 11812  0007'                    l8214:
 11813  0007' 0022               	movlb	2	; select bank2
 11814  0008' 3503'              	lslf	(___fladd@b^(0+256)+3),w
 11815  0009' 0080'              	movwf	??___fladd^(0+256)
 11816  000A' 0800'              	movf	??___fladd^(0+256),w
 11817  000B' 0023               	movlb	3	; select bank3
 11818  000C' 0080'              	movwf	___fladd@bexp^(0+384)
 11819  000D'                    l8216:
 11820  000D' 0022               	movlb	2	; select bank2
 11821  000E' 1F82'              	btfss	(___fladd@b^(0+256)+2),7
 11822  000F' 2800'              	goto	u12881
 11823  0010' 2800'              	goto	u12880
 11824  0011'                    u12881:
 11825  0011' 2800'              	goto	l8220
 11826  0012'                    u12880:
 11827  0012'                    l8218:
 11828  0012' 0023               	movlb	3	; select bank3
 11829  0013' 1400'              	bsf	___fladd@bexp^(0+384),0
 11830  0014'                    l8220:
 11831  0014' 0023               	movlb	3	; select bank3
 11832  0015' 0800'              	movf	___fladd@bexp^(0+384),w
 11833  0016' 1903               	btfsc	3,2
 11834  0017' 2800'              	goto	u12891
 11835  0018' 2800'              	goto	u12890
 11836  0019'                    u12891:
 11837  0019' 2800'              	goto	l8230
 11838  001A'                    u12890:
 11839  001A'                    l8222:
 11840  001A' 0A00'              	incf	___fladd@bexp^(0+384),w
 11841  001B' 1D03               	btfss	3,2
 11842  001C' 2800'              	goto	u12901
 11843  001D' 2800'              	goto	u12900
 11844  001E'                    u12901:
 11845  001E' 2800'              	goto	l8226
 11846  001F'                    u12900:
 11847  001F'                    l8224:
 11848  001F' 3000               	movlw	0
 11849  0020' 0022               	movlb	2	; select bank2
 11850  0021' 0080'              	movwf	(___fladd@b+3)^(0+256)
 11851  0022' 3000               	movlw	0
 11852  0023' 0080'              	movwf	(___fladd@b+2)^(0+256)
 11853  0024' 3000               	movlw	0
 11854  0025' 0080'              	movwf	(___fladd@b+1)^(0+256)
 11855  0026' 3000               	movlw	0
 11856  0027' 0080'              	movwf	___fladd@b^(0+256)
 11857  0028'                    l8226:
 11858  0028' 0022               	movlb	2	; select bank2
 11859  0029' 1782'              	bsf	(___fladd@b^(0+256)+2),7
 11860  002A'                    l8228:
 11861  002A' 0183'              	clrf	(___fladd@b^(0+256)+3)
 11862  002B' 2800'              	goto	l8232
 11863  002C'                    l8230:
 11864  002C' 3000               	movlw	0
 11865  002D' 0022               	movlb	2	; select bank2
 11866  002E' 0080'              	movwf	(___fladd@b+3)^(0+256)
 11867  002F' 3000               	movlw	0
 11868  0030' 0080'              	movwf	(___fladd@b+2)^(0+256)
 11869  0031' 3000               	movlw	0
 11870  0032' 0080'              	movwf	(___fladd@b+1)^(0+256)
 11871  0033' 3000               	movlw	0
 11872  0034' 0080'              	movwf	___fladd@b^(0+256)
 11873  0035'                    l8232:
 11874  0035' 0803'              	movf	(___fladd@a^(0+256)+3),w
 11875  0036' 3980               	andlw	128
 11876  0037' 0080'              	movwf	??___fladd^(0+256)
 11877  0038' 0800'              	movf	??___fladd^(0+256),w
 11878  0039' 0023               	movlb	3	; select bank3
 11879  003A' 0080'              	movwf	___fladd@aexp^(0+384)
 11880  003B'                    l8234:
 11881  003B' 0800'              	movf	___fladd@aexp^(0+384),w
 11882  003C' 0600'              	xorwf	___fladd@signs^(0+384),w
 11883  003D' 1903               	skipnz
 11884  003E' 2800'              	goto	u12911
 11885  003F' 2800'              	goto	u12910
 11886  0040'                    u12911:
 11887  0040' 2800'              	goto	l8238
 11888  0041'                    u12910:
 11889  0041'                    l8236:
 11890  0041' 1700'              	bsf	___fladd@signs^(0+384),6
 11891  0042'                    l8238:
 11892  0042' 0022               	movlb	2	; select bank2
 11893  0043' 3503'              	lslf	(___fladd@a^(0+256)+3),w
 11894  0044' 0080'              	movwf	??___fladd^(0+256)
 11895  0045' 0800'              	movf	??___fladd^(0+256),w
 11896  0046' 0023               	movlb	3	; select bank3
 11897  0047' 0080'              	movwf	___fladd@aexp^(0+384)
 11898  0048'                    l8240:
 11899  0048' 0022               	movlb	2	; select bank2
 11900  0049' 1F82'              	btfss	(___fladd@a^(0+256)+2),7
 11901  004A' 2800'              	goto	u12921
 11902  004B' 2800'              	goto	u12920
 11903  004C'                    u12921:
 11904  004C' 2800'              	goto	l8244
 11905  004D'                    u12920:
 11906  004D'                    l8242:
 11907  004D' 0023               	movlb	3	; select bank3
 11908  004E' 1400'              	bsf	___fladd@aexp^(0+384),0
 11909  004F'                    l8244:
 11910  004F' 0023               	movlb	3	; select bank3
 11911  0050' 0800'              	movf	___fladd@aexp^(0+384),w
 11912  0051' 1903               	btfsc	3,2
 11913  0052' 2800'              	goto	u12931
 11914  0053' 2800'              	goto	u12930
 11915  0054'                    u12931:
 11916  0054' 2800'              	goto	l8254
 11917  0055'                    u12930:
 11918  0055'                    l8246:
 11919  0055' 0A00'              	incf	___fladd@aexp^(0+384),w
 11920  0056' 1D03               	btfss	3,2
 11921  0057' 2800'              	goto	u12941
 11922  0058' 2800'              	goto	u12940
 11923  0059'                    u12941:
 11924  0059' 2800'              	goto	l8250
 11925  005A'                    u12940:
 11926  005A'                    l8248:
 11927  005A' 3000               	movlw	0
 11928  005B' 0022               	movlb	2	; select bank2
 11929  005C' 0080'              	movwf	(___fladd@a+3)^(0+256)
 11930  005D' 3000               	movlw	0
 11931  005E' 0080'              	movwf	(___fladd@a+2)^(0+256)
 11932  005F' 3000               	movlw	0
 11933  0060' 0080'              	movwf	(___fladd@a+1)^(0+256)
 11934  0061' 3000               	movlw	0
 11935  0062' 0080'              	movwf	___fladd@a^(0+256)
 11936  0063'                    l8250:
 11937  0063' 0022               	movlb	2	; select bank2
 11938  0064' 1782'              	bsf	(___fladd@a^(0+256)+2),7
 11939  0065'                    l8252:
 11940  0065' 0183'              	clrf	(___fladd@a^(0+256)+3)
 11941  0066' 2800'              	goto	l1508
 11942  0067'                    l8254:
 11943  0067' 3000               	movlw	0
 11944  0068' 0022               	movlb	2	; select bank2
 11945  0069' 0080'              	movwf	(___fladd@a+3)^(0+256)
 11946  006A' 3000               	movlw	0
 11947  006B' 0080'              	movwf	(___fladd@a+2)^(0+256)
 11948  006C' 3000               	movlw	0
 11949  006D' 0080'              	movwf	(___fladd@a+1)^(0+256)
 11950  006E' 3000               	movlw	0
 11951  006F' 0080'              	movwf	___fladd@a^(0+256)
 11952  0070'                    l1508:
 11953  0070' 0023               	movlb	3	; select bank3
 11954  0071' 0800'              	movf	___fladd@bexp^(0+384),w
 11955  0072' 0200'              	subwf	___fladd@aexp^(0+384),w
 11956  0073' 1803               	skipnc
 11957  0074' 2800'              	goto	u12951
 11958  0075' 2800'              	goto	u12950
 11959  0076'                    u12951:
 11960  0076' 2800'              	goto	l8290
 11961  0077'                    u12950:
 11962  0077'                    l8256:
 11963  0077' 1F00'              	btfss	___fladd@signs^(0+384),6
 11964  0078' 2800'              	goto	u12961
 11965  0079' 2800'              	goto	u12960
 11966  007A'                    u12961:
 11967  007A' 2800'              	goto	l8260
 11968  007B'                    u12960:
 11969  007B'                    l8258:
 11970  007B' 3080               	movlw	128
 11971  007C' 0022               	movlb	2	; select bank2
 11972  007D' 0080'              	movwf	??___fladd^(0+256)
 11973  007E' 0800'              	movf	??___fladd^(0+256),w
 11974  007F' 0023               	movlb	3	; select bank3
 11975  0080' 0680'              	xorwf	___fladd@signs^(0+384),f
 11976  0081'                    l8260:
 11977  0081' 0800'              	movf	___fladd@bexp^(0+384),w
 11978  0082' 0022               	movlb	2	; select bank2
 11979  0083' 0080'              	movwf	??___fladd^(0+256)
 11980  0084' 0800'              	movf	??___fladd^(0+256),w
 11981  0085' 0023               	movlb	3	; select bank3
 11982  0086' 0080'              	movwf	___fladd@grs^(0+384)
 11983  0087'                    l8262:
 11984  0087' 0800'              	movf	___fladd@aexp^(0+384),w
 11985  0088' 0022               	movlb	2	; select bank2
 11986  0089' 0080'              	movwf	??___fladd^(0+256)
 11987  008A' 0800'              	movf	??___fladd^(0+256),w
 11988  008B' 0023               	movlb	3	; select bank3
 11989  008C' 0080'              	movwf	___fladd@bexp^(0+384)
 11990  008D'                    l8264:
 11991  008D' 0800'              	movf	___fladd@grs^(0+384),w
 11992  008E' 0022               	movlb	2	; select bank2
 11993  008F' 0080'              	movwf	??___fladd^(0+256)
 11994  0090' 0800'              	movf	??___fladd^(0+256),w
 11995  0091' 0023               	movlb	3	; select bank3
 11996  0092' 0080'              	movwf	___fladd@aexp^(0+384)
 11997  0093'                    l8266:
 11998  0093' 0022               	movlb	2	; select bank2
 11999  0094' 0800'              	movf	___fladd@b^(0+256),w
 12000  0095' 0080'              	movwf	??___fladd^(0+256)
 12001  0096' 0800'              	movf	??___fladd^(0+256),w
 12002  0097' 0023               	movlb	3	; select bank3
 12003  0098' 0080'              	movwf	___fladd@grs^(0+384)
 12004  0099'                    l8268:
 12005  0099' 0022               	movlb	2	; select bank2
 12006  009A' 0800'              	movf	___fladd@a^(0+256),w
 12007  009B' 0080'              	movwf	??___fladd^(0+256)
 12008  009C' 0800'              	movf	??___fladd^(0+256),w
 12009  009D' 0080'              	movwf	___fladd@b^(0+256)
 12010  009E'                    l8270:
 12011  009E' 0023               	movlb	3	; select bank3
 12012  009F' 0800'              	movf	___fladd@grs^(0+384),w
 12013  00A0' 0022               	movlb	2	; select bank2
 12014  00A1' 0080'              	movwf	??___fladd^(0+256)
 12015  00A2' 0800'              	movf	??___fladd^(0+256),w
 12016  00A3' 0080'              	movwf	___fladd@a^(0+256)
 12017  00A4'                    l8272:
 12018  00A4' 0801'              	movf	(___fladd@b^(0+256)+1),w
 12019  00A5' 0080'              	movwf	??___fladd^(0+256)
 12020  00A6' 0800'              	movf	??___fladd^(0+256),w
 12021  00A7' 0023               	movlb	3	; select bank3
 12022  00A8' 0080'              	movwf	___fladd@grs^(0+384)
 12023  00A9'                    l8274:
 12024  00A9' 0022               	movlb	2	; select bank2
 12025  00AA' 0801'              	movf	(___fladd@a^(0+256)+1),w
 12026  00AB' 0080'              	movwf	??___fladd^(0+256)
 12027  00AC' 0800'              	movf	??___fladd^(0+256),w
 12028  00AD' 0081'              	movwf	(___fladd@b^(0+256)+1)
 12029  00AE'                    l8276:
 12030  00AE' 0023               	movlb	3	; select bank3
 12031  00AF' 0800'              	movf	___fladd@grs^(0+384),w
 12032  00B0' 0022               	movlb	2	; select bank2
 12033  00B1' 0080'              	movwf	??___fladd^(0+256)
 12034  00B2' 0800'              	movf	??___fladd^(0+256),w
 12035  00B3' 0081'              	movwf	(___fladd@a^(0+256)+1)
 12036  00B4'                    l8278:
 12037  00B4' 0802'              	movf	(___fladd@b^(0+256)+2),w
 12038  00B5' 0080'              	movwf	??___fladd^(0+256)
 12039  00B6' 0800'              	movf	??___fladd^(0+256),w
 12040  00B7' 0023               	movlb	3	; select bank3
 12041  00B8' 0080'              	movwf	___fladd@grs^(0+384)
 12042  00B9'                    l8280:
 12043  00B9' 0022               	movlb	2	; select bank2
 12044  00BA' 0802'              	movf	(___fladd@a^(0+256)+2),w
 12045  00BB' 0080'              	movwf	??___fladd^(0+256)
 12046  00BC' 0800'              	movf	??___fladd^(0+256),w
 12047  00BD' 0082'              	movwf	(___fladd@b^(0+256)+2)
 12048  00BE'                    l8282:
 12049  00BE' 0023               	movlb	3	; select bank3
 12050  00BF' 0800'              	movf	___fladd@grs^(0+384),w
 12051  00C0' 0022               	movlb	2	; select bank2
 12052  00C1' 0080'              	movwf	??___fladd^(0+256)
 12053  00C2' 0800'              	movf	??___fladd^(0+256),w
 12054  00C3' 0082'              	movwf	(___fladd@a^(0+256)+2)
 12055  00C4'                    l8284:
 12056  00C4' 0803'              	movf	(___fladd@b^(0+256)+3),w
 12057  00C5' 0080'              	movwf	??___fladd^(0+256)
 12058  00C6' 0800'              	movf	??___fladd^(0+256),w
 12059  00C7' 0023               	movlb	3	; select bank3
 12060  00C8' 0080'              	movwf	___fladd@grs^(0+384)
 12061  00C9'                    l8286:
 12062  00C9' 0022               	movlb	2	; select bank2
 12063  00CA' 0803'              	movf	(___fladd@a^(0+256)+3),w
 12064  00CB' 0080'              	movwf	??___fladd^(0+256)
 12065  00CC' 0800'              	movf	??___fladd^(0+256),w
 12066  00CD' 0083'              	movwf	(___fladd@b^(0+256)+3)
 12067  00CE'                    l8288:
 12068  00CE' 0023               	movlb	3	; select bank3
 12069  00CF' 0800'              	movf	___fladd@grs^(0+384),w
 12070  00D0' 0022               	movlb	2	; select bank2
 12071  00D1' 0080'              	movwf	??___fladd^(0+256)
 12072  00D2' 0800'              	movf	??___fladd^(0+256),w
 12073  00D3' 0083'              	movwf	(___fladd@a^(0+256)+3)
 12074  00D4'                    l8290:
 12075  00D4' 0023               	movlb	3	; select bank3
 12076  00D5' 0180'              	clrf	___fladd@grs^(0+384)
 12077  00D6'                    l8292:
 12078  00D6' 0800'              	movf	___fladd@aexp^(0+384),w
 12079  00D7' 0022               	movlb	2	; select bank2
 12080  00D8' 0080'              	movwf	??___fladd^(0+256)
 12081  00D9' 0181'              	clrf	(??___fladd^(0+256)+1)
 12082  00DA' 0800'              	movf	(??___fladd+1)^(0+256),w
 12083  00DB' 0081'              	movwf	((??___fladd+2)^(0+256)+1)
 12084  00DC' 0023               	movlb	3	; select bank3
 12085  00DD' 0800'              	movf	___fladd@bexp^(0+384),w
 12086  00DE' 0022               	movlb	2	; select bank2
 12087  00DF' 0200'              	subwf	??___fladd^(0+256),w
 12088  00E0' 0080'              	movwf	(??___fladd+2)^(0+256)
 12089  00E1' 1C03               	skipc
 12090  00E2' 0381'              	decf	((??___fladd+2)^(0+256)+1),f
 12091  00E3' 0800'              	movf	(??___fladd+3)^(0+256),w
 12092  00E4' 3A80               	xorlw	128
 12093  00E5' 0080'              	movwf	(??___fladd+4)^(0+256)
 12094  00E6' 3080               	movlw	128
 12095  00E7' 0200'              	subwf	(??___fladd+4)^(0+256),w
 12096  00E8' 1D03               	skipz
 12097  00E9' 2800'              	goto	u12975
 12098  00EA' 301A               	movlw	26
 12099  00EB' 0200'              	subwf	(??___fladd+2)^(0+256),w
 12100  00EC'                    u12975:
 12101  00EC' 1C03               	skipc
 12102  00ED' 2800'              	goto	u12971
 12103  00EE' 2800'              	goto	u12970
 12104  00EF'                    u12971:
 12105  00EF' 2800'              	goto	l8308
 12106  00F0'                    u12970:
 12107  00F0'                    l8294:
 12108  00F0' 0022               	movlb	2	; select bank2
 12109  00F1' 0800'              	movf	(___fladd@b+3)^(0+256),w
 12110  00F2' 0400'              	iorwf	(___fladd@b+2)^(0+256),w
 12111  00F3' 0400'              	iorwf	(___fladd@b+1)^(0+256),w
 12112  00F4' 0400'              	iorwf	___fladd@b^(0+256),w
 12113  00F5' 1D03               	skipz
 12114  00F6' 2800'              	goto	u12981
 12115  00F7' 2800'              	goto	u12980
 12116  00F8'                    u12981:
 12117  00F8' 3001               	movlw	1
 12118  00F9' 2800'              	goto	u12990
 12119  00FA'                    u12980:
 12120  00FA' 3000               	movlw	0
 12121  00FB'                    u12990:
 12122  00FB' 0080'              	movwf	??___fladd^(0+256)
 12123  00FC' 0800'              	movf	??___fladd^(0+256),w
 12124  00FD' 0023               	movlb	3	; select bank3
 12125  00FE' 0080'              	movwf	___fladd@grs^(0+384)
 12126  00FF' 3000               	movlw	0
 12127  0100' 0022               	movlb	2	; select bank2
 12128  0101' 0080'              	movwf	(___fladd@b+3)^(0+256)
 12129  0102' 3000               	movlw	0
 12130  0103' 0080'              	movwf	(___fladd@b+2)^(0+256)
 12131  0104' 3000               	movlw	0
 12132  0105' 0080'              	movwf	(___fladd@b+1)^(0+256)
 12133  0106' 3000               	movlw	0
 12134  0107' 0080'              	movwf	___fladd@b^(0+256)
 12135  0108' 0023               	movlb	3	; select bank3
 12136  0109' 0800'              	movf	___fladd@aexp^(0+384),w
 12137  010A' 0022               	movlb	2	; select bank2
 12138  010B' 0080'              	movwf	??___fladd^(0+256)
 12139  010C' 0800'              	movf	??___fladd^(0+256),w
 12140  010D' 0023               	movlb	3	; select bank3
 12141  010E' 0080'              	movwf	___fladd@bexp^(0+384)
 12142  010F' 2800'              	goto	l1512
 12143  0110'                    l1514:
 12144  0110' 1C00'              	btfss	___fladd@grs^(0+384),0
 12145  0111' 2800'              	goto	u13001
 12146  0112' 2800'              	goto	u13000
 12147  0113'                    u13001:
 12148  0113' 2800'              	goto	l8298
 12149  0114'                    u13000:
 12150  0114'                    l8296:
 12151  0114' 3600'              	lsrf	___fladd@grs^(0+384),w
 12152  0115' 3801               	iorlw	1
 12153  0116' 0022               	movlb	2	; select bank2
 12154  0117' 0080'              	movwf	??___fladd^(0+256)
 12155  0118' 0800'              	movf	??___fladd^(0+256),w
 12156  0119' 0023               	movlb	3	; select bank3
 12157  011A' 0080'              	movwf	___fladd@grs^(0+384)
 12158  011B' 2800'              	goto	l8300
 12159  011C'                    l8298:
 12160  011C' 1003               	clrc
 12161  011D' 0C80'              	rrf	___fladd@grs^(0+384),f
 12162  011E'                    l8300:
 12163  011E' 0022               	movlb	2	; select bank2
 12164  011F' 1C00'              	btfss	___fladd@b^(0+256),0
 12165  0120' 2800'              	goto	u13011
 12166  0121' 2800'              	goto	u13010
 12167  0122'                    u13011:
 12168  0122' 2800'              	goto	l8304
 12169  0123'                    u13010:
 12170  0123'                    l8302:
 12171  0123' 0023               	movlb	3	; select bank3
 12172  0124' 1780'              	bsf	___fladd@grs^(0+384),7
 12173  0125'                    l8304:
 12174  0125' 3001               	movlw	1
 12175  0126' 0022               	movlb	2	; select bank2
 12176  0127' 0080'              	movwf	??___fladd^(0+256)
 12177  0128'                    u13025:
 12178  0128' 3780'              	asrf	(___fladd@b+3)^(0+256),f
 12179  0129' 0C80'              	rrf	(___fladd@b+2)^(0+256),f
 12180  012A' 0C80'              	rrf	(___fladd@b+1)^(0+256),f
 12181  012B' 0C80'              	rrf	___fladd@b^(0+256),f
 12182  012C' 0B80'              	decfsz	(??___fladd^(0+256))& (0+127),f
 12183  012D' 2800'              	goto	u13025
 12184  012E'                    l8306:
 12185  012E' 3001               	movlw	1
 12186  012F' 0080'              	movwf	??___fladd^(0+256)
 12187  0130' 0800'              	movf	??___fladd^(0+256),w
 12188  0131' 0023               	movlb	3	; select bank3
 12189  0132' 0780'              	addwf	___fladd@bexp^(0+384),f
 12190  0133'                    l8308:
 12191  0133' 0023               	movlb	3	; select bank3
 12192  0134' 0800'              	movf	___fladd@aexp^(0+384),w
 12193  0135' 0200'              	subwf	___fladd@bexp^(0+384),w
 12194  0136' 1C03               	skipc
 12195  0137' 2800'              	goto	u13031
 12196  0138' 2800'              	goto	u13030
 12197  0139'                    u13031:
 12198  0139' 2800'              	goto	l1514
 12199  013A'                    u13030:
 12200  013A'                    l1512:
 12201  013A' 1B00'              	btfsc	___fladd@signs^(0+384),6
 12202  013B' 2800'              	goto	u13041
 12203  013C' 2800'              	goto	u13040
 12204  013D'                    u13041:
 12205  013D' 2800'              	goto	l8334
 12206  013E'                    u13040:
 12207  013E'                    l8310:
 12208  013E' 0800'              	movf	___fladd@bexp^(0+384),w
 12209  013F' 1D03               	btfss	3,2
 12210  0140' 2800'              	goto	u13051
 12211  0141' 2800'              	goto	u13050
 12212  0142'                    u13051:
 12213  0142' 2800'              	goto	l8316
 12214  0143'                    u13050:
 12215  0143'                    l8312:
 12216  0143' 3000               	movlw	0
 12217  0144' 0022               	movlb	2	; select bank2
 12218  0145' 0080'              	movwf	(?___fladd+3)^(0+256)
 12219  0146' 3000               	movlw	0
 12220  0147' 0080'              	movwf	(?___fladd+2)^(0+256)
 12221  0148' 3000               	movlw	0
 12222  0149' 0080'              	movwf	(?___fladd+1)^(0+256)
 12223  014A' 3000               	movlw	0
 12224  014B' 0080'              	movwf	?___fladd^(0+256)
 12225  014C' 2800'              	goto	l1521
 12226  014D'                    l8316:
 12227  014D' 0022               	movlb	2	; select bank2
 12228  014E' 0800'              	movf	___fladd@a^(0+256),w
 12229  014F' 0780'              	addwf	___fladd@b^(0+256),f
 12230  0150' 0800'              	movf	(___fladd@a+1)^(0+256),w
 12231  0151' 3D80'              	addwfc	(___fladd@b+1)^(0+256),f
 12232  0152' 0800'              	movf	(___fladd@a+2)^(0+256),w
 12233  0153' 3D80'              	addwfc	(___fladd@b+2)^(0+256),f
 12234  0154' 0800'              	movf	(___fladd@a+3)^(0+256),w
 12235  0155' 3D80'              	addwfc	(___fladd@b+3)^(0+256),f
 12236  0156'                    l8318:
 12237  0156' 1C00'              	btfss	(___fladd@b+3)^(0+256),0
 12238  0157' 2800'              	goto	u13061
 12239  0158' 2800'              	goto	u13060
 12240  0159'                    u13061:
 12241  0159' 2800'              	goto	l8368
 12242  015A'                    u13060:
 12243  015A'                    l8320:
 12244  015A' 0023               	movlb	3	; select bank3
 12245  015B' 1C00'              	btfss	___fladd@grs^(0+384),0
 12246  015C' 2800'              	goto	u13071
 12247  015D' 2800'              	goto	u13070
 12248  015E'                    u13071:
 12249  015E' 2800'              	goto	l8324
 12250  015F'                    u13070:
 12251  015F'                    l8322:
 12252  015F' 3600'              	lsrf	___fladd@grs^(0+384),w
 12253  0160' 3801               	iorlw	1
 12254  0161' 0022               	movlb	2	; select bank2
 12255  0162' 0080'              	movwf	??___fladd^(0+256)
 12256  0163' 0800'              	movf	??___fladd^(0+256),w
 12257  0164' 0023               	movlb	3	; select bank3
 12258  0165' 0080'              	movwf	___fladd@grs^(0+384)
 12259  0166' 2800'              	goto	l8326
 12260  0167'                    l8324:
 12261  0167' 1003               	clrc
 12262  0168' 0C80'              	rrf	___fladd@grs^(0+384),f
 12263  0169'                    l8326:
 12264  0169' 0022               	movlb	2	; select bank2
 12265  016A' 1C00'              	btfss	___fladd@b^(0+256),0
 12266  016B' 2800'              	goto	u13081
 12267  016C' 2800'              	goto	u13080
 12268  016D'                    u13081:
 12269  016D' 2800'              	goto	l8330
 12270  016E'                    u13080:
 12271  016E'                    l8328:
 12272  016E' 0023               	movlb	3	; select bank3
 12273  016F' 1780'              	bsf	___fladd@grs^(0+384),7
 12274  0170'                    l8330:
 12275  0170' 3001               	movlw	1
 12276  0171' 0022               	movlb	2	; select bank2
 12277  0172' 0080'              	movwf	??___fladd^(0+256)
 12278  0173'                    u13095:
 12279  0173' 3780'              	asrf	(___fladd@b+3)^(0+256),f
 12280  0174' 0C80'              	rrf	(___fladd@b+2)^(0+256),f
 12281  0175' 0C80'              	rrf	(___fladd@b+1)^(0+256),f
 12282  0176' 0C80'              	rrf	___fladd@b^(0+256),f
 12283  0177' 0B80'              	decfsz	(??___fladd^(0+256))& (0+127),f
 12284  0178' 2800'              	goto	u13095
 12285  0179'                    l8332:
 12286  0179' 3001               	movlw	1
 12287  017A' 0080'              	movwf	??___fladd^(0+256)
 12288  017B' 0800'              	movf	??___fladd^(0+256),w
 12289  017C' 0023               	movlb	3	; select bank3
 12290  017D' 0780'              	addwf	___fladd@bexp^(0+384),f
 12291  017E' 2800'              	goto	l8368
 12292  017F'                    l8334:
 12293  017F' 0022               	movlb	2	; select bank2
 12294  0180' 0800'              	movf	(___fladd@b+3)^(0+256),w
 12295  0181' 3A80               	xorlw	128
 12296  0182' 0080'              	movwf	??___fladd^(0+256)
 12297  0183' 0800'              	movf	(___fladd@a+3)^(0+256),w
 12298  0184' 3A80               	xorlw	128
 12299  0185' 0200'              	subwf	??___fladd^(0+256),w
 12300  0186' 1D03               	skipz
 12301  0187' 2800'              	goto	u13103
 12302  0188' 0800'              	movf	(___fladd@a+2)^(0+256),w
 12303  0189' 0200'              	subwf	(___fladd@b+2)^(0+256),w
 12304  018A' 1D03               	skipz
 12305  018B' 2800'              	goto	u13103
 12306  018C' 0800'              	movf	(___fladd@a+1)^(0+256),w
 12307  018D' 0200'              	subwf	(___fladd@b+1)^(0+256),w
 12308  018E' 1D03               	skipz
 12309  018F' 2800'              	goto	u13103
 12310  0190' 0800'              	movf	___fladd@a^(0+256),w
 12311  0191' 0200'              	subwf	___fladd@b^(0+256),w
 12312  0192'                    u13103:
 12313  0192' 1803               	skipnc
 12314  0193' 2800'              	goto	u13101
 12315  0194' 2800'              	goto	u13100
 12316  0195'                    u13101:
 12317  0195' 2800'              	goto	l8344
 12318  0196'                    u13100:
 12319  0196'                    l8336:
 12320  0196' 30FF               	movlw	255
 12321  0197' 0080'              	movwf	??___fladd^(0+256)
 12322  0198' 30FF               	movlw	255
 12323  0199' 0081'              	movwf	(??___fladd^(0+256)+1)
 12324  019A' 30FF               	movlw	255
 12325  019B' 0082'              	movwf	(??___fladd^(0+256)+2)
 12326  019C' 30FF               	movlw	255
 12327  019D' 0083'              	movwf	(??___fladd^(0+256)+3)
 12328  019E' 0800'              	movf	___fladd@b^(0+256),w
 12329  019F' 0200'              	subwf	___fladd@a^(0+256),w
 12330  01A0' 0080'              	movwf	(??___fladd+4)^(0+256)
 12331  01A1' 0800'              	movf	(___fladd@b+1)^(0+256),w
 12332  01A2' 3B00'              	subwfb	(___fladd@a+1)^(0+256),w
 12333  01A3' 0081'              	movwf	((??___fladd+4)^(0+256)+1)
 12334  01A4' 0800'              	movf	(___fladd@b+2)^(0+256),w
 12335  01A5' 3B00'              	subwfb	(___fladd@a+2)^(0+256),w
 12336  01A6' 0082'              	movwf	((??___fladd+4)^(0+256)+2)
 12337  01A7' 0800'              	movf	(___fladd@b+3)^(0+256),w
 12338  01A8' 3B00'              	subwfb	(___fladd@a+3)^(0+256),w
 12339  01A9' 0083'              	movwf	((??___fladd+4)^(0+256)+3)
 12340  01AA' 0800'              	movf	(??___fladd+4)^(0+256),w
 12341  01AB' 0780'              	addwf	??___fladd^(0+256),f
 12342  01AC' 0800'              	movf	(??___fladd+5)^(0+256),w
 12343  01AD' 3D81'              	addwfc	(??___fladd^(0+256)+1),f
 12344  01AE' 0800'              	movf	(??___fladd+6)^(0+256),w
 12345  01AF' 3D82'              	addwfc	(??___fladd^(0+256)+2),f
 12346  01B0' 0800'              	movf	(??___fladd+7)^(0+256),w
 12347  01B1' 3D83'              	addwfc	(??___fladd^(0+256)+3),f
 12348  01B2' 0800'              	movf	(??___fladd+3)^(0+256),w
 12349  01B3' 0080'              	movwf	(___fladd@b+3)^(0+256)
 12350  01B4' 0800'              	movf	(??___fladd+2)^(0+256),w
 12351  01B5' 0080'              	movwf	(___fladd@b+2)^(0+256)
 12352  01B6' 0800'              	movf	(??___fladd+1)^(0+256),w
 12353  01B7' 0080'              	movwf	(___fladd@b+1)^(0+256)
 12354  01B8' 0800'              	movf	??___fladd^(0+256),w
 12355  01B9' 0080'              	movwf	___fladd@b^(0+256)
 12356  01BA'                    l8338:
 12357  01BA' 3080               	movlw	128
 12358  01BB' 0080'              	movwf	??___fladd^(0+256)
 12359  01BC' 0800'              	movf	??___fladd^(0+256),w
 12360  01BD' 0023               	movlb	3	; select bank3
 12361  01BE' 0680'              	xorwf	___fladd@signs^(0+384),f
 12362  01BF' 0980'              	comf	___fladd@grs^(0+384),f
 12363  01C0' 0A80'              	incf	___fladd@grs^(0+384),f
 12364  01C1'                    l8340:
 12365  01C1' 0800'              	movf	___fladd@grs^(0+384),w
 12366  01C2' 1D03               	btfss	3,2
 12367  01C3' 2800'              	goto	u13111
 12368  01C4' 2800'              	goto	u13110
 12369  01C5'                    u13111:
 12370  01C5' 2800'              	goto	l1529
 12371  01C6'                    u13110:
 12372  01C6'                    l8342:
 12373  01C6' 3001               	movlw	1
 12374  01C7' 0022               	movlb	2	; select bank2
 12375  01C8' 0780'              	addwf	___fladd@b^(0+256),f
 12376  01C9' 3000               	movlw	0
 12377  01CA' 3D80'              	addwfc	(___fladd@b+1)^(0+256),f
 12378  01CB' 3000               	movlw	0
 12379  01CC' 3D80'              	addwfc	(___fladd@b+2)^(0+256),f
 12380  01CD' 3000               	movlw	0
 12381  01CE' 3D80'              	addwfc	(___fladd@b+3)^(0+256),f
 12382  01CF' 2800'              	goto	l1529
 12383  01D0'                    l8344:
 12384  01D0' 0800'              	movf	___fladd@a^(0+256),w
 12385  01D1' 0280'              	subwf	___fladd@b^(0+256),f
 12386  01D2' 0800'              	movf	(___fladd@a+1)^(0+256),w
 12387  01D3' 3B80'              	subwfb	(___fladd@b+1)^(0+256),f
 12388  01D4' 0800'              	movf	(___fladd@a+2)^(0+256),w
 12389  01D5' 3B80'              	subwfb	(___fladd@b+2)^(0+256),f
 12390  01D6' 0800'              	movf	(___fladd@a+3)^(0+256),w
 12391  01D7' 3B80'              	subwfb	(___fladd@b+3)^(0+256),f
 12392  01D8'                    l1529:
 12393  01D8' 0022               	movlb	2	; select bank2
 12394  01D9' 0800'              	movf	(___fladd@b+3)^(0+256),w
 12395  01DA' 0400'              	iorwf	(___fladd@b+2)^(0+256),w
 12396  01DB' 0400'              	iorwf	(___fladd@b+1)^(0+256),w
 12397  01DC' 0400'              	iorwf	___fladd@b^(0+256),w
 12398  01DD' 1D03               	skipz
 12399  01DE' 2800'              	goto	u13121
 12400  01DF' 2800'              	goto	u13120
 12401  01E0'                    u13121:
 12402  01E0' 2800'              	goto	l8366
 12403  01E1'                    u13120:
 12404  01E1'                    l8346:
 12405  01E1' 0023               	movlb	3	; select bank3
 12406  01E2' 0800'              	movf	___fladd@grs^(0+384),w
 12407  01E3' 1D03               	btfss	3,2
 12408  01E4' 2800'              	goto	u13131
 12409  01E5' 2800'              	goto	u13130
 12410  01E6'                    u13131:
 12411  01E6' 2800'              	goto	l8366
 12412  01E7'                    u13130:
 12413  01E7'                    l8348:
 12414  01E7' 3000               	movlw	0
 12415  01E8' 0022               	movlb	2	; select bank2
 12416  01E9' 0080'              	movwf	(?___fladd+3)^(0+256)
 12417  01EA' 3000               	movlw	0
 12418  01EB' 0080'              	movwf	(?___fladd+2)^(0+256)
 12419  01EC' 3000               	movlw	0
 12420  01ED' 0080'              	movwf	(?___fladd+1)^(0+256)
 12421  01EE' 3000               	movlw	0
 12422  01EF' 0080'              	movwf	?___fladd^(0+256)
 12423  01F0' 2800'              	goto	l1521
 12424  01F1'                    l8352:
 12425  01F1' 3001               	movlw	1
 12426  01F2'                    u13145:
 12427  01F2' 3580'              	lslf	___fladd@b^(0+256),f
 12428  01F3' 0D80'              	rlf	(___fladd@b+1)^(0+256),f
 12429  01F4' 0D80'              	rlf	(___fladd@b+2)^(0+256),f
 12430  01F5' 0D80'              	rlf	(___fladd@b+3)^(0+256),f
 12431  01F6' 0B89               	decfsz	9,f
 12432  01F7' 2800'              	goto	u13145
 12433  01F8'                    l8354:
 12434  01F8' 0023               	movlb	3	; select bank3
 12435  01F9' 1F80'              	btfss	___fladd@grs^(0+384),7
 12436  01FA' 2800'              	goto	u13151
 12437  01FB' 2800'              	goto	u13150
 12438  01FC'                    u13151:
 12439  01FC' 2800'              	goto	l1533
 12440  01FD'                    u13150:
 12441  01FD'                    l8356:
 12442  01FD' 0022               	movlb	2	; select bank2
 12443  01FE' 1400'              	bsf	___fladd@b^(0+256),0
 12444  01FF'                    l1533:
 12445  01FF' 0023               	movlb	3	; select bank3
 12446  0200' 1C00'              	btfss	___fladd@grs^(0+384),0
 12447  0201' 2800'              	goto	u13161
 12448  0202' 2800'              	goto	u13160
 12449  0203'                    u13161:
 12450  0203' 2800'              	goto	l8360
 12451  0204'                    u13160:
 12452  0204'                    l8358:
 12453  0204' 1403               	setc
 12454  0205' 0D80'              	rlf	___fladd@grs^(0+384),f
 12455  0206' 2800'              	goto	l8362
 12456  0207'                    l8360:
 12457  0207' 1003               	clrc
 12458  0208' 0D80'              	rlf	___fladd@grs^(0+384),f
 12459  0209'                    l8362:
 12460  0209' 0800'              	movf	___fladd@bexp^(0+384),w
 12461  020A' 1903               	btfsc	3,2
 12462  020B' 2800'              	goto	u13171
 12463  020C' 2800'              	goto	u13170
 12464  020D'                    u13171:
 12465  020D' 2800'              	goto	l8366
 12466  020E'                    u13170:
 12467  020E'                    l8364:
 12468  020E' 3001               	movlw	1
 12469  020F' 0280'              	subwf	___fladd@bexp^(0+384),f
 12470  0210'                    l8366:
 12471  0210' 0022               	movlb	2	; select bank2
 12472  0211' 1F80'              	btfss	(___fladd@b+2)^(0+256),7
 12473  0212' 2800'              	goto	u13181
 12474  0213' 2800'              	goto	u13180
 12475  0214'                    u13181:
 12476  0214' 2800'              	goto	l8352
 12477  0215'                    u13180:
 12478  0215'                    l8368:
 12479  0215' 0023               	movlb	3	; select bank3
 12480  0216' 0180'              	clrf	___fladd@aexp^(0+384)
 12481  0217'                    l8370:
 12482  0217' 1F80'              	btfss	___fladd@grs^(0+384),7
 12483  0218' 2800'              	goto	u13191
 12484  0219' 2800'              	goto	u13190
 12485  021A'                    u13191:
 12486  021A' 2800'              	goto	l8378
 12487  021B'                    u13190:
 12488  021B'                    l8372:
 12489  021B' 0800'              	movf	___fladd@grs^(0+384),w
 12490  021C' 397F               	andlw	127
 12491  021D' 1903               	btfsc	3,2
 12492  021E' 2800'              	goto	u13201
 12493  021F' 2800'              	goto	u13200
 12494  0220'                    u13201:
 12495  0220' 2800'              	goto	l1539
 12496  0221'                    u13200:
 12497  0221'                    l8374:
 12498  0221' 0023               	movlb	3	; select bank3
 12499  0222' 0180'              	clrf	___fladd@aexp^(0+384)
 12500  0223' 0A80'              	incf	___fladd@aexp^(0+384),f
 12501  0224' 2800'              	goto	l8378
 12502  0225'                    l1539:
 12503  0225' 0022               	movlb	2	; select bank2
 12504  0226' 1C00'              	btfss	___fladd@b^(0+256),0
 12505  0227' 2800'              	goto	u13211
 12506  0228' 2800'              	goto	u13210
 12507  0229'                    u13211:
 12508  0229' 2800'              	goto	l8378
 12509  022A'                    u13210:
 12510  022A' 2800'              	goto	l8374
 12511  022B'                    l8378:
 12512  022B' 0023               	movlb	3	; select bank3
 12513  022C' 0800'              	movf	___fladd@aexp^(0+384),w
 12514  022D' 1903               	btfsc	3,2
 12515  022E' 2800'              	goto	u13221
 12516  022F' 2800'              	goto	u13220
 12517  0230'                    u13221:
 12518  0230' 2800'              	goto	l1542
 12519  0231'                    u13220:
 12520  0231'                    l8380:
 12521  0231' 3001               	movlw	1
 12522  0232' 0022               	movlb	2	; select bank2
 12523  0233' 0780'              	addwf	___fladd@b^(0+256),f
 12524  0234' 3000               	movlw	0
 12525  0235' 3D80'              	addwfc	(___fladd@b+1)^(0+256),f
 12526  0236' 3000               	movlw	0
 12527  0237' 3D80'              	addwfc	(___fladd@b+2)^(0+256),f
 12528  0238' 3000               	movlw	0
 12529  0239' 3D80'              	addwfc	(___fladd@b+3)^(0+256),f
 12530  023A'                    l8382:
 12531  023A' 1C00'              	btfss	(___fladd@b+3)^(0+256),0
 12532  023B' 2800'              	goto	u13231
 12533  023C' 2800'              	goto	u13230
 12534  023D'                    u13231:
 12535  023D' 2800'              	goto	l1542
 12536  023E'                    u13230:
 12537  023E'                    l8384:
 12538  023E' 0800'              	movf	___fladd@b^(0+256),w
 12539  023F' 0080'              	movwf	??___fladd^(0+256)
 12540  0240' 0800'              	movf	(___fladd@b+1)^(0+256),w
 12541  0241' 0081'              	movwf	(??___fladd^(0+256)+1)
 12542  0242' 0800'              	movf	(___fladd@b+2)^(0+256),w
 12543  0243' 0082'              	movwf	(??___fladd^(0+256)+2)
 12544  0244' 0800'              	movf	(___fladd@b+3)^(0+256),w
 12545  0245' 0083'              	movwf	(??___fladd^(0+256)+3)
 12546  0246' 3001               	movlw	1
 12547  0247' 0080'              	movwf	(??___fladd+4)^(0+256)
 12548  0248'                    u13245:
 12549  0248' 3783'              	asrf	(??___fladd^(0+256)+3),f
 12550  0249' 0C82'              	rrf	(??___fladd^(0+256)+2),f
 12551  024A' 0C81'              	rrf	(??___fladd^(0+256)+1),f
 12552  024B' 0C80'              	rrf	??___fladd^(0+256),f
 12553  024C'                    u13240:
 12554  024C' 0B80'              	decfsz	(??___fladd+4)^(0+256),f
 12555  024D' 2800'              	goto	u13245
 12556  024E' 0800'              	movf	(??___fladd+3)^(0+256),w
 12557  024F' 0080'              	movwf	(___fladd@b+3)^(0+256)
 12558  0250' 0800'              	movf	(??___fladd+2)^(0+256),w
 12559  0251' 0080'              	movwf	(___fladd@b+2)^(0+256)
 12560  0252' 0800'              	movf	(??___fladd+1)^(0+256),w
 12561  0253' 0080'              	movwf	(___fladd@b+1)^(0+256)
 12562  0254' 0800'              	movf	??___fladd^(0+256),w
 12563  0255' 0080'              	movwf	___fladd@b^(0+256)
 12564  0256' 0023               	movlb	3	; select bank3
 12565  0257' 0A00'              	incf	___fladd@bexp^(0+384),w
 12566  0258' 1903               	btfsc	3,2
 12567  0259' 2800'              	goto	u13251
 12568  025A' 2800'              	goto	u13250
 12569  025B'                    u13251:
 12570  025B' 2800'              	goto	l1542
 12571  025C'                    u13250:
 12572  025C'                    l8386:
 12573  025C' 3001               	movlw	1
 12574  025D' 0022               	movlb	2	; select bank2
 12575  025E' 0080'              	movwf	??___fladd^(0+256)
 12576  025F' 0800'              	movf	??___fladd^(0+256),w
 12577  0260' 0023               	movlb	3	; select bank3
 12578  0261' 0780'              	addwf	___fladd@bexp^(0+384),f
 12579  0262'                    l1542:
 12580  0262' 0023               	movlb	3	; select bank3
 12581  0263' 0A00'              	incf	___fladd@bexp^(0+384),w
 12582  0264' 1903               	btfsc	3,2
 12583  0265' 2800'              	goto	u13261
 12584  0266' 2800'              	goto	u13260
 12585  0267'                    u13261:
 12586  0267' 2800'              	goto	l8390
 12587  0268'                    u13260:
 12588  0268'                    l8388:
 12589  0268' 0800'              	movf	___fladd@bexp^(0+384),w
 12590  0269' 1D03               	btfss	3,2
 12591  026A' 2800'              	goto	u13271
 12592  026B' 2800'              	goto	u13270
 12593  026C'                    u13271:
 12594  026C' 2800'              	goto	l8396
 12595  026D'                    u13270:
 12596  026D'                    l8390:
 12597  026D' 3000               	movlw	0
 12598  026E' 0022               	movlb	2	; select bank2
 12599  026F' 0080'              	movwf	(___fladd@b+3)^(0+256)
 12600  0270' 3000               	movlw	0
 12601  0271' 0080'              	movwf	(___fladd@b+2)^(0+256)
 12602  0272' 3000               	movlw	0
 12603  0273' 0080'              	movwf	(___fladd@b+1)^(0+256)
 12604  0274' 3000               	movlw	0
 12605  0275' 0080'              	movwf	___fladd@b^(0+256)
 12606  0276'                    l8392:
 12607  0276' 0023               	movlb	3	; select bank3
 12608  0277' 0800'              	movf	___fladd@bexp^(0+384),w
 12609  0278' 1D03               	btfss	3,2
 12610  0279' 2800'              	goto	u13281
 12611  027A' 2800'              	goto	u13280
 12612  027B'                    u13281:
 12613  027B' 2800'              	goto	l8396
 12614  027C'                    u13280:
 12615  027C'                    l8394:
 12616  027C' 0180'              	clrf	___fladd@signs^(0+384)
 12617  027D'                    l8396:
 12618  027D' 1C00'              	btfss	___fladd@bexp^(0+384),0
 12619  027E' 2800'              	goto	u13291
 12620  027F' 2800'              	goto	u13290
 12621  0280'                    u13291:
 12622  0280' 2800'              	goto	l8400
 12623  0281'                    u13290:
 12624  0281'                    l8398:
 12625  0281' 0022               	movlb	2	; select bank2
 12626  0282' 1782'              	bsf	(___fladd@b^(0+256)+2),7
 12627  0283' 2800'              	goto	l1550
 12628  0284'                    l8400:
 12629  0284' 307F               	movlw	127
 12630  0285' 0022               	movlb	2	; select bank2
 12631  0286' 0080'              	movwf	??___fladd^(0+256)
 12632  0287' 0800'              	movf	??___fladd^(0+256),w
 12633  0288' 0582'              	andwf	(___fladd@b^(0+256)+2),f
 12634  0289'                    l1550:
 12635  0289' 0023               	movlb	3	; select bank3
 12636  028A' 3600'              	lsrf	___fladd@bexp^(0+384),w
 12637  028B' 0022               	movlb	2	; select bank2
 12638  028C' 0080'              	movwf	??___fladd^(0+256)
 12639  028D' 0800'              	movf	??___fladd^(0+256),w
 12640  028E' 0083'              	movwf	(___fladd@b^(0+256)+3)
 12641  028F'                    l8402:
 12642  028F' 0023               	movlb	3	; select bank3
 12643  0290' 1F80'              	btfss	___fladd@signs^(0+384),7
 12644  0291' 2800'              	goto	u13301
 12645  0292' 2800'              	goto	u13300
 12646  0293'                    u13301:
 12647  0293' 2800'              	goto	l1551
 12648  0294'                    u13300:
 12649  0294'                    l8404:
 12650  0294' 0022               	movlb	2	; select bank2
 12651  0295' 1783'              	bsf	(___fladd@b^(0+256)+3),7
 12652  0296'                    l1551:
 12653  0296'                    l1521:
 12654  0296' 0008               	return
 12655  0297'                    __end_of___fladd:
 12656                           
 12657                           	psect	text20
 12658  0000'                    __ptext20:	
 12659 ;; *************** function ___flneg *****************
 12660 ;; Defined at:
 12661 ;;		line 15 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/flneg.c"
 12662 ;; Parameters:    Size  Location     Type
 12663 ;;  f1              4    0[BANK2 ] unsigned char 
 12664 ;; Auto vars:     Size  Location     Type
 12665 ;;		None
 12666 ;; Return value:  Size  Location     Type
 12667 ;;                  4    0[BANK2 ] unsigned char 
 12668 ;; Registers used:
 12669 ;;		wreg
 12670 ;; Tracked objects:
 12671 ;;		On entry : 0/0
 12672 ;;		On exit  : 0/0
 12673 ;;		Unchanged: 0/0
 12674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12675 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
 12676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12678 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
 12679 ;;Total ram usage:        4 bytes
 12680 ;; Hardware stack levels used:    1
 12681 ;; Hardware stack levels required when called:    7
 12682 ;; This function calls:
 12683 ;;		Nothing
 12684 ;; This function is called by:
 12685 ;;		_sprintf
 12686 ;; This function uses a non-reentrant model
 12687 ;;
 12688                           
 12689                           
 12690                           ;psect for function ___flneg
 12691  0000'                    ___flneg:
 12692  0000'                    l8790:	
 12693                           ;incstack = 0
 12694                           ; Regs used in ___flneg: [wreg]
 12695                           
 12696  0000' 0022               	movlb	2	; select bank2
 12697  0001' 0800'              	movf	(___flneg@f1+3)^(0+256),w
 12698  0002' 0400'              	iorwf	(___flneg@f1+2)^(0+256),w
 12699  0003' 0400'              	iorwf	(___flneg@f1+1)^(0+256),w
 12700  0004' 0400'              	iorwf	___flneg@f1^(0+256),w
 12701  0005' 1903               	skipnz
 12702  0006' 2800'              	goto	u14111
 12703  0007' 2800'              	goto	u14110
 12704  0008'                    u14111:
 12705  0008' 2800'              	goto	l8794
 12706  0009'                    u14110:
 12707  0009'                    l8792:
 12708  0009' 3080               	movlw	128
 12709  000A' 0680'              	xorwf	(___flneg@f1+3)^(0+256),f
 12710  000B'                    l8794:
 12711  000B'                    l1380:
 12712  000B' 0008               	return
 12713  000C'                    __end_of___flneg:
 12714                           
 12715                           	psect	text21
 12716  0000'                    __ptext21:	
 12717 ;; *************** function ___flge *****************
 12718 ;; Defined at:
 12719 ;;		line 4 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/flge.c"
 12720 ;; Parameters:    Size  Location     Type
 12721 ;;  ff1             4    0[BANK2 ] unsigned char 
 12722 ;;  ff2             4    4[BANK2 ] unsigned char 
 12723 ;; Auto vars:     Size  Location     Type
 12724 ;;		None
 12725 ;; Return value:  Size  Location     Type
 12726 ;;		None               void
 12727 ;; Registers used:
 12728 ;;		wreg, status,2, status,0
 12729 ;; Tracked objects:
 12730 ;;		On entry : 0/0
 12731 ;;		On exit  : 0/0
 12732 ;;		Unchanged: 0/0
 12733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12734 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
 12735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12736 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
 12737 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
 12738 ;;Total ram usage:       12 bytes
 12739 ;; Hardware stack levels used:    1
 12740 ;; Hardware stack levels required when called:    7
 12741 ;; This function calls:
 12742 ;;		Nothing
 12743 ;; This function is called by:
 12744 ;;		_sprintf
 12745 ;; This function uses a non-reentrant model
 12746 ;;
 12747                           
 12748                           
 12749                           ;psect for function ___flge
 12750  0000'                    ___flge:
 12751  0000'                    l8770:	
 12752                           ;incstack = 0
 12753                           ; Regs used in ___flge: [wreg+status,2+status,0]
 12754                           
 12755  0000' 3000               	movlw	0
 12756  0001' 0022               	movlb	2	; select bank2
 12757  0002' 0500'              	andwf	___flge@ff1^(0+256),w
 12758  0003' 0080'              	movwf	??___flge^(0+256)
 12759  0004' 3000               	movlw	0
 12760  0005' 0500'              	andwf	(___flge@ff1+1)^(0+256),w
 12761  0006' 0081'              	movwf	(??___flge^(0+256)+1)
 12762  0007' 3080               	movlw	128
 12763  0008' 0500'              	andwf	(___flge@ff1+2)^(0+256),w
 12764  0009' 0082'              	movwf	(??___flge^(0+256)+2)
 12765  000A' 307F               	movlw	127
 12766  000B' 0500'              	andwf	(___flge@ff1+3)^(0+256),w
 12767  000C' 0083'              	movwf	(??___flge^(0+256)+3)
 12768  000D' 0800'              	movf	(??___flge+3)^(0+256),w
 12769  000E' 0400'              	iorwf	(??___flge+2)^(0+256),w
 12770  000F' 0400'              	iorwf	(??___flge+1)^(0+256),w
 12771  0010' 0400'              	iorwf	??___flge^(0+256),w
 12772  0011' 1D03               	skipz
 12773  0012' 2800'              	goto	u14061
 12774  0013' 2800'              	goto	u14060
 12775  0014'                    u14061:
 12776  0014' 2800'              	goto	l1372
 12777  0015'                    u14060:
 12778  0015'                    l8772:
 12779  0015' 3000               	movlw	0
 12780  0016' 0080'              	movwf	(___flge@ff1+3)^(0+256)
 12781  0017' 3000               	movlw	0
 12782  0018' 0080'              	movwf	(___flge@ff1+2)^(0+256)
 12783  0019' 3000               	movlw	0
 12784  001A' 0080'              	movwf	(___flge@ff1+1)^(0+256)
 12785  001B' 3000               	movlw	0
 12786  001C' 0080'              	movwf	___flge@ff1^(0+256)
 12787  001D'                    l1372:
 12788  001D' 3000               	movlw	0
 12789  001E' 0500'              	andwf	___flge@ff2^(0+256),w
 12790  001F' 0080'              	movwf	??___flge^(0+256)
 12791  0020' 3000               	movlw	0
 12792  0021' 0500'              	andwf	(___flge@ff2+1)^(0+256),w
 12793  0022' 0081'              	movwf	(??___flge^(0+256)+1)
 12794  0023' 3080               	movlw	128
 12795  0024' 0500'              	andwf	(___flge@ff2+2)^(0+256),w
 12796  0025' 0082'              	movwf	(??___flge^(0+256)+2)
 12797  0026' 307F               	movlw	127
 12798  0027' 0500'              	andwf	(___flge@ff2+3)^(0+256),w
 12799  0028' 0083'              	movwf	(??___flge^(0+256)+3)
 12800  0029' 0800'              	movf	(??___flge+3)^(0+256),w
 12801  002A' 0400'              	iorwf	(??___flge+2)^(0+256),w
 12802  002B' 0400'              	iorwf	(??___flge+1)^(0+256),w
 12803  002C' 0400'              	iorwf	??___flge^(0+256),w
 12804  002D' 1D03               	skipz
 12805  002E' 2800'              	goto	u14071
 12806  002F' 2800'              	goto	u14070
 12807  0030'                    u14071:
 12808  0030' 2800'              	goto	l8776
 12809  0031'                    u14070:
 12810  0031'                    l8774:
 12811  0031' 3000               	movlw	0
 12812  0032' 0080'              	movwf	(___flge@ff2+3)^(0+256)
 12813  0033' 3000               	movlw	0
 12814  0034' 0080'              	movwf	(___flge@ff2+2)^(0+256)
 12815  0035' 3000               	movlw	0
 12816  0036' 0080'              	movwf	(___flge@ff2+1)^(0+256)
 12817  0037' 3000               	movlw	0
 12818  0038' 0080'              	movwf	___flge@ff2^(0+256)
 12819  0039'                    l8776:
 12820  0039' 1F80'              	btfss	(___flge@ff1+3)^(0+256),7
 12821  003A' 2800'              	goto	u14081
 12822  003B' 2800'              	goto	u14080
 12823  003C'                    u14081:
 12824  003C' 2800'              	goto	l8780
 12825  003D'                    u14080:
 12826  003D'                    l8778:
 12827  003D' 3000               	movlw	0
 12828  003E' 0080'              	movwf	??___flge^(0+256)
 12829  003F' 3000               	movlw	0
 12830  0040' 0081'              	movwf	(??___flge^(0+256)+1)
 12831  0041' 3000               	movlw	0
 12832  0042' 0082'              	movwf	(??___flge^(0+256)+2)
 12833  0043' 3080               	movlw	128
 12834  0044' 0083'              	movwf	(??___flge^(0+256)+3)
 12835  0045' 0800'              	movf	___flge@ff1^(0+256),w
 12836  0046' 0280'              	subwf	??___flge^(0+256),f
 12837  0047' 0800'              	movf	(___flge@ff1+1)^(0+256),w
 12838  0048' 3B81'              	subwfb	(??___flge^(0+256)+1),f
 12839  0049' 0800'              	movf	(___flge@ff1+2)^(0+256),w
 12840  004A' 3B82'              	subwfb	(??___flge^(0+256)+2),f
 12841  004B' 0800'              	movf	(___flge@ff1+3)^(0+256),w
 12842  004C' 3B83'              	subwfb	(??___flge^(0+256)+3),f
 12843  004D' 0800'              	movf	(??___flge+3)^(0+256),w
 12844  004E' 0080'              	movwf	(___flge@ff1+3)^(0+256)
 12845  004F' 0800'              	movf	(??___flge+2)^(0+256),w
 12846  0050' 0080'              	movwf	(___flge@ff1+2)^(0+256)
 12847  0051' 0800'              	movf	(??___flge+1)^(0+256),w
 12848  0052' 0080'              	movwf	(___flge@ff1+1)^(0+256)
 12849  0053' 0800'              	movf	??___flge^(0+256),w
 12850  0054' 0080'              	movwf	___flge@ff1^(0+256)
 12851  0055'                    l8780:
 12852  0055' 1F80'              	btfss	(___flge@ff2+3)^(0+256),7
 12853  0056' 2800'              	goto	u14091
 12854  0057' 2800'              	goto	u14090
 12855  0058'                    u14091:
 12856  0058' 2800'              	goto	l1375
 12857  0059'                    u14090:
 12858  0059'                    l8782:
 12859  0059' 3000               	movlw	0
 12860  005A' 0080'              	movwf	??___flge^(0+256)
 12861  005B' 3000               	movlw	0
 12862  005C' 0081'              	movwf	(??___flge^(0+256)+1)
 12863  005D' 3000               	movlw	0
 12864  005E' 0082'              	movwf	(??___flge^(0+256)+2)
 12865  005F' 3080               	movlw	128
 12866  0060' 0083'              	movwf	(??___flge^(0+256)+3)
 12867  0061' 0800'              	movf	___flge@ff2^(0+256),w
 12868  0062' 0280'              	subwf	??___flge^(0+256),f
 12869  0063' 0800'              	movf	(___flge@ff2+1)^(0+256),w
 12870  0064' 3B81'              	subwfb	(??___flge^(0+256)+1),f
 12871  0065' 0800'              	movf	(___flge@ff2+2)^(0+256),w
 12872  0066' 3B82'              	subwfb	(??___flge^(0+256)+2),f
 12873  0067' 0800'              	movf	(___flge@ff2+3)^(0+256),w
 12874  0068' 3B83'              	subwfb	(??___flge^(0+256)+3),f
 12875  0069' 0800'              	movf	(??___flge+3)^(0+256),w
 12876  006A' 0080'              	movwf	(___flge@ff2+3)^(0+256)
 12877  006B' 0800'              	movf	(??___flge+2)^(0+256),w
 12878  006C' 0080'              	movwf	(___flge@ff2+2)^(0+256)
 12879  006D' 0800'              	movf	(??___flge+1)^(0+256),w
 12880  006E' 0080'              	movwf	(___flge@ff2+1)^(0+256)
 12881  006F' 0800'              	movf	??___flge^(0+256),w
 12882  0070' 0080'              	movwf	___flge@ff2^(0+256)
 12883  0071'                    l1375:
 12884  0071' 3080               	movlw	128
 12885  0072' 0680'              	xorwf	(___flge@ff1+3)^(0+256),f
 12886  0073' 3080               	movlw	128
 12887  0074' 0680'              	xorwf	(___flge@ff2+3)^(0+256),f
 12888  0075' 0800'              	movf	(___flge@ff2+3)^(0+256),w
 12889  0076' 0200'              	subwf	(___flge@ff1+3)^(0+256),w
 12890  0077' 1D03               	skipz
 12891  0078' 2800'              	goto	u14105
 12892  0079' 0800'              	movf	(___flge@ff2+2)^(0+256),w
 12893  007A' 0200'              	subwf	(___flge@ff1+2)^(0+256),w
 12894  007B' 1D03               	skipz
 12895  007C' 2800'              	goto	u14105
 12896  007D' 0800'              	movf	(___flge@ff2+1)^(0+256),w
 12897  007E' 0200'              	subwf	(___flge@ff1+1)^(0+256),w
 12898  007F' 1D03               	skipz
 12899  0080' 2800'              	goto	u14105
 12900  0081' 0800'              	movf	___flge@ff2^(0+256),w
 12901  0082' 0200'              	subwf	___flge@ff1^(0+256),w
 12902  0083'                    u14105:
 12903  0083' 1803               	skipnc
 12904  0084' 2800'              	goto	u14101
 12905  0085' 2800'              	goto	u14100
 12906  0086'                    u14101:
 12907  0086' 2800'              	goto	l8786
 12908  0087'                    u14100:
 12909  0087'                    l8784:
 12910  0087' 1003               	clrc
 12911  0088' 2800'              	goto	l1376
 12912  0089'                    l8786:
 12913  0089' 1403               	setc
 12914  008A'                    l1376:
 12915  008A' 0008               	return
 12916  008B'                    __end_of___flge:
 12917                           
 12918                           	psect	text22
 12919  0000'                    __ptext22:	
 12920 ;; *************** function ___fleq *****************
 12921 ;; Defined at:
 12922 ;;		line 4 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/fleq.c"
 12923 ;; Parameters:    Size  Location     Type
 12924 ;;  ff1             4    0[BANK2 ] unsigned char 
 12925 ;;  ff2             4    4[BANK2 ] unsigned char 
 12926 ;; Auto vars:     Size  Location     Type
 12927 ;;		None
 12928 ;; Return value:  Size  Location     Type
 12929 ;;		None               void
 12930 ;; Registers used:
 12931 ;;		wreg, status,2, status,0
 12932 ;; Tracked objects:
 12933 ;;		On entry : 0/0
 12934 ;;		On exit  : 0/0
 12935 ;;		Unchanged: 0/0
 12936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12937 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
 12938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12939 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
 12940 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
 12941 ;;Total ram usage:       12 bytes
 12942 ;; Hardware stack levels used:    1
 12943 ;; Hardware stack levels required when called:    7
 12944 ;; This function calls:
 12945 ;;		Nothing
 12946 ;; This function is called by:
 12947 ;;		_sprintf
 12948 ;; This function uses a non-reentrant model
 12949 ;;
 12950                           
 12951                           
 12952                           ;psect for function ___fleq
 12953  0000'                    ___fleq:
 12954  0000'                    l8758:	
 12955                           ;incstack = 0
 12956                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 12957                           
 12958  0000' 3000               	movlw	0
 12959  0001' 0022               	movlb	2	; select bank2
 12960  0002' 0500'              	andwf	___fleq@ff1^(0+256),w
 12961  0003' 0080'              	movwf	??___fleq^(0+256)
 12962  0004' 3000               	movlw	0
 12963  0005' 0500'              	andwf	(___fleq@ff1+1)^(0+256),w
 12964  0006' 0081'              	movwf	(??___fleq^(0+256)+1)
 12965  0007' 3080               	movlw	128
 12966  0008' 0500'              	andwf	(___fleq@ff1+2)^(0+256),w
 12967  0009' 0082'              	movwf	(??___fleq^(0+256)+2)
 12968  000A' 307F               	movlw	127
 12969  000B' 0500'              	andwf	(___fleq@ff1+3)^(0+256),w
 12970  000C' 0083'              	movwf	(??___fleq^(0+256)+3)
 12971  000D' 0800'              	movf	(??___fleq+3)^(0+256),w
 12972  000E' 0400'              	iorwf	(??___fleq+2)^(0+256),w
 12973  000F' 0400'              	iorwf	(??___fleq+1)^(0+256),w
 12974  0010' 0400'              	iorwf	??___fleq^(0+256),w
 12975  0011' 1D03               	skipz
 12976  0012' 2800'              	goto	u14031
 12977  0013' 2800'              	goto	u14030
 12978  0014'                    u14031:
 12979  0014' 2800'              	goto	l1367
 12980  0015'                    u14030:
 12981  0015'                    l8760:
 12982  0015' 3000               	movlw	0
 12983  0016' 0080'              	movwf	(___fleq@ff1+3)^(0+256)
 12984  0017' 3000               	movlw	0
 12985  0018' 0080'              	movwf	(___fleq@ff1+2)^(0+256)
 12986  0019' 3000               	movlw	0
 12987  001A' 0080'              	movwf	(___fleq@ff1+1)^(0+256)
 12988  001B' 3000               	movlw	0
 12989  001C' 0080'              	movwf	___fleq@ff1^(0+256)
 12990  001D'                    l1367:
 12991  001D' 3000               	movlw	0
 12992  001E' 0500'              	andwf	___fleq@ff2^(0+256),w
 12993  001F' 0080'              	movwf	??___fleq^(0+256)
 12994  0020' 3000               	movlw	0
 12995  0021' 0500'              	andwf	(___fleq@ff2+1)^(0+256),w
 12996  0022' 0081'              	movwf	(??___fleq^(0+256)+1)
 12997  0023' 3080               	movlw	128
 12998  0024' 0500'              	andwf	(___fleq@ff2+2)^(0+256),w
 12999  0025' 0082'              	movwf	(??___fleq^(0+256)+2)
 13000  0026' 307F               	movlw	127
 13001  0027' 0500'              	andwf	(___fleq@ff2+3)^(0+256),w
 13002  0028' 0083'              	movwf	(??___fleq^(0+256)+3)
 13003  0029' 0800'              	movf	(??___fleq+3)^(0+256),w
 13004  002A' 0400'              	iorwf	(??___fleq+2)^(0+256),w
 13005  002B' 0400'              	iorwf	(??___fleq+1)^(0+256),w
 13006  002C' 0400'              	iorwf	??___fleq^(0+256),w
 13007  002D' 1D03               	skipz
 13008  002E' 2800'              	goto	u14041
 13009  002F' 2800'              	goto	u14040
 13010  0030'                    u14041:
 13011  0030' 2800'              	goto	l1368
 13012  0031'                    u14040:
 13013  0031'                    l8762:
 13014  0031' 3000               	movlw	0
 13015  0032' 0080'              	movwf	(___fleq@ff2+3)^(0+256)
 13016  0033' 3000               	movlw	0
 13017  0034' 0080'              	movwf	(___fleq@ff2+2)^(0+256)
 13018  0035' 3000               	movlw	0
 13019  0036' 0080'              	movwf	(___fleq@ff2+1)^(0+256)
 13020  0037' 3000               	movlw	0
 13021  0038' 0080'              	movwf	___fleq@ff2^(0+256)
 13022  0039'                    l1368:
 13023  0039' 0800'              	movf	(___fleq@ff2+3)^(0+256),w
 13024  003A' 0600'              	xorwf	(___fleq@ff1+3)^(0+256),w
 13025  003B' 1D03               	skipz
 13026  003C' 2800'              	goto	u14055
 13027  003D' 0800'              	movf	(___fleq@ff2+2)^(0+256),w
 13028  003E' 0600'              	xorwf	(___fleq@ff1+2)^(0+256),w
 13029  003F' 1D03               	skipz
 13030  0040' 2800'              	goto	u14055
 13031  0041' 0800'              	movf	(___fleq@ff2+1)^(0+256),w
 13032  0042' 0600'              	xorwf	(___fleq@ff1+1)^(0+256),w
 13033  0043' 1D03               	skipz
 13034  0044' 2800'              	goto	u14055
 13035  0045' 0800'              	movf	___fleq@ff2^(0+256),w
 13036  0046' 0600'              	xorwf	___fleq@ff1^(0+256),w
 13037  0047'                    u14055:
 13038  0047' 1903               	skipnz
 13039  0048' 2800'              	goto	u14051
 13040  0049' 2800'              	goto	u14050
 13041  004A'                    u14051:
 13042  004A' 2800'              	goto	l8766
 13043  004B'                    u14050:
 13044  004B'                    l8764:
 13045  004B' 1003               	clrc
 13046  004C' 2800'              	goto	l1369
 13047  004D'                    l8766:
 13048  004D' 1403               	setc
 13049  004E'                    l1369:
 13050  004E' 0008               	return
 13051  004F'                    __end_of___fleq:
 13052                           
 13053                           	psect	text23
 13054  0000'                    __ptext23:	
 13055 ;; *************** function _i2c1_driver_open *****************
 13056 ;; Defined at:
 13057 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
 13058 ;; Parameters:    Size  Location     Type
 13059 ;;		None
 13060 ;; Auto vars:     Size  Location     Type
 13061 ;;		None
 13062 ;; Return value:  Size  Location     Type
 13063 ;;		None               void
 13064 ;; Registers used:
 13065 ;;		wreg, status,2
 13066 ;; Tracked objects:
 13067 ;;		On entry : 0/0
 13068 ;;		On exit  : 0/0
 13069 ;;		Unchanged: 0/0
 13070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13075 ;;Total ram usage:        0 bytes
 13076 ;; Hardware stack levels used:    1
 13077 ;; Hardware stack levels required when called:    7
 13078 ;; This function calls:
 13079 ;;		Nothing
 13080 ;; This function is called by:
 13081 ;;		_main
 13082 ;; This function uses a non-reentrant model
 13083 ;;
 13084                           
 13085                           
 13086                           ;psect for function _i2c1_driver_open
 13087  0000'                    _i2c1_driver_open:
 13088  0000'                    l7314:	
 13089                           ;incstack = 0
 13090                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 13091                           
 13092                           
 13093                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
 13094  0000' 0023               	movlb	3	; select bank3
 13095  0001' 1A90               	btfsc	16,5	;volatile
 13096  0002' 2800'              	goto	u11031
 13097  0003' 2800'              	goto	u11030
 13098  0004'                    u11031:
 13099  0004' 2800'              	goto	l237
 13100  0005'                    u11030:
 13101  0005'                    l7316:
 13102                           
 13103                           ;i2c1_driver.c: 86: {;i2c1_driver.c: 87: SSP1STAT = 0x00;
 13104  0005' 018F               	clrf	15	;volatile
 13105  0006'                    l7318:
 13106                           
 13107                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
 13108  0006' 3028               	movlw	40
 13109  0007' 0090               	movwf	16	;volatile
 13110  0008'                    l7320:
 13111                           
 13112                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
 13113  0008' 0191               	clrf	17	;volatile
 13114                           
 13115                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
 13116  0009' 3003               	movlw	3
 13117  000A' 008D               	movwf	13	;volatile
 13118  000B'                    l237:
 13119  000B' 0008               	return
 13120  000C'                    __end_of_i2c1_driver_open:
 13121                           
 13122                           	psect	text24
 13123  0000'                    __ptext24:	
 13124 ;; *************** function _Timer1 *****************
 13125 ;; Defined at:
 13126 ;;		line 224 in file "main.c"
 13127 ;; Parameters:    Size  Location     Type
 13128 ;;		None
 13129 ;; Auto vars:     Size  Location     Type
 13130 ;;		None
 13131 ;; Return value:  Size  Location     Type
 13132 ;;                  1    wreg      void 
 13133 ;; Registers used:
 13134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13135 ;; Tracked objects:
 13136 ;;		On entry : 0/0
 13137 ;;		On exit  : 0/0
 13138 ;;		Unchanged: 0/0
 13139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13144 ;;Total ram usage:        0 bytes
 13145 ;; Hardware stack levels used:    1
 13146 ;; Hardware stack levels required when called:    8
 13147 ;; This function calls:
 13148 ;;		_TMR0_SetInterruptHandler
 13149 ;;		_TMR1_SetInterruptHandler
 13150 ;; This function is called by:
 13151 ;;		_main
 13152 ;; This function uses a non-reentrant model
 13153 ;;
 13154                           
 13155                           
 13156                           ;psect for function _Timer1
 13157  0000'                    _Timer1:
 13158  0000'                    l9232:	
 13159                           ;incstack = 0
 13160                           ; Regs used in _Timer1: [allreg]
 13161                           
 13162                           
 13163                           ;main.c: 225: if (projectState == 0) {
 13164  0000' 0022               	movlb	2	; select bank2
 13165  0001' 0800'              	movf	_projectState^(0+256),w
 13166  0002' 1D03               	btfss	3,2
 13167  0003' 2800'              	goto	u14961
 13168  0004' 2800'              	goto	u14960
 13169  0005'                    u14961:
 13170  0005' 2800'              	goto	l803
 13171  0006'                    u14960:
 13172  0006'                    l9234:
 13173                           
 13174                           ;main.c: 226: TMR1_SetInterruptHandler(count_time_ISR);
 13175  0006' 3000'              	movlw	low _count_time_ISR
 13176  0007' 0080'              	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+256)
 13177  0008' 3000'              	movlw	high _count_time_ISR
 13178  0009' 0081'              	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+256)+1)
 13179  000A' 3180' 2000' 3180'  	fcall	_TMR1_SetInterruptHandler
 13180  000D'                    l9236:
 13181                           
 13182                           ;main.c: 227: TMR0_SetInterruptHandler(sensor_ISR);
 13183  000D' 3000               	movlw	0
 13184  000E' 0022               	movlb	2	; select bank2
 13185  000F' 0080'              	movwf	_TMR0_SetInterruptHandler$0^(0+256)
 13186  0010' 3000               	movlw	0
 13187  0011' 0081'              	movwf	(_TMR0_SetInterruptHandler$0^(0+256)+1)
 13188  0012' 3180' 2000' 3180'  	fcall	_TMR0_SetInterruptHandler
 13189  0015'                    l9238:
 13190                           
 13191                           ;main.c: 228: projectState = 1;
 13192  0015' 0022               	movlb	2	; select bank2
 13193  0016' 0180'              	clrf	_projectState^(0+256)
 13194  0017' 0A80'              	incf	_projectState^(0+256),f
 13195  0018'                    l803:
 13196  0018' 0008               	return
 13197  0019'                    __end_of_Timer1:
 13198                           
 13199                           	psect	text25
 13200  0000'                    __ptext25:	
 13201 ;; *************** function _SYSTEM_Initialize *****************
 13202 ;; Defined at:
 13203 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13204 ;; Parameters:    Size  Location     Type
 13205 ;;		None
 13206 ;; Auto vars:     Size  Location     Type
 13207 ;;		None
 13208 ;; Return value:  Size  Location     Type
 13209 ;;                  1    wreg      void 
 13210 ;; Registers used:
 13211 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13212 ;; Tracked objects:
 13213 ;;		On entry : 0/0
 13214 ;;		On exit  : 0/0
 13215 ;;		Unchanged: 0/0
 13216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13221 ;;Total ram usage:        0 bytes
 13222 ;; Hardware stack levels used:    1
 13223 ;; Hardware stack levels required when called:    9
 13224 ;; This function calls:
 13225 ;;		_ADCC_Initialize
 13226 ;;		_EXT_INT_Initialize
 13227 ;;		_OSCILLATOR_Initialize
 13228 ;;		_PIN_MANAGER_Initialize
 13229 ;;		_PMD_Initialize
 13230 ;;		_TMR0_Initialize
 13231 ;;		_TMR1_Initialize
 13232 ;; This function is called by:
 13233 ;;		_main
 13234 ;; This function uses a non-reentrant model
 13235 ;;
 13236                           
 13237                           
 13238                           ;psect for function _SYSTEM_Initialize
 13239  0000'                    _SYSTEM_Initialize:
 13240  0000'                    l7300:	
 13241                           ;incstack = 0
 13242                           ; Regs used in _SYSTEM_Initialize: [allreg]
 13243                           
 13244                           
 13245                           ;mcc.c: 52: PMD_Initialize();
 13246  0000' 3180' 2000' 3180'  	fcall	_PMD_Initialize
 13247  0003'                    l7302:
 13248                           
 13249                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 13250  0003' 3180' 2000' 3180'  	fcall	_PIN_MANAGER_Initialize
 13251  0006'                    l7304:
 13252                           
 13253                           ;mcc.c: 54: OSCILLATOR_Initialize();
 13254  0006' 3180' 2000' 3180'  	fcall	_OSCILLATOR_Initialize
 13255  0009'                    l7306:
 13256                           
 13257                           ;mcc.c: 55: ADCC_Initialize();
 13258  0009' 3180' 2000' 3180'  	fcall	_ADCC_Initialize
 13259  000C'                    l7308:
 13260                           
 13261                           ;mcc.c: 56: TMR1_Initialize();
 13262  000C' 3180' 2000' 3180'  	fcall	_TMR1_Initialize
 13263  000F'                    l7310:
 13264                           
 13265                           ;mcc.c: 57: EXT_INT_Initialize();
 13266  000F' 3180' 2000' 3180'  	fcall	_EXT_INT_Initialize
 13267  0012'                    l7312:
 13268                           
 13269                           ;mcc.c: 58: TMR0_Initialize();
 13270  0012' 3180' 2000' 3180'  	fcall	_TMR0_Initialize
 13271  0015'                    l170:
 13272  0015' 0008               	return
 13273  0016'                    __end_of_SYSTEM_Initialize:
 13274                           
 13275                           	psect	text26
 13276  0000'                    __ptext26:	
 13277 ;; *************** function _TMR1_Initialize *****************
 13278 ;; Defined at:
 13279 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 13280 ;; Parameters:    Size  Location     Type
 13281 ;;		None
 13282 ;; Auto vars:     Size  Location     Type
 13283 ;;		None
 13284 ;; Return value:  Size  Location     Type
 13285 ;;                  1    wreg      void 
 13286 ;; Registers used:
 13287 ;;		wreg, status,2, status,0, pclath, cstack
 13288 ;; Tracked objects:
 13289 ;;		On entry : 0/0
 13290 ;;		On exit  : 0/0
 13291 ;;		Unchanged: 0/0
 13292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13297 ;;Total ram usage:        0 bytes
 13298 ;; Hardware stack levels used:    1
 13299 ;; Hardware stack levels required when called:    8
 13300 ;; This function calls:
 13301 ;;		_TMR1_SetInterruptHandler
 13302 ;; This function is called by:
 13303 ;;		_SYSTEM_Initialize
 13304 ;; This function uses a non-reentrant model
 13305 ;;
 13306                           
 13307                           
 13308                           ;psect for function _TMR1_Initialize
 13309  0000'                    _TMR1_Initialize:
 13310  0000'                    l6832:	
 13311                           ;incstack = 0
 13312                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13313                           
 13314                           
 13315                           ;tmr1.c: 69: T1GCON = 0x00;
 13316  0000' 0024               	movlb	4	; select bank4
 13317  0001' 018F               	clrf	15	;volatile
 13318                           
 13319                           ;tmr1.c: 72: T1GATE = 0x00;
 13320  0002' 0190               	clrf	16	;volatile
 13321  0003'                    l6834:
 13322                           
 13323                           ;tmr1.c: 75: T1CLK = 0x04;
 13324  0003' 3004               	movlw	4
 13325  0004' 0091               	movwf	17	;volatile
 13326  0005'                    l6836:
 13327                           
 13328                           ;tmr1.c: 78: TMR1H = 0x86;
 13329  0005' 3086               	movlw	134
 13330  0006' 008D               	movwf	13	;volatile
 13331  0007'                    l6838:
 13332                           
 13333                           ;tmr1.c: 81: TMR1L = 0xE8;
 13334  0007' 30E8               	movlw	232
 13335  0008' 008C               	movwf	12	;volatile
 13336  0009'                    l6840:
 13337                           
 13338                           ;tmr1.c: 84: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 13339  0009' 080D               	movf	13,w	;volatile
 13340  000A' 0021               	movlb	1	; select bank1
 13341  000B' 0080'              	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
 13342  000C' 0024               	movlb	4	; select bank4
 13343  000D' 080C               	movf	12,w	;volatile
 13344  000E' 0021               	movlb	1	; select bank1
 13345  000F' 0080'              	movwf	_timer1ReloadVal^(0+128)	;volatile
 13346  0010'                    l6842:
 13347                           
 13348                           ;tmr1.c: 87: PIR4bits.TMR1IF = 0;
 13349  0010' 002E               	movlb	14	; select bank14
 13350  0011' 1010               	bcf	16,0	;volatile
 13351  0012'                    l6844:
 13352                           
 13353                           ;tmr1.c: 90: PIE4bits.TMR1IE = 1;
 13354  0012' 141A               	bsf	26,0	;volatile
 13355  0013'                    l6846:
 13356                           
 13357                           ;tmr1.c: 93: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 13358  0013' 3000'              	movlw	low _TMR1_DefaultInterruptHandler
 13359  0014' 0022               	movlb	2	; select bank2
 13360  0015' 0080'              	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+256)
 13361  0016' 3000'              	movlw	high _TMR1_DefaultInterruptHandler
 13362  0017' 0081'              	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+256)+1)
 13363  0018' 3180' 2000' 3180'  	fcall	_TMR1_SetInterruptHandler
 13364  001B'                    l6848:
 13365                           
 13366                           ;tmr1.c: 96: T1CON = 0x05;
 13367  001B' 3005               	movlw	5
 13368  001C' 0024               	movlb	4	; select bank4
 13369  001D' 008E               	movwf	14	;volatile
 13370  001E'                    l389:
 13371  001E' 0008               	return
 13372  001F'                    __end_of_TMR1_Initialize:
 13373                           
 13374                           	psect	text27
 13375  0000'                    __ptext27:	
 13376 ;; *************** function _TMR1_SetInterruptHandler *****************
 13377 ;; Defined at:
 13378 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 13379 ;; Parameters:    Size  Location     Type
 13380 ;;  InterruptHan    2    0[BANK2 ] PTR FTN()void 
 13381 ;;		 -> count_time_ISR(1), TMR1_DefaultInterruptHandler(1), 
 13382 ;; Auto vars:     Size  Location     Type
 13383 ;;		None
 13384 ;; Return value:  Size  Location     Type
 13385 ;;                  1    wreg      void 
 13386 ;; Registers used:
 13387 ;;		wreg
 13388 ;; Tracked objects:
 13389 ;;		On entry : 0/0
 13390 ;;		On exit  : 0/0
 13391 ;;		Unchanged: 0/0
 13392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13393 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 13394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13396 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 13397 ;;Total ram usage:        2 bytes
 13398 ;; Hardware stack levels used:    1
 13399 ;; Hardware stack levels required when called:    7
 13400 ;; This function calls:
 13401 ;;		Nothing
 13402 ;; This function is called by:
 13403 ;;		_TMR1_Initialize
 13404 ;;		_Timer1
 13405 ;; This function uses a non-reentrant model
 13406 ;;
 13407                           
 13408                           
 13409                           ;psect for function _TMR1_SetInterruptHandler
 13410  0000'                    _TMR1_SetInterruptHandler:
 13411  0000'                    l5926:	
 13412                           ;incstack = 0
 13413                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 13414                           
 13415                           
 13416                           ;tmr1.c: 179: TMR1_InterruptHandler = InterruptHandler;
 13417  0000' 0022               	movlb	2	; select bank2
 13418  0001' 0800'              	movf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+256),w
 13419  0002' 0021               	movlb	1	; select bank1
 13420  0003' 0080'              	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 13421  0004' 0022               	movlb	2	; select bank2
 13422  0005' 0800'              	movf	TMR1_SetInterruptHandler@InterruptHandler^(0+256),w
 13423  0006' 0021               	movlb	1	; select bank1
 13424  0007' 0080'              	movwf	_TMR1_InterruptHandler^(0+128)
 13425  0008'                    l419:
 13426  0008' 0008               	return
 13427  0009'                    __end_of_TMR1_SetInterruptHandler:
 13428                           
 13429                           	psect	text28
 13430  0000'                    __ptext28:	
 13431 ;; *************** function _PMD_Initialize *****************
 13432 ;; Defined at:
 13433 ;;		line 75 in file "mcc_generated_files/mcc.c"
 13434 ;; Parameters:    Size  Location     Type
 13435 ;;		None
 13436 ;; Auto vars:     Size  Location     Type
 13437 ;;		None
 13438 ;; Return value:  Size  Location     Type
 13439 ;;                  1    wreg      void 
 13440 ;; Registers used:
 13441 ;;		status,2
 13442 ;; Tracked objects:
 13443 ;;		On entry : 0/0
 13444 ;;		On exit  : 0/0
 13445 ;;		Unchanged: 0/0
 13446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13451 ;;Total ram usage:        0 bytes
 13452 ;; Hardware stack levels used:    1
 13453 ;; Hardware stack levels required when called:    7
 13454 ;; This function calls:
 13455 ;;		Nothing
 13456 ;; This function is called by:
 13457 ;;		_SYSTEM_Initialize
 13458 ;; This function uses a non-reentrant model
 13459 ;;
 13460                           
 13461                           
 13462                           ;psect for function _PMD_Initialize
 13463  0000'                    _PMD_Initialize:
 13464  0000'                    l6816:	
 13465                           ;incstack = 0
 13466                           ; Regs used in _PMD_Initialize: [status,2]
 13467                           
 13468                           
 13469                           ;mcc.c: 78: PMD0 = 0x00;
 13470  0000' 002F               	movlb	15	; select bank15
 13471  0001' 0196               	clrf	22	;volatile
 13472                           
 13473                           ;mcc.c: 80: PMD1 = 0x00;
 13474  0002' 0197               	clrf	23	;volatile
 13475                           
 13476                           ;mcc.c: 82: PMD2 = 0x00;
 13477  0003' 0198               	clrf	24	;volatile
 13478                           
 13479                           ;mcc.c: 84: PMD3 = 0x00;
 13480  0004' 0199               	clrf	25	;volatile
 13481                           
 13482                           ;mcc.c: 86: PMD4 = 0x00;
 13483  0005' 019A               	clrf	26	;volatile
 13484                           
 13485                           ;mcc.c: 88: PMD5 = 0x00;
 13486  0006' 019B               	clrf	27	;volatile
 13487  0007'                    l176:
 13488  0007' 0008               	return
 13489  0008'                    __end_of_PMD_Initialize:
 13490                           
 13491                           	psect	text29
 13492  0000'                    __ptext29:	
 13493 ;; *************** function _PIN_MANAGER_Initialize *****************
 13494 ;; Defined at:
 13495 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 13496 ;; Parameters:    Size  Location     Type
 13497 ;;		None
 13498 ;; Auto vars:     Size  Location     Type
 13499 ;;		None
 13500 ;; Return value:  Size  Location     Type
 13501 ;;                  1    wreg      void 
 13502 ;; Registers used:
 13503 ;;		wreg, status,2
 13504 ;; Tracked objects:
 13505 ;;		On entry : 0/0
 13506 ;;		On exit  : 0/0
 13507 ;;		Unchanged: 0/0
 13508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13513 ;;Total ram usage:        0 bytes
 13514 ;; Hardware stack levels used:    1
 13515 ;; Hardware stack levels required when called:    7
 13516 ;; This function calls:
 13517 ;;		Nothing
 13518 ;; This function is called by:
 13519 ;;		_SYSTEM_Initialize
 13520 ;; This function uses a non-reentrant model
 13521 ;;
 13522                           
 13523                           
 13524                           ;psect for function _PIN_MANAGER_Initialize
 13525  0000'                    _PIN_MANAGER_Initialize:
 13526  0000'                    l6772:	
 13527                           ;incstack = 0
 13528                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 13529                           
 13530                           
 13531                           ;pin_manager.c: 62: LATE = 0x00;
 13532  0000' 0020               	movlb	0	; select bank0
 13533  0001' 019A               	clrf	26	;volatile
 13534                           
 13535                           ;pin_manager.c: 63: LATD = 0x00;
 13536  0002' 0199               	clrf	25	;volatile
 13537                           
 13538                           ;pin_manager.c: 64: LATA = 0x00;
 13539  0003' 0196               	clrf	22	;volatile
 13540                           
 13541                           ;pin_manager.c: 65: LATB = 0x00;
 13542  0004' 0197               	clrf	23	;volatile
 13543                           
 13544                           ;pin_manager.c: 66: LATC = 0x00;
 13545  0005' 0198               	clrf	24	;volatile
 13546  0006'                    l6774:
 13547                           
 13548                           ;pin_manager.c: 71: TRISE = 0x07;
 13549  0006' 3007               	movlw	7
 13550  0007' 0095               	movwf	21	;volatile
 13551  0008'                    l6776:
 13552                           
 13553                           ;pin_manager.c: 72: TRISA = 0xFF;
 13554  0008' 30FF               	movlw	255
 13555  0009' 0091               	movwf	17	;volatile
 13556  000A'                    l6778:
 13557                           
 13558                           ;pin_manager.c: 73: TRISB = 0xFF;
 13559  000A' 30FF               	movlw	255
 13560  000B' 0092               	movwf	18	;volatile
 13561  000C'                    l6780:
 13562                           
 13563                           ;pin_manager.c: 74: TRISC = 0xFF;
 13564  000C' 30FF               	movlw	255
 13565  000D' 0093               	movwf	19	;volatile
 13566  000E'                    l6782:
 13567                           
 13568                           ;pin_manager.c: 75: TRISD = 0xFF;
 13569  000E' 30FF               	movlw	255
 13570  000F' 0094               	movwf	20	;volatile
 13571  0010'                    l6784:
 13572                           
 13573                           ;pin_manager.c: 80: ANSELD = 0xFF;
 13574  0010' 30FF               	movlw	255
 13575  0011' 003E               	movlb	30	; select bank30
 13576  0012' 00D9               	movwf	89	;volatile
 13577  0013'                    l6786:
 13578                           
 13579                           ;pin_manager.c: 81: ANSELC = 0xE7;
 13580  0013' 30E7               	movlw	231
 13581  0014' 00CE               	movwf	78	;volatile
 13582  0015'                    l6788:
 13583                           
 13584                           ;pin_manager.c: 82: ANSELB = 0xFE;
 13585  0015' 30FE               	movlw	254
 13586  0016' 00C3               	movwf	67	;volatile
 13587  0017'                    l6790:
 13588                           
 13589                           ;pin_manager.c: 83: ANSELE = 0x07;
 13590  0017' 3007               	movlw	7
 13591  0018' 00E4               	movwf	100	;volatile
 13592  0019'                    l6792:
 13593                           
 13594                           ;pin_manager.c: 84: ANSELA = 0xEF;
 13595  0019' 30EF               	movlw	239
 13596  001A' 00B8               	movwf	56	;volatile
 13597                           
 13598                           ;pin_manager.c: 89: WPUD = 0x00;
 13599  001B' 01DA               	clrf	90	;volatile
 13600                           
 13601                           ;pin_manager.c: 90: WPUE = 0x00;
 13602  001C' 01E5               	clrf	101	;volatile
 13603                           
 13604                           ;pin_manager.c: 91: WPUB = 0x00;
 13605  001D' 01C4               	clrf	68	;volatile
 13606                           
 13607                           ;pin_manager.c: 92: WPUA = 0x00;
 13608  001E' 01B9               	clrf	57	;volatile
 13609                           
 13610                           ;pin_manager.c: 93: WPUC = 0x00;
 13611  001F' 01CF               	clrf	79	;volatile
 13612                           
 13613                           ;pin_manager.c: 98: ODCONE = 0x00;
 13614  0020' 01E6               	clrf	102	;volatile
 13615                           
 13616                           ;pin_manager.c: 99: ODCONA = 0x00;
 13617  0021' 01BA               	clrf	58	;volatile
 13618                           
 13619                           ;pin_manager.c: 100: ODCONB = 0x00;
 13620  0022' 01C5               	clrf	69	;volatile
 13621                           
 13622                           ;pin_manager.c: 101: ODCONC = 0x00;
 13623  0023' 01D0               	clrf	80	;volatile
 13624                           
 13625                           ;pin_manager.c: 102: ODCOND = 0x00;
 13626  0024' 01DB               	clrf	91	;volatile
 13627  0025'                    l6794:
 13628                           
 13629                           ;pin_manager.c: 107: SLRCONA = 0xFF;
 13630  0025' 30FF               	movlw	255
 13631  0026' 00BB               	movwf	59	;volatile
 13632  0027'                    l6796:
 13633                           
 13634                           ;pin_manager.c: 108: SLRCONB = 0xFF;
 13635  0027' 30FF               	movlw	255
 13636  0028' 00C6               	movwf	70	;volatile
 13637  0029'                    l6798:
 13638                           
 13639                           ;pin_manager.c: 109: SLRCONC = 0xFF;
 13640  0029' 30FF               	movlw	255
 13641  002A' 00D1               	movwf	81	;volatile
 13642  002B'                    l6800:
 13643                           
 13644                           ;pin_manager.c: 110: SLRCOND = 0xFF;
 13645  002B' 30FF               	movlw	255
 13646  002C' 00DC               	movwf	92	;volatile
 13647  002D'                    l6802:
 13648                           
 13649                           ;pin_manager.c: 111: SLRCONE = 0x07;
 13650  002D' 3007               	movlw	7
 13651  002E' 00E7               	movwf	103	;volatile
 13652  002F'                    l6804:
 13653                           
 13654                           ;pin_manager.c: 120: INTPPS = 0x08;
 13655  002F' 3008               	movlw	8
 13656  0030' 003D               	movlb	29	; select bank29
 13657  0031' 0090               	movwf	16	;volatile
 13658  0032'                    l6806:
 13659                           
 13660                           ;pin_manager.c: 121: SSP1CLKPPS = 0x13;
 13661  0032' 3013               	movlw	19
 13662  0033' 00C5               	movwf	69	;volatile
 13663  0034'                    l6808:
 13664                           
 13665                           ;pin_manager.c: 122: RC3PPS = 0x14;
 13666  0034' 3014               	movlw	20
 13667  0035' 003E               	movlb	30	; select bank30
 13668  0036' 00A3               	movwf	35	;volatile
 13669  0037'                    l6810:
 13670                           
 13671                           ;pin_manager.c: 123: RC4PPS = 0x15;
 13672  0037' 3015               	movlw	21
 13673  0038' 00A4               	movwf	36	;volatile
 13674  0039'                    l6812:
 13675                           
 13676                           ;pin_manager.c: 124: T0CKIPPS = 0x04;
 13677  0039' 3004               	movlw	4
 13678  003A' 003D               	movlb	29	; select bank29
 13679  003B' 0091               	movwf	17	;volatile
 13680  003C'                    l6814:
 13681                           
 13682                           ;pin_manager.c: 125: SSP1DATPPS = 0x14;
 13683  003C' 3014               	movlw	20
 13684  003D' 00C6               	movwf	70	;volatile
 13685  003E'                    l124:
 13686  003E' 0008               	return
 13687  003F'                    __end_of_PIN_MANAGER_Initialize:
 13688                           
 13689                           	psect	text30
 13690  0000'                    __ptext30:	
 13691 ;; *************** function _OSCILLATOR_Initialize *****************
 13692 ;; Defined at:
 13693 ;;		line 61 in file "mcc_generated_files/mcc.c"
 13694 ;; Parameters:    Size  Location     Type
 13695 ;;		None
 13696 ;; Auto vars:     Size  Location     Type
 13697 ;;		None
 13698 ;; Return value:  Size  Location     Type
 13699 ;;                  1    wreg      void 
 13700 ;; Registers used:
 13701 ;;		wreg, status,2
 13702 ;; Tracked objects:
 13703 ;;		On entry : 0/0
 13704 ;;		On exit  : 0/0
 13705 ;;		Unchanged: 0/0
 13706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13711 ;;Total ram usage:        0 bytes
 13712 ;; Hardware stack levels used:    1
 13713 ;; Hardware stack levels required when called:    7
 13714 ;; This function calls:
 13715 ;;		Nothing
 13716 ;; This function is called by:
 13717 ;;		_SYSTEM_Initialize
 13718 ;; This function uses a non-reentrant model
 13719 ;;
 13720                           
 13721                           
 13722                           ;psect for function _OSCILLATOR_Initialize
 13723  0000'                    _OSCILLATOR_Initialize:
 13724  0000'                    l6818:	
 13725                           ;incstack = 0
 13726                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 13727                           
 13728                           
 13729                           ;mcc.c: 64: OSCCON1 = 0x52;
 13730  0000' 3052               	movlw	82
 13731  0001' 0031               	movlb	17	; select bank17
 13732  0002' 008D               	movwf	13	;volatile
 13733  0003'                    l6820:
 13734                           
 13735                           ;mcc.c: 66: OSCCON3 = 0x00;
 13736  0003' 018F               	clrf	15	;volatile
 13737  0004'                    l6822:
 13738                           
 13739                           ;mcc.c: 68: OSCEN = 0x00;
 13740  0004' 0191               	clrf	17	;volatile
 13741                           
 13742                           ;mcc.c: 70: OSCFRQ = 0x02;
 13743  0005' 3002               	movlw	2
 13744  0006' 0093               	movwf	19	;volatile
 13745  0007'                    l6824:
 13746                           
 13747                           ;mcc.c: 72: OSCTUNE = 0x00;
 13748  0007' 0192               	clrf	18	;volatile
 13749  0008'                    l173:
 13750  0008' 0008               	return
 13751  0009'                    __end_of_OSCILLATOR_Initialize:
 13752                           
 13753                           	psect	text31
 13754  0000'                    __ptext31:	
 13755 ;; *************** function _ADCC_Initialize *****************
 13756 ;; Defined at:
 13757 ;;		line 63 in file "mcc_generated_files/adcc.c"
 13758 ;; Parameters:    Size  Location     Type
 13759 ;;		None
 13760 ;; Auto vars:     Size  Location     Type
 13761 ;;		None
 13762 ;; Return value:  Size  Location     Type
 13763 ;;                  1    wreg      void 
 13764 ;; Registers used:
 13765 ;;		wreg, status,2
 13766 ;; Tracked objects:
 13767 ;;		On entry : 0/0
 13768 ;;		On exit  : 0/0
 13769 ;;		Unchanged: 0/0
 13770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13775 ;;Total ram usage:        0 bytes
 13776 ;; Hardware stack levels used:    1
 13777 ;; Hardware stack levels required when called:    7
 13778 ;; This function calls:
 13779 ;;		Nothing
 13780 ;; This function is called by:
 13781 ;;		_SYSTEM_Initialize
 13782 ;; This function uses a non-reentrant model
 13783 ;;
 13784                           
 13785                           
 13786                           ;psect for function _ADCC_Initialize
 13787  0000'                    _ADCC_Initialize:
 13788  0000'                    l6826:	
 13789                           ;incstack = 0
 13790                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 13791                           
 13792                           
 13793                           ;adcc.c: 67: ADLTHL = 0x00;
 13794  0000' 0022               	movlb	2	; select bank2
 13795  0001' 018E               	clrf	14	;volatile
 13796                           
 13797                           ;adcc.c: 69: ADLTHH = 0x00;
 13798  0002' 018F               	clrf	15	;volatile
 13799                           
 13800                           ;adcc.c: 71: ADUTHL = 0x00;
 13801  0003' 0190               	clrf	16	;volatile
 13802                           
 13803                           ;adcc.c: 73: ADUTHH = 0x00;
 13804  0004' 0191               	clrf	17	;volatile
 13805                           
 13806                           ;adcc.c: 75: ADSTPTL = 0x00;
 13807  0005' 0192               	clrf	18	;volatile
 13808                           
 13809                           ;adcc.c: 77: ADSTPTH = 0x00;
 13810  0006' 0193               	clrf	19	;volatile
 13811                           
 13812                           ;adcc.c: 79: ADRPT = 0x00;
 13813  0007' 018D               	clrf	13	;volatile
 13814                           
 13815                           ;adcc.c: 81: ADPCH = 0x00;
 13816  0008' 0021               	movlb	1	; select bank1
 13817  0009' 019E               	clrf	30	;volatile
 13818                           
 13819                           ;adcc.c: 83: ADCAP = 0x00;
 13820  000A' 019B               	clrf	27	;volatile
 13821                           
 13822                           ;adcc.c: 85: ADCON1 = 0x00;
 13823  000B' 0194               	clrf	20	;volatile
 13824                           
 13825                           ;adcc.c: 87: ADCON2 = 0x00;
 13826  000C' 0195               	clrf	21	;volatile
 13827                           
 13828                           ;adcc.c: 89: ADCON3 = 0x00;
 13829  000D' 0196               	clrf	22	;volatile
 13830                           
 13831                           ;adcc.c: 91: ADSTAT = 0x00;
 13832  000E' 0197               	clrf	23	;volatile
 13833                           
 13834                           ;adcc.c: 93: ADREF = 0x00;
 13835  000F' 019A               	clrf	26	;volatile
 13836                           
 13837                           ;adcc.c: 95: ADACT = 0x00;
 13838  0010' 0199               	clrf	25	;volatile
 13839                           
 13840                           ;adcc.c: 97: ADCLK = 0x00;
 13841  0011' 0198               	clrf	24	;volatile
 13842  0012'                    l6828:
 13843                           
 13844                           ;adcc.c: 99: ADCON0 = 0x80;
 13845  0012' 3080               	movlw	128
 13846  0013' 0093               	movwf	19	;volatile
 13847  0014'                    l6830:
 13848                           
 13849                           ;adcc.c: 101: ADACQ = 0x00;
 13850  0014' 019D               	clrf	29	;volatile
 13851  0015'                    l501:
 13852  0015' 0008               	return
 13853  0016'                    __end_of_ADCC_Initialize:
 13854                           
 13855                           	psect	text32
 13856  0000'                    __ptext32:	
 13857 ;; *************** function _LCDstr *****************
 13858 ;; Defined at:
 13859 ;;		line 160 in file "main.c"
 13860 ;; Parameters:    Size  Location     Type
 13861 ;;  p               2    9[BANK2 ] PTR unsigned char 
 13862 ;;		 -> sensor_ISR@buf(17), count_time_ISR@buf(17), main@buf(17), 
 13863 ;; Auto vars:     Size  Location     Type
 13864 ;;  c               1   14[BANK2 ] unsigned char 
 13865 ;; Return value:  Size  Location     Type
 13866 ;;                  1    wreg      void 
 13867 ;; Registers used:
 13868 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13869 ;; Tracked objects:
 13870 ;;		On entry : 0/0
 13871 ;;		On exit  : 0/0
 13872 ;;		Unchanged: 0/0
 13873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13874 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 13875 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 13876 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
 13877 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
 13878 ;;Total ram usage:        6 bytes
 13879 ;; Hardware stack levels used:    1
 13880 ;; Hardware stack levels required when called:   10
 13881 ;; This function calls:
 13882 ;;		_LCDchar
 13883 ;; This function is called by:
 13884 ;;		_main
 13885 ;;		_sensor_ISR
 13886 ;; This function uses a non-reentrant model
 13887 ;;
 13888                           
 13889                           
 13890                           ;psect for function _LCDstr
 13891  0000'                    _LCDstr:
 13892  0000'                    l7436:	
 13893                           ;incstack = 0
 13894                           ; Regs used in _LCDstr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13895                           
 13896                           
 13897                           ;main.c: 162: unsigned char c;;main.c: 164: while((c = *p++)) LCDchar(c);
 13898  0000' 2800'              	goto	l7440
 13899  0001'                    l7438:
 13900  0001' 0800'              	movf	LCDstr@c^(0+256),w
 13901  0002' 3180' 2000' 3180'  	fcall	_LCDchar
 13902  0005'                    l7440:
 13903  0005' 0022               	movlb	2	; select bank2
 13904  0006' 0800'              	movf	(LCDstr@p+1)^(0+256),w
 13905  0007' 0081'              	movwf	(??_LCDstr^(0+256)+1)
 13906  0008' 0800'              	movf	LCDstr@p^(0+256),w
 13907  0009' 0080'              	movwf	??_LCDstr^(0+256)
 13908  000A' 0A80'              	incf	LCDstr@p^(0+256),f
 13909  000B' 1903               	skipnz
 13910  000C' 0A80'              	incf	(LCDstr@p+1)^(0+256),f
 13911  000D' 0800'              	movf	??_LCDstr^(0+256),w
 13912  000E' 0086               	movwf	6
 13913  000F' 0800'              	movf	(??_LCDstr+1)^(0+256),w
 13914  0010' 0087               	movwf	7
 13915  0011' 0801               	movf	1,w
 13916  0012' 0080'              	movwf	(??_LCDstr+2)^(0+256)
 13917  0013' 0800'              	movf	(??_LCDstr+2)^(0+256),w
 13918  0014' 0080'              	movwf	LCDstr@c^(0+256)
 13919  0015' 0800'              	movf	LCDstr@c^(0+256),w
 13920  0016' 1D03               	btfss	3,2
 13921  0017' 2800'              	goto	u11321
 13922  0018' 2800'              	goto	u11320
 13923  0019'                    u11321:
 13924  0019' 2800'              	goto	l7438
 13925  001A'                    u11320:
 13926  001A'                    l787:
 13927  001A' 0008               	return
 13928  001B'                    __end_of_LCDstr:
 13929                           
 13930                           	psect	text33
 13931  0000'                    __ptext33:	
 13932 ;; *************** function _LCDchar *****************
 13933 ;; Defined at:
 13934 ;;		line 155 in file "main.c"
 13935 ;; Parameters:    Size  Location     Type
 13936 ;;  c               1    wreg     unsigned char 
 13937 ;; Auto vars:     Size  Location     Type
 13938 ;;  c               1    8[BANK2 ] unsigned char 
 13939 ;; Return value:  Size  Location     Type
 13940 ;;                  1    wreg      void 
 13941 ;; Registers used:
 13942 ;;		wreg, status,2, status,0, pclath, cstack
 13943 ;; Tracked objects:
 13944 ;;		On entry : 0/0
 13945 ;;		On exit  : 0/0
 13946 ;;		Unchanged: 0/0
 13947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13949 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 13950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13951 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 13952 ;;Total ram usage:        1 bytes
 13953 ;; Hardware stack levels used:    1
 13954 ;; Hardware stack levels required when called:    9
 13955 ;; This function calls:
 13956 ;;		_LCDsend2x4
 13957 ;; This function is called by:
 13958 ;;		_LCDstr
 13959 ;; This function uses a non-reentrant model
 13960 ;;
 13961                           
 13962                           
 13963                           ;psect for function _LCDchar
 13964  0000'                    _LCDchar:
 13965                           
 13966                           ;incstack = 0
 13967                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 13968                           ;LCDchar@c stored from wreg
 13969  0000' 0022               	movlb	2	; select bank2
 13970  0001' 0080'              	movwf	LCDchar@c^(0+256)
 13971  0002'                    l6892:
 13972                           
 13973                           ;main.c: 157: LCDsend2x4(c, 0x01);
 13974  0002' 0180'              	clrf	LCDsend2x4@mode^(0+256)
 13975  0003' 0A80'              	incf	LCDsend2x4@mode^(0+256),f
 13976  0004' 0800'              	movf	LCDchar@c^(0+256),w
 13977  0005' 3180' 2000' 3180'  	fcall	_LCDsend2x4
 13978  0008'                    l781:
 13979  0008' 0008               	return
 13980  0009'                    __end_of_LCDchar:
 13981                           
 13982                           	psect	text34
 13983  0000'                    __ptext34:	
 13984 ;; *************** function _LCDinit *****************
 13985 ;; Defined at:
 13986 ;;		line 127 in file "main.c"
 13987 ;; Parameters:    Size  Location     Type
 13988 ;;		None
 13989 ;; Auto vars:     Size  Location     Type
 13990 ;;		None
 13991 ;; Return value:  Size  Location     Type
 13992 ;;                  1    wreg      void 
 13993 ;; Registers used:
 13994 ;;		wreg, status,2, status,0, pclath, cstack
 13995 ;; Tracked objects:
 13996 ;;		On entry : 0/0
 13997 ;;		On exit  : 0/0
 13998 ;;		Unchanged: 0/0
 13999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14002 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 14003 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 14004 ;;Total ram usage:        1 bytes
 14005 ;; Hardware stack levels used:    1
 14006 ;; Hardware stack levels required when called:    9
 14007 ;; This function calls:
 14008 ;;		_LCDsend
 14009 ;;		_LCDsend2x4
 14010 ;; This function is called by:
 14011 ;;		_main
 14012 ;; This function uses a non-reentrant model
 14013 ;;
 14014                           
 14015                           
 14016                           ;psect for function _LCDinit
 14017  0000'                    _LCDinit:
 14018  0000'                    l7400:	
 14019                           ;incstack = 0
 14020                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 14021                           
 14022                           
 14023                           ;main.c: 129: _delay((unsigned long)((50)*(500000/4000.0)));
 14024  0000' 3009               	movlw	9
 14025  0001' 0022               	movlb	2	; select bank2
 14026  0002' 0080'              	movwf	??_LCDinit^(0+256)
 14027  0003' 301C               	movlw	28
 14028  0004'                    u14977:
 14029  0004' 0B89               	decfsz	9,f
 14030  0005' 2800'              	goto	u14977
 14031  0006' 0B80'              	decfsz	??_LCDinit^(0+256),f
 14032  0007' 2800'              	goto	u14977
 14033  0008' 0000               	nop
 14034  0009'                    l7402:
 14035                           
 14036                           ;main.c: 130: LCDsend(0x30);
 14037  0009' 3030               	movlw	48
 14038  000A' 3180' 2000' 3180'  	fcall	_LCDsend
 14039  000D'                    l7404:
 14040                           
 14041                           ;main.c: 131: LCDsend(0x34); _delay((unsigned long)((500)*(500000/4000000.0))); LCDsend(
      +                          0x30);
 14042  000D' 3034               	movlw	52
 14043  000E' 3180' 2000' 3180'  	fcall	_LCDsend
 14044  0011' 3014               	movlw	20
 14045  0012'                    u14987:
 14046  0012' 0B89               	decfsz	9,f
 14047  0013' 2800'              	goto	u14987
 14048  0014' 3200               	nop2
 14049  0015'                    l7406:
 14050  0015' 3030               	movlw	48
 14051  0016' 3180' 2000' 3180'  	fcall	_LCDsend
 14052  0019'                    l7408:
 14053                           
 14054                           ;main.c: 132: _delay((unsigned long)((5)*(500000/4000.0)));
 14055  0019' 30D0               	movlw	208
 14056  001A'                    u14997:
 14057  001A' 0B89               	decfsz	9,f
 14058  001B' 2800'              	goto	u14997
 14059  001C' 0000               	nop
 14060                           
 14061                           ;main.c: 133: LCDsend(0x30);
 14062  001D' 3030               	movlw	48
 14063  001E' 3180' 2000' 3180'  	fcall	_LCDsend
 14064                           
 14065                           ;main.c: 134: LCDsend(0x34); _delay((unsigned long)((500)*(500000/4000000.0))); LCDsend(
      +                          0x30);
 14066  0021' 3034               	movlw	52
 14067  0022' 3180' 2000' 3180'  	fcall	_LCDsend
 14068  0025'                    l7410:
 14069  0025' 3014               	movlw	20
 14070  0026'                    u15007:
 14071  0026' 0B89               	decfsz	9,f
 14072  0027' 2800'              	goto	u15007
 14073  0028' 3200               	nop2
 14074  0029'                    l7412:
 14075  0029' 3030               	movlw	48
 14076  002A' 3180' 2000' 3180'  	fcall	_LCDsend
 14077                           
 14078                           ;main.c: 135: _delay((unsigned long)((100)*(500000/4000000.0)));
 14079  002D' 3004               	movlw	4
 14080  002E'                    u15017:
 14081  002E' 0B89               	decfsz	9,f
 14082  002F' 2800'              	goto	u15017
 14083  0030'                    l7414:
 14084                           
 14085                           ;main.c: 136: LCDsend(0x30);
 14086  0030' 3030               	movlw	48
 14087  0031' 3180' 2000' 3180'  	fcall	_LCDsend
 14088  0034'                    l7416:
 14089                           
 14090                           ;main.c: 137: LCDsend(0x34); _delay((unsigned long)((500)*(500000/4000000.0))); LCDsend(
      +                          0x30);
 14091  0034' 3034               	movlw	52
 14092  0035' 3180' 2000' 3180'  	fcall	_LCDsend
 14093  0038' 3014               	movlw	20
 14094  0039'                    u15027:
 14095  0039' 0B89               	decfsz	9,f
 14096  003A' 2800'              	goto	u15027
 14097  003B' 3200               	nop2
 14098  003C'                    l7418:
 14099  003C' 3030               	movlw	48
 14100  003D' 3180' 2000' 3180'  	fcall	_LCDsend
 14101  0040'                    l7420:
 14102                           
 14103                           ;main.c: 138: _delay((unsigned long)((100)*(500000/4000000.0)));
 14104  0040' 3004               	movlw	4
 14105  0041'                    u15037:
 14106  0041' 0B89               	decfsz	9,f
 14107  0042' 2800'              	goto	u15037
 14108                           
 14109                           ;main.c: 139: LCDsend(0x20);
 14110  0043' 3020               	movlw	32
 14111  0044' 3180' 2000' 3180'  	fcall	_LCDsend
 14112                           
 14113                           ;main.c: 140: LCDsend(0x24); _delay((unsigned long)((500)*(500000/4000000.0))); LCDsend(
      +                          0x20);
 14114  0047' 3024               	movlw	36
 14115  0048' 3180' 2000' 3180'  	fcall	_LCDsend
 14116  004B'                    l7422:
 14117  004B' 3014               	movlw	20
 14118  004C'                    u15047:
 14119  004C' 0B89               	decfsz	9,f
 14120  004D' 2800'              	goto	u15047
 14121  004E' 3200               	nop2
 14122  004F'                    l7424:
 14123  004F' 3020               	movlw	32
 14124  0050' 3180' 2000' 3180'  	fcall	_LCDsend
 14125                           
 14126                           ;main.c: 141: _delay((unsigned long)((5)*(500000/4000.0)));
 14127  0053' 30D0               	movlw	208
 14128  0054'                    u15057:
 14129  0054' 0B89               	decfsz	9,f
 14130  0055' 2800'              	goto	u15057
 14131  0056' 0000               	nop
 14132  0057'                    l7426:
 14133                           
 14134                           ;main.c: 143: LCDsend2x4(0x28, 0);
 14135  0057' 0022               	movlb	2	; select bank2
 14136  0058' 0180'              	clrf	LCDsend2x4@mode^(0+256)
 14137  0059' 3028               	movlw	40
 14138  005A' 3180' 2000' 3180'  	fcall	_LCDsend2x4
 14139  005D'                    l7428:
 14140                           
 14141                           ;main.c: 144: LCDsend2x4(0x06, 0);
 14142  005D' 0022               	movlb	2	; select bank2
 14143  005E' 0180'              	clrf	LCDsend2x4@mode^(0+256)
 14144  005F' 3006               	movlw	6
 14145  0060' 3180' 2000' 3180'  	fcall	_LCDsend2x4
 14146  0063'                    l7430:
 14147                           
 14148                           ;main.c: 145: LCDsend2x4(0x0f, 0);
 14149  0063' 0022               	movlb	2	; select bank2
 14150  0064' 0180'              	clrf	LCDsend2x4@mode^(0+256)
 14151  0065' 300F               	movlw	15
 14152  0066' 3180' 2000' 3180'  	fcall	_LCDsend2x4
 14153  0069'                    l7432:
 14154                           
 14155                           ;main.c: 146: LCDsend2x4(0x01, 0);
 14156  0069' 0022               	movlb	2	; select bank2
 14157  006A' 0180'              	clrf	LCDsend2x4@mode^(0+256)
 14158  006B' 3001               	movlw	1
 14159  006C' 3180' 2000' 3180'  	fcall	_LCDsend2x4
 14160                           
 14161                           ;main.c: 147: _delay((unsigned long)((2)*(500000/4000.0)));
 14162  006F' 3053               	movlw	83
 14163  0070'                    u15067:
 14164  0070' 0B89               	decfsz	9,f
 14165  0071' 2800'              	goto	u15067
 14166  0072' 0000               	nop
 14167  0073'                    l775:
 14168  0073' 0008               	return
 14169  0074'                    __end_of_LCDinit:
 14170                           
 14171                           	psect	text35
 14172  0000'                    __ptext35:	
 14173 ;; *************** function _LCDsend *****************
 14174 ;; Defined at:
 14175 ;;		line 65 in file "main.c"
 14176 ;; Parameters:    Size  Location     Type
 14177 ;;  c               1    wreg     unsigned char 
 14178 ;; Auto vars:     Size  Location     Type
 14179 ;;  c               1    3[BANK2 ] unsigned char 
 14180 ;; Return value:  Size  Location     Type
 14181 ;;                  1    wreg      void 
 14182 ;; Registers used:
 14183 ;;		wreg, status,2, status,0, pclath, cstack
 14184 ;; Tracked objects:
 14185 ;;		On entry : 0/0
 14186 ;;		On exit  : 0/0
 14187 ;;		Unchanged: 0/0
 14188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14190 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 14191 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 14192 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 14193 ;;Total ram usage:        2 bytes
 14194 ;; Hardware stack levels used:    1
 14195 ;; Hardware stack levels required when called:    8
 14196 ;; This function calls:
 14197 ;;		_WriteI2C
 14198 ;; This function is called by:
 14199 ;;		_LCDinit
 14200 ;; This function uses a non-reentrant model
 14201 ;;
 14202                           
 14203                           
 14204                           ;psect for function _LCDsend
 14205  0000'                    _LCDsend:
 14206                           
 14207                           ;incstack = 0
 14208                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 14209                           ;LCDsend@c stored from wreg
 14210  0000' 0022               	movlb	2	; select bank2
 14211  0001' 0080'              	movwf	LCDsend@c^(0+256)
 14212  0002'                    l6878:
 14213  0002'                    l6880:	
 14214                           ;main.c: 67: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14215                           
 14216  0002' 0023               	movlb	3	; select bank3
 14217  0003' 0C0F               	rrf	15,w	;volatile
 14218  0004' 0C89               	rrf	9,f
 14219  0005' 3901               	andlw	1
 14220  0006' 0022               	movlb	2	; select bank2
 14221  0007' 0080'              	movwf	??_LCDsend^(0+256)
 14222  0008' 0023               	movlb	3	; select bank3
 14223  0009' 0811               	movf	17,w	;volatile
 14224  000A' 391F               	andlw	31
 14225  000B' 0022               	movlb	2	; select bank2
 14226  000C' 0400'              	iorwf	??_LCDsend^(0+256),w
 14227  000D' 1D03               	btfss	3,2
 14228  000E' 2800'              	goto	u10091
 14229  000F' 2800'              	goto	u10090
 14230  0010'                    u10091:
 14231  0010' 2800'              	goto	l6880
 14232  0011'                    u10090:
 14233  0011'                    l639:
 14234                           
 14235                           ;main.c: 68: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 14236  0011' 0023               	movlb	3	; select bank3
 14237  0012' 1411               	bsf	17,0	;volatile
 14238  0013'                    l640:
 14239  0013' 1811               	btfsc	17,0	;volatile
 14240  0014' 2800'              	goto	u10101
 14241  0015' 2800'              	goto	u10100
 14242  0016'                    u10101:
 14243  0016' 2800'              	goto	l640
 14244  0017'                    u10100:
 14245  0017'                    l6882:
 14246  0017' 0023               	movlb	3	; select bank3
 14247  0018' 0C0F               	rrf	15,w	;volatile
 14248  0019' 0C89               	rrf	9,f
 14249  001A' 3901               	andlw	1
 14250  001B' 0022               	movlb	2	; select bank2
 14251  001C' 0080'              	movwf	??_LCDsend^(0+256)
 14252  001D' 0023               	movlb	3	; select bank3
 14253  001E' 0811               	movf	17,w	;volatile
 14254  001F' 391F               	andlw	31
 14255  0020' 0022               	movlb	2	; select bank2
 14256  0021' 0400'              	iorwf	??_LCDsend^(0+256),w
 14257  0022' 1D03               	btfss	3,2
 14258  0023' 2800'              	goto	u10111
 14259  0024' 2800'              	goto	u10110
 14260  0025'                    u10111:
 14261  0025' 2800'              	goto	l6882
 14262  0026'                    u10110:
 14263  0026'                    l6884:
 14264                           
 14265                           ;main.c: 69: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14266  0026' 304E               	movlw	78
 14267  0027' 3180' 2000' 3180'  	fcall	_WriteI2C
 14268  002A'                    l6886:
 14269  002A' 0023               	movlb	3	; select bank3
 14270  002B' 0C0F               	rrf	15,w	;volatile
 14271  002C' 0C89               	rrf	9,f
 14272  002D' 3901               	andlw	1
 14273  002E' 0022               	movlb	2	; select bank2
 14274  002F' 0080'              	movwf	??_LCDsend^(0+256)
 14275  0030' 0023               	movlb	3	; select bank3
 14276  0031' 0811               	movf	17,w	;volatile
 14277  0032' 391F               	andlw	31
 14278  0033' 0022               	movlb	2	; select bank2
 14279  0034' 0400'              	iorwf	??_LCDsend^(0+256),w
 14280  0035' 1D03               	btfss	3,2
 14281  0036' 2800'              	goto	u10121
 14282  0037' 2800'              	goto	u10120
 14283  0038'                    u10121:
 14284  0038' 2800'              	goto	l6886
 14285  0039'                    u10120:
 14286  0039'                    l6888:
 14287                           
 14288                           ;main.c: 70: WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14289  0039' 0800'              	movf	LCDsend@c^(0+256),w
 14290  003A' 3180' 2000' 3180'  	fcall	_WriteI2C
 14291  003D'                    l6890:
 14292  003D' 0023               	movlb	3	; select bank3
 14293  003E' 0C0F               	rrf	15,w	;volatile
 14294  003F' 0C89               	rrf	9,f
 14295  0040' 3901               	andlw	1
 14296  0041' 0022               	movlb	2	; select bank2
 14297  0042' 0080'              	movwf	??_LCDsend^(0+256)
 14298  0043' 0023               	movlb	3	; select bank3
 14299  0044' 0811               	movf	17,w	;volatile
 14300  0045' 391F               	andlw	31
 14301  0046' 0022               	movlb	2	; select bank2
 14302  0047' 0400'              	iorwf	??_LCDsend^(0+256),w
 14303  0048' 1D03               	btfss	3,2
 14304  0049' 2800'              	goto	u10131
 14305  004A' 2800'              	goto	u10130
 14306  004B'                    u10131:
 14307  004B' 2800'              	goto	l6890
 14308  004C'                    u10130:
 14309  004C'                    l651:
 14310                           
 14311                           ;main.c: 71: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 14312  004C' 0023               	movlb	3	; select bank3
 14313  004D' 1511               	bsf	17,2	;volatile
 14314  004E'                    l652:
 14315  004E' 1911               	btfsc	17,2	;volatile
 14316  004F' 2800'              	goto	u10141
 14317  0050' 2800'              	goto	u10140
 14318  0051'                    u10141:
 14319  0051' 2800'              	goto	l652
 14320  0052'                    u10140:
 14321  0052'                    l655:
 14322  0052' 0008               	return
 14323  0053'                    __end_of_LCDsend:
 14324                           
 14325                           	psect	text36
 14326  0000'                    __ptext36:	
 14327 ;; *************** function _LCDcmd *****************
 14328 ;; Defined at:
 14329 ;;		line 150 in file "main.c"
 14330 ;; Parameters:    Size  Location     Type
 14331 ;;  c               1    wreg     unsigned char 
 14332 ;; Auto vars:     Size  Location     Type
 14333 ;;  c               1    8[BANK2 ] unsigned char 
 14334 ;; Return value:  Size  Location     Type
 14335 ;;                  1    wreg      void 
 14336 ;; Registers used:
 14337 ;;		wreg, status,2, status,0, pclath, cstack
 14338 ;; Tracked objects:
 14339 ;;		On entry : 0/0
 14340 ;;		On exit  : 0/0
 14341 ;;		Unchanged: 0/0
 14342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14344 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 14345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14346 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 14347 ;;Total ram usage:        1 bytes
 14348 ;; Hardware stack levels used:    1
 14349 ;; Hardware stack levels required when called:    9
 14350 ;; This function calls:
 14351 ;;		_LCDsend2x4
 14352 ;; This function is called by:
 14353 ;;		_main
 14354 ;;		_sensor_ISR
 14355 ;; This function uses a non-reentrant model
 14356 ;;
 14357                           
 14358                           
 14359                           ;psect for function _LCDcmd
 14360  0000'                    _LCDcmd:
 14361                           
 14362                           ;incstack = 0
 14363                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 14364                           ;LCDcmd@c stored from wreg
 14365  0000' 0022               	movlb	2	; select bank2
 14366  0001' 0080'              	movwf	LCDcmd@c^(0+256)
 14367  0002'                    l7434:
 14368                           
 14369                           ;main.c: 152: LCDsend2x4(c, 0);
 14370  0002' 0180'              	clrf	LCDsend2x4@mode^(0+256)
 14371  0003' 0800'              	movf	LCDcmd@c^(0+256),w
 14372  0004' 3180' 2000' 3180'  	fcall	_LCDsend2x4
 14373  0007'                    l778:
 14374  0007' 0008               	return
 14375  0008'                    __end_of_LCDcmd:
 14376                           
 14377                           	psect	text37
 14378  0000'                    __ptext37:	
 14379 ;; *************** function _LCDsend2x4 *****************
 14380 ;; Defined at:
 14381 ;;		line 104 in file "main.c"
 14382 ;; Parameters:    Size  Location     Type
 14383 ;;  c               1    wreg     unsigned char 
 14384 ;;  mode            1    2[BANK2 ] unsigned char 
 14385 ;; Auto vars:     Size  Location     Type
 14386 ;;  c               1    5[BANK2 ] unsigned char 
 14387 ;;  lc              1    7[BANK2 ] unsigned char 
 14388 ;;  hc              1    6[BANK2 ] unsigned char 
 14389 ;; Return value:  Size  Location     Type
 14390 ;;                  1    wreg      void 
 14391 ;; Registers used:
 14392 ;;		wreg, status,2, status,0, pclath, cstack
 14393 ;; Tracked objects:
 14394 ;;		On entry : 0/0
 14395 ;;		On exit  : 0/0
 14396 ;;		Unchanged: 0/0
 14397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14398 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 14399 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
 14400 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 14401 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
 14402 ;;Total ram usage:        6 bytes
 14403 ;; Hardware stack levels used:    1
 14404 ;; Hardware stack levels required when called:    8
 14405 ;; This function calls:
 14406 ;;		_WriteI2C
 14407 ;; This function is called by:
 14408 ;;		_LCDinit
 14409 ;;		_LCDcmd
 14410 ;;		_LCDchar
 14411 ;; This function uses a non-reentrant model
 14412 ;;
 14413                           
 14414                           
 14415                           ;psect for function _LCDsend2x4
 14416  0000'                    _LCDsend2x4:
 14417                           
 14418                           ;incstack = 0
 14419                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 14420                           ;LCDsend2x4@c stored from wreg
 14421  0000' 0022               	movlb	2	; select bank2
 14422  0001' 0080'              	movwf	LCDsend2x4@c^(0+256)
 14423  0002'                    l5928:
 14424                           
 14425                           ;main.c: 106: unsigned char hc;;main.c: 107: unsigned char lc;;main.c: 109: hc = c & 0xf
      +                          0;
 14426  0002' 0800'              	movf	LCDsend2x4@c^(0+256),w
 14427  0003' 39F0               	andlw	240
 14428  0004' 0080'              	movwf	??_LCDsend2x4^(0+256)
 14429  0005' 0800'              	movf	??_LCDsend2x4^(0+256),w
 14430  0006' 0080'              	movwf	LCDsend2x4@hc^(0+256)
 14431  0007'                    l5930:
 14432                           
 14433                           ;main.c: 110: lc = (c << 4) & 0xf0;
 14434  0007' 0800'              	movf	LCDsend2x4@c^(0+256),w
 14435  0008' 0080'              	movwf	??_LCDsend2x4^(0+256)
 14436  0009' 3003               	movlw	3
 14437  000A'                    u8365:
 14438  000A' 3580'              	lslf	??_LCDsend2x4^(0+256),f
 14439  000B' 3EFF               	addlw	-1
 14440  000C' 1D03               	skipz
 14441  000D' 2800'              	goto	u8365
 14442  000E' 3500'              	lslf	??_LCDsend2x4^(0+256),w
 14443  000F' 39F0               	andlw	240
 14444  0010' 0080'              	movwf	(??_LCDsend2x4+1)^(0+256)
 14445  0011' 0800'              	movf	(??_LCDsend2x4+1)^(0+256),w
 14446  0012' 0080'              	movwf	LCDsend2x4@lc^(0+256)
 14447  0013'                    l5932:	
 14448                           ;main.c: 112: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14449                           
 14450  0013' 0023               	movlb	3	; select bank3
 14451  0014' 0C0F               	rrf	15,w	;volatile
 14452  0015' 0C89               	rrf	9,f
 14453  0016' 3901               	andlw	1
 14454  0017' 0022               	movlb	2	; select bank2
 14455  0018' 0080'              	movwf	??_LCDsend2x4^(0+256)
 14456  0019' 0023               	movlb	3	; select bank3
 14457  001A' 0811               	movf	17,w	;volatile
 14458  001B' 391F               	andlw	31
 14459  001C' 0022               	movlb	2	; select bank2
 14460  001D' 0400'              	iorwf	??_LCDsend2x4^(0+256),w
 14461  001E' 1D03               	btfss	3,2
 14462  001F' 2800'              	goto	u8371
 14463  0020' 2800'              	goto	u8370
 14464  0021'                    u8371:
 14465  0021' 2800'              	goto	l5932
 14466  0022'                    u8370:
 14467  0022'                    l741:
 14468                           
 14469                           ;main.c: 113: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 14470  0022' 0023               	movlb	3	; select bank3
 14471  0023' 1411               	bsf	17,0	;volatile
 14472  0024'                    l742:
 14473  0024' 1811               	btfsc	17,0	;volatile
 14474  0025' 2800'              	goto	u8381
 14475  0026' 2800'              	goto	u8380
 14476  0027'                    u8381:
 14477  0027' 2800'              	goto	l742
 14478  0028'                    u8380:
 14479  0028'                    l5934:
 14480  0028' 0023               	movlb	3	; select bank3
 14481  0029' 0C0F               	rrf	15,w	;volatile
 14482  002A' 0C89               	rrf	9,f
 14483  002B' 3901               	andlw	1
 14484  002C' 0022               	movlb	2	; select bank2
 14485  002D' 0080'              	movwf	??_LCDsend2x4^(0+256)
 14486  002E' 0023               	movlb	3	; select bank3
 14487  002F' 0811               	movf	17,w	;volatile
 14488  0030' 391F               	andlw	31
 14489  0031' 0022               	movlb	2	; select bank2
 14490  0032' 0400'              	iorwf	??_LCDsend2x4^(0+256),w
 14491  0033' 1D03               	btfss	3,2
 14492  0034' 2800'              	goto	u8391
 14493  0035' 2800'              	goto	u8390
 14494  0036'                    u8391:
 14495  0036' 2800'              	goto	l5934
 14496  0037'                    u8390:
 14497  0037'                    l5936:
 14498                           
 14499                           ;main.c: 114: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14500  0037' 304E               	movlw	78
 14501  0038' 3180' 2000' 3180'  	fcall	_WriteI2C
 14502  003B'                    l5938:
 14503  003B' 0023               	movlb	3	; select bank3
 14504  003C' 0C0F               	rrf	15,w	;volatile
 14505  003D' 0C89               	rrf	9,f
 14506  003E' 3901               	andlw	1
 14507  003F' 0022               	movlb	2	; select bank2
 14508  0040' 0080'              	movwf	??_LCDsend2x4^(0+256)
 14509  0041' 0023               	movlb	3	; select bank3
 14510  0042' 0811               	movf	17,w	;volatile
 14511  0043' 391F               	andlw	31
 14512  0044' 0022               	movlb	2	; select bank2
 14513  0045' 0400'              	iorwf	??_LCDsend2x4^(0+256),w
 14514  0046' 1D03               	btfss	3,2
 14515  0047' 2800'              	goto	u8401
 14516  0048' 2800'              	goto	u8400
 14517  0049'                    u8401:
 14518  0049' 2800'              	goto	l5938
 14519  004A'                    u8400:
 14520  004A'                    l5940:
 14521                           
 14522                           ;main.c: 115: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 14523  004A' 0800'              	movf	LCDsend2x4@hc^(0+256),w
 14524  004B' 0400'              	iorwf	LCDsend2x4@mode^(0+256),w
 14525  004C' 3808               	iorlw	8
 14526  004D' 3180' 2000' 3180'  	fcall	_WriteI2C
 14527  0050'                    l5942:
 14528  0050' 0023               	movlb	3	; select bank3
 14529  0051' 0C0F               	rrf	15,w	;volatile
 14530  0052' 0C89               	rrf	9,f
 14531  0053' 3901               	andlw	1
 14532  0054' 0022               	movlb	2	; select bank2
 14533  0055' 0080'              	movwf	??_LCDsend2x4^(0+256)
 14534  0056' 0023               	movlb	3	; select bank3
 14535  0057' 0811               	movf	17,w	;volatile
 14536  0058' 391F               	andlw	31
 14537  0059' 0022               	movlb	2	; select bank2
 14538  005A' 0400'              	iorwf	??_LCDsend2x4^(0+256),w
 14539  005B' 1D03               	btfss	3,2
 14540  005C' 2800'              	goto	u8411
 14541  005D' 2800'              	goto	u8410
 14542  005E'                    u8411:
 14543  005E' 2800'              	goto	l5942
 14544  005F'                    u8410:
 14545  005F'                    l5944:
 14546                           
 14547                           ;main.c: 116: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 14548  005F' 0800'              	movf	LCDsend2x4@hc^(0+256),w
 14549  0060' 0400'              	iorwf	LCDsend2x4@mode^(0+256),w
 14550  0061' 380C               	iorlw	12
 14551  0062' 3180' 2000' 3180'  	fcall	_WriteI2C
 14552  0065'                    l5946:
 14553  0065' 0023               	movlb	3	; select bank3
 14554  0066' 0C0F               	rrf	15,w	;volatile
 14555  0067' 0C89               	rrf	9,f
 14556  0068' 3901               	andlw	1
 14557  0069' 0022               	movlb	2	; select bank2
 14558  006A' 0080'              	movwf	??_LCDsend2x4^(0+256)
 14559  006B' 0023               	movlb	3	; select bank3
 14560  006C' 0811               	movf	17,w	;volatile
 14561  006D' 391F               	andlw	31
 14562  006E' 0022               	movlb	2	; select bank2
 14563  006F' 0400'              	iorwf	??_LCDsend2x4^(0+256),w
 14564  0070' 1D03               	btfss	3,2
 14565  0071' 2800'              	goto	u8421
 14566  0072' 2800'              	goto	u8420
 14567  0073'                    u8421:
 14568  0073' 2800'              	goto	l5946
 14569  0074'                    u8420:
 14570  0074'                    l756:
 14571  0074'                    l5948:	
 14572                           ;main.c: 117: _delay((unsigned long)((1)*(500000/4000000.0)));
 14573                           
 14574                           
 14575                           ;main.c: 118: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 14576  0074' 0022               	movlb	2	; select bank2
 14577  0075' 0800'              	movf	LCDsend2x4@hc^(0+256),w
 14578  0076' 0400'              	iorwf	LCDsend2x4@mode^(0+256),w
 14579  0077' 3808               	iorlw	8
 14580  0078' 3180' 2000' 3180'  	fcall	_WriteI2C
 14581  007B'                    l5950:
 14582  007B' 0023               	movlb	3	; select bank3
 14583  007C' 0C0F               	rrf	15,w	;volatile
 14584  007D' 0C89               	rrf	9,f
 14585  007E' 3901               	andlw	1
 14586  007F' 0022               	movlb	2	; select bank2
 14587  0080' 0080'              	movwf	??_LCDsend2x4^(0+256)
 14588  0081' 0023               	movlb	3	; select bank3
 14589  0082' 0811               	movf	17,w	;volatile
 14590  0083' 391F               	andlw	31
 14591  0084' 0022               	movlb	2	; select bank2
 14592  0085' 0400'              	iorwf	??_LCDsend2x4^(0+256),w
 14593  0086' 1D03               	btfss	3,2
 14594  0087' 2800'              	goto	u8431
 14595  0088' 2800'              	goto	u8430
 14596  0089'                    u8431:
 14597  0089' 2800'              	goto	l5950
 14598  008A'                    u8430:
 14599  008A'                    l5952:
 14600                           
 14601                           ;main.c: 119: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 14602  008A' 0800'              	movf	LCDsend2x4@lc^(0+256),w
 14603  008B' 0400'              	iorwf	LCDsend2x4@mode^(0+256),w
 14604  008C' 3808               	iorlw	8
 14605  008D' 3180' 2000' 3180'  	fcall	_WriteI2C
 14606  0090'                    l5954:
 14607  0090' 0023               	movlb	3	; select bank3
 14608  0091' 0C0F               	rrf	15,w	;volatile
 14609  0092' 0C89               	rrf	9,f
 14610  0093' 3901               	andlw	1
 14611  0094' 0022               	movlb	2	; select bank2
 14612  0095' 0080'              	movwf	??_LCDsend2x4^(0+256)
 14613  0096' 0023               	movlb	3	; select bank3
 14614  0097' 0811               	movf	17,w	;volatile
 14615  0098' 391F               	andlw	31
 14616  0099' 0022               	movlb	2	; select bank2
 14617  009A' 0400'              	iorwf	??_LCDsend2x4^(0+256),w
 14618  009B' 1D03               	btfss	3,2
 14619  009C' 2800'              	goto	u8441
 14620  009D' 2800'              	goto	u8440
 14621  009E'                    u8441:
 14622  009E' 2800'              	goto	l5954
 14623  009F'                    u8440:
 14624  009F'                    l5956:
 14625                           
 14626                           ;main.c: 120: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 14627  009F' 0800'              	movf	LCDsend2x4@lc^(0+256),w
 14628  00A0' 0400'              	iorwf	LCDsend2x4@mode^(0+256),w
 14629  00A1' 380C               	iorlw	12
 14630  00A2' 3180' 2000' 3180'  	fcall	_WriteI2C
 14631  00A5'                    l5958:
 14632  00A5' 0023               	movlb	3	; select bank3
 14633  00A6' 0C0F               	rrf	15,w	;volatile
 14634  00A7' 0C89               	rrf	9,f
 14635  00A8' 3901               	andlw	1
 14636  00A9' 0022               	movlb	2	; select bank2
 14637  00AA' 0080'              	movwf	??_LCDsend2x4^(0+256)
 14638  00AB' 0023               	movlb	3	; select bank3
 14639  00AC' 0811               	movf	17,w	;volatile
 14640  00AD' 391F               	andlw	31
 14641  00AE' 0022               	movlb	2	; select bank2
 14642  00AF' 0400'              	iorwf	??_LCDsend2x4^(0+256),w
 14643  00B0' 1D03               	btfss	3,2
 14644  00B1' 2800'              	goto	u8451
 14645  00B2' 2800'              	goto	u8450
 14646  00B3'                    u8451:
 14647  00B3' 2800'              	goto	l5958
 14648  00B4'                    u8450:
 14649  00B4'                    l765:
 14650  00B4'                    l5960:	
 14651                           ;main.c: 121: _delay((unsigned long)((1)*(500000/4000000.0)));
 14652                           
 14653                           
 14654                           ;main.c: 122: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 14655  00B4' 0022               	movlb	2	; select bank2
 14656  00B5' 0800'              	movf	LCDsend2x4@lc^(0+256),w
 14657  00B6' 0400'              	iorwf	LCDsend2x4@mode^(0+256),w
 14658  00B7' 3808               	iorlw	8
 14659  00B8' 3180' 2000' 3180'  	fcall	_WriteI2C
 14660  00BB'                    l5962:
 14661  00BB' 0023               	movlb	3	; select bank3
 14662  00BC' 0C0F               	rrf	15,w	;volatile
 14663  00BD' 0C89               	rrf	9,f
 14664  00BE' 3901               	andlw	1
 14665  00BF' 0022               	movlb	2	; select bank2
 14666  00C0' 0080'              	movwf	??_LCDsend2x4^(0+256)
 14667  00C1' 0023               	movlb	3	; select bank3
 14668  00C2' 0811               	movf	17,w	;volatile
 14669  00C3' 391F               	andlw	31
 14670  00C4' 0022               	movlb	2	; select bank2
 14671  00C5' 0400'              	iorwf	??_LCDsend2x4^(0+256),w
 14672  00C6' 1D03               	btfss	3,2
 14673  00C7' 2800'              	goto	u8461
 14674  00C8' 2800'              	goto	u8460
 14675  00C9'                    u8461:
 14676  00C9' 2800'              	goto	l5962
 14677  00CA'                    u8460:
 14678  00CA'                    l768:
 14679                           
 14680                           ;main.c: 123: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 14681  00CA' 0023               	movlb	3	; select bank3
 14682  00CB' 1511               	bsf	17,2	;volatile
 14683  00CC'                    l769:
 14684  00CC' 1911               	btfsc	17,2	;volatile
 14685  00CD' 2800'              	goto	u8471
 14686  00CE' 2800'              	goto	u8470
 14687  00CF'                    u8471:
 14688  00CF' 2800'              	goto	l769
 14689  00D0'                    u8470:
 14690  00D0'                    l771:
 14691                           
 14692                           ;main.c: 124: _delay((unsigned long)((50)*(500000/4000000.0)));
 14693  00D0' 3200               	nop2	;2 cycle nop
 14694  00D1' 3200               	nop2	;2 cycle nop
 14695  00D2' 3200               	nop2	;2 cycle nop
 14696  00D3'                    l772:
 14697  00D3' 0008               	return
 14698  00D4'                    __end_of_LCDsend2x4:
 14699                           
 14700                           	psect	text38
 14701  0000'                    __ptext38:	
 14702 ;; *************** function _WriteI2C *****************
 14703 ;; Defined at:
 14704 ;;		line 47 in file "I2C/i2c.c"
 14705 ;; Parameters:    Size  Location     Type
 14706 ;;  data_out        1    wreg     unsigned char 
 14707 ;; Auto vars:     Size  Location     Type
 14708 ;;  data_out        1    1[BANK2 ] unsigned char 
 14709 ;; Return value:  Size  Location     Type
 14710 ;;                  1    wreg      char 
 14711 ;; Registers used:
 14712 ;;		wreg, status,2, status,0
 14713 ;; Tracked objects:
 14714 ;;		On entry : 0/0
 14715 ;;		On exit  : 0/0
 14716 ;;		Unchanged: 0/0
 14717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14719 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 14720 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 14721 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 14722 ;;Total ram usage:        2 bytes
 14723 ;; Hardware stack levels used:    1
 14724 ;; Hardware stack levels required when called:    7
 14725 ;; This function calls:
 14726 ;;		Nothing
 14727 ;; This function is called by:
 14728 ;;		_LCDsend
 14729 ;;		_LCDsend2x4
 14730 ;;		_LCDrecv
 14731 ;;		_get_Temprature
 14732 ;; This function uses a non-reentrant model
 14733 ;;
 14734                           
 14735                           
 14736                           ;psect for function _WriteI2C
 14737  0000'                    _WriteI2C:
 14738                           
 14739                           ;incstack = 0
 14740                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 14741                           ;WriteI2C@data_out stored from wreg
 14742  0000' 0022               	movlb	2	; select bank2
 14743  0001' 0080'              	movwf	WriteI2C@data_out^(0+256)
 14744  0002'                    l5522:
 14745                           
 14746                           ;i2c.c: 49: SSP1BUF = data_out;
 14747  0002' 0800'              	movf	WriteI2C@data_out^(0+256),w
 14748  0003' 0023               	movlb	3	; select bank3
 14749  0004' 008C               	movwf	12	;volatile
 14750  0005'                    l5524:
 14751                           
 14752                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 14753  0005' 1F90               	btfss	16,7	;volatile
 14754  0006' 2800'              	goto	u7391
 14755  0007' 2800'              	goto	u7390
 14756  0008'                    u7391:
 14757  0008' 2800'              	goto	l5530
 14758  0009'                    u7390:
 14759  0009' 2800'              	goto	l30
 14760  000A'                    l5530:
 14761                           
 14762                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 14763  000A' 300F               	movlw	15
 14764  000B' 0510               	andwf	16,w	;volatile
 14765  000C' 0022               	movlb	2	; select bank2
 14766  000D' 0080'              	movwf	??_WriteI2C^(0+256)
 14767  000E' 3008               	movlw	8
 14768  000F' 0600'              	xorwf	??_WriteI2C^(0+256),w
 14769  0010' 1903               	btfsc	3,2
 14770  0011' 2800'              	goto	u7401
 14771  0012' 2800'              	goto	u7400
 14772  0013'                    u7401:
 14773  0013' 2800'              	goto	l5542
 14774  0014'                    u7400:
 14775  0014'                    l5532:
 14776  0014' 300F               	movlw	15
 14777  0015' 0023               	movlb	3	; select bank3
 14778  0016' 0510               	andwf	16,w	;volatile
 14779  0017' 0022               	movlb	2	; select bank2
 14780  0018' 0080'              	movwf	??_WriteI2C^(0+256)
 14781  0019' 300B               	movlw	11
 14782  001A' 0600'              	xorwf	??_WriteI2C^(0+256),w
 14783  001B' 1903               	btfsc	3,2
 14784  001C' 2800'              	goto	u7411
 14785  001D' 2800'              	goto	u7410
 14786  001E'                    u7411:
 14787  001E' 2800'              	goto	l5542
 14788  001F'                    u7410:
 14789  001F'                    l5534:
 14790                           
 14791                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 14792  001F' 0023               	movlb	3	; select bank3
 14793  0020' 1610               	bsf	16,4	;volatile
 14794  0021'                    l33:	
 14795                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 14796                           
 14797  0021' 002E               	movlb	14	; select bank14
 14798  0022' 1C0F               	btfss	15,0	;volatile
 14799  0023' 2800'              	goto	u7421
 14800  0024' 2800'              	goto	u7420
 14801  0025'                    u7421:
 14802  0025' 2800'              	goto	l33
 14803  0026'                    u7420:
 14804  0026'                    l35:
 14805                           
 14806                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 14807  0026' 0023               	movlb	3	; select bank3
 14808  0027' 190F               	btfsc	15,2	;volatile
 14809  0028' 2800'              	goto	u7431
 14810  0029' 2800'              	goto	u7430
 14811  002A'                    u7431:
 14812  002A' 2800'              	goto	l30
 14813  002B'                    u7430:
 14814  002B'                    l5536:
 14815  002B' 080F               	movf	15,w	;volatile
 14816  002C' 2800'              	goto	l30
 14817  002D'                    l5542:
 14818                           
 14819                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 14820  002D' 300F               	movlw	15
 14821  002E' 0023               	movlb	3	; select bank3
 14822  002F' 0510               	andwf	16,w	;volatile
 14823  0030' 0022               	movlb	2	; select bank2
 14824  0031' 0080'              	movwf	??_WriteI2C^(0+256)
 14825  0032' 3008               	movlw	8
 14826  0033' 0600'              	xorwf	??_WriteI2C^(0+256),w
 14827  0034' 1903               	btfsc	3,2
 14828  0035' 2800'              	goto	u7441
 14829  0036' 2800'              	goto	u7440
 14830  0037'                    u7441:
 14831  0037' 2800'              	goto	l42
 14832  0038'                    u7440:
 14833  0038'                    l5544:
 14834  0038' 300F               	movlw	15
 14835  0039' 0023               	movlb	3	; select bank3
 14836  003A' 0510               	andwf	16,w	;volatile
 14837  003B' 0022               	movlb	2	; select bank2
 14838  003C' 0080'              	movwf	??_WriteI2C^(0+256)
 14839  003D' 300B               	movlw	11
 14840  003E' 0600'              	xorwf	??_WriteI2C^(0+256),w
 14841  003F' 1D03               	btfss	3,2
 14842  0040' 2800'              	goto	u7451
 14843  0041' 2800'              	goto	u7450
 14844  0042'                    u7451:
 14845  0042' 2800'              	goto	l30
 14846  0043'                    u7450:
 14847  0043'                    l42:
 14848  0043' 0023               	movlb	3	; select bank3
 14849  0044' 180F               	btfsc	15,0	;volatile
 14850  0045' 2800'              	goto	u7461
 14851  0046' 2800'              	goto	u7460
 14852  0047'                    u7461:
 14853  0047' 2800'              	goto	l42
 14854  0048'                    u7460:
 14855  0048'                    l5546:
 14856  0048' 0023               	movlb	3	; select bank3
 14857  0049' 0C0F               	rrf	15,w	;volatile
 14858  004A' 0C89               	rrf	9,f
 14859  004B' 3901               	andlw	1
 14860  004C' 0022               	movlb	2	; select bank2
 14861  004D' 0080'              	movwf	??_WriteI2C^(0+256)
 14862  004E' 0023               	movlb	3	; select bank3
 14863  004F' 0811               	movf	17,w	;volatile
 14864  0050' 391F               	andlw	31
 14865  0051' 0022               	movlb	2	; select bank2
 14866  0052' 0400'              	iorwf	??_WriteI2C^(0+256),w
 14867  0053' 1D03               	btfss	3,2
 14868  0054' 2800'              	goto	u7471
 14869  0055' 2800'              	goto	u7470
 14870  0056'                    u7471:
 14871  0056' 2800'              	goto	l5546
 14872  0057'                    u7470:
 14873  0057'                    l47:
 14874                           
 14875                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 14876  0057' 0023               	movlb	3	; select bank3
 14877  0058' 0811               	movf	17,w	;volatile
 14878  0059'                    l30:
 14879  0059' 0008               	return
 14880  005A'                    __end_of_WriteI2C:
 14881                           
 14882                           	psect	intentry
 14883  0000'                    __pintentry:	
 14884 ;; *************** function _INTERRUPT_InterruptManager *****************
 14885 ;; Defined at:
 14886 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14887 ;; Parameters:    Size  Location     Type
 14888 ;;		None
 14889 ;; Auto vars:     Size  Location     Type
 14890 ;;		None
 14891 ;; Return value:  Size  Location     Type
 14892 ;;                  1    wreg      void 
 14893 ;; Registers used:
 14894 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14895 ;; Tracked objects:
 14896 ;;		On entry : 0/0
 14897 ;;		On exit  : 0/0
 14898 ;;		Unchanged: 0/0
 14899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14904 ;;Total ram usage:        0 bytes
 14905 ;; Hardware stack levels used:    1
 14906 ;; Hardware stack levels required when called:    6
 14907 ;; This function calls:
 14908 ;;		_INT_ISR
 14909 ;;		_TMR0_ISR
 14910 ;;		_TMR1_ISR
 14911 ;; This function is called by:
 14912 ;;		Interrupt level 1
 14913 ;; This function uses a non-reentrant model
 14914 ;;
 14915                           
 14916  0000'                    _INTERRUPT_InterruptManager:
 14917                           
 14918                           ;incstack = 0
 14919  0000' 147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 14920                           
 14921                           ; Regs used in _INTERRUPT_InterruptManager: [allreg]
 14922  0001' 3180'              	pagesel	$
 14923  0002'                    i1l7848:
 14924                           
 14925                           ;interrupt_manager.c: 55: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 14926  0002' 002E               	movlb	14	; select bank14
 14927  0003' 1E96               	btfss	22,5	;volatile
 14928  0004' 2800'              	goto	u1213_21
 14929  0005' 2800'              	goto	u1213_20
 14930  0006'                    u1213_21:
 14931  0006' 2800'              	goto	i1l346
 14932  0007'                    u1213_20:
 14933  0007'                    i1l7850:
 14934  0007' 1E8C               	btfss	12,5	;volatile
 14935  0008' 2800'              	goto	u1214_21
 14936  0009' 2800'              	goto	u1214_20
 14937  000A'                    u1214_21:
 14938  000A' 2800'              	goto	i1l346
 14939  000B'                    u1214_20:
 14940  000B'                    i1l7852:
 14941                           
 14942                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: TMR0_ISR();
 14943  000B' 3180' 2000' 3180'  	fcall	_TMR0_ISR
 14944                           
 14945                           ;interrupt_manager.c: 58: }
 14946  000E' 2800'              	goto	i1l358
 14947  000F'                    i1l346:
 14948                           
 14949                           ;interrupt_manager.c: 59: else if(PIE0bits.INTE == 1 && PIR0bits.INTF == 1)
 14950  000F' 1C16               	btfss	22,0	;volatile
 14951  0010' 2800'              	goto	u1215_21
 14952  0011' 2800'              	goto	u1215_20
 14953  0012'                    u1215_21:
 14954  0012' 2800'              	goto	i1l348
 14955  0013'                    u1215_20:
 14956  0013'                    i1l7854:
 14957  0013' 1C0C               	btfss	12,0	;volatile
 14958  0014' 2800'              	goto	u1216_21
 14959  0015' 2800'              	goto	u1216_20
 14960  0016'                    u1216_21:
 14961  0016' 2800'              	goto	i1l348
 14962  0017'                    u1216_20:
 14963  0017'                    i1l7856:
 14964                           
 14965                           ;interrupt_manager.c: 60: {;interrupt_manager.c: 61: INT_ISR();
 14966  0017' 3180' 2000' 3180'  	fcall	_INT_ISR
 14967                           
 14968                           ;interrupt_manager.c: 62: }
 14969  001A' 2800'              	goto	i1l358
 14970  001B'                    i1l348:
 14971                           
 14972                           ;interrupt_manager.c: 63: else if(INTCONbits.PEIE == 1)
 14973  001B' 1F0B               	btfss	11,6	;volatile
 14974  001C' 2800'              	goto	u1217_21
 14975  001D' 2800'              	goto	u1217_20
 14976  001E'                    u1217_21:
 14977  001E' 2800'              	goto	i1l349
 14978  001F'                    u1217_20:
 14979  001F'                    i1l7858:
 14980                           
 14981                           ;interrupt_manager.c: 64: {;interrupt_manager.c: 65: if(PIE3bits.BCL1IE == 1 && PIR3bits
      +                          .BCL1IF == 1)
 14982  001F' 1C99               	btfss	25,1	;volatile
 14983  0020' 2800'              	goto	u1218_21
 14984  0021' 2800'              	goto	u1218_20
 14985  0022'                    u1218_21:
 14986  0022' 2800'              	goto	i1l351
 14987  0023'                    u1218_20:
 14988  0023'                    i1l7860:
 14989                           
 14990                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: i2c1_driver_busCollisionISR();
 14991  0023' 1C8F               	btfss	15,1	;volatile
 14992  0024' 2800'              	goto	u1219_21
 14993  0025' 2800'              	goto	u1219_20
 14994  0026'                    u1219_21:
 14995  0026' 2800'              	goto	i1l351
 14996  0027'                    u1219_20:
 14997  0027' 2800'              	goto	i1l358
 14998  0028'                    i1l351:
 14999                           
 15000                           ;interrupt_manager.c: 69: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 15001  0028' 1C19               	btfss	25,0	;volatile
 15002  0029' 2800'              	goto	u1220_21
 15003  002A' 2800'              	goto	u1220_20
 15004  002B'                    u1220_21:
 15005  002B' 2800'              	goto	i1l353
 15006  002C'                    u1220_20:
 15007  002C'                    i1l7864:
 15008                           
 15009                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: i2c1_driver_i2cISR();
 15010  002C' 1C0F               	btfss	15,0	;volatile
 15011  002D' 2800'              	goto	u1221_21
 15012  002E' 2800'              	goto	u1221_20
 15013  002F'                    u1221_21:
 15014  002F' 2800'              	goto	i1l353
 15015  0030'                    u1221_20:
 15016  0030' 2800'              	goto	i1l358
 15017  0031'                    i1l353:
 15018                           
 15019                           ;interrupt_manager.c: 73: else if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 15020  0031' 1C1A               	btfss	26,0	;volatile
 15021  0032' 2800'              	goto	u1222_21
 15022  0033' 2800'              	goto	u1222_20
 15023  0034'                    u1222_21:
 15024  0034' 2800'              	goto	i1l349
 15025  0035'                    u1222_20:
 15026  0035'                    i1l7868:
 15027  0035' 1C10               	btfss	16,0	;volatile
 15028  0036' 2800'              	goto	u1223_21
 15029  0037' 2800'              	goto	u1223_20
 15030  0038'                    u1223_21:
 15031  0038' 2800'              	goto	i1l349
 15032  0039'                    u1223_20:
 15033  0039'                    i1l7870:
 15034                           
 15035                           ;interrupt_manager.c: 74: {;interrupt_manager.c: 75: TMR1_ISR();
 15036  0039' 3180' 2000' 3180'  	fcall	_TMR1_ISR
 15037                           
 15038                           ;interrupt_manager.c: 76: }
 15039  003C' 2800'              	goto	i1l358
 15040  003D'                    i1l349:
 15041  003D'                    i1l358:
 15042  003D' 107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 15043  003E' 0009               	retfie
 15044  003F'                    __end_of_INTERRUPT_InterruptManager:
 15045                           
 15046                           	psect	text40
 15047  0000'                    __ptext40:	
 15048 ;; *************** function _TMR1_ISR *****************
 15049 ;; Defined at:
 15050 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 15051 ;; Parameters:    Size  Location     Type
 15052 ;;		None
 15053 ;; Auto vars:     Size  Location     Type
 15054 ;;		None
 15055 ;; Return value:  Size  Location     Type
 15056 ;;                  1    wreg      void 
 15057 ;; Registers used:
 15058 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15059 ;; Tracked objects:
 15060 ;;		On entry : 0/0
 15061 ;;		On exit  : 0/0
 15062 ;;		Unchanged: 0/0
 15063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15068 ;;Total ram usage:        0 bytes
 15069 ;; Hardware stack levels used:    1
 15070 ;; Hardware stack levels required when called:    5
 15071 ;; This function calls:
 15072 ;;		Absolute function
 15073 ;;		_TMR1_DefaultInterruptHandler
 15074 ;;		_TMR1_WriteTimer
 15075 ;;		_count_time_ISR
 15076 ;; This function is called by:
 15077 ;;		_INTERRUPT_InterruptManager
 15078 ;; This function uses a non-reentrant model
 15079 ;;
 15080                           
 15081                           
 15082                           ;psect for function _TMR1_ISR
 15083  0000'                    _TMR1_ISR:
 15084  0000'                    i1l7326:	
 15085                           ;incstack = 0
 15086                           ; Regs used in _TMR1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15087                           
 15088                           
 15089                           ;tmr1.c: 168: PIR4bits.TMR1IF = 0;
 15090  0000' 002E               	movlb	14	; select bank14
 15091  0001' 1010               	bcf	16,0	;volatile
 15092  0002'                    i1l7328:
 15093                           
 15094                           ;tmr1.c: 169: TMR1_WriteTimer(timer1ReloadVal);
 15095  0002' 0021               	movlb	1	; select bank1
 15096  0003' 0800'              	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 15097  0004' 0081'              	movwf	TMR1_WriteTimer@timerVal+1
 15098  0005' 0800'              	movf	_timer1ReloadVal^(0+128),w	;volatile
 15099  0006' 0080'              	movwf	TMR1_WriteTimer@timerVal
 15100  0007' 3180' 2000' 3180'  	fcall	_TMR1_WriteTimer
 15101  000A'                    i1l7330:
 15102                           
 15103                           ;tmr1.c: 171: if(TMR1_InterruptHandler)
 15104  000A' 0021               	movlb	1	; select bank1
 15105  000B' 0800'              	movf	_TMR1_InterruptHandler^(0+128),w
 15106  000C' 0400'              	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 15107  000D' 1903               	btfsc	3,2
 15108  000E' 2800'              	goto	u1104_21
 15109  000F' 2800'              	goto	u1104_20
 15110  0010'                    u1104_21:
 15111  0010' 2800'              	goto	i1l416
 15112  0011'                    u1104_20:
 15113  0011'                    i1l7332:
 15114                           
 15115                           ;tmr1.c: 172: {;tmr1.c: 173: TMR1_InterruptHandler();
 15116  0011' 0800'              	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 15117  0012' 008A               	movwf	10
 15118  0013' 0800'              	movf	_TMR1_InterruptHandler^(0+128),w
 15119  0014' 000A               	callw
 15120  0015' 3180'              	pagesel	$
 15121  0016'                    i1l416:
 15122  0016' 0008               	return
 15123  0017'                    __end_of_TMR1_ISR:
 15124                           
 15125                           	psect	text41
 15126  0000'                    __ptext41:	
 15127 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 15128 ;; Defined at:
 15129 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 15130 ;; Parameters:    Size  Location     Type
 15131 ;;		None
 15132 ;; Auto vars:     Size  Location     Type
 15133 ;;		None
 15134 ;; Return value:  Size  Location     Type
 15135 ;;                  1    wreg      void 
 15136 ;; Registers used:
 15137 ;;		None
 15138 ;; Tracked objects:
 15139 ;;		On entry : 0/0
 15140 ;;		On exit  : 0/0
 15141 ;;		Unchanged: 0/0
 15142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15147 ;;Total ram usage:        0 bytes
 15148 ;; Hardware stack levels used:    1
 15149 ;; This function calls:
 15150 ;;		Nothing
 15151 ;; This function is called by:
 15152 ;;		_TMR1_Initialize
 15153 ;;		_TMR1_ISR
 15154 ;; This function uses a non-reentrant model
 15155 ;;
 15156                           
 15157                           
 15158                           ;psect for function _TMR1_DefaultInterruptHandler
 15159  0000'                    _TMR1_DefaultInterruptHandler:
 15160  0000'                    i1l422:	
 15161                           ;incstack = 0
 15162                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 15163                           
 15164  0000' 0008               	return
 15165  0001'                    __end_of_TMR1_DefaultInterruptHandler:
 15166                           
 15167                           	psect	text42
 15168  0000'                    __ptext42:	
 15169 ;; *************** function _count_time_ISR *****************
 15170 ;; Defined at:
 15171 ;;		line 273 in file "main.c"
 15172 ;; Parameters:    Size  Location     Type
 15173 ;;		None
 15174 ;; Auto vars:     Size  Location     Type
 15175 ;;  buf            17   40[BANK1 ] unsigned char [17]
 15176 ;; Return value:  Size  Location     Type
 15177 ;;                  1    wreg      void 
 15178 ;; Registers used:
 15179 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15180 ;; Tracked objects:
 15181 ;;		On entry : 0/0
 15182 ;;		On exit  : 0/0
 15183 ;;		Unchanged: 0/0
 15184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15186 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
 15187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15188 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
 15189 ;;Total ram usage:       17 bytes
 15190 ;; Hardware stack levels used:    1
 15191 ;; Hardware stack levels required when called:    4
 15192 ;; This function calls:
 15193 ;;		i1_LCDcmd
 15194 ;;		i1_LCDstr
 15195 ;;		i1_sprintf
 15196 ;; This function is called by:
 15197 ;;		_Timer1
 15198 ;;		_TMR1_ISR
 15199 ;; This function uses a non-reentrant model
 15200 ;;
 15201                           
 15202                           
 15203                           ;psect for function _count_time_ISR
 15204  0000'                    _count_time_ISR:
 15205  0000'                    i1l6894:	
 15206                           ;incstack = 0
 15207                           ; Regs used in _count_time_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15208                           
 15209                           
 15210                           ;main.c: 274: unsigned char buf[17];;main.c: 275: seconds = seconds +1;
 15211  0000' 0023               	movlb	3	; select bank3
 15212  0001' 0800'              	movf	_seconds^(0+384),w
 15213  0002' 3E01               	addlw	1
 15214  0003' 0080'              	movwf	_seconds^(0+384)
 15215  0004' 3000               	movlw	0
 15216  0005' 3D00'              	addwfc	(_seconds+1)^(0+384),w
 15217  0006' 0080'              	movwf	(_seconds+1)^(0+384)
 15218                           
 15219                           ;main.c: 276: if(seconds==60){
 15220  0007' 303C               	movlw	60
 15221  0008' 0600'              	xorwf	_seconds^(0+384),w
 15222  0009' 0400'              	iorwf	(_seconds+1)^(0+384),w
 15223  000A' 1D03               	btfss	3,2
 15224  000B' 2800'              	goto	u1015_21
 15225  000C' 2800'              	goto	u1015_20
 15226  000D'                    u1015_21:
 15227  000D' 2800'              	goto	i1l6908
 15228  000E'                    u1015_20:
 15229  000E'                    i1l6896:
 15230                           
 15231                           ;main.c: 277: minutes += 1;
 15232  000E' 3001               	movlw	1
 15233  000F' 0780'              	addwf	_minutes^(0+384),f
 15234  0010' 3000               	movlw	0
 15235  0011' 3D80'              	addwfc	(_minutes+1)^(0+384),f
 15236  0012'                    i1l6898:
 15237                           
 15238                           ;main.c: 278: __nop();
 15239  0012' 0000               	nop
 15240  0013'                    i1l6900:
 15241                           
 15242                           ;main.c: 279: LCDcmd(0x83);
 15243  0013' 3083               	movlw	131
 15244  0014' 3180' 2000' 3180'  	fcall	i1_LCDcmd
 15245  0017'                    i1l6902:
 15246                           
 15247                           ;main.c: 280: sprintf(buf, "%02d:", minutes);
 15248  0017' 3000'              	movlw	low count_time_ISR@buf
 15249  0018' 0021               	movlb	1	; select bank1
 15250  0019' 0080'              	movwf	i1sprintf@sp^(0+128)
 15251  001A' 3000'              	movlw	high count_time_ISR@buf
 15252  001B' 0080'              	movwf	(i1sprintf@sp+1)^(0+128)
 15253  001C' 3000'              	movlw	low ((STR_3+5)| (0+32768))
 15254  001D' 0080'              	movwf	i1sprintf@f^(0+128)
 15255  001E' 3000'              	movlw	high ((STR_3+5)| (0+32768))
 15256  001F' 0081'              	movwf	(i1sprintf@f^(0+128)+1)
 15257  0020' 0023               	movlb	3	; select bank3
 15258  0021' 0800'              	movf	(_minutes+1)^(0+384),w
 15259  0022' 0021               	movlb	1	; select bank1
 15260  0023' 0084'              	movwf	((?i1_sprintf+1)^(0+128)+4)
 15261  0024' 0023               	movlb	3	; select bank3
 15262  0025' 0800'              	movf	_minutes^(0+384),w
 15263  0026' 0021               	movlb	1	; select bank1
 15264  0027' 0084'              	movwf	(?i1_sprintf^(0+128)+4)
 15265  0028' 3180' 2000' 3180'  	fcall	i1_sprintf
 15266  002B'                    i1l6904:
 15267                           
 15268                           ;main.c: 281: LCDstr(buf);
 15269  002B' 3000'              	movlw	low count_time_ISR@buf
 15270  002C' 0089'              	movwf	i1LCDstr@p
 15271  002D' 3000'              	movlw	high count_time_ISR@buf
 15272  002E' 008A'              	movwf	i1LCDstr@p+1
 15273  002F' 3180' 2000' 3180'  	fcall	i1_LCDstr
 15274  0032'                    i1l6906:
 15275                           
 15276                           ;main.c: 283: seconds = 0;
 15277  0032' 0023               	movlb	3	; select bank3
 15278  0033' 0180'              	clrf	_seconds^(0+384)
 15279  0034' 0180'              	clrf	(_seconds+1)^(0+384)
 15280  0035'                    i1l6908:
 15281                           
 15282                           ;main.c: 284: };main.c: 285: if(minutes==60){
 15283  0035' 303C               	movlw	60
 15284  0036' 0600'              	xorwf	_minutes^(0+384),w
 15285  0037' 0400'              	iorwf	(_minutes+1)^(0+384),w
 15286  0038' 1D03               	btfss	3,2
 15287  0039' 2800'              	goto	u1016_21
 15288  003A' 2800'              	goto	u1016_20
 15289  003B'                    u1016_21:
 15290  003B' 2800'              	goto	i1l6922
 15291  003C'                    u1016_20:
 15292  003C'                    i1l6910:
 15293                           
 15294                           ;main.c: 286: hours += 1;
 15295  003C' 3001               	movlw	1
 15296  003D' 0780'              	addwf	_hours^(0+384),f
 15297  003E' 3000               	movlw	0
 15298  003F' 3D80'              	addwfc	(_hours+1)^(0+384),f
 15299  0040'                    i1l6912:
 15300                           
 15301                           ;main.c: 287: minutes = 0;
 15302  0040' 0180'              	clrf	_minutes^(0+384)
 15303  0041' 0180'              	clrf	(_minutes+1)^(0+384)
 15304  0042'                    i1l6914:
 15305                           
 15306                           ;main.c: 288: __nop();
 15307  0042' 0000               	nop
 15308  0043'                    i1l6916:
 15309                           
 15310                           ;main.c: 289: LCDcmd(0x80);
 15311  0043' 3080               	movlw	128
 15312  0044' 3180' 2000' 3180'  	fcall	i1_LCDcmd
 15313  0047'                    i1l6918:
 15314                           
 15315                           ;main.c: 290: sprintf(buf, "%02d:%02d:", hours, minutes);
 15316  0047' 3000'              	movlw	low count_time_ISR@buf
 15317  0048' 0021               	movlb	1	; select bank1
 15318  0049' 0080'              	movwf	i1sprintf@sp^(0+128)
 15319  004A' 3000'              	movlw	high count_time_ISR@buf
 15320  004B' 0080'              	movwf	(i1sprintf@sp+1)^(0+128)
 15321  004C' 3000'              	movlw	low (STR_3| (0+32768))
 15322  004D' 0080'              	movwf	i1sprintf@f^(0+128)
 15323  004E' 3000'              	movlw	high (STR_3| (0+32768))
 15324  004F' 0081'              	movwf	(i1sprintf@f^(0+128)+1)
 15325  0050' 0023               	movlb	3	; select bank3
 15326  0051' 0800'              	movf	(_hours+1)^(0+384),w
 15327  0052' 0021               	movlb	1	; select bank1
 15328  0053' 0084'              	movwf	((?i1_sprintf+1)^(0+128)+4)
 15329  0054' 0023               	movlb	3	; select bank3
 15330  0055' 0800'              	movf	_hours^(0+384),w
 15331  0056' 0021               	movlb	1	; select bank1
 15332  0057' 0084'              	movwf	(?i1_sprintf^(0+128)+4)
 15333  0058' 0023               	movlb	3	; select bank3
 15334  0059' 0800'              	movf	(_minutes+1)^(0+384),w
 15335  005A' 0021               	movlb	1	; select bank1
 15336  005B' 0086'              	movwf	((?i1_sprintf+1)^(0+128)+6)
 15337  005C' 0023               	movlb	3	; select bank3
 15338  005D' 0800'              	movf	_minutes^(0+384),w
 15339  005E' 0021               	movlb	1	; select bank1
 15340  005F' 0086'              	movwf	(?i1_sprintf^(0+128)+6)
 15341  0060' 3180' 2000' 3180'  	fcall	i1_sprintf
 15342  0063'                    i1l6920:
 15343                           
 15344                           ;main.c: 291: LCDstr(buf);
 15345  0063' 3000'              	movlw	low count_time_ISR@buf
 15346  0064' 0089'              	movwf	i1LCDstr@p
 15347  0065' 3000'              	movlw	high count_time_ISR@buf
 15348  0066' 008A'              	movwf	i1LCDstr@p+1
 15349  0067' 3180' 2000' 3180'  	fcall	i1_LCDstr
 15350  006A'                    i1l6922:
 15351                           
 15352                           ;main.c: 292: };main.c: 293: if(hours==24){
 15353  006A' 3018               	movlw	24
 15354  006B' 0023               	movlb	3	; select bank3
 15355  006C' 0600'              	xorwf	_hours^(0+384),w
 15356  006D' 0400'              	iorwf	(_hours+1)^(0+384),w
 15357  006E' 1D03               	btfss	3,2
 15358  006F' 2800'              	goto	u1017_21
 15359  0070' 2800'              	goto	u1017_20
 15360  0071'                    u1017_21:
 15361  0071' 2800'              	goto	i1l6934
 15362  0072'                    u1017_20:
 15363  0072'                    i1l6924:
 15364                           
 15365                           ;main.c: 294: hours = 0;
 15366  0072' 0180'              	clrf	_hours^(0+384)
 15367  0073' 0180'              	clrf	(_hours+1)^(0+384)
 15368  0074'                    i1l6926:
 15369                           
 15370                           ;main.c: 295: __nop();
 15371  0074' 0000               	nop
 15372  0075'                    i1l6928:
 15373                           
 15374                           ;main.c: 296: LCDcmd(0x86);
 15375  0075' 3086               	movlw	134
 15376  0076' 3180' 2000' 3180'  	fcall	i1_LCDcmd
 15377  0079'                    i1l6930:
 15378                           
 15379                           ;main.c: 297: sprintf(buf, "%02d:", hours);
 15380  0079' 3000'              	movlw	low count_time_ISR@buf
 15381  007A' 0021               	movlb	1	; select bank1
 15382  007B' 0080'              	movwf	i1sprintf@sp^(0+128)
 15383  007C' 3000'              	movlw	high count_time_ISR@buf
 15384  007D' 0080'              	movwf	(i1sprintf@sp+1)^(0+128)
 15385  007E' 3000'              	movlw	low ((STR_3+5)| (0+32768))
 15386  007F' 0080'              	movwf	i1sprintf@f^(0+128)
 15387  0080' 3000'              	movlw	high ((STR_3+5)| (0+32768))
 15388  0081' 0081'              	movwf	(i1sprintf@f^(0+128)+1)
 15389  0082' 0023               	movlb	3	; select bank3
 15390  0083' 0800'              	movf	(_hours+1)^(0+384),w
 15391  0084' 0021               	movlb	1	; select bank1
 15392  0085' 0084'              	movwf	((?i1_sprintf+1)^(0+128)+4)
 15393  0086' 0023               	movlb	3	; select bank3
 15394  0087' 0800'              	movf	_hours^(0+384),w
 15395  0088' 0021               	movlb	1	; select bank1
 15396  0089' 0084'              	movwf	(?i1_sprintf^(0+128)+4)
 15397  008A' 3180' 2000' 3180'  	fcall	i1_sprintf
 15398  008D'                    i1l6932:
 15399                           
 15400                           ;main.c: 298: LCDstr(buf);
 15401  008D' 3000'              	movlw	low count_time_ISR@buf
 15402  008E' 0089'              	movwf	i1LCDstr@p
 15403  008F' 3000'              	movlw	high count_time_ISR@buf
 15404  0090' 008A'              	movwf	i1LCDstr@p+1
 15405  0091' 3180' 2000' 3180'  	fcall	i1_LCDstr
 15406  0094'                    i1l6934:
 15407                           
 15408                           ;main.c: 299: };main.c: 301: __nop();
 15409  0094' 0000               	nop
 15410  0095'                    i1l6936:
 15411                           
 15412                           ;main.c: 302: LCDcmd(0x86);
 15413  0095' 3086               	movlw	134
 15414  0096' 3180' 2000' 3180'  	fcall	i1_LCDcmd
 15415  0099'                    i1l6938:
 15416                           
 15417                           ;main.c: 303: sprintf(buf, "%02d", seconds);
 15418  0099' 3000'              	movlw	low count_time_ISR@buf
 15419  009A' 0021               	movlb	1	; select bank1
 15420  009B' 0080'              	movwf	i1sprintf@sp^(0+128)
 15421  009C' 3000'              	movlw	high count_time_ISR@buf
 15422  009D' 0080'              	movwf	(i1sprintf@sp+1)^(0+128)
 15423  009E' 3000'              	movlw	low ((STR_1+10)| (0+32768))
 15424  009F' 0080'              	movwf	i1sprintf@f^(0+128)
 15425  00A0' 3000'              	movlw	high ((STR_1+10)| (0+32768))
 15426  00A1' 0081'              	movwf	(i1sprintf@f^(0+128)+1)
 15427  00A2' 0023               	movlb	3	; select bank3
 15428  00A3' 0800'              	movf	(_seconds+1)^(0+384),w
 15429  00A4' 0021               	movlb	1	; select bank1
 15430  00A5' 0084'              	movwf	((?i1_sprintf+1)^(0+128)+4)
 15431  00A6' 0023               	movlb	3	; select bank3
 15432  00A7' 0800'              	movf	_seconds^(0+384),w
 15433  00A8' 0021               	movlb	1	; select bank1
 15434  00A9' 0084'              	movwf	(?i1_sprintf^(0+128)+4)
 15435  00AA' 3180' 2000' 3180'  	fcall	i1_sprintf
 15436  00AD'                    i1l6940:
 15437                           
 15438                           ;main.c: 304: LCDstr(buf);
 15439  00AD' 3000'              	movlw	low count_time_ISR@buf
 15440  00AE' 0089'              	movwf	i1LCDstr@p
 15441  00AF' 3000'              	movlw	high count_time_ISR@buf
 15442  00B0' 008A'              	movwf	i1LCDstr@p+1
 15443  00B1' 3180' 2000' 3180'  	fcall	i1_LCDstr
 15444  00B4'                    i1l889:
 15445  00B4' 0008               	return
 15446  00B5'                    __end_of_count_time_ISR:
 15447                           
 15448                           	psect	text43
 15449  0000'                    __ptext43:	
 15450 ;; *************** function i1_sprintf *****************
 15451 ;; Defined at:
 15452 ;;		line 505 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/doprnt.c"
 15453 ;; Parameters:    Size  Location     Type
 15454 ;;  sp              2    0[BANK1 ] PTR unsigned char 
 15455 ;;		 -> sensor_ISR@buf(17), count_time_ISR@buf(17), main@buf(17), 
 15456 ;;  f               2    2[BANK1 ] PTR const unsigned char 
 15457 ;;		 -> STR_7(8), STR_6(7), STR_5(5), STR_4(6), 
 15458 ;;		 -> STR_3(11), STR_2(6), STR_1(15), 
 15459 ;; Auto vars:     Size  Location     Type
 15460 ;;  fval            4   33[BANK1 ] PTR const unsigned char 
 15461 ;;  val             4   23[BANK1 ] unsigned long 
 15462 ;;  tmpval          4   19[BANK1 ] struct .
 15463 ;;  prec            2   37[BANK1 ] int 
 15464 ;;  width           2   31[BANK1 ] int 
 15465 ;;  flag            2   29[BANK1 ] unsigned short 
 15466 ;;  eexp            2   27[BANK1 ] int 
 15467 ;;  cp              2    0        PTR const unsigned char 
 15468 ;;  len             2    0        unsigned int 
 15469 ;;  c               1   39[BANK1 ] unsigned char 
 15470 ;;  ap              1   18[BANK1 ] PTR void [1]
 15471 ;;		 -> ?i1_sprintf(2), ?_sprintf(2), 
 15472 ;;  d               1    0        unsigned char 
 15473 ;; Return value:  Size  Location     Type
 15474 ;;                  2    0[BANK1 ] int 
 15475 ;; Registers used:
 15476 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15477 ;; Tracked objects:
 15478 ;;		On entry : 0/0
 15479 ;;		On exit  : 0/0
 15480 ;;		Unchanged: 0/0
 15481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15482 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 15483 ;;      Locals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
 15484 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 15485 ;;      Totals:         0       0      40       0       0       0       0       0       0       0       0       0       
      +0       0
 15486 ;;Total ram usage:       40 bytes
 15487 ;; Hardware stack levels used:    1
 15488 ;; Hardware stack levels required when called:    3
 15489 ;; This function calls:
 15490 ;;		i1___awdiv
 15491 ;;		i1___fladd
 15492 ;;		i1___fleq
 15493 ;;		i1___flge
 15494 ;;		i1___flmul
 15495 ;;		i1___flneg
 15496 ;;		i1___flsub
 15497 ;;		i1___fltol
 15498 ;;		i1___lldiv
 15499 ;;		i1___llmod
 15500 ;;		i1___wmul
 15501 ;;		i1___xxtofl
 15502 ;;		i1__div_to_l_
 15503 ;;		i1__tdiv_to_l_
 15504 ;;		i1_fround
 15505 ;;		i1_isdigit
 15506 ;;		i1_scale
 15507 ;; This function is called by:
 15508 ;;		_count_time_ISR
 15509 ;; This function uses a non-reentrant model
 15510 ;;
 15511                           
 15512                           
 15513                           ;psect for function i1_sprintf
 15514  0000'                    i1_sprintf:
 15515  0000'                    i1l6436:	
 15516                           ;incstack = 0
 15517                           ; Regs used in i1_sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15518                           
 15519                           
 15520                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
 15521  0000' 3000'              	movlw	low (?i1_sprintf+4)
 15522  0001' 0021               	movlb	1	; select bank1
 15523  0002' 0080'              	movwf	i1sprintf@ap^(0+128)
 15524  0003' 3000'              	movlw	high (?i1_sprintf+4)
 15525  0004' 0080'              	movwf	i1sprintf@ap^(0+128)
 15526                           
 15527                           ;doprnt.c: 553: while((c = *f++)) {
 15528  0005' 2800'              	goto	i1l6758
 15529  0006'                    i1l6438:
 15530                           
 15531                           ;doprnt.c: 555: if(c != '%')
 15532  0006' 3025               	movlw	37
 15533  0007' 0600'              	xorwf	i1sprintf@c^(0+128),w
 15534  0008' 1903               	btfsc	3,2
 15535  0009' 2800'              	goto	u950_21
 15536  000A' 2800'              	goto	u950_20
 15537  000B'                    u950_21:
 15538  000B' 2800'              	goto	i1l6444
 15539  000C'                    u950_20:
 15540  000C'                    i1l6440:
 15541                           
 15542                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
 15543  000C' 0800'              	movf	i1sprintf@sp^(0+128),w
 15544  000D' 0086               	movwf	6
 15545  000E' 0800'              	movf	(i1sprintf@sp+1)^(0+128),w
 15546  000F' 0087               	movwf	7
 15547  0010' 0800'              	movf	i1sprintf@c^(0+128),w
 15548  0011' 0081               	movwf	1
 15549  0012'                    i1l6442:
 15550  0012' 3001               	movlw	1
 15551  0013' 0780'              	addwf	i1sprintf@sp^(0+128),f
 15552  0014' 3000               	movlw	0
 15553  0015' 3D80'              	addwfc	(i1sprintf@sp+1)^(0+128),f
 15554                           
 15555                           ;doprnt.c: 559: continue;
 15556  0016' 2800'              	goto	i1l6758
 15557  0017'                    i1l6444:
 15558                           
 15559                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 15560  0017' 0180'              	clrf	i1sprintf@width^(0+128)
 15561  0018' 0180'              	clrf	(i1sprintf@width+1)^(0+128)
 15562                           
 15563                           ;doprnt.c: 565: flag = 0;
 15564  0019' 0180'              	clrf	i1sprintf@flag^(0+128)
 15565  001A' 0180'              	clrf	(i1sprintf@flag+1)^(0+128)
 15566  001B' 2800'              	goto	i1l6450
 15567  001C'                    i1l1080:	
 15568                           ;doprnt.c: 596: case '0':
 15569                           
 15570                           
 15571                           ;doprnt.c: 597: flag |= 0x04;
 15572  001C' 1500'              	bsf	i1sprintf@flag^(0+128),2
 15573  001D'                    i1l6446:
 15574                           
 15575                           ;doprnt.c: 598: f++;
 15576  001D' 3001               	movlw	1
 15577  001E' 0780'              	addwf	i1sprintf@f^(0+128),f
 15578  001F' 3000               	movlw	0
 15579  0020' 3D80'              	addwfc	(i1sprintf@f+1)^(0+128),f
 15580  0021'                    i1l6450:	
 15581                           ;doprnt.c: 599: continue;
 15582                           
 15583  0021' 0800'              	movf	i1sprintf@f^(0+128),w
 15584  0022' 0084               	movwf	4
 15585  0023' 0800'              	movf	(i1sprintf@f+1)^(0+128),w
 15586  0024' 0085               	movwf	5
 15587  0025' 0800               	movf	0,w	;code access
 15588                           
 15589                           ; Switch size 1, requested type "simple"
 15590                           ; Number of cases is 1, Range of values is 48 to 48
 15591                           ; switch strategies available:
 15592                           ; Name         Instructions Cycles
 15593                           ; simple_byte            4     3 (average)
 15594                           ; direct_byte           11     9 (fixed)
 15595                           ; jumptable            263     9 (fixed)
 15596                           ;	Chosen strategy is simple_byte
 15597  0026' 3A30               	xorlw	48	; case 48
 15598  0027' 1903               	skipnz
 15599  0028' 2800'              	goto	i1l1080
 15600  0029' 2800'              	goto	i1l6452
 15601  002A'                    i1l6452:
 15602                           
 15603                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 15604  002A' 0800'              	movf	i1sprintf@f^(0+128),w
 15605  002B' 0084               	movwf	4
 15606  002C' 0800'              	movf	(i1sprintf@f+1)^(0+128),w
 15607  002D' 0085               	movwf	5
 15608  002E' 0800               	movf	0,w	;code access
 15609  002F' 3180' 2000' 3180'  	fcall	i1_isdigit
 15610  0032' 1C03               	btfss	3,0
 15611  0033' 2800'              	goto	u951_21
 15612  0034' 2800'              	goto	u951_20
 15613  0035'                    u951_21:
 15614  0035' 2800'              	goto	i1l6464
 15615  0036'                    u951_20:
 15616  0036'                    i1l6454:
 15617                           
 15618                           ;doprnt.c: 615: width = 0;
 15619  0036' 0021               	movlb	1	; select bank1
 15620  0037' 0180'              	clrf	i1sprintf@width^(0+128)
 15621  0038' 0180'              	clrf	(i1sprintf@width+1)^(0+128)
 15622  0039'                    i1l6456:
 15623                           
 15624                           ;doprnt.c: 617: width *= 10;
 15625  0039' 300A               	movlw	10
 15626  003A' 0080'              	movwf	i1___wmul@multiplier
 15627  003B' 3000               	movlw	0
 15628  003C' 0081'              	movwf	i1___wmul@multiplier+1
 15629  003D' 0021               	movlb	1	; select bank1
 15630  003E' 0800'              	movf	(i1sprintf@width+1)^(0+128),w
 15631  003F' 0083'              	movwf	i1___wmul@multiplicand+1
 15632  0040' 0800'              	movf	i1sprintf@width^(0+128),w
 15633  0041' 0082'              	movwf	i1___wmul@multiplicand
 15634  0042' 3180' 2000' 3180'  	fcall	i1___wmul
 15635  0045' 0801'              	movf	?i1___wmul+1,w
 15636  0046' 0021               	movlb	1	; select bank1
 15637  0047' 0080'              	movwf	(i1sprintf@width+1)^(0+128)
 15638  0048' 0800'              	movf	?i1___wmul,w
 15639  0049' 0080'              	movwf	i1sprintf@width^(0+128)
 15640  004A'                    i1l6458:
 15641                           
 15642                           ;doprnt.c: 618: width += *f++ - '0';
 15643  004A' 0800'              	movf	i1sprintf@f^(0+128),w
 15644  004B' 0084               	movwf	4
 15645  004C' 0800'              	movf	(i1sprintf@f+1)^(0+128),w
 15646  004D' 0085               	movwf	5
 15647  004E' 0800               	movf	0,w	;code access
 15648  004F' 3ED0               	addlw	208
 15649  0050' 0080'              	movwf	??i1_sprintf^(0+128)
 15650  0051' 30FF               	movlw	255
 15651  0052' 1803               	skipnc
 15652  0053' 3000               	movlw	0
 15653  0054' 0081'              	movwf	(??i1_sprintf^(0+128)+1)
 15654  0055' 0800'              	movf	??i1_sprintf^(0+128),w
 15655  0056' 0780'              	addwf	i1sprintf@width^(0+128),f
 15656  0057' 0800'              	movf	(??i1_sprintf+1)^(0+128),w
 15657  0058' 3D80'              	addwfc	(i1sprintf@width+1)^(0+128),f
 15658  0059'                    i1l6460:
 15659  0059' 3001               	movlw	1
 15660  005A' 0780'              	addwf	i1sprintf@f^(0+128),f
 15661  005B' 3000               	movlw	0
 15662  005C' 3D80'              	addwfc	(i1sprintf@f+1)^(0+128),f
 15663  005D'                    i1l6462:
 15664                           
 15665                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 15666  005D' 0800'              	movf	i1sprintf@f^(0+128),w
 15667  005E' 0084               	movwf	4
 15668  005F' 0800'              	movf	(i1sprintf@f+1)^(0+128),w
 15669  0060' 0085               	movwf	5
 15670  0061' 0800               	movf	0,w	;code access
 15671  0062' 3180' 2000' 3180'  	fcall	i1_isdigit
 15672  0065' 1803               	btfsc	3,0
 15673  0066' 2800'              	goto	u952_21
 15674  0067' 2800'              	goto	u952_20
 15675  0068'                    u952_21:
 15676  0068' 2800'              	goto	i1l6456
 15677  0069'                    u952_20:
 15678  0069'                    i1l6464:
 15679                           
 15680                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
 15681  0069' 0021               	movlb	1	; select bank1
 15682  006A' 0800'              	movf	i1sprintf@f^(0+128),w
 15683  006B' 0084               	movwf	4
 15684  006C' 0800'              	movf	(i1sprintf@f+1)^(0+128),w
 15685  006D' 0085               	movwf	5
 15686  006E' 0012               	moviw fsr0++
 15687  006F' 3A2E               	xorlw	46
 15688  0070' 1D03               	btfss	3,2
 15689  0071' 2800'              	goto	u953_21
 15690  0072' 2800'              	goto	u953_20
 15691  0073'                    u953_21:
 15692  0073' 2800'              	goto	i1l6480
 15693  0074'                    u953_20:
 15694  0074'                    i1l6466:
 15695                           
 15696                           ;doprnt.c: 629: flag |= 0x4000;
 15697  0074' 1701'              	bsf	(i1sprintf@flag^(0+128)+1),6
 15698  0075'                    i1l6468:
 15699                           
 15700                           ;doprnt.c: 630: f++;
 15701  0075' 3001               	movlw	1
 15702  0076' 0780'              	addwf	i1sprintf@f^(0+128),f
 15703  0077' 3000               	movlw	0
 15704  0078' 3D80'              	addwfc	(i1sprintf@f+1)^(0+128),f
 15705  0079'                    i1l6470:
 15706                           
 15707                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
 15708  0079' 0180'              	clrf	i1sprintf@prec^(0+128)
 15709  007A' 0180'              	clrf	(i1sprintf@prec+1)^(0+128)
 15710                           
 15711                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
 15712  007B' 2800'              	goto	i1l6478
 15713  007C'                    i1l6472:
 15714                           
 15715                           ;doprnt.c: 647: prec *= 10;
 15716  007C' 300A               	movlw	10
 15717  007D' 0080'              	movwf	i1___wmul@multiplier
 15718  007E' 3000               	movlw	0
 15719  007F' 0081'              	movwf	i1___wmul@multiplier+1
 15720  0080' 0021               	movlb	1	; select bank1
 15721  0081' 0800'              	movf	(i1sprintf@prec+1)^(0+128),w
 15722  0082' 0083'              	movwf	i1___wmul@multiplicand+1
 15723  0083' 0800'              	movf	i1sprintf@prec^(0+128),w
 15724  0084' 0082'              	movwf	i1___wmul@multiplicand
 15725  0085' 3180' 2000' 3180'  	fcall	i1___wmul
 15726  0088' 0801'              	movf	?i1___wmul+1,w
 15727  0089' 0021               	movlb	1	; select bank1
 15728  008A' 0080'              	movwf	(i1sprintf@prec+1)^(0+128)
 15729  008B' 0800'              	movf	?i1___wmul,w
 15730  008C' 0080'              	movwf	i1sprintf@prec^(0+128)
 15731  008D'                    i1l6474:
 15732                           
 15733                           ;doprnt.c: 648: prec += *f++ - '0';
 15734  008D' 0800'              	movf	i1sprintf@f^(0+128),w
 15735  008E' 0084               	movwf	4
 15736  008F' 0800'              	movf	(i1sprintf@f+1)^(0+128),w
 15737  0090' 0085               	movwf	5
 15738  0091' 0800               	movf	0,w	;code access
 15739  0092' 3ED0               	addlw	208
 15740  0093' 0080'              	movwf	??i1_sprintf^(0+128)
 15741  0094' 30FF               	movlw	255
 15742  0095' 1803               	skipnc
 15743  0096' 3000               	movlw	0
 15744  0097' 0081'              	movwf	(??i1_sprintf^(0+128)+1)
 15745  0098' 0800'              	movf	??i1_sprintf^(0+128),w
 15746  0099' 0780'              	addwf	i1sprintf@prec^(0+128),f
 15747  009A' 0800'              	movf	(??i1_sprintf+1)^(0+128),w
 15748  009B' 3D80'              	addwfc	(i1sprintf@prec+1)^(0+128),f
 15749  009C'                    i1l6476:
 15750  009C' 3001               	movlw	1
 15751  009D' 0780'              	addwf	i1sprintf@f^(0+128),f
 15752  009E' 3000               	movlw	0
 15753  009F' 3D80'              	addwfc	(i1sprintf@f+1)^(0+128),f
 15754  00A0'                    i1l6478:
 15755  00A0' 0800'              	movf	i1sprintf@f^(0+128),w
 15756  00A1' 0084               	movwf	4
 15757  00A2' 0800'              	movf	(i1sprintf@f+1)^(0+128),w
 15758  00A3' 0085               	movwf	5
 15759  00A4' 0800               	movf	0,w	;code access
 15760  00A5' 3180' 2000' 3180'  	fcall	i1_isdigit
 15761  00A8' 1803               	btfsc	3,0
 15762  00A9' 2800'              	goto	u954_21
 15763  00AA' 2800'              	goto	u954_20
 15764  00AB'                    u954_21:
 15765  00AB' 2800'              	goto	i1l6472
 15766  00AC'                    u954_20:
 15767  00AC' 2800'              	goto	i1l6486
 15768  00AD'                    i1l6480:
 15769                           
 15770                           ;doprnt.c: 652: prec = 0;
 15771  00AD' 0180'              	clrf	i1sprintf@prec^(0+128)
 15772  00AE' 0180'              	clrf	(i1sprintf@prec+1)^(0+128)
 15773  00AF'                    i1l6482:
 15774                           
 15775                           ;doprnt.c: 654: flag |= 0x1000;
 15776  00AF' 1601'              	bsf	(i1sprintf@flag^(0+128)+1),4
 15777  00B0' 2800'              	goto	i1l6486
 15778  00B1'                    i1l1095:	
 15779                           ;doprnt.c: 688: case 'f':
 15780                           
 15781                           
 15782                           ;doprnt.c: 689: flag |= 0x400;
 15783  00B1' 1501'              	bsf	(i1sprintf@flag^(0+128)+1),2
 15784                           
 15785                           ;doprnt.c: 690: break;
 15786  00B2' 2800'              	goto	i1l6488
 15787  00B3'                    i1l6486:
 15788  00B3' 0021               	movlb	1	; select bank1
 15789  00B4' 0800'              	movf	(i1sprintf@f+1)^(0+128),w
 15790  00B5' 0081'              	movwf	(??i1_sprintf^(0+128)+1)
 15791  00B6' 0800'              	movf	i1sprintf@f^(0+128),w
 15792  00B7' 0080'              	movwf	??i1_sprintf^(0+128)
 15793  00B8' 0A80'              	incf	i1sprintf@f^(0+128),f
 15794  00B9' 1903               	skipnz
 15795  00BA' 0A80'              	incf	(i1sprintf@f+1)^(0+128),f
 15796  00BB' 0800'              	movf	??i1_sprintf^(0+128),w
 15797  00BC' 0084               	movwf	4
 15798  00BD' 0800'              	movf	(??i1_sprintf+1)^(0+128),w
 15799  00BE' 0085               	movwf	5
 15800  00BF' 0800               	movf	0,w	;code access
 15801  00C0' 0080'              	movwf	i1sprintf@c^(0+128)
 15802                           
 15803                           ; Switch size 1, requested type "simple"
 15804                           ; Number of cases is 4, Range of values is 0 to 105
 15805                           ; switch strategies available:
 15806                           ; Name         Instructions Cycles
 15807                           ; simple_byte           13     7 (average)
 15808                           ; direct_byte          218     6 (fixed)
 15809                           ; jumptable            260     6 (fixed)
 15810                           ;	Chosen strategy is simple_byte
 15811  00C1' 3A00               	xorlw	0	; case 0
 15812  00C2' 1903               	skipnz
 15813  00C3' 2800'              	goto	i1l6760
 15814  00C4' 3A64               	xorlw	100	; case 100
 15815  00C5' 1903               	skipnz
 15816  00C6' 2800'              	goto	i1l6488
 15817  00C7' 3A02               	xorlw	2	; case 102
 15818  00C8' 1903               	skipnz
 15819  00C9' 2800'              	goto	i1l1095
 15820  00CA' 3A0F               	xorlw	15	; case 105
 15821  00CB' 1903               	skipnz
 15822  00CC' 2800'              	goto	i1l6488
 15823  00CD' 2800'              	goto	i1l6758
 15824  00CE'                    i1l6488:
 15825                           
 15826                           ;doprnt.c: 851: if(flag & (0x700)) {
 15827  00CE' 3000               	movlw	0
 15828  00CF' 0500'              	andwf	i1sprintf@flag^(0+128),w
 15829  00D0' 0080'              	movwf	??i1_sprintf^(0+128)
 15830  00D1' 3007               	movlw	7
 15831  00D2' 0500'              	andwf	(i1sprintf@flag+1)^(0+128),w
 15832  00D3' 0080'              	movwf	(??i1_sprintf+1)^(0+128)
 15833  00D4' 0800'              	movf	??i1_sprintf^(0+128),w
 15834  00D5' 0401'              	iorwf	(??i1_sprintf^(0+128)+1),w
 15835  00D6' 1903               	btfsc	3,2
 15836  00D7' 2800'              	goto	u955_21
 15837  00D8' 2800'              	goto	u955_20
 15838  00D9'                    u955_21:
 15839  00D9' 2800'              	goto	i1l6664
 15840  00DA'                    u955_20:
 15841  00DA'                    i1l6490:
 15842                           
 15843                           ;doprnt.c: 853: if(flag & 0x1000)
 15844  00DA' 1E00'              	btfss	(i1sprintf@flag+1)^(0+128),4
 15845  00DB' 2800'              	goto	u956_21
 15846  00DC' 2800'              	goto	u956_20
 15847  00DD'                    u956_21:
 15848  00DD' 2800'              	goto	i1l6494
 15849  00DE'                    u956_20:
 15850  00DE'                    i1l6492:
 15851                           
 15852                           ;doprnt.c: 855: prec = 6;
 15853  00DE' 3006               	movlw	6
 15854  00DF' 0080'              	movwf	i1sprintf@prec^(0+128)
 15855  00E0' 3000               	movlw	0
 15856  00E1' 0081'              	movwf	(i1sprintf@prec^(0+128)+1)
 15857  00E2'                    i1l6494:
 15858                           
 15859                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 15860  00E2' 0800'              	movf	i1sprintf@ap^(0+128),w
 15861  00E3' 0086               	movwf	6
 15862  00E4' 0800'              	movf	(i1sprintf@ap+1)^(0+128),w
 15863  00E5' 0087               	movwf	7
 15864  00E6' 3F40               	moviw [0]fsr1
 15865  00E7' 0080'              	movwf	i1sprintf@fval^(0+128)
 15866  00E8' 3F41               	moviw [1]fsr1
 15867  00E9' 0080'              	movwf	(i1sprintf@fval+1)^(0+128)
 15868  00EA' 3F42               	moviw [2]fsr1
 15869  00EB' 0080'              	movwf	(i1sprintf@fval+2)^(0+128)
 15870  00EC' 3F43               	moviw [3]fsr1
 15871  00ED' 0080'              	movwf	(i1sprintf@fval+3)^(0+128)
 15872  00EE'                    i1l6496:
 15873  00EE' 3004               	movlw	4
 15874  00EF' 0780'              	addwf	i1sprintf@ap^(0+128),f
 15875  00F0' 3000               	movlw	0
 15876  00F1' 3D80'              	addwfc	(i1sprintf@ap+1)^(0+128),f
 15877  00F2'                    i1l6498:
 15878                           
 15879                           ;doprnt.c: 857: if(fval < 0.0) {
 15880  00F2' 0800'              	movf	(i1sprintf@fval+3)^(0+128),w
 15881  00F3' 0083'              	movwf	i1___flge@ff1+3
 15882  00F4' 0800'              	movf	(i1sprintf@fval+2)^(0+128),w
 15883  00F5' 0082'              	movwf	i1___flge@ff1+2
 15884  00F6' 0800'              	movf	(i1sprintf@fval+1)^(0+128),w
 15885  00F7' 0081'              	movwf	i1___flge@ff1+1
 15886  00F8' 0800'              	movf	i1sprintf@fval^(0+128),w
 15887  00F9' 0080'              	movwf	i1___flge@ff1
 15888  00FA' 3000               	movlw	0
 15889  00FB' 0087'              	movwf	i1___flge@ff2+3
 15890  00FC' 3000               	movlw	0
 15891  00FD' 0086'              	movwf	i1___flge@ff2+2
 15892  00FE' 3000               	movlw	0
 15893  00FF' 0085'              	movwf	i1___flge@ff2+1
 15894  0100' 3000               	movlw	0
 15895  0101' 0084'              	movwf	i1___flge@ff2
 15896  0102' 3180' 2000' 3180'  	fcall	i1___flge
 15897  0105' 1803               	btfsc	3,0
 15898  0106' 2800'              	goto	u957_21
 15899  0107' 2800'              	goto	u957_20
 15900  0108'                    u957_21:
 15901  0108' 2800'              	goto	i1l6504
 15902  0109'                    u957_20:
 15903  0109'                    i1l6500:
 15904                           
 15905                           ;doprnt.c: 858: fval = -fval;
 15906  0109' 0021               	movlb	1	; select bank1
 15907  010A' 0800'              	movf	(i1sprintf@fval+3)^(0+128),w
 15908  010B' 0083'              	movwf	i1___flneg@f1+3
 15909  010C' 0800'              	movf	(i1sprintf@fval+2)^(0+128),w
 15910  010D' 0082'              	movwf	i1___flneg@f1+2
 15911  010E' 0800'              	movf	(i1sprintf@fval+1)^(0+128),w
 15912  010F' 0081'              	movwf	i1___flneg@f1+1
 15913  0110' 0800'              	movf	i1sprintf@fval^(0+128),w
 15914  0111' 0080'              	movwf	i1___flneg@f1
 15915  0112' 3180' 2000' 3180'  	fcall	i1___flneg
 15916  0115' 0803'              	movf	?i1___flneg+3,w
 15917  0116' 0021               	movlb	1	; select bank1
 15918  0117' 0080'              	movwf	(i1sprintf@fval+3)^(0+128)
 15919  0118' 0802'              	movf	?i1___flneg+2,w
 15920  0119' 0080'              	movwf	(i1sprintf@fval+2)^(0+128)
 15921  011A' 0801'              	movf	?i1___flneg+1,w
 15922  011B' 0080'              	movwf	(i1sprintf@fval+1)^(0+128)
 15923  011C' 0800'              	movf	?i1___flneg,w
 15924  011D' 0080'              	movwf	i1sprintf@fval^(0+128)
 15925  011E'                    i1l6502:
 15926                           
 15927                           ;doprnt.c: 859: flag |= 0x03;
 15928  011E' 3003               	movlw	3
 15929  011F' 0480'              	iorwf	i1sprintf@flag^(0+128),f
 15930  0120' 3000               	movlw	0
 15931  0121' 0480'              	iorwf	(i1sprintf@flag+1)^(0+128),f
 15932  0122'                    i1l6504:
 15933                           
 15934                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
 15935  0122' 0021               	movlb	1	; select bank1
 15936  0123' 0180'              	clrf	i1sprintf@eexp^(0+128)
 15937  0124' 0180'              	clrf	(i1sprintf@eexp+1)^(0+128)
 15938  0125'                    i1l6506:
 15939                           
 15940                           ;doprnt.c: 862: if( fval!=0) {
 15941  0125' 0800'              	movf	(i1sprintf@fval+3)^(0+128),w
 15942  0126' 0083'              	movwf	i1___fleq@ff1+3
 15943  0127' 0800'              	movf	(i1sprintf@fval+2)^(0+128),w
 15944  0128' 0082'              	movwf	i1___fleq@ff1+2
 15945  0129' 0800'              	movf	(i1sprintf@fval+1)^(0+128),w
 15946  012A' 0081'              	movwf	i1___fleq@ff1+1
 15947  012B' 0800'              	movf	i1sprintf@fval^(0+128),w
 15948  012C' 0080'              	movwf	i1___fleq@ff1
 15949  012D' 3000               	movlw	0
 15950  012E' 0087'              	movwf	i1___fleq@ff2+3
 15951  012F' 3000               	movlw	0
 15952  0130' 0086'              	movwf	i1___fleq@ff2+2
 15953  0131' 3000               	movlw	0
 15954  0132' 0085'              	movwf	i1___fleq@ff2+1
 15955  0133' 3000               	movlw	0
 15956  0134' 0084'              	movwf	i1___fleq@ff2
 15957  0135' 3180' 2000' 3180'  	fcall	i1___fleq
 15958  0138' 1803               	btfsc	3,0
 15959  0139' 2800'              	goto	u958_21
 15960  013A' 2800'              	goto	u958_20
 15961  013B'                    u958_21:
 15962  013B' 2800'              	goto	i1l1103
 15963  013C'                    u958_20:
 15964  013C'                    i1l6508:
 15965                           
 15966                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
 15967  013C' 1003               	clrc
 15968  013D' 0021               	movlb	1	; select bank1
 15969  013E' 0D00'              	rlf	(i1sprintf@fval+2)^(0+128),w
 15970  013F' 0D00'              	rlf	(i1sprintf@fval+3)^(0+128),w
 15971  0140' 3E82               	addlw	130
 15972  0141' 0080'              	movwf	i1sprintf@eexp^(0+128)
 15973  0142' 30FF               	movlw	255
 15974  0143' 1803               	skipnc
 15975  0144' 3000               	movlw	0
 15976  0145' 0081'              	movwf	(i1sprintf@eexp^(0+128)+1)
 15977  0146'                    i1l6510:
 15978                           
 15979                           ;doprnt.c: 864: eexp--;
 15980  0146' 30FF               	movlw	255
 15981  0147' 0780'              	addwf	i1sprintf@eexp^(0+128),f
 15982  0148' 30FF               	movlw	255
 15983  0149' 3D80'              	addwfc	(i1sprintf@eexp+1)^(0+128),f
 15984  014A'                    i1l6512:
 15985                           
 15986                           ;doprnt.c: 865: eexp *= 3;
 15987  014A' 3003               	movlw	3
 15988  014B' 0080'              	movwf	i1___wmul@multiplier
 15989  014C' 3000               	movlw	0
 15990  014D' 0081'              	movwf	i1___wmul@multiplier+1
 15991  014E' 0800'              	movf	(i1sprintf@eexp+1)^(0+128),w
 15992  014F' 0083'              	movwf	i1___wmul@multiplicand+1
 15993  0150' 0800'              	movf	i1sprintf@eexp^(0+128),w
 15994  0151' 0082'              	movwf	i1___wmul@multiplicand
 15995  0152' 3180' 2000' 3180'  	fcall	i1___wmul
 15996  0155' 0801'              	movf	?i1___wmul+1,w
 15997  0156' 0021               	movlb	1	; select bank1
 15998  0157' 0080'              	movwf	(i1sprintf@eexp+1)^(0+128)
 15999  0158' 0800'              	movf	?i1___wmul,w
 16000  0159' 0080'              	movwf	i1sprintf@eexp^(0+128)
 16001  015A'                    i1l6514:
 16002                           
 16003                           ;doprnt.c: 866: eexp /= 10;
 16004  015A' 300A               	movlw	10
 16005  015B' 0087'              	movwf	i1___awdiv@divisor
 16006  015C' 3000               	movlw	0
 16007  015D' 0088'              	movwf	i1___awdiv@divisor+1
 16008  015E' 0800'              	movf	(i1sprintf@eexp+1)^(0+128),w
 16009  015F' 008A'              	movwf	i1___awdiv@dividend+1
 16010  0160' 0800'              	movf	i1sprintf@eexp^(0+128),w
 16011  0161' 0089'              	movwf	i1___awdiv@dividend
 16012  0162' 3180' 2000' 3180'  	fcall	i1___awdiv
 16013  0165' 0808'              	movf	?i1___awdiv+1,w
 16014  0166' 0021               	movlb	1	; select bank1
 16015  0167' 0080'              	movwf	(i1sprintf@eexp+1)^(0+128)
 16016  0168' 0807'              	movf	?i1___awdiv,w
 16017  0169' 0080'              	movwf	i1sprintf@eexp^(0+128)
 16018  016A'                    i1l6516:
 16019                           
 16020                           ;doprnt.c: 867: if(eexp < 0)
 16021  016A' 1F80'              	btfss	(i1sprintf@eexp+1)^(0+128),7
 16022  016B' 2800'              	goto	u959_21
 16023  016C' 2800'              	goto	u959_20
 16024  016D'                    u959_21:
 16025  016D' 2800'              	goto	i1l6520
 16026  016E'                    u959_20:
 16027  016E'                    i1l6518:
 16028                           
 16029                           ;doprnt.c: 868: eexp--;
 16030  016E' 30FF               	movlw	255
 16031  016F' 0780'              	addwf	i1sprintf@eexp^(0+128),f
 16032  0170' 30FF               	movlw	255
 16033  0171' 3D80'              	addwfc	(i1sprintf@eexp+1)^(0+128),f
 16034  0172'                    i1l6520:
 16035                           
 16036                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
 16037  0172' 0300'              	decf	i1sprintf@eexp^(0+128),w
 16038  0173' 3AFF               	xorlw	255
 16039  0174' 3180' 2000' 3180'  	fcall	i1_scale
 16040  0177' 0020               	movlb	0	; select bank0
 16041  0178' 0821'              	movf	?i1_scale+3,w
 16042  0179' 0021               	movlb	1	; select bank1
 16043  017A' 0080'              	movwf	(i1sprintf@tmpval+3)^(0+128)
 16044  017B' 0020               	movlb	0	; select bank0
 16045  017C' 0820'              	movf	?i1_scale+2,w
 16046  017D' 0021               	movlb	1	; select bank1
 16047  017E' 0080'              	movwf	(i1sprintf@tmpval+2)^(0+128)
 16048  017F' 0020               	movlb	0	; select bank0
 16049  0180' 081F'              	movf	?i1_scale+1,w
 16050  0181' 0021               	movlb	1	; select bank1
 16051  0182' 0080'              	movwf	(i1sprintf@tmpval+1)^(0+128)
 16052  0183' 0020               	movlb	0	; select bank0
 16053  0184' 081E'              	movf	?i1_scale,w
 16054  0185' 0021               	movlb	1	; select bank1
 16055  0186' 0080'              	movwf	i1sprintf@tmpval^(0+128)
 16056  0187'                    i1l6522:
 16057                           
 16058                           ;doprnt.c: 873: tmpval.integ *= fval;
 16059  0187' 0800'              	movf	(i1sprintf@fval+3)^(0+128),w
 16060  0188' 0020               	movlb	0	; select bank0
 16061  0189' 0087'              	movwf	i1___flmul@b+3
 16062  018A' 0021               	movlb	1	; select bank1
 16063  018B' 0800'              	movf	(i1sprintf@fval+2)^(0+128),w
 16064  018C' 0020               	movlb	0	; select bank0
 16065  018D' 0086'              	movwf	i1___flmul@b+2
 16066  018E' 0021               	movlb	1	; select bank1
 16067  018F' 0800'              	movf	(i1sprintf@fval+1)^(0+128),w
 16068  0190' 0020               	movlb	0	; select bank0
 16069  0191' 0085'              	movwf	i1___flmul@b+1
 16070  0192' 0021               	movlb	1	; select bank1
 16071  0193' 0800'              	movf	i1sprintf@fval^(0+128),w
 16072  0194' 0020               	movlb	0	; select bank0
 16073  0195' 0084'              	movwf	i1___flmul@b
 16074  0196' 0021               	movlb	1	; select bank1
 16075  0197' 0800'              	movf	(i1sprintf@tmpval+3)^(0+128),w
 16076  0198' 0020               	movlb	0	; select bank0
 16077  0199' 008B'              	movwf	i1___flmul@a+3
 16078  019A' 0021               	movlb	1	; select bank1
 16079  019B' 0800'              	movf	(i1sprintf@tmpval+2)^(0+128),w
 16080  019C' 0020               	movlb	0	; select bank0
 16081  019D' 008A'              	movwf	i1___flmul@a+2
 16082  019E' 0021               	movlb	1	; select bank1
 16083  019F' 0800'              	movf	(i1sprintf@tmpval+1)^(0+128),w
 16084  01A0' 0020               	movlb	0	; select bank0
 16085  01A1' 0089'              	movwf	i1___flmul@a+1
 16086  01A2' 0021               	movlb	1	; select bank1
 16087  01A3' 0800'              	movf	i1sprintf@tmpval^(0+128),w
 16088  01A4' 0020               	movlb	0	; select bank0
 16089  01A5' 0088'              	movwf	i1___flmul@a
 16090  01A6' 3180' 2000' 3180'  	fcall	i1___flmul
 16091  01A9' 0020               	movlb	0	; select bank0
 16092  01AA' 0807'              	movf	?i1___flmul+3,w
 16093  01AB' 0021               	movlb	1	; select bank1
 16094  01AC' 0080'              	movwf	(i1sprintf@tmpval+3)^(0+128)
 16095  01AD' 0020               	movlb	0	; select bank0
 16096  01AE' 0806'              	movf	?i1___flmul+2,w
 16097  01AF' 0021               	movlb	1	; select bank1
 16098  01B0' 0080'              	movwf	(i1sprintf@tmpval+2)^(0+128)
 16099  01B1' 0020               	movlb	0	; select bank0
 16100  01B2' 0805'              	movf	?i1___flmul+1,w
 16101  01B3' 0021               	movlb	1	; select bank1
 16102  01B4' 0080'              	movwf	(i1sprintf@tmpval+1)^(0+128)
 16103  01B5' 0020               	movlb	0	; select bank0
 16104  01B6' 0804'              	movf	?i1___flmul,w
 16105  01B7' 0021               	movlb	1	; select bank1
 16106  01B8' 0080'              	movwf	i1sprintf@tmpval^(0+128)
 16107  01B9'                    i1l6524:
 16108                           
 16109                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
 16110  01B9' 0800'              	movf	(i1sprintf@tmpval+3)^(0+128),w
 16111  01BA' 0083'              	movwf	i1___flge@ff1+3
 16112  01BB' 0800'              	movf	(i1sprintf@tmpval+2)^(0+128),w
 16113  01BC' 0082'              	movwf	i1___flge@ff1+2
 16114  01BD' 0800'              	movf	(i1sprintf@tmpval+1)^(0+128),w
 16115  01BE' 0081'              	movwf	i1___flge@ff1+1
 16116  01BF' 0800'              	movf	i1sprintf@tmpval^(0+128),w
 16117  01C0' 0080'              	movwf	i1___flge@ff1
 16118  01C1' 303F               	movlw	63
 16119  01C2' 0087'              	movwf	i1___flge@ff2+3
 16120  01C3' 3080               	movlw	128
 16121  01C4' 0086'              	movwf	i1___flge@ff2+2
 16122  01C5' 3000               	movlw	0
 16123  01C6' 0085'              	movwf	i1___flge@ff2+1
 16124  01C7' 3000               	movlw	0
 16125  01C8' 0084'              	movwf	i1___flge@ff2
 16126  01C9' 3180' 2000' 3180'  	fcall	i1___flge
 16127  01CC' 1803               	btfsc	3,0
 16128  01CD' 2800'              	goto	u960_21
 16129  01CE' 2800'              	goto	u960_20
 16130  01CF'                    u960_21:
 16131  01CF' 2800'              	goto	i1l6528
 16132  01D0'                    u960_20:
 16133  01D0'                    i1l6526:
 16134                           
 16135                           ;doprnt.c: 875: eexp--;
 16136  01D0' 30FF               	movlw	255
 16137  01D1' 0021               	movlb	1	; select bank1
 16138  01D2' 0780'              	addwf	i1sprintf@eexp^(0+128),f
 16139  01D3' 30FF               	movlw	255
 16140  01D4' 3D80'              	addwfc	(i1sprintf@eexp+1)^(0+128),f
 16141  01D5' 2800'              	goto	i1l1103
 16142  01D6'                    i1l6528:
 16143                           
 16144                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
 16145  01D6' 0021               	movlb	1	; select bank1
 16146  01D7' 0800'              	movf	(i1sprintf@tmpval+3)^(0+128),w
 16147  01D8' 0083'              	movwf	i1___flge@ff1+3
 16148  01D9' 0800'              	movf	(i1sprintf@tmpval+2)^(0+128),w
 16149  01DA' 0082'              	movwf	i1___flge@ff1+2
 16150  01DB' 0800'              	movf	(i1sprintf@tmpval+1)^(0+128),w
 16151  01DC' 0081'              	movwf	i1___flge@ff1+1
 16152  01DD' 0800'              	movf	i1sprintf@tmpval^(0+128),w
 16153  01DE' 0080'              	movwf	i1___flge@ff1
 16154  01DF' 3041               	movlw	65
 16155  01E0' 0087'              	movwf	i1___flge@ff2+3
 16156  01E1' 3020               	movlw	32
 16157  01E2' 0086'              	movwf	i1___flge@ff2+2
 16158  01E3' 3000               	movlw	0
 16159  01E4' 0085'              	movwf	i1___flge@ff2+1
 16160  01E5' 3000               	movlw	0
 16161  01E6' 0084'              	movwf	i1___flge@ff2
 16162  01E7' 3180' 2000' 3180'  	fcall	i1___flge
 16163  01EA' 1C03               	btfss	3,0
 16164  01EB' 2800'              	goto	u961_21
 16165  01EC' 2800'              	goto	u961_20
 16166  01ED'                    u961_21:
 16167  01ED' 2800'              	goto	i1l1103
 16168  01EE'                    u961_20:
 16169  01EE'                    i1l6530:
 16170                           
 16171                           ;doprnt.c: 877: eexp++;
 16172  01EE' 3001               	movlw	1
 16173  01EF' 0021               	movlb	1	; select bank1
 16174  01F0' 0780'              	addwf	i1sprintf@eexp^(0+128),f
 16175  01F1' 3000               	movlw	0
 16176  01F2' 3D80'              	addwfc	(i1sprintf@eexp+1)^(0+128),f
 16177  01F3'                    i1l1103:
 16178                           
 16179                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
 16180  01F3' 0021               	movlb	1	; select bank1
 16181  01F4' 0800'              	movf	(i1sprintf@prec+1)^(0+128),w
 16182  01F5' 3A80               	xorlw	128
 16183  01F6' 0080'              	movwf	??i1_sprintf^(0+128)
 16184  01F7' 3080               	movlw	128
 16185  01F8' 0200'              	subwf	??i1_sprintf^(0+128),w
 16186  01F9' 1D03               	skipz
 16187  01FA' 2800'              	goto	u962_25
 16188  01FB' 300D               	movlw	13
 16189  01FC' 0200'              	subwf	i1sprintf@prec^(0+128),w
 16190  01FD'                    u962_25:
 16191  01FD' 1803               	skipnc
 16192  01FE' 2800'              	goto	u962_21
 16193  01FF' 2800'              	goto	u962_20
 16194  0200'                    u962_21:
 16195  0200' 2800'              	goto	i1l6534
 16196  0201'                    u962_20:
 16197  0201'                    i1l6532:
 16198                           
 16199                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
 16200  0201' 0021               	movlb	1	; select bank1
 16201  0202' 0800'              	movf	i1sprintf@prec^(0+128),w
 16202  0203' 3180' 2000' 3180'  	fcall	i1_fround
 16203  0206' 0020               	movlb	0	; select bank0
 16204  0207' 0821'              	movf	?i1_fround+3,w
 16205  0208' 00B4'              	movwf	i1___fladd@b+3
 16206  0209' 0820'              	movf	?i1_fround+2,w
 16207  020A' 00B3'              	movwf	i1___fladd@b+2
 16208  020B' 081F'              	movf	?i1_fround+1,w
 16209  020C' 00B2'              	movwf	i1___fladd@b+1
 16210  020D' 081E'              	movf	?i1_fround,w
 16211  020E' 00B1'              	movwf	i1___fladd@b
 16212  020F' 0021               	movlb	1	; select bank1
 16213  0210' 0800'              	movf	(i1sprintf@fval+3)^(0+128),w
 16214  0211' 0020               	movlb	0	; select bank0
 16215  0212' 00B8'              	movwf	i1___fladd@a+3
 16216  0213' 0021               	movlb	1	; select bank1
 16217  0214' 0800'              	movf	(i1sprintf@fval+2)^(0+128),w
 16218  0215' 0020               	movlb	0	; select bank0
 16219  0216' 00B7'              	movwf	i1___fladd@a+2
 16220  0217' 0021               	movlb	1	; select bank1
 16221  0218' 0800'              	movf	(i1sprintf@fval+1)^(0+128),w
 16222  0219' 0020               	movlb	0	; select bank0
 16223  021A' 00B6'              	movwf	i1___fladd@a+1
 16224  021B' 0021               	movlb	1	; select bank1
 16225  021C' 0800'              	movf	i1sprintf@fval^(0+128),w
 16226  021D' 0020               	movlb	0	; select bank0
 16227  021E' 00B5'              	movwf	i1___fladd@a
 16228  021F' 3180' 2000' 3180'  	fcall	i1___fladd
 16229  0222' 0020               	movlb	0	; select bank0
 16230  0223' 0834'              	movf	?i1___fladd+3,w
 16231  0224' 0021               	movlb	1	; select bank1
 16232  0225' 0080'              	movwf	(i1sprintf@fval+3)^(0+128)
 16233  0226' 0020               	movlb	0	; select bank0
 16234  0227' 0833'              	movf	?i1___fladd+2,w
 16235  0228' 0021               	movlb	1	; select bank1
 16236  0229' 0080'              	movwf	(i1sprintf@fval+2)^(0+128)
 16237  022A' 0020               	movlb	0	; select bank0
 16238  022B' 0832'              	movf	?i1___fladd+1,w
 16239  022C' 0021               	movlb	1	; select bank1
 16240  022D' 0080'              	movwf	(i1sprintf@fval+1)^(0+128)
 16241  022E' 0020               	movlb	0	; select bank0
 16242  022F' 0831'              	movf	?i1___fladd,w
 16243  0230' 0021               	movlb	1	; select bank1
 16244  0231' 0080'              	movwf	i1sprintf@fval^(0+128)
 16245  0232'                    i1l6534:
 16246                           
 16247                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
 16248  0232' 0021               	movlb	1	; select bank1
 16249  0233' 0800'              	movf	(i1sprintf@eexp+1)^(0+128),w
 16250  0234' 3A80               	xorlw	128
 16251  0235' 0080'              	movwf	??i1_sprintf^(0+128)
 16252  0236' 3080               	movlw	128
 16253  0237' 0200'              	subwf	??i1_sprintf^(0+128),w
 16254  0238' 1D03               	skipz
 16255  0239' 2800'              	goto	u963_25
 16256  023A' 300A               	movlw	10
 16257  023B' 0200'              	subwf	i1sprintf@eexp^(0+128),w
 16258  023C'                    u963_25:
 16259  023C' 1803               	skipnc
 16260  023D' 2800'              	goto	u963_21
 16261  023E' 2800'              	goto	u963_20
 16262  023F'                    u963_21:
 16263  023F' 2800'              	goto	i1l6542
 16264  0240'                    u963_20:
 16265  0240'                    i1l6536:
 16266  0240' 0021               	movlb	1	; select bank1
 16267  0241' 0800'              	movf	(i1sprintf@fval+3)^(0+128),w
 16268  0242' 0083'              	movwf	i1___fleq@ff1+3
 16269  0243' 0800'              	movf	(i1sprintf@fval+2)^(0+128),w
 16270  0244' 0082'              	movwf	i1___fleq@ff1+2
 16271  0245' 0800'              	movf	(i1sprintf@fval+1)^(0+128),w
 16272  0246' 0081'              	movwf	i1___fleq@ff1+1
 16273  0247' 0800'              	movf	i1sprintf@fval^(0+128),w
 16274  0248' 0080'              	movwf	i1___fleq@ff1
 16275  0249' 3000               	movlw	0
 16276  024A' 0087'              	movwf	i1___fleq@ff2+3
 16277  024B' 3000               	movlw	0
 16278  024C' 0086'              	movwf	i1___fleq@ff2+2
 16279  024D' 3000               	movlw	0
 16280  024E' 0085'              	movwf	i1___fleq@ff2+1
 16281  024F' 3000               	movlw	0
 16282  0250' 0084'              	movwf	i1___fleq@ff2
 16283  0251' 3180' 2000' 3180'  	fcall	i1___fleq
 16284  0254' 1803               	btfsc	3,0
 16285  0255' 2800'              	goto	u964_21
 16286  0256' 2800'              	goto	u964_20
 16287  0257'                    u964_21:
 16288  0257' 2800'              	goto	i1l6556
 16289  0258'                    u964_20:
 16290  0258'                    i1l6538:
 16291  0258' 0021               	movlb	1	; select bank1
 16292  0259' 0800'              	movf	(i1sprintf@fval+3)^(0+128),w
 16293  025A' 0020               	movlb	0	; select bank0
 16294  025B' 00A1'              	movwf	i1___fltol@f1+3
 16295  025C' 0021               	movlb	1	; select bank1
 16296  025D' 0800'              	movf	(i1sprintf@fval+2)^(0+128),w
 16297  025E' 0020               	movlb	0	; select bank0
 16298  025F' 00A0'              	movwf	i1___fltol@f1+2
 16299  0260' 0021               	movlb	1	; select bank1
 16300  0261' 0800'              	movf	(i1sprintf@fval+1)^(0+128),w
 16301  0262' 0020               	movlb	0	; select bank0
 16302  0263' 009F'              	movwf	i1___fltol@f1+1
 16303  0264' 0021               	movlb	1	; select bank1
 16304  0265' 0800'              	movf	i1sprintf@fval^(0+128),w
 16305  0266' 0020               	movlb	0	; select bank0
 16306  0267' 009E'              	movwf	i1___fltol@f1
 16307  0268' 3180' 2000' 3180'  	fcall	i1___fltol
 16308  026B' 0020               	movlb	0	; select bank0
 16309  026C' 0821'              	movf	?i1___fltol+3,w
 16310  026D' 0420'              	iorwf	?i1___fltol+2,w
 16311  026E' 041F'              	iorwf	?i1___fltol+1,w
 16312  026F' 041E'              	iorwf	?i1___fltol,w
 16313  0270' 1D03               	skipz
 16314  0271' 2800'              	goto	u965_21
 16315  0272' 2800'              	goto	u965_20
 16316  0273'                    u965_21:
 16317  0273' 2800'              	goto	i1l6556
 16318  0274'                    u965_20:
 16319  0274'                    i1l6540:
 16320  0274' 0021               	movlb	1	; select bank1
 16321  0275' 0800'              	movf	(i1sprintf@eexp+1)^(0+128),w
 16322  0276' 3A80               	xorlw	128
 16323  0277' 0080'              	movwf	??i1_sprintf^(0+128)
 16324  0278' 3080               	movlw	128
 16325  0279' 0200'              	subwf	??i1_sprintf^(0+128),w
 16326  027A' 1D03               	skipz
 16327  027B' 2800'              	goto	u966_25
 16328  027C' 3002               	movlw	2
 16329  027D' 0200'              	subwf	i1sprintf@eexp^(0+128),w
 16330  027E'                    u966_25:
 16331  027E' 1C03               	skipc
 16332  027F' 2800'              	goto	u966_21
 16333  0280' 2800'              	goto	u966_20
 16334  0281'                    u966_21:
 16335  0281' 2800'              	goto	i1l6556
 16336  0282'                    u966_20:
 16337  0282'                    i1l6542:
 16338                           
 16339                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
 16340  0282' 0021               	movlb	1	; select bank1
 16341  0283' 0800'              	movf	(i1sprintf@tmpval+3)^(0+128),w
 16342  0284' 0083'              	movwf	i1___flge@ff1+3
 16343  0285' 0800'              	movf	(i1sprintf@tmpval+2)^(0+128),w
 16344  0286' 0082'              	movwf	i1___flge@ff1+2
 16345  0287' 0800'              	movf	(i1sprintf@tmpval+1)^(0+128),w
 16346  0288' 0081'              	movwf	i1___flge@ff1+1
 16347  0289' 0800'              	movf	i1sprintf@tmpval^(0+128),w
 16348  028A' 0080'              	movwf	i1___flge@ff1
 16349  028B' 3040               	movlw	64
 16350  028C' 0087'              	movwf	i1___flge@ff2+3
 16351  028D' 3089               	movlw	137
 16352  028E' 0086'              	movwf	i1___flge@ff2+2
 16353  028F' 3070               	movlw	112
 16354  0290' 0085'              	movwf	i1___flge@ff2+1
 16355  0291' 305F               	movlw	95
 16356  0292' 0084'              	movwf	i1___flge@ff2
 16357  0293' 3180' 2000' 3180'  	fcall	i1___flge
 16358  0296' 1803               	btfsc	3,0
 16359  0297' 2800'              	goto	u967_21
 16360  0298' 2800'              	goto	u967_20
 16361  0299'                    u967_21:
 16362  0299' 2800'              	goto	i1l6546
 16363  029A'                    u967_20:
 16364  029A'                    i1l6544:
 16365                           
 16366                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
 16367  029A' 30F7               	movlw	247
 16368  029B' 0021               	movlb	1	; select bank1
 16369  029C' 0780'              	addwf	i1sprintf@eexp^(0+128),f
 16370  029D' 30FF               	movlw	255
 16371  029E' 3D80'              	addwfc	(i1sprintf@eexp+1)^(0+128),f
 16372                           
 16373                           ;doprnt.c: 1148: }else{
 16374  029F' 2800'              	goto	i1l6548
 16375  02A0'                    i1l6546:
 16376                           
 16377                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
 16378  02A0' 30F8               	movlw	248
 16379  02A1' 0021               	movlb	1	; select bank1
 16380  02A2' 0780'              	addwf	i1sprintf@eexp^(0+128),f
 16381  02A3' 30FF               	movlw	255
 16382  02A4' 3D80'              	addwfc	(i1sprintf@eexp+1)^(0+128),f
 16383  02A5'                    i1l6548:
 16384                           
 16385                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 16386  02A5' 0800'              	movf	i1sprintf@eexp^(0+128),w
 16387  02A6' 3180' 2000' 3180'  	fcall	i1_scale
 16388  02A9' 0020               	movlb	0	; select bank0
 16389  02AA' 0821'              	movf	?i1_scale+3,w
 16390  02AB' 0021               	movlb	1	; select bank1
 16391  02AC' 0080'              	movwf	(i1sprintf@tmpval+3)^(0+128)
 16392  02AD' 0020               	movlb	0	; select bank0
 16393  02AE' 0820'              	movf	?i1_scale+2,w
 16394  02AF' 0021               	movlb	1	; select bank1
 16395  02B0' 0080'              	movwf	(i1sprintf@tmpval+2)^(0+128)
 16396  02B1' 0020               	movlb	0	; select bank0
 16397  02B2' 081F'              	movf	?i1_scale+1,w
 16398  02B3' 0021               	movlb	1	; select bank1
 16399  02B4' 0080'              	movwf	(i1sprintf@tmpval+1)^(0+128)
 16400  02B5' 0020               	movlb	0	; select bank0
 16401  02B6' 081E'              	movf	?i1_scale,w
 16402  02B7' 0021               	movlb	1	; select bank1
 16403  02B8' 0080'              	movwf	i1sprintf@tmpval^(0+128)
 16404  02B9'                    i1l6550:
 16405  02B9' 0800'              	movf	(i1sprintf@fval+3)^(0+128),w
 16406  02BA' 0083'              	movwf	i1__div_to_l_@f1+3
 16407  02BB' 0800'              	movf	(i1sprintf@fval+2)^(0+128),w
 16408  02BC' 0082'              	movwf	i1__div_to_l_@f1+2
 16409  02BD' 0800'              	movf	(i1sprintf@fval+1)^(0+128),w
 16410  02BE' 0081'              	movwf	i1__div_to_l_@f1+1
 16411  02BF' 0800'              	movf	i1sprintf@fval^(0+128),w
 16412  02C0' 0080'              	movwf	i1__div_to_l_@f1
 16413  02C1' 0800'              	movf	(i1sprintf@tmpval+3)^(0+128),w
 16414  02C2' 0087'              	movwf	i1__div_to_l_@f2+3
 16415  02C3' 0800'              	movf	(i1sprintf@tmpval+2)^(0+128),w
 16416  02C4' 0086'              	movwf	i1__div_to_l_@f2+2
 16417  02C5' 0800'              	movf	(i1sprintf@tmpval+1)^(0+128),w
 16418  02C6' 0085'              	movwf	i1__div_to_l_@f2+1
 16419  02C7' 0800'              	movf	i1sprintf@tmpval^(0+128),w
 16420  02C8' 0084'              	movwf	i1__div_to_l_@f2
 16421  02C9' 3180' 2000' 3180'  	fcall	i1__div_to_l_
 16422  02CC' 0803'              	movf	?i1__div_to_l_+3,w
 16423  02CD' 0021               	movlb	1	; select bank1
 16424  02CE' 0080'              	movwf	(i1sprintf@val+3)^(0+128)
 16425  02CF' 0802'              	movf	?i1__div_to_l_+2,w
 16426  02D0' 0080'              	movwf	(i1sprintf@val+2)^(0+128)
 16427  02D1' 0801'              	movf	?i1__div_to_l_+1,w
 16428  02D2' 0080'              	movwf	(i1sprintf@val+1)^(0+128)
 16429  02D3' 0800'              	movf	?i1__div_to_l_,w
 16430  02D4' 0080'              	movwf	i1sprintf@val^(0+128)
 16431  02D5'                    i1l6554:
 16432                           
 16433                           ;doprnt.c: 1155: fval = 0.0;
 16434  02D5' 3000               	movlw	0
 16435  02D6' 0080'              	movwf	(i1sprintf@fval+3)^(0+128)
 16436  02D7' 3000               	movlw	0
 16437  02D8' 0080'              	movwf	(i1sprintf@fval+2)^(0+128)
 16438  02D9' 3000               	movlw	0
 16439  02DA' 0080'              	movwf	(i1sprintf@fval+1)^(0+128)
 16440  02DB' 3000               	movlw	0
 16441  02DC' 0080'              	movwf	i1sprintf@fval^(0+128)
 16442                           
 16443                           ;doprnt.c: 1156: } else {
 16444  02DD' 2800'              	goto	i1l6560
 16445  02DE'                    i1l6556:
 16446                           
 16447                           ;doprnt.c: 1157: val = (unsigned long)fval;
 16448  02DE' 0021               	movlb	1	; select bank1
 16449  02DF' 0800'              	movf	(i1sprintf@fval+3)^(0+128),w
 16450  02E0' 0020               	movlb	0	; select bank0
 16451  02E1' 00A1'              	movwf	i1___fltol@f1+3
 16452  02E2' 0021               	movlb	1	; select bank1
 16453  02E3' 0800'              	movf	(i1sprintf@fval+2)^(0+128),w
 16454  02E4' 0020               	movlb	0	; select bank0
 16455  02E5' 00A0'              	movwf	i1___fltol@f1+2
 16456  02E6' 0021               	movlb	1	; select bank1
 16457  02E7' 0800'              	movf	(i1sprintf@fval+1)^(0+128),w
 16458  02E8' 0020               	movlb	0	; select bank0
 16459  02E9' 009F'              	movwf	i1___fltol@f1+1
 16460  02EA' 0021               	movlb	1	; select bank1
 16461  02EB' 0800'              	movf	i1sprintf@fval^(0+128),w
 16462  02EC' 0020               	movlb	0	; select bank0
 16463  02ED' 009E'              	movwf	i1___fltol@f1
 16464  02EE' 3180' 2000' 3180'  	fcall	i1___fltol
 16465  02F1' 0020               	movlb	0	; select bank0
 16466  02F2' 0821'              	movf	?i1___fltol+3,w
 16467  02F3' 0021               	movlb	1	; select bank1
 16468  02F4' 0080'              	movwf	(i1sprintf@val+3)^(0+128)
 16469  02F5' 0020               	movlb	0	; select bank0
 16470  02F6' 0820'              	movf	?i1___fltol+2,w
 16471  02F7' 0021               	movlb	1	; select bank1
 16472  02F8' 0080'              	movwf	(i1sprintf@val+2)^(0+128)
 16473  02F9' 0020               	movlb	0	; select bank0
 16474  02FA' 081F'              	movf	?i1___fltol+1,w
 16475  02FB' 0021               	movlb	1	; select bank1
 16476  02FC' 0080'              	movwf	(i1sprintf@val+1)^(0+128)
 16477  02FD' 0020               	movlb	0	; select bank0
 16478  02FE' 081E'              	movf	?i1___fltol,w
 16479  02FF' 0021               	movlb	1	; select bank1
 16480  0300' 0080'              	movwf	i1sprintf@val^(0+128)
 16481                           
 16482                           ;doprnt.c: 1158: fval -= (double)val;
 16483  0301' 0800'              	movf	(i1sprintf@val+3)^(0+128),w
 16484  0302' 0083'              	movwf	i1___xxtofl@val+3
 16485  0303' 0800'              	movf	(i1sprintf@val+2)^(0+128),w
 16486  0304' 0082'              	movwf	i1___xxtofl@val+2
 16487  0305' 0800'              	movf	(i1sprintf@val+1)^(0+128),w
 16488  0306' 0081'              	movwf	i1___xxtofl@val+1
 16489  0307' 0800'              	movf	i1sprintf@val^(0+128),w
 16490  0308' 0080'              	movwf	i1___xxtofl@val
 16491  0309' 3000               	movlw	0
 16492  030A' 3180' 2000' 3180'  	fcall	i1___xxtofl
 16493  030D' 0803'              	movf	?i1___xxtofl+3,w
 16494  030E' 0020               	movlb	0	; select bank0
 16495  030F' 00C8'              	movwf	i1___flsub@a+3
 16496  0310' 0802'              	movf	?i1___xxtofl+2,w
 16497  0311' 00C7'              	movwf	i1___flsub@a+2
 16498  0312' 0801'              	movf	?i1___xxtofl+1,w
 16499  0313' 00C6'              	movwf	i1___flsub@a+1
 16500  0314' 0800'              	movf	?i1___xxtofl,w
 16501  0315' 00C5'              	movwf	i1___flsub@a
 16502  0316' 0021               	movlb	1	; select bank1
 16503  0317' 0800'              	movf	(i1sprintf@fval+3)^(0+128),w
 16504  0318' 0020               	movlb	0	; select bank0
 16505  0319' 00CC'              	movwf	i1___flsub@b+3
 16506  031A' 0021               	movlb	1	; select bank1
 16507  031B' 0800'              	movf	(i1sprintf@fval+2)^(0+128),w
 16508  031C' 0020               	movlb	0	; select bank0
 16509  031D' 00CB'              	movwf	i1___flsub@b+2
 16510  031E' 0021               	movlb	1	; select bank1
 16511  031F' 0800'              	movf	(i1sprintf@fval+1)^(0+128),w
 16512  0320' 0020               	movlb	0	; select bank0
 16513  0321' 00CA'              	movwf	i1___flsub@b+1
 16514  0322' 0021               	movlb	1	; select bank1
 16515  0323' 0800'              	movf	i1sprintf@fval^(0+128),w
 16516  0324' 0020               	movlb	0	; select bank0
 16517  0325' 00C9'              	movwf	i1___flsub@b
 16518  0326' 3180' 2000' 3180'  	fcall	i1___flsub
 16519  0329' 0020               	movlb	0	; select bank0
 16520  032A' 0848'              	movf	?i1___flsub+3,w
 16521  032B' 0021               	movlb	1	; select bank1
 16522  032C' 0080'              	movwf	(i1sprintf@fval+3)^(0+128)
 16523  032D' 0020               	movlb	0	; select bank0
 16524  032E' 0847'              	movf	?i1___flsub+2,w
 16525  032F' 0021               	movlb	1	; select bank1
 16526  0330' 0080'              	movwf	(i1sprintf@fval+2)^(0+128)
 16527  0331' 0020               	movlb	0	; select bank0
 16528  0332' 0846'              	movf	?i1___flsub+1,w
 16529  0333' 0021               	movlb	1	; select bank1
 16530  0334' 0080'              	movwf	(i1sprintf@fval+1)^(0+128)
 16531  0335' 0020               	movlb	0	; select bank0
 16532  0336' 0845'              	movf	?i1___flsub,w
 16533  0337' 0021               	movlb	1	; select bank1
 16534  0338' 0080'              	movwf	i1sprintf@fval^(0+128)
 16535  0339'                    i1l6558:
 16536                           
 16537                           ;doprnt.c: 1159: eexp = 0;
 16538  0339' 0180'              	clrf	i1sprintf@eexp^(0+128)
 16539  033A' 0180'              	clrf	(i1sprintf@eexp+1)^(0+128)
 16540  033B'                    i1l6560:
 16541                           
 16542                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
 16543  033B' 0180'              	clrf	i1sprintf@c^(0+128)
 16544  033C' 0A80'              	incf	i1sprintf@c^(0+128),f
 16545  033D'                    i1l6566:
 16546                           
 16547                           ;doprnt.c: 1163: if(val < dpowers[c])
 16548  033D' 0800'              	movf	i1sprintf@c^(0+128),w
 16549  033E' 0080'              	movwf	??i1_sprintf^(0+128)
 16550  033F' 0181'              	clrf	(??i1_sprintf^(0+128)+1)
 16551  0340' 3580'              	lslf	??i1_sprintf^(0+128),f
 16552  0341' 0D81'              	rlf	(??i1_sprintf^(0+128)+1),f
 16553  0342' 3580'              	lslf	??i1_sprintf^(0+128),f
 16554  0343' 0D81'              	rlf	(??i1_sprintf^(0+128)+1),f
 16555  0344' 3000'              	movlw	low (_dpowers| (0+32768))
 16556  0345' 0700'              	addwf	??i1_sprintf^(0+128),w
 16557  0346' 0084               	movwf	4
 16558  0347' 3000'              	movlw	high (_dpowers| (0+32768))
 16559  0348' 3D00'              	addwfc	(??i1_sprintf+1)^(0+128),w
 16560  0349' 0085               	movwf	5
 16561  034A' 3F00               	moviw [0]fsr0
 16562  034B' 0080'              	movwf	(??i1_sprintf+2)^(0+128)
 16563  034C' 3F01               	moviw [1]fsr0
 16564  034D' 0081'              	movwf	((??i1_sprintf+2)^(0+128)+1)
 16565  034E' 3F02               	moviw [2]fsr0
 16566  034F' 0082'              	movwf	((??i1_sprintf+2)^(0+128)+2)
 16567  0350' 3F03               	moviw [3]fsr0
 16568  0351' 0083'              	movwf	((??i1_sprintf+2)^(0+128)+3)
 16569  0352' 0800'              	movf	(??i1_sprintf+5)^(0+128),w
 16570  0353' 0200'              	subwf	(i1sprintf@val+3)^(0+128),w
 16571  0354' 1D03               	skipz
 16572  0355' 2800'              	goto	u968_25
 16573  0356' 0800'              	movf	(??i1_sprintf+4)^(0+128),w
 16574  0357' 0200'              	subwf	(i1sprintf@val+2)^(0+128),w
 16575  0358' 1D03               	skipz
 16576  0359' 2800'              	goto	u968_25
 16577  035A' 0800'              	movf	(??i1_sprintf+3)^(0+128),w
 16578  035B' 0200'              	subwf	(i1sprintf@val+1)^(0+128),w
 16579  035C' 1D03               	skipz
 16580  035D' 2800'              	goto	u968_25
 16581  035E' 0800'              	movf	(??i1_sprintf+2)^(0+128),w
 16582  035F' 0200'              	subwf	i1sprintf@val^(0+128),w
 16583  0360'                    u968_25:
 16584  0360' 1803               	skipnc
 16585  0361' 2800'              	goto	u968_21
 16586  0362' 2800'              	goto	u968_20
 16587  0363'                    u968_21:
 16588  0363' 2800'              	goto	i1l6570
 16589  0364'                    u968_20:
 16590  0364' 2800'              	goto	i1l6572
 16591  0365'                    i1l6570:
 16592  0365' 3001               	movlw	1
 16593  0366' 0080'              	movwf	??i1_sprintf^(0+128)
 16594  0367' 0800'              	movf	??i1_sprintf^(0+128),w
 16595  0368' 0780'              	addwf	i1sprintf@c^(0+128),f
 16596  0369' 300A               	movlw	10
 16597  036A' 0600'              	xorwf	i1sprintf@c^(0+128),w
 16598  036B' 1D03               	btfss	3,2
 16599  036C' 2800'              	goto	u969_21
 16600  036D' 2800'              	goto	u969_20
 16601  036E'                    u969_21:
 16602  036E' 2800'              	goto	i1l6566
 16603  036F'                    u969_20:
 16604  036F'                    i1l6572:
 16605                           
 16606                           ;doprnt.c: 1168: width -= prec + c + eexp;
 16607  036F' 0800'              	movf	i1sprintf@c^(0+128),w
 16608  0370' 0700'              	addwf	i1sprintf@prec^(0+128),w
 16609  0371' 0080'              	movwf	??i1_sprintf^(0+128)
 16610  0372' 0800'              	movf	(i1sprintf@prec+1)^(0+128),w
 16611  0373' 1803               	skipnc
 16612  0374' 0A00'              	incf	(i1sprintf@prec+1)^(0+128),w
 16613  0375' 0081'              	movwf	(??i1_sprintf^(0+128)+1)
 16614  0376' 0800'              	movf	i1sprintf@eexp^(0+128),w
 16615  0377' 0700'              	addwf	??i1_sprintf^(0+128),w
 16616  0378' 0080'              	movwf	(??i1_sprintf+2)^(0+128)
 16617  0379' 0800'              	movf	(i1sprintf@eexp+1)^(0+128),w
 16618  037A' 3D00'              	addwfc	(??i1_sprintf+1)^(0+128),w
 16619  037B' 0080'              	movwf	(??i1_sprintf+3)^(0+128)
 16620  037C' 0800'              	movf	(??i1_sprintf+2)^(0+128),w
 16621  037D' 0280'              	subwf	i1sprintf@width^(0+128),f
 16622  037E' 0800'              	movf	(??i1_sprintf+3)^(0+128),w
 16623  037F' 3B80'              	subwfb	(i1sprintf@width+1)^(0+128),f
 16624                           
 16625                           ;doprnt.c: 1169: if(;doprnt.c: 1173: prec)
 16626  0380' 0800'              	movf	i1sprintf@prec^(0+128),w
 16627  0381' 0400'              	iorwf	(i1sprintf@prec+1)^(0+128),w
 16628  0382' 1903               	btfsc	3,2
 16629  0383' 2800'              	goto	u970_21
 16630  0384' 2800'              	goto	u970_20
 16631  0385'                    u970_21:
 16632  0385' 2800'              	goto	i1l6576
 16633  0386'                    u970_20:
 16634  0386'                    i1l6574:
 16635                           
 16636                           ;doprnt.c: 1174: width--;
 16637  0386' 30FF               	movlw	255
 16638  0387' 0780'              	addwf	i1sprintf@width^(0+128),f
 16639  0388' 30FF               	movlw	255
 16640  0389' 3D80'              	addwfc	(i1sprintf@width+1)^(0+128),f
 16641  038A'                    i1l6576:
 16642                           
 16643                           ;doprnt.c: 1175: if(flag & 0x03)
 16644  038A' 3003               	movlw	3
 16645  038B' 0500'              	andwf	i1sprintf@flag^(0+128),w
 16646  038C' 0080'              	movwf	??i1_sprintf^(0+128)
 16647  038D' 3000               	movlw	0
 16648  038E' 0500'              	andwf	(i1sprintf@flag+1)^(0+128),w
 16649  038F' 0080'              	movwf	(??i1_sprintf+1)^(0+128)
 16650  0390' 0800'              	movf	??i1_sprintf^(0+128),w
 16651  0391' 0401'              	iorwf	(??i1_sprintf^(0+128)+1),w
 16652  0392' 1903               	btfsc	3,2
 16653  0393' 2800'              	goto	u971_21
 16654  0394' 2800'              	goto	u971_20
 16655  0395'                    u971_21:
 16656  0395' 2800'              	goto	i1l6580
 16657  0396'                    u971_20:
 16658  0396'                    i1l6578:
 16659                           
 16660                           ;doprnt.c: 1176: width--;
 16661  0396' 30FF               	movlw	255
 16662  0397' 0780'              	addwf	i1sprintf@width^(0+128),f
 16663  0398' 30FF               	movlw	255
 16664  0399' 3D80'              	addwfc	(i1sprintf@width+1)^(0+128),f
 16665  039A'                    i1l6580:
 16666                           
 16667                           ;doprnt.c: 1179: if(flag & 0x04) {
 16668  039A' 1D00'              	btfss	i1sprintf@flag^(0+128),2
 16669  039B' 2800'              	goto	u972_21
 16670  039C' 2800'              	goto	u972_20
 16671  039D'                    u972_21:
 16672  039D' 2800'              	goto	i1l6602
 16673  039E'                    u972_20:
 16674  039E'                    i1l6582:
 16675                           
 16676                           ;doprnt.c: 1183: if(flag & 0x03)
 16677  039E' 3003               	movlw	3
 16678  039F' 0500'              	andwf	i1sprintf@flag^(0+128),w
 16679  03A0' 0080'              	movwf	??i1_sprintf^(0+128)
 16680  03A1' 3000               	movlw	0
 16681  03A2' 0500'              	andwf	(i1sprintf@flag+1)^(0+128),w
 16682  03A3' 0080'              	movwf	(??i1_sprintf+1)^(0+128)
 16683  03A4' 0800'              	movf	??i1_sprintf^(0+128),w
 16684  03A5' 0401'              	iorwf	(??i1_sprintf^(0+128)+1),w
 16685  03A6' 1903               	btfsc	3,2
 16686  03A7' 2800'              	goto	u973_21
 16687  03A8' 2800'              	goto	u973_20
 16688  03A9'                    u973_21:
 16689  03A9' 2800'              	goto	i1l6594
 16690  03AA'                    u973_20:
 16691  03AA'                    i1l6584:
 16692                           
 16693                           ;doprnt.c: 1185: ((*sp++ = ('-')));
 16694  03AA' 0800'              	movf	i1sprintf@sp^(0+128),w
 16695  03AB' 0086               	movwf	6
 16696  03AC' 0800'              	movf	(i1sprintf@sp+1)^(0+128),w
 16697  03AD' 0087               	movwf	7
 16698  03AE' 302D               	movlw	45
 16699  03AF' 0081               	movwf	1
 16700  03B0'                    i1l6586:
 16701  03B0' 3001               	movlw	1
 16702  03B1' 0780'              	addwf	i1sprintf@sp^(0+128),f
 16703  03B2' 3000               	movlw	0
 16704  03B3' 3D80'              	addwfc	(i1sprintf@sp+1)^(0+128),f
 16705  03B4' 2800'              	goto	i1l6594
 16706  03B5'                    i1l6588:
 16707                           
 16708                           ;doprnt.c: 1195: ((*sp++ = ('0')));
 16709  03B5' 0021               	movlb	1	; select bank1
 16710  03B6' 0800'              	movf	i1sprintf@sp^(0+128),w
 16711  03B7' 0086               	movwf	6
 16712  03B8' 0800'              	movf	(i1sprintf@sp+1)^(0+128),w
 16713  03B9' 0087               	movwf	7
 16714  03BA' 3030               	movlw	48
 16715  03BB' 0081               	movwf	1
 16716  03BC'                    i1l6590:
 16717  03BC' 3001               	movlw	1
 16718  03BD' 0780'              	addwf	i1sprintf@sp^(0+128),f
 16719  03BE' 3000               	movlw	0
 16720  03BF' 3D80'              	addwfc	(i1sprintf@sp+1)^(0+128),f
 16721  03C0'                    i1l6592:
 16722                           
 16723                           ;doprnt.c: 1196: width--;
 16724  03C0' 30FF               	movlw	255
 16725  03C1' 0780'              	addwf	i1sprintf@width^(0+128),f
 16726  03C2' 30FF               	movlw	255
 16727  03C3' 3D80'              	addwfc	(i1sprintf@width+1)^(0+128),f
 16728  03C4'                    i1l6594:
 16729  03C4' 0800'              	movf	(i1sprintf@width+1)^(0+128),w
 16730  03C5' 3A80               	xorlw	128
 16731  03C6' 0080'              	movwf	??i1_sprintf^(0+128)
 16732  03C7' 3080               	movlw	128
 16733  03C8' 0200'              	subwf	??i1_sprintf^(0+128),w
 16734  03C9' 1D03               	skipz
 16735  03CA' 2800'              	goto	u974_25
 16736  03CB' 3001               	movlw	1
 16737  03CC' 0200'              	subwf	i1sprintf@width^(0+128),w
 16738  03CD'                    u974_25:
 16739  03CD' 1803               	skipnc
 16740  03CE' 2800'              	goto	u974_21
 16741  03CF' 2800'              	goto	u974_20
 16742  03D0'                    u974_21:
 16743  03D0' 2800'              	goto	i1l6588
 16744  03D1'                    u974_20:
 16745  03D1' 2800'              	goto	i1l6618
 16746  03D2'                    i1l6596:
 16747                           
 16748                           ;doprnt.c: 1207: ((*sp++ = (' ')));
 16749  03D2' 0021               	movlb	1	; select bank1
 16750  03D3' 0800'              	movf	i1sprintf@sp^(0+128),w
 16751  03D4' 0086               	movwf	6
 16752  03D5' 0800'              	movf	(i1sprintf@sp+1)^(0+128),w
 16753  03D6' 0087               	movwf	7
 16754  03D7' 3020               	movlw	32
 16755  03D8' 0081               	movwf	1
 16756  03D9'                    i1l6598:
 16757  03D9' 3001               	movlw	1
 16758  03DA' 0780'              	addwf	i1sprintf@sp^(0+128),f
 16759  03DB' 3000               	movlw	0
 16760  03DC' 3D80'              	addwfc	(i1sprintf@sp+1)^(0+128),f
 16761  03DD'                    i1l6600:
 16762                           
 16763                           ;doprnt.c: 1208: width--;
 16764  03DD' 30FF               	movlw	255
 16765  03DE' 0780'              	addwf	i1sprintf@width^(0+128),f
 16766  03DF' 30FF               	movlw	255
 16767  03E0' 3D80'              	addwfc	(i1sprintf@width+1)^(0+128),f
 16768  03E1'                    i1l6602:
 16769  03E1' 0800'              	movf	(i1sprintf@width+1)^(0+128),w
 16770  03E2' 3A80               	xorlw	128
 16771  03E3' 0080'              	movwf	??i1_sprintf^(0+128)
 16772  03E4' 3080               	movlw	128
 16773  03E5' 0200'              	subwf	??i1_sprintf^(0+128),w
 16774  03E6' 1D03               	skipz
 16775  03E7' 2800'              	goto	u975_25
 16776  03E8' 3001               	movlw	1
 16777  03E9' 0200'              	subwf	i1sprintf@width^(0+128),w
 16778  03EA'                    u975_25:
 16779  03EA' 1803               	skipnc
 16780  03EB' 2800'              	goto	u975_21
 16781  03EC' 2800'              	goto	u975_20
 16782  03ED'                    u975_21:
 16783  03ED' 2800'              	goto	i1l6596
 16784  03EE'                    u975_20:
 16785  03EE'                    i1l6604:
 16786                           
 16787                           ;doprnt.c: 1209: };doprnt.c: 1214: if(flag & 0x03)
 16788  03EE' 3003               	movlw	3
 16789  03EF' 0021               	movlb	1	; select bank1
 16790  03F0' 0500'              	andwf	i1sprintf@flag^(0+128),w
 16791  03F1' 0080'              	movwf	??i1_sprintf^(0+128)
 16792  03F2' 3000               	movlw	0
 16793  03F3' 0500'              	andwf	(i1sprintf@flag+1)^(0+128),w
 16794  03F4' 0080'              	movwf	(??i1_sprintf+1)^(0+128)
 16795  03F5' 0800'              	movf	??i1_sprintf^(0+128),w
 16796  03F6' 0401'              	iorwf	(??i1_sprintf^(0+128)+1),w
 16797  03F7' 1903               	btfsc	3,2
 16798  03F8' 2800'              	goto	u976_21
 16799  03F9' 2800'              	goto	u976_20
 16800  03FA'                    u976_21:
 16801  03FA' 2800'              	goto	i1l6618
 16802  03FB'                    u976_20:
 16803  03FB'                    i1l6606:
 16804                           
 16805                           ;doprnt.c: 1216: ((*sp++ = ('-')));
 16806  03FB' 0800'              	movf	i1sprintf@sp^(0+128),w
 16807  03FC' 0086               	movwf	6
 16808  03FD' 0800'              	movf	(i1sprintf@sp+1)^(0+128),w
 16809  03FE' 0087               	movwf	7
 16810  03FF' 302D               	movlw	45
 16811  0400' 0081               	movwf	1
 16812  0401'                    i1l6608:
 16813  0401' 3001               	movlw	1
 16814  0402' 0780'              	addwf	i1sprintf@sp^(0+128),f
 16815  0403' 3000               	movlw	0
 16816  0404' 3D80'              	addwfc	(i1sprintf@sp+1)^(0+128),f
 16817  0405' 2800'              	goto	i1l6618
 16818  0406'                    i1l6610:
 16819                           
 16820                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
 16821  0406' 0800'              	movf	i1sprintf@c^(0+128),w
 16822  0407' 0080'              	movwf	??i1_sprintf^(0+128)
 16823  0408' 0181'              	clrf	(??i1_sprintf^(0+128)+1)
 16824  0409' 3580'              	lslf	??i1_sprintf^(0+128),f
 16825  040A' 0D81'              	rlf	(??i1_sprintf^(0+128)+1),f
 16826  040B' 3580'              	lslf	??i1_sprintf^(0+128),f
 16827  040C' 0D81'              	rlf	(??i1_sprintf^(0+128)+1),f
 16828  040D' 3000'              	movlw	low (_dpowers| (0+32768))
 16829  040E' 0700'              	addwf	??i1_sprintf^(0+128),w
 16830  040F' 0084               	movwf	4
 16831  0410' 3000'              	movlw	high (_dpowers| (0+32768))
 16832  0411' 3D00'              	addwfc	(??i1_sprintf+1)^(0+128),w
 16833  0412' 0085               	movwf	5
 16834  0413' 3F00               	moviw [0]fsr0
 16835  0414' 0080'              	movwf	i1___lldiv@divisor
 16836  0415' 3F01               	moviw [1]fsr0
 16837  0416' 0081'              	movwf	i1___lldiv@divisor+1
 16838  0417' 3F02               	moviw [2]fsr0
 16839  0418' 0082'              	movwf	i1___lldiv@divisor+2
 16840  0419' 3F03               	moviw [3]fsr0
 16841  041A' 0083'              	movwf	i1___lldiv@divisor+3
 16842  041B' 0800'              	movf	(i1sprintf@val+3)^(0+128),w
 16843  041C' 0087'              	movwf	i1___lldiv@dividend+3
 16844  041D' 0800'              	movf	(i1sprintf@val+2)^(0+128),w
 16845  041E' 0086'              	movwf	i1___lldiv@dividend+2
 16846  041F' 0800'              	movf	(i1sprintf@val+1)^(0+128),w
 16847  0420' 0085'              	movwf	i1___lldiv@dividend+1
 16848  0421' 0800'              	movf	i1sprintf@val^(0+128),w
 16849  0422' 0084'              	movwf	i1___lldiv@dividend
 16850  0423' 3180' 2000' 3180'  	fcall	i1___lldiv
 16851  0426' 0803'              	movf	?i1___lldiv+3,w
 16852  0427' 0021               	movlb	1	; select bank1
 16853  0428' 0080'              	movwf	(i1sprintf@tmpval+3)^(0+128)
 16854  0429' 0802'              	movf	?i1___lldiv+2,w
 16855  042A' 0080'              	movwf	(i1sprintf@tmpval+2)^(0+128)
 16856  042B' 0801'              	movf	?i1___lldiv+1,w
 16857  042C' 0080'              	movwf	(i1sprintf@tmpval+1)^(0+128)
 16858  042D' 0800'              	movf	?i1___lldiv,w
 16859  042E' 0080'              	movwf	i1sprintf@tmpval^(0+128)
 16860  042F'                    i1l6612:
 16861                           
 16862                           ;doprnt.c: 1228: tmpval.vd %= 10;
 16863  042F' 3000               	movlw	0
 16864  0430' 0020               	movlb	0	; select bank0
 16865  0431' 0083'              	movwf	i1___llmod@divisor+3
 16866  0432' 3000               	movlw	0
 16867  0433' 0082'              	movwf	i1___llmod@divisor+2
 16868  0434' 3000               	movlw	0
 16869  0435' 0081'              	movwf	i1___llmod@divisor+1
 16870  0436' 300A               	movlw	10
 16871  0437' 0080'              	movwf	i1___llmod@divisor
 16872  0438' 0021               	movlb	1	; select bank1
 16873  0439' 0800'              	movf	(i1sprintf@tmpval+3)^(0+128),w
 16874  043A' 0020               	movlb	0	; select bank0
 16875  043B' 0087'              	movwf	i1___llmod@dividend+3
 16876  043C' 0021               	movlb	1	; select bank1
 16877  043D' 0800'              	movf	(i1sprintf@tmpval+2)^(0+128),w
 16878  043E' 0020               	movlb	0	; select bank0
 16879  043F' 0086'              	movwf	i1___llmod@dividend+2
 16880  0440' 0021               	movlb	1	; select bank1
 16881  0441' 0800'              	movf	(i1sprintf@tmpval+1)^(0+128),w
 16882  0442' 0020               	movlb	0	; select bank0
 16883  0443' 0085'              	movwf	i1___llmod@dividend+1
 16884  0444' 0021               	movlb	1	; select bank1
 16885  0445' 0800'              	movf	i1sprintf@tmpval^(0+128),w
 16886  0446' 0020               	movlb	0	; select bank0
 16887  0447' 0084'              	movwf	i1___llmod@dividend
 16888  0448' 3180' 2000' 3180'  	fcall	i1___llmod
 16889  044B' 0020               	movlb	0	; select bank0
 16890  044C' 0803'              	movf	?i1___llmod+3,w
 16891  044D' 0021               	movlb	1	; select bank1
 16892  044E' 0080'              	movwf	(i1sprintf@tmpval+3)^(0+128)
 16893  044F' 0020               	movlb	0	; select bank0
 16894  0450' 0802'              	movf	?i1___llmod+2,w
 16895  0451' 0021               	movlb	1	; select bank1
 16896  0452' 0080'              	movwf	(i1sprintf@tmpval+2)^(0+128)
 16897  0453' 0020               	movlb	0	; select bank0
 16898  0454' 0801'              	movf	?i1___llmod+1,w
 16899  0455' 0021               	movlb	1	; select bank1
 16900  0456' 0080'              	movwf	(i1sprintf@tmpval+1)^(0+128)
 16901  0457' 0020               	movlb	0	; select bank0
 16902  0458' 0800'              	movf	?i1___llmod,w
 16903  0459' 0021               	movlb	1	; select bank1
 16904  045A' 0080'              	movwf	i1sprintf@tmpval^(0+128)
 16905  045B'                    i1l6614:
 16906                           
 16907                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)));
 16908  045B' 0800'              	movf	i1sprintf@tmpval^(0+128),w
 16909  045C' 3E30               	addlw	48
 16910  045D' 0080'              	movwf	??i1_sprintf^(0+128)
 16911  045E' 0800'              	movf	i1sprintf@sp^(0+128),w
 16912  045F' 0086               	movwf	6
 16913  0460' 0800'              	movf	(i1sprintf@sp+1)^(0+128),w
 16914  0461' 0087               	movwf	7
 16915  0462' 0800'              	movf	??i1_sprintf^(0+128),w
 16916  0463' 0081               	movwf	1
 16917  0464'                    i1l6616:
 16918  0464' 3001               	movlw	1
 16919  0465' 0780'              	addwf	i1sprintf@sp^(0+128),f
 16920  0466' 3000               	movlw	0
 16921  0467' 3D80'              	addwfc	(i1sprintf@sp+1)^(0+128),f
 16922  0468'                    i1l6618:
 16923  0468' 3001               	movlw	1
 16924  0469' 0021               	movlb	1	; select bank1
 16925  046A' 0280'              	subwf	i1sprintf@c^(0+128),f
 16926  046B' 0A00'              	incf	i1sprintf@c^(0+128),w
 16927  046C' 1D03               	btfss	3,2
 16928  046D' 2800'              	goto	u977_21
 16929  046E' 2800'              	goto	u977_20
 16930  046F'                    u977_21:
 16931  046F' 2800'              	goto	i1l6610
 16932  0470'                    u977_20:
 16933  0470' 2800'              	goto	i1l6626
 16934  0471'                    i1l6620:
 16935                           
 16936                           ;doprnt.c: 1234: ((*sp++ = ('0')));
 16937  0471' 0021               	movlb	1	; select bank1
 16938  0472' 0800'              	movf	i1sprintf@sp^(0+128),w
 16939  0473' 0086               	movwf	6
 16940  0474' 0800'              	movf	(i1sprintf@sp+1)^(0+128),w
 16941  0475' 0087               	movwf	7
 16942  0476' 3030               	movlw	48
 16943  0477' 0081               	movwf	1
 16944  0478'                    i1l6622:
 16945  0478' 3001               	movlw	1
 16946  0479' 0780'              	addwf	i1sprintf@sp^(0+128),f
 16947  047A' 3000               	movlw	0
 16948  047B' 3D80'              	addwfc	(i1sprintf@sp+1)^(0+128),f
 16949  047C'                    i1l6624:
 16950                           
 16951                           ;doprnt.c: 1235: eexp--;
 16952  047C' 30FF               	movlw	255
 16953  047D' 0780'              	addwf	i1sprintf@eexp^(0+128),f
 16954  047E' 30FF               	movlw	255
 16955  047F' 3D80'              	addwfc	(i1sprintf@eexp+1)^(0+128),f
 16956  0480'                    i1l6626:
 16957  0480' 0800'              	movf	(i1sprintf@eexp+1)^(0+128),w
 16958  0481' 3A80               	xorlw	128
 16959  0482' 0080'              	movwf	??i1_sprintf^(0+128)
 16960  0483' 3080               	movlw	128
 16961  0484' 0200'              	subwf	??i1_sprintf^(0+128),w
 16962  0485' 1D03               	skipz
 16963  0486' 2800'              	goto	u978_25
 16964  0487' 3001               	movlw	1
 16965  0488' 0200'              	subwf	i1sprintf@eexp^(0+128),w
 16966  0489'                    u978_25:
 16967  0489' 1803               	skipnc
 16968  048A' 2800'              	goto	u978_21
 16969  048B' 2800'              	goto	u978_20
 16970  048C'                    u978_21:
 16971  048C' 2800'              	goto	i1l6620
 16972  048D'                    u978_20:
 16973  048D'                    i1l6628:
 16974                           
 16975                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
 16976  048D' 0021               	movlb	1	; select bank1
 16977  048E' 0800'              	movf	(i1sprintf@prec+1)^(0+128),w
 16978  048F' 3A80               	xorlw	128
 16979  0490' 0080'              	movwf	??i1_sprintf^(0+128)
 16980  0491' 3080               	movlw	128
 16981  0492' 0200'              	subwf	??i1_sprintf^(0+128),w
 16982  0493' 1D03               	skipz
 16983  0494' 2800'              	goto	u979_25
 16984  0495' 3009               	movlw	9
 16985  0496' 0200'              	subwf	i1sprintf@prec^(0+128),w
 16986  0497'                    u979_25:
 16987  0497' 1C03               	skipc
 16988  0498' 2800'              	goto	u979_21
 16989  0499' 2800'              	goto	u979_20
 16990  049A'                    u979_21:
 16991  049A' 2800'              	goto	i1l6632
 16992  049B'                    u979_20:
 16993  049B'                    i1l6630:
 16994                           
 16995                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
 16996  049B' 3008               	movlw	8
 16997  049C' 0021               	movlb	1	; select bank1
 16998  049D' 0080'              	movwf	??i1_sprintf^(0+128)
 16999  049E' 0800'              	movf	??i1_sprintf^(0+128),w
 17000  049F' 0080'              	movwf	i1sprintf@c^(0+128)
 17001  04A0' 2800'              	goto	i1l1141
 17002  04A1'                    i1l6632:
 17003                           
 17004                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
 17005  04A1' 0021               	movlb	1	; select bank1
 17006  04A2' 0800'              	movf	i1sprintf@prec^(0+128),w
 17007  04A3' 0080'              	movwf	??i1_sprintf^(0+128)
 17008  04A4' 0800'              	movf	??i1_sprintf^(0+128),w
 17009  04A5' 0080'              	movwf	i1sprintf@c^(0+128)
 17010  04A6'                    i1l1141:
 17011                           
 17012                           ;doprnt.c: 1241: prec -= (int)c;
 17013  04A6' 0800'              	movf	i1sprintf@c^(0+128),w
 17014  04A7' 0080'              	movwf	??i1_sprintf^(0+128)
 17015  04A8' 0181'              	clrf	(??i1_sprintf^(0+128)+1)
 17016  04A9' 0800'              	movf	??i1_sprintf^(0+128),w
 17017  04AA' 0280'              	subwf	i1sprintf@prec^(0+128),f
 17018  04AB' 0800'              	movf	(??i1_sprintf+1)^(0+128),w
 17019  04AC' 3B80'              	subwfb	(i1sprintf@prec+1)^(0+128),f
 17020  04AD'                    i1l6634:
 17021                           
 17022                           ;doprnt.c: 1245: if(c)
 17023  04AD' 0800'              	movf	i1sprintf@c^(0+128),w
 17024  04AE' 1903               	btfsc	3,2
 17025  04AF' 2800'              	goto	u980_21
 17026  04B0' 2800'              	goto	u980_20
 17027  04B1'                    u980_21:
 17028  04B1' 2800'              	goto	i1l6640
 17029  04B2'                    u980_20:
 17030  04B2'                    i1l6636:
 17031                           
 17032                           ;doprnt.c: 1247: ((*sp++ = ('.')));
 17033  04B2' 0800'              	movf	i1sprintf@sp^(0+128),w
 17034  04B3' 0086               	movwf	6
 17035  04B4' 0800'              	movf	(i1sprintf@sp+1)^(0+128),w
 17036  04B5' 0087               	movwf	7
 17037  04B6' 302E               	movlw	46
 17038  04B7' 0081               	movwf	1
 17039  04B8'                    i1l6638:
 17040  04B8' 3001               	movlw	1
 17041  04B9' 0780'              	addwf	i1sprintf@sp^(0+128),f
 17042  04BA' 3000               	movlw	0
 17043  04BB' 3D80'              	addwfc	(i1sprintf@sp+1)^(0+128),f
 17044  04BC'                    i1l6640:
 17045                           
 17046                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
 17047  04BC' 0800'              	movf	i1sprintf@c^(0+128),w
 17048  04BD' 3180' 2000' 3180'  	fcall	i1_scale
 17049  04C0' 0020               	movlb	0	; select bank0
 17050  04C1' 0821'              	movf	?i1_scale+3,w
 17051  04C2' 0021               	movlb	1	; select bank1
 17052  04C3' 0080'              	movwf	(i1_sprintf$2783+3)^(0+128)
 17053  04C4' 0020               	movlb	0	; select bank0
 17054  04C5' 0820'              	movf	?i1_scale+2,w
 17055  04C6' 0021               	movlb	1	; select bank1
 17056  04C7' 0080'              	movwf	(i1_sprintf$2783+2)^(0+128)
 17057  04C8' 0020               	movlb	0	; select bank0
 17058  04C9' 081F'              	movf	?i1_scale+1,w
 17059  04CA' 0021               	movlb	1	; select bank1
 17060  04CB' 0080'              	movwf	(i1_sprintf$2783+1)^(0+128)
 17061  04CC' 0020               	movlb	0	; select bank0
 17062  04CD' 081E'              	movf	?i1_scale,w
 17063  04CE' 0021               	movlb	1	; select bank1
 17064  04CF' 0080'              	movwf	i1_sprintf$2783^(0+128)
 17065  04D0'                    i1l6642:
 17066                           
 17067                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
 17068  04D0' 0800'              	movf	(i1_sprintf$2783+3)^(0+128),w
 17069  04D1' 0020               	movlb	0	; select bank0
 17070  04D2' 008B'              	movwf	i1___flmul@a+3
 17071  04D3' 0021               	movlb	1	; select bank1
 17072  04D4' 0800'              	movf	(i1_sprintf$2783+2)^(0+128),w
 17073  04D5' 0020               	movlb	0	; select bank0
 17074  04D6' 008A'              	movwf	i1___flmul@a+2
 17075  04D7' 0021               	movlb	1	; select bank1
 17076  04D8' 0800'              	movf	(i1_sprintf$2783+1)^(0+128),w
 17077  04D9' 0020               	movlb	0	; select bank0
 17078  04DA' 0089'              	movwf	i1___flmul@a+1
 17079  04DB' 0021               	movlb	1	; select bank1
 17080  04DC' 0800'              	movf	i1_sprintf$2783^(0+128),w
 17081  04DD' 0020               	movlb	0	; select bank0
 17082  04DE' 0088'              	movwf	i1___flmul@a
 17083  04DF' 0021               	movlb	1	; select bank1
 17084  04E0' 0800'              	movf	(i1sprintf@fval+3)^(0+128),w
 17085  04E1' 0020               	movlb	0	; select bank0
 17086  04E2' 0087'              	movwf	i1___flmul@b+3
 17087  04E3' 0021               	movlb	1	; select bank1
 17088  04E4' 0800'              	movf	(i1sprintf@fval+2)^(0+128),w
 17089  04E5' 0020               	movlb	0	; select bank0
 17090  04E6' 0086'              	movwf	i1___flmul@b+2
 17091  04E7' 0021               	movlb	1	; select bank1
 17092  04E8' 0800'              	movf	(i1sprintf@fval+1)^(0+128),w
 17093  04E9' 0020               	movlb	0	; select bank0
 17094  04EA' 0085'              	movwf	i1___flmul@b+1
 17095  04EB' 0021               	movlb	1	; select bank1
 17096  04EC' 0800'              	movf	i1sprintf@fval^(0+128),w
 17097  04ED' 0020               	movlb	0	; select bank0
 17098  04EE' 0084'              	movwf	i1___flmul@b
 17099  04EF' 3180' 2000' 3180'  	fcall	i1___flmul
 17100  04F2' 0020               	movlb	0	; select bank0
 17101  04F3' 0807'              	movf	?i1___flmul+3,w
 17102  04F4' 00A1'              	movwf	i1___fltol@f1+3
 17103  04F5' 0806'              	movf	?i1___flmul+2,w
 17104  04F6' 00A0'              	movwf	i1___fltol@f1+2
 17105  04F7' 0805'              	movf	?i1___flmul+1,w
 17106  04F8' 009F'              	movwf	i1___fltol@f1+1
 17107  04F9' 0804'              	movf	?i1___flmul,w
 17108  04FA' 009E'              	movwf	i1___fltol@f1
 17109  04FB' 3180' 2000' 3180'  	fcall	i1___fltol
 17110  04FE' 0020               	movlb	0	; select bank0
 17111  04FF' 0821'              	movf	?i1___fltol+3,w
 17112  0500' 0021               	movlb	1	; select bank1
 17113  0501' 0080'              	movwf	(i1sprintf@val+3)^(0+128)
 17114  0502' 0020               	movlb	0	; select bank0
 17115  0503' 0820'              	movf	?i1___fltol+2,w
 17116  0504' 0021               	movlb	1	; select bank1
 17117  0505' 0080'              	movwf	(i1sprintf@val+2)^(0+128)
 17118  0506' 0020               	movlb	0	; select bank0
 17119  0507' 081F'              	movf	?i1___fltol+1,w
 17120  0508' 0021               	movlb	1	; select bank1
 17121  0509' 0080'              	movwf	(i1sprintf@val+1)^(0+128)
 17122  050A' 0020               	movlb	0	; select bank0
 17123  050B' 081E'              	movf	?i1___fltol,w
 17124  050C' 0021               	movlb	1	; select bank1
 17125  050D' 0080'              	movwf	i1sprintf@val^(0+128)
 17126                           
 17127                           ;doprnt.c: 1254: while(c--) {
 17128  050E' 2800'              	goto	i1l6654
 17129  050F'                    i1l6644:
 17130                           
 17131                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
 17132  050F' 0800'              	movf	i1sprintf@c^(0+128),w
 17133  0510' 0080'              	movwf	??i1_sprintf^(0+128)
 17134  0511' 0181'              	clrf	(??i1_sprintf^(0+128)+1)
 17135  0512' 3580'              	lslf	??i1_sprintf^(0+128),f
 17136  0513' 0D81'              	rlf	(??i1_sprintf^(0+128)+1),f
 17137  0514' 3580'              	lslf	??i1_sprintf^(0+128),f
 17138  0515' 0D81'              	rlf	(??i1_sprintf^(0+128)+1),f
 17139  0516' 3000'              	movlw	low (_dpowers| (0+32768))
 17140  0517' 0700'              	addwf	??i1_sprintf^(0+128),w
 17141  0518' 0084               	movwf	4
 17142  0519' 3000'              	movlw	high (_dpowers| (0+32768))
 17143  051A' 3D00'              	addwfc	(??i1_sprintf+1)^(0+128),w
 17144  051B' 0085               	movwf	5
 17145  051C' 3F00               	moviw [0]fsr0
 17146  051D' 0080'              	movwf	i1___lldiv@divisor
 17147  051E' 3F01               	moviw [1]fsr0
 17148  051F' 0081'              	movwf	i1___lldiv@divisor+1
 17149  0520' 3F02               	moviw [2]fsr0
 17150  0521' 0082'              	movwf	i1___lldiv@divisor+2
 17151  0522' 3F03               	moviw [3]fsr0
 17152  0523' 0083'              	movwf	i1___lldiv@divisor+3
 17153  0524' 0800'              	movf	(i1sprintf@val+3)^(0+128),w
 17154  0525' 0087'              	movwf	i1___lldiv@dividend+3
 17155  0526' 0800'              	movf	(i1sprintf@val+2)^(0+128),w
 17156  0527' 0086'              	movwf	i1___lldiv@dividend+2
 17157  0528' 0800'              	movf	(i1sprintf@val+1)^(0+128),w
 17158  0529' 0085'              	movwf	i1___lldiv@dividend+1
 17159  052A' 0800'              	movf	i1sprintf@val^(0+128),w
 17160  052B' 0084'              	movwf	i1___lldiv@dividend
 17161  052C' 3180' 2000' 3180'  	fcall	i1___lldiv
 17162  052F' 0803'              	movf	?i1___lldiv+3,w
 17163  0530' 0021               	movlb	1	; select bank1
 17164  0531' 0080'              	movwf	(i1sprintf@tmpval+3)^(0+128)
 17165  0532' 0802'              	movf	?i1___lldiv+2,w
 17166  0533' 0080'              	movwf	(i1sprintf@tmpval+2)^(0+128)
 17167  0534' 0801'              	movf	?i1___lldiv+1,w
 17168  0535' 0080'              	movwf	(i1sprintf@tmpval+1)^(0+128)
 17169  0536' 0800'              	movf	?i1___lldiv,w
 17170  0537' 0080'              	movwf	i1sprintf@tmpval^(0+128)
 17171  0538'                    i1l6646:
 17172                           
 17173                           ;doprnt.c: 1256: tmpval.vd %= 10;
 17174  0538' 3000               	movlw	0
 17175  0539' 0020               	movlb	0	; select bank0
 17176  053A' 0083'              	movwf	i1___llmod@divisor+3
 17177  053B' 3000               	movlw	0
 17178  053C' 0082'              	movwf	i1___llmod@divisor+2
 17179  053D' 3000               	movlw	0
 17180  053E' 0081'              	movwf	i1___llmod@divisor+1
 17181  053F' 300A               	movlw	10
 17182  0540' 0080'              	movwf	i1___llmod@divisor
 17183  0541' 0021               	movlb	1	; select bank1
 17184  0542' 0800'              	movf	(i1sprintf@tmpval+3)^(0+128),w
 17185  0543' 0020               	movlb	0	; select bank0
 17186  0544' 0087'              	movwf	i1___llmod@dividend+3
 17187  0545' 0021               	movlb	1	; select bank1
 17188  0546' 0800'              	movf	(i1sprintf@tmpval+2)^(0+128),w
 17189  0547' 0020               	movlb	0	; select bank0
 17190  0548' 0086'              	movwf	i1___llmod@dividend+2
 17191  0549' 0021               	movlb	1	; select bank1
 17192  054A' 0800'              	movf	(i1sprintf@tmpval+1)^(0+128),w
 17193  054B' 0020               	movlb	0	; select bank0
 17194  054C' 0085'              	movwf	i1___llmod@dividend+1
 17195  054D' 0021               	movlb	1	; select bank1
 17196  054E' 0800'              	movf	i1sprintf@tmpval^(0+128),w
 17197  054F' 0020               	movlb	0	; select bank0
 17198  0550' 0084'              	movwf	i1___llmod@dividend
 17199  0551' 3180' 2000' 3180'  	fcall	i1___llmod
 17200  0554' 0020               	movlb	0	; select bank0
 17201  0555' 0803'              	movf	?i1___llmod+3,w
 17202  0556' 0021               	movlb	1	; select bank1
 17203  0557' 0080'              	movwf	(i1sprintf@tmpval+3)^(0+128)
 17204  0558' 0020               	movlb	0	; select bank0
 17205  0559' 0802'              	movf	?i1___llmod+2,w
 17206  055A' 0021               	movlb	1	; select bank1
 17207  055B' 0080'              	movwf	(i1sprintf@tmpval+2)^(0+128)
 17208  055C' 0020               	movlb	0	; select bank0
 17209  055D' 0801'              	movf	?i1___llmod+1,w
 17210  055E' 0021               	movlb	1	; select bank1
 17211  055F' 0080'              	movwf	(i1sprintf@tmpval+1)^(0+128)
 17212  0560' 0020               	movlb	0	; select bank0
 17213  0561' 0800'              	movf	?i1___llmod,w
 17214  0562' 0021               	movlb	1	; select bank1
 17215  0563' 0080'              	movwf	i1sprintf@tmpval^(0+128)
 17216  0564'                    i1l6648:
 17217                           
 17218                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)));
 17219  0564' 0800'              	movf	i1sprintf@tmpval^(0+128),w
 17220  0565' 3E30               	addlw	48
 17221  0566' 0080'              	movwf	??i1_sprintf^(0+128)
 17222  0567' 0800'              	movf	i1sprintf@sp^(0+128),w
 17223  0568' 0086               	movwf	6
 17224  0569' 0800'              	movf	(i1sprintf@sp+1)^(0+128),w
 17225  056A' 0087               	movwf	7
 17226  056B' 0800'              	movf	??i1_sprintf^(0+128),w
 17227  056C' 0081               	movwf	1
 17228  056D'                    i1l6650:
 17229  056D' 3001               	movlw	1
 17230  056E' 0780'              	addwf	i1sprintf@sp^(0+128),f
 17231  056F' 3000               	movlw	0
 17232  0570' 3D80'              	addwfc	(i1sprintf@sp+1)^(0+128),f
 17233  0571'                    i1l6652:
 17234                           
 17235                           ;doprnt.c: 1258: val %= dpowers[c];
 17236  0571' 0800'              	movf	i1sprintf@c^(0+128),w
 17237  0572' 0080'              	movwf	??i1_sprintf^(0+128)
 17238  0573' 0181'              	clrf	(??i1_sprintf^(0+128)+1)
 17239  0574' 3580'              	lslf	??i1_sprintf^(0+128),f
 17240  0575' 0D81'              	rlf	(??i1_sprintf^(0+128)+1),f
 17241  0576' 3580'              	lslf	??i1_sprintf^(0+128),f
 17242  0577' 0D81'              	rlf	(??i1_sprintf^(0+128)+1),f
 17243  0578' 3000'              	movlw	low (_dpowers| (0+32768))
 17244  0579' 0700'              	addwf	??i1_sprintf^(0+128),w
 17245  057A' 0084               	movwf	4
 17246  057B' 3000'              	movlw	high (_dpowers| (0+32768))
 17247  057C' 3D00'              	addwfc	(??i1_sprintf+1)^(0+128),w
 17248  057D' 0085               	movwf	5
 17249  057E' 3F00               	moviw [0]fsr0
 17250  057F' 0020               	movlb	0	; select bank0
 17251  0580' 0080'              	movwf	i1___llmod@divisor
 17252  0581' 3F01               	moviw [1]fsr0
 17253  0582' 0081'              	movwf	i1___llmod@divisor+1
 17254  0583' 3F02               	moviw [2]fsr0
 17255  0584' 0082'              	movwf	i1___llmod@divisor+2
 17256  0585' 3F03               	moviw [3]fsr0
 17257  0586' 0083'              	movwf	i1___llmod@divisor+3
 17258  0587' 0021               	movlb	1	; select bank1
 17259  0588' 0800'              	movf	(i1sprintf@val+3)^(0+128),w
 17260  0589' 0020               	movlb	0	; select bank0
 17261  058A' 0087'              	movwf	i1___llmod@dividend+3
 17262  058B' 0021               	movlb	1	; select bank1
 17263  058C' 0800'              	movf	(i1sprintf@val+2)^(0+128),w
 17264  058D' 0020               	movlb	0	; select bank0
 17265  058E' 0086'              	movwf	i1___llmod@dividend+2
 17266  058F' 0021               	movlb	1	; select bank1
 17267  0590' 0800'              	movf	(i1sprintf@val+1)^(0+128),w
 17268  0591' 0020               	movlb	0	; select bank0
 17269  0592' 0085'              	movwf	i1___llmod@dividend+1
 17270  0593' 0021               	movlb	1	; select bank1
 17271  0594' 0800'              	movf	i1sprintf@val^(0+128),w
 17272  0595' 0020               	movlb	0	; select bank0
 17273  0596' 0084'              	movwf	i1___llmod@dividend
 17274  0597' 3180' 2000' 3180'  	fcall	i1___llmod
 17275  059A' 0020               	movlb	0	; select bank0
 17276  059B' 0803'              	movf	?i1___llmod+3,w
 17277  059C' 0021               	movlb	1	; select bank1
 17278  059D' 0080'              	movwf	(i1sprintf@val+3)^(0+128)
 17279  059E' 0020               	movlb	0	; select bank0
 17280  059F' 0802'              	movf	?i1___llmod+2,w
 17281  05A0' 0021               	movlb	1	; select bank1
 17282  05A1' 0080'              	movwf	(i1sprintf@val+2)^(0+128)
 17283  05A2' 0020               	movlb	0	; select bank0
 17284  05A3' 0801'              	movf	?i1___llmod+1,w
 17285  05A4' 0021               	movlb	1	; select bank1
 17286  05A5' 0080'              	movwf	(i1sprintf@val+1)^(0+128)
 17287  05A6' 0020               	movlb	0	; select bank0
 17288  05A7' 0800'              	movf	?i1___llmod,w
 17289  05A8' 0021               	movlb	1	; select bank1
 17290  05A9' 0080'              	movwf	i1sprintf@val^(0+128)
 17291  05AA'                    i1l6654:
 17292  05AA' 3001               	movlw	1
 17293  05AB' 0280'              	subwf	i1sprintf@c^(0+128),f
 17294  05AC' 0A00'              	incf	i1sprintf@c^(0+128),w
 17295  05AD' 1D03               	btfss	3,2
 17296  05AE' 2800'              	goto	u981_21
 17297  05AF' 2800'              	goto	u981_20
 17298  05B0'                    u981_21:
 17299  05B0' 2800'              	goto	i1l6644
 17300  05B1'                    u981_20:
 17301  05B1' 2800'              	goto	i1l6662
 17302  05B2'                    i1l6656:
 17303                           
 17304                           ;doprnt.c: 1262: ((*sp++ = ('0')));
 17305  05B2' 0800'              	movf	i1sprintf@sp^(0+128),w
 17306  05B3' 0086               	movwf	6
 17307  05B4' 0800'              	movf	(i1sprintf@sp+1)^(0+128),w
 17308  05B5' 0087               	movwf	7
 17309  05B6' 3030               	movlw	48
 17310  05B7' 0081               	movwf	1
 17311  05B8'                    i1l6658:
 17312  05B8' 3001               	movlw	1
 17313  05B9' 0780'              	addwf	i1sprintf@sp^(0+128),f
 17314  05BA' 3000               	movlw	0
 17315  05BB' 3D80'              	addwfc	(i1sprintf@sp+1)^(0+128),f
 17316  05BC'                    i1l6660:
 17317                           
 17318                           ;doprnt.c: 1263: prec--;
 17319  05BC' 30FF               	movlw	255
 17320  05BD' 0780'              	addwf	i1sprintf@prec^(0+128),f
 17321  05BE' 30FF               	movlw	255
 17322  05BF' 3D80'              	addwfc	(i1sprintf@prec+1)^(0+128),f
 17323  05C0'                    i1l6662:
 17324  05C0' 0800'              	movf	i1sprintf@prec^(0+128),w
 17325  05C1' 0400'              	iorwf	(i1sprintf@prec+1)^(0+128),w
 17326  05C2' 1D03               	btfss	3,2
 17327  05C3' 2800'              	goto	u982_21
 17328  05C4' 2800'              	goto	u982_20
 17329  05C5'                    u982_21:
 17330  05C5' 2800'              	goto	i1l6656
 17331  05C6'                    u982_20:
 17332  05C6' 2800'              	goto	i1l6758
 17333  05C7'                    i1l6664:
 17334                           
 17335                           ;doprnt.c: 1272: };doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_
      +                          arg((*(int **)ap), (int)0));
 17336  05C7' 0800'              	movf	i1sprintf@ap^(0+128),w
 17337  05C8' 0086               	movwf	6
 17338  05C9' 0800'              	movf	(i1sprintf@ap+1)^(0+128),w
 17339  05CA' 0087               	movwf	7
 17340  05CB' 3F40               	moviw [0]fsr1
 17341  05CC' 0080'              	movwf	??i1_sprintf^(0+128)
 17342  05CD' 3F41               	moviw [1]fsr1
 17343  05CE' 0081'              	movwf	(??i1_sprintf^(0+128)+1)
 17344  05CF' 0800'              	movf	??i1_sprintf^(0+128),w
 17345  05D0' 0080'              	movwf	i1sprintf@val^(0+128)
 17346  05D1' 0800'              	movf	(??i1_sprintf+1)^(0+128),w
 17347  05D2' 0080'              	movwf	(i1sprintf@val+1)^(0+128)
 17348  05D3' 0D89               	rlf	9,f
 17349  05D4' 3B89               	subwfb	9,f
 17350  05D5' 0989               	comf	9,f
 17351  05D6' 0080'              	movwf	(i1sprintf@val+2)^(0+128)
 17352  05D7' 0080'              	movwf	(i1sprintf@val+3)^(0+128)
 17353  05D8'                    i1l6666:
 17354  05D8' 3002               	movlw	2
 17355  05D9' 0780'              	addwf	i1sprintf@ap^(0+128),f
 17356  05DA' 3000               	movlw	0
 17357  05DB' 3D80'              	addwfc	(i1sprintf@ap+1)^(0+128),f
 17358  05DC'                    i1l6668:
 17359                           
 17360                           ;doprnt.c: 1287: if((long)val < 0) {
 17361  05DC' 1F80'              	btfss	(i1sprintf@val+3)^(0+128),7
 17362  05DD' 2800'              	goto	u983_21
 17363  05DE' 2800'              	goto	u983_20
 17364  05DF'                    u983_21:
 17365  05DF' 2800'              	goto	i1l6674
 17366  05E0'                    u983_20:
 17367  05E0'                    i1l6670:
 17368                           
 17369                           ;doprnt.c: 1288: flag |= 0x03;
 17370  05E0' 3003               	movlw	3
 17371  05E1' 0480'              	iorwf	i1sprintf@flag^(0+128),f
 17372  05E2' 3000               	movlw	0
 17373  05E3' 0480'              	iorwf	(i1sprintf@flag+1)^(0+128),f
 17374  05E4'                    i1l6672:
 17375                           
 17376                           ;doprnt.c: 1289: val = -val;
 17377  05E4' 0980'              	comf	i1sprintf@val^(0+128),f
 17378  05E5' 0980'              	comf	(i1sprintf@val+1)^(0+128),f
 17379  05E6' 0980'              	comf	(i1sprintf@val+2)^(0+128),f
 17380  05E7' 0980'              	comf	(i1sprintf@val+3)^(0+128),f
 17381  05E8' 0A80'              	incf	i1sprintf@val^(0+128),f
 17382  05E9' 1903               	skipnz
 17383  05EA' 0A80'              	incf	(i1sprintf@val+1)^(0+128),f
 17384  05EB' 1903               	skipnz
 17385  05EC' 0A80'              	incf	(i1sprintf@val+2)^(0+128),f
 17386  05ED' 1903               	skipnz
 17387  05EE' 0A80'              	incf	(i1sprintf@val+3)^(0+128),f
 17388  05EF'                    i1l6674:
 17389                           
 17390                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1316: if(prec == 0 && val == 0)
 17391  05EF' 0800'              	movf	i1sprintf@prec^(0+128),w
 17392  05F0' 0400'              	iorwf	(i1sprintf@prec+1)^(0+128),w
 17393  05F1' 1D03               	btfss	3,2
 17394  05F2' 2800'              	goto	u984_21
 17395  05F3' 2800'              	goto	u984_20
 17396  05F4'                    u984_21:
 17397  05F4' 2800'              	goto	i1l6680
 17398  05F5'                    u984_20:
 17399  05F5'                    i1l6676:
 17400  05F5' 0800'              	movf	(i1sprintf@val+3)^(0+128),w
 17401  05F6' 0400'              	iorwf	(i1sprintf@val+2)^(0+128),w
 17402  05F7' 0400'              	iorwf	(i1sprintf@val+1)^(0+128),w
 17403  05F8' 0400'              	iorwf	i1sprintf@val^(0+128),w
 17404  05F9' 1D03               	skipz
 17405  05FA' 2800'              	goto	u985_21
 17406  05FB' 2800'              	goto	u985_20
 17407  05FC'                    u985_21:
 17408  05FC' 2800'              	goto	i1l6680
 17409  05FD'                    u985_20:
 17410  05FD'                    i1l6678:
 17411                           
 17412                           ;doprnt.c: 1317: prec++;
 17413  05FD' 3001               	movlw	1
 17414  05FE' 0780'              	addwf	i1sprintf@prec^(0+128),f
 17415  05FF' 3000               	movlw	0
 17416  0600' 3D80'              	addwfc	(i1sprintf@prec+1)^(0+128),f
 17417  0601'                    i1l6680:
 17418                           
 17419                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 17420  0601' 0180'              	clrf	i1sprintf@c^(0+128)
 17421  0602' 0A80'              	incf	i1sprintf@c^(0+128),f
 17422  0603'                    i1l6686:
 17423                           
 17424                           ;doprnt.c: 1332: if(val < dpowers[c])
 17425  0603' 0800'              	movf	i1sprintf@c^(0+128),w
 17426  0604' 0080'              	movwf	??i1_sprintf^(0+128)
 17427  0605' 0181'              	clrf	(??i1_sprintf^(0+128)+1)
 17428  0606' 3580'              	lslf	??i1_sprintf^(0+128),f
 17429  0607' 0D81'              	rlf	(??i1_sprintf^(0+128)+1),f
 17430  0608' 3580'              	lslf	??i1_sprintf^(0+128),f
 17431  0609' 0D81'              	rlf	(??i1_sprintf^(0+128)+1),f
 17432  060A' 3000'              	movlw	low (_dpowers| (0+32768))
 17433  060B' 0700'              	addwf	??i1_sprintf^(0+128),w
 17434  060C' 0084               	movwf	4
 17435  060D' 3000'              	movlw	high (_dpowers| (0+32768))
 17436  060E' 3D00'              	addwfc	(??i1_sprintf+1)^(0+128),w
 17437  060F' 0085               	movwf	5
 17438  0610' 3F00               	moviw [0]fsr0
 17439  0611' 0080'              	movwf	(??i1_sprintf+2)^(0+128)
 17440  0612' 3F01               	moviw [1]fsr0
 17441  0613' 0081'              	movwf	((??i1_sprintf+2)^(0+128)+1)
 17442  0614' 3F02               	moviw [2]fsr0
 17443  0615' 0082'              	movwf	((??i1_sprintf+2)^(0+128)+2)
 17444  0616' 3F03               	moviw [3]fsr0
 17445  0617' 0083'              	movwf	((??i1_sprintf+2)^(0+128)+3)
 17446  0618' 0800'              	movf	(??i1_sprintf+5)^(0+128),w
 17447  0619' 0200'              	subwf	(i1sprintf@val+3)^(0+128),w
 17448  061A' 1D03               	skipz
 17449  061B' 2800'              	goto	u986_25
 17450  061C' 0800'              	movf	(??i1_sprintf+4)^(0+128),w
 17451  061D' 0200'              	subwf	(i1sprintf@val+2)^(0+128),w
 17452  061E' 1D03               	skipz
 17453  061F' 2800'              	goto	u986_25
 17454  0620' 0800'              	movf	(??i1_sprintf+3)^(0+128),w
 17455  0621' 0200'              	subwf	(i1sprintf@val+1)^(0+128),w
 17456  0622' 1D03               	skipz
 17457  0623' 2800'              	goto	u986_25
 17458  0624' 0800'              	movf	(??i1_sprintf+2)^(0+128),w
 17459  0625' 0200'              	subwf	i1sprintf@val^(0+128),w
 17460  0626'                    u986_25:
 17461  0626' 1803               	skipnc
 17462  0627' 2800'              	goto	u986_21
 17463  0628' 2800'              	goto	u986_20
 17464  0629'                    u986_21:
 17465  0629' 2800'              	goto	i1l6690
 17466  062A'                    u986_20:
 17467  062A' 2800'              	goto	i1l6692
 17468  062B'                    i1l6690:
 17469  062B' 3001               	movlw	1
 17470  062C' 0080'              	movwf	??i1_sprintf^(0+128)
 17471  062D' 0800'              	movf	??i1_sprintf^(0+128),w
 17472  062E' 0780'              	addwf	i1sprintf@c^(0+128),f
 17473  062F' 300A               	movlw	10
 17474  0630' 0600'              	xorwf	i1sprintf@c^(0+128),w
 17475  0631' 1D03               	btfss	3,2
 17476  0632' 2800'              	goto	u987_21
 17477  0633' 2800'              	goto	u987_20
 17478  0634'                    u987_21:
 17479  0634' 2800'              	goto	i1l6686
 17480  0635'                    u987_20:
 17481  0635'                    i1l6692:
 17482                           
 17483                           ;doprnt.c: 1365: if(c < prec)
 17484  0635' 0800'              	movf	(i1sprintf@prec+1)^(0+128),w
 17485  0636' 3A80               	xorlw	128
 17486  0637' 3C80               	sublw	128
 17487  0638' 1D03               	skipz
 17488  0639' 2800'              	goto	u988_25
 17489  063A' 0800'              	movf	i1sprintf@prec^(0+128),w
 17490  063B' 0200'              	subwf	i1sprintf@c^(0+128),w
 17491  063C'                    u988_25:
 17492  063C' 1803               	skipnc
 17493  063D' 2800'              	goto	u988_21
 17494  063E' 2800'              	goto	u988_20
 17495  063F'                    u988_21:
 17496  063F' 2800'              	goto	i1l6696
 17497  0640'                    u988_20:
 17498  0640'                    i1l6694:
 17499                           
 17500                           ;doprnt.c: 1366: c = (char)prec;
 17501  0640' 0021               	movlb	1	; select bank1
 17502  0641' 0800'              	movf	i1sprintf@prec^(0+128),w
 17503  0642' 0080'              	movwf	??i1_sprintf^(0+128)
 17504  0643' 0800'              	movf	??i1_sprintf^(0+128),w
 17505  0644' 0080'              	movwf	i1sprintf@c^(0+128)
 17506  0645' 2800'              	goto	i1l6700
 17507  0646'                    i1l6696:
 17508                           
 17509                           ;doprnt.c: 1367: else if(prec < c)
 17510  0646' 0021               	movlb	1	; select bank1
 17511  0647' 0800'              	movf	(i1sprintf@prec+1)^(0+128),w
 17512  0648' 3A80               	xorlw	128
 17513  0649' 0080'              	movwf	??i1_sprintf^(0+128)
 17514  064A' 3080               	movlw	128
 17515  064B' 0200'              	subwf	??i1_sprintf^(0+128),w
 17516  064C' 1D03               	skipz
 17517  064D' 2800'              	goto	u989_25
 17518  064E' 0800'              	movf	i1sprintf@c^(0+128),w
 17519  064F' 0200'              	subwf	i1sprintf@prec^(0+128),w
 17520  0650'                    u989_25:
 17521  0650' 1803               	skipnc
 17522  0651' 2800'              	goto	u989_21
 17523  0652' 2800'              	goto	u989_20
 17524  0653'                    u989_21:
 17525  0653' 2800'              	goto	i1l6700
 17526  0654'                    u989_20:
 17527  0654'                    i1l6698:
 17528                           
 17529                           ;doprnt.c: 1368: prec = c;
 17530  0654' 0021               	movlb	1	; select bank1
 17531  0655' 0800'              	movf	i1sprintf@c^(0+128),w
 17532  0656' 0080'              	movwf	??i1_sprintf^(0+128)
 17533  0657' 0181'              	clrf	(??i1_sprintf^(0+128)+1)
 17534  0658' 0800'              	movf	??i1_sprintf^(0+128),w
 17535  0659' 0080'              	movwf	i1sprintf@prec^(0+128)
 17536  065A' 0800'              	movf	(??i1_sprintf+1)^(0+128),w
 17537  065B' 0080'              	movwf	(i1sprintf@prec+1)^(0+128)
 17538  065C'                    i1l6700:
 17539                           
 17540                           ;doprnt.c: 1371: if(width && flag & 0x03)
 17541  065C' 0021               	movlb	1	; select bank1
 17542  065D' 0800'              	movf	i1sprintf@width^(0+128),w
 17543  065E' 0400'              	iorwf	(i1sprintf@width+1)^(0+128),w
 17544  065F' 1903               	btfsc	3,2
 17545  0660' 2800'              	goto	u990_21
 17546  0661' 2800'              	goto	u990_20
 17547  0662'                    u990_21:
 17548  0662' 2800'              	goto	i1l6706
 17549  0663'                    u990_20:
 17550  0663'                    i1l6702:
 17551  0663' 3003               	movlw	3
 17552  0664' 0500'              	andwf	i1sprintf@flag^(0+128),w
 17553  0665' 0080'              	movwf	??i1_sprintf^(0+128)
 17554  0666' 3000               	movlw	0
 17555  0667' 0500'              	andwf	(i1sprintf@flag+1)^(0+128),w
 17556  0668' 0080'              	movwf	(??i1_sprintf+1)^(0+128)
 17557  0669' 0800'              	movf	??i1_sprintf^(0+128),w
 17558  066A' 0401'              	iorwf	(??i1_sprintf^(0+128)+1),w
 17559  066B' 1903               	btfsc	3,2
 17560  066C' 2800'              	goto	u991_21
 17561  066D' 2800'              	goto	u991_20
 17562  066E'                    u991_21:
 17563  066E' 2800'              	goto	i1l6706
 17564  066F'                    u991_20:
 17565  066F'                    i1l6704:
 17566                           
 17567                           ;doprnt.c: 1372: width--;
 17568  066F' 30FF               	movlw	255
 17569  0670' 0780'              	addwf	i1sprintf@width^(0+128),f
 17570  0671' 30FF               	movlw	255
 17571  0672' 3D80'              	addwfc	(i1sprintf@width+1)^(0+128),f
 17572  0673'                    i1l6706:
 17573                           
 17574                           ;doprnt.c: 1374: if(flag & 0x4000) {
 17575  0673' 1F00'              	btfss	(i1sprintf@flag+1)^(0+128),6
 17576  0674' 2800'              	goto	u992_21
 17577  0675' 2800'              	goto	u992_20
 17578  0676'                    u992_21:
 17579  0676' 2800'              	goto	i1l6714
 17580  0677'                    u992_20:
 17581  0677'                    i1l6708:
 17582                           
 17583                           ;doprnt.c: 1375: if(width > prec)
 17584  0677' 0800'              	movf	(i1sprintf@prec+1)^(0+128),w
 17585  0678' 3A80               	xorlw	128
 17586  0679' 0080'              	movwf	??i1_sprintf^(0+128)
 17587  067A' 0800'              	movf	(i1sprintf@width+1)^(0+128),w
 17588  067B' 3A80               	xorlw	128
 17589  067C' 0200'              	subwf	??i1_sprintf^(0+128),w
 17590  067D' 1D03               	skipz
 17591  067E' 2800'              	goto	u993_25
 17592  067F' 0800'              	movf	i1sprintf@width^(0+128),w
 17593  0680' 0200'              	subwf	i1sprintf@prec^(0+128),w
 17594  0681'                    u993_25:
 17595  0681' 1803               	skipnc
 17596  0682' 2800'              	goto	u993_21
 17597  0683' 2800'              	goto	u993_20
 17598  0684'                    u993_21:
 17599  0684' 2800'              	goto	i1l6712
 17600  0685'                    u993_20:
 17601  0685'                    i1l6710:
 17602                           
 17603                           ;doprnt.c: 1376: width -= prec;
 17604  0685' 0021               	movlb	1	; select bank1
 17605  0686' 0800'              	movf	i1sprintf@prec^(0+128),w
 17606  0687' 0280'              	subwf	i1sprintf@width^(0+128),f
 17607  0688' 0800'              	movf	(i1sprintf@prec+1)^(0+128),w
 17608  0689' 3B80'              	subwfb	(i1sprintf@width+1)^(0+128),f
 17609  068A' 2800'              	goto	i1l6714
 17610  068B'                    i1l6712:
 17611                           
 17612                           ;doprnt.c: 1377: else;doprnt.c: 1378: width = 0;
 17613  068B' 0021               	movlb	1	; select bank1
 17614  068C' 0180'              	clrf	i1sprintf@width^(0+128)
 17615  068D' 0180'              	clrf	(i1sprintf@width+1)^(0+128)
 17616  068E'                    i1l6714:
 17617                           
 17618                           ;doprnt.c: 1379: };doprnt.c: 1407: if(width > c)
 17619  068E' 0800'              	movf	(i1sprintf@width+1)^(0+128),w
 17620  068F' 3A80               	xorlw	128
 17621  0690' 3C80               	sublw	128
 17622  0691' 1D03               	skipz
 17623  0692' 2800'              	goto	u994_25
 17624  0693' 0800'              	movf	i1sprintf@width^(0+128),w
 17625  0694' 0200'              	subwf	i1sprintf@c^(0+128),w
 17626  0695'                    u994_25:
 17627  0695' 1803               	skipnc
 17628  0696' 2800'              	goto	u994_21
 17629  0697' 2800'              	goto	u994_20
 17630  0698'                    u994_21:
 17631  0698' 2800'              	goto	i1l6718
 17632  0699'                    u994_20:
 17633  0699'                    i1l6716:
 17634                           
 17635                           ;doprnt.c: 1408: width -= c;
 17636  0699' 0021               	movlb	1	; select bank1
 17637  069A' 0800'              	movf	i1sprintf@c^(0+128),w
 17638  069B' 0080'              	movwf	??i1_sprintf^(0+128)
 17639  069C' 0181'              	clrf	(??i1_sprintf^(0+128)+1)
 17640  069D' 0800'              	movf	??i1_sprintf^(0+128),w
 17641  069E' 0280'              	subwf	i1sprintf@width^(0+128),f
 17642  069F' 0800'              	movf	(??i1_sprintf+1)^(0+128),w
 17643  06A0' 3B80'              	subwfb	(i1sprintf@width+1)^(0+128),f
 17644  06A1' 2800'              	goto	i1l6720
 17645  06A2'                    i1l6718:
 17646                           
 17647                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 17648  06A2' 0021               	movlb	1	; select bank1
 17649  06A3' 0180'              	clrf	i1sprintf@width^(0+128)
 17650  06A4' 0180'              	clrf	(i1sprintf@width+1)^(0+128)
 17651  06A5'                    i1l6720:
 17652                           
 17653                           ;doprnt.c: 1413: if(flag & 0x04) {
 17654  06A5' 1D00'              	btfss	i1sprintf@flag^(0+128),2
 17655  06A6' 2800'              	goto	u995_21
 17656  06A7' 2800'              	goto	u995_20
 17657  06A8'                    u995_21:
 17658  06A8' 2800'              	goto	i1l6736
 17659  06A9'                    u995_20:
 17660  06A9'                    i1l6722:
 17661                           
 17662                           ;doprnt.c: 1418: if(flag & 0x03)
 17663  06A9' 3003               	movlw	3
 17664  06AA' 0500'              	andwf	i1sprintf@flag^(0+128),w
 17665  06AB' 0080'              	movwf	??i1_sprintf^(0+128)
 17666  06AC' 3000               	movlw	0
 17667  06AD' 0500'              	andwf	(i1sprintf@flag+1)^(0+128),w
 17668  06AE' 0080'              	movwf	(??i1_sprintf+1)^(0+128)
 17669  06AF' 0800'              	movf	??i1_sprintf^(0+128),w
 17670  06B0' 0401'              	iorwf	(??i1_sprintf^(0+128)+1),w
 17671  06B1' 1903               	btfsc	3,2
 17672  06B2' 2800'              	goto	u996_21
 17673  06B3' 2800'              	goto	u996_20
 17674  06B4'                    u996_21:
 17675  06B4' 2800'              	goto	i1l6728
 17676  06B5'                    u996_20:
 17677  06B5'                    i1l6724:
 17678                           
 17679                           ;doprnt.c: 1419: ((*sp++ = ('-')));
 17680  06B5' 0800'              	movf	i1sprintf@sp^(0+128),w
 17681  06B6' 0086               	movwf	6
 17682  06B7' 0800'              	movf	(i1sprintf@sp+1)^(0+128),w
 17683  06B8' 0087               	movwf	7
 17684  06B9' 302D               	movlw	45
 17685  06BA' 0081               	movwf	1
 17686  06BB'                    i1l6726:
 17687  06BB' 3001               	movlw	1
 17688  06BC' 0780'              	addwf	i1sprintf@sp^(0+128),f
 17689  06BD' 3000               	movlw	0
 17690  06BE' 3D80'              	addwfc	(i1sprintf@sp+1)^(0+128),f
 17691  06BF'                    i1l6728:
 17692                           
 17693                           ;doprnt.c: 1441: if(width)
 17694  06BF' 0800'              	movf	i1sprintf@width^(0+128),w
 17695  06C0' 0400'              	iorwf	(i1sprintf@width+1)^(0+128),w
 17696  06C1' 1903               	btfsc	3,2
 17697  06C2' 2800'              	goto	u997_21
 17698  06C3' 2800'              	goto	u997_20
 17699  06C4'                    u997_21:
 17700  06C4' 2800'              	goto	i1l6756
 17701  06C5'                    u997_20:
 17702  06C5'                    i1l6730:
 17703                           
 17704                           ;doprnt.c: 1443: ((*sp++ = ('0')));
 17705  06C5' 0800'              	movf	i1sprintf@sp^(0+128),w
 17706  06C6' 0086               	movwf	6
 17707  06C7' 0800'              	movf	(i1sprintf@sp+1)^(0+128),w
 17708  06C8' 0087               	movwf	7
 17709  06C9' 3030               	movlw	48
 17710  06CA' 0081               	movwf	1
 17711  06CB'                    i1l6732:
 17712  06CB' 3001               	movlw	1
 17713  06CC' 0780'              	addwf	i1sprintf@sp^(0+128),f
 17714  06CD' 3000               	movlw	0
 17715  06CE' 3D80'              	addwfc	(i1sprintf@sp+1)^(0+128),f
 17716  06CF'                    i1l6734:
 17717                           
 17718                           ;doprnt.c: 1444: while(--width);
 17719  06CF' 30FF               	movlw	255
 17720  06D0' 0780'              	addwf	i1sprintf@width^(0+128),f
 17721  06D1' 30FF               	movlw	255
 17722  06D2' 3D80'              	addwfc	(i1sprintf@width+1)^(0+128),f
 17723  06D3' 0800'              	movf	i1sprintf@width^(0+128),w
 17724  06D4' 0400'              	iorwf	(i1sprintf@width+1)^(0+128),w
 17725  06D5' 1D03               	btfss	3,2
 17726  06D6' 2800'              	goto	u998_21
 17727  06D7' 2800'              	goto	u998_20
 17728  06D8'                    u998_21:
 17729  06D8' 2800'              	goto	i1l6730
 17730  06D9'                    u998_20:
 17731  06D9' 2800'              	goto	i1l6756
 17732  06DA'                    i1l6736:
 17733                           
 17734                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
 17735  06DA' 0800'              	movf	i1sprintf@width^(0+128),w
 17736  06DB' 0400'              	iorwf	(i1sprintf@width+1)^(0+128),w
 17737  06DC' 1903               	btfsc	3,2
 17738  06DD' 2800'              	goto	u999_21
 17739  06DE' 2800'              	goto	u999_20
 17740  06DF'                    u999_21:
 17741  06DF' 2800'              	goto	i1l6744
 17742  06E0'                    u999_20:
 17743  06E0'                    i1l6738:
 17744                           
 17745                           ;doprnt.c: 1456: ((*sp++ = (' ')));
 17746  06E0' 0800'              	movf	i1sprintf@sp^(0+128),w
 17747  06E1' 0086               	movwf	6
 17748  06E2' 0800'              	movf	(i1sprintf@sp+1)^(0+128),w
 17749  06E3' 0087               	movwf	7
 17750  06E4' 3020               	movlw	32
 17751  06E5' 0081               	movwf	1
 17752  06E6'                    i1l6740:
 17753  06E6' 3001               	movlw	1
 17754  06E7' 0780'              	addwf	i1sprintf@sp^(0+128),f
 17755  06E8' 3000               	movlw	0
 17756  06E9' 3D80'              	addwfc	(i1sprintf@sp+1)^(0+128),f
 17757  06EA'                    i1l6742:
 17758                           
 17759                           ;doprnt.c: 1457: while(--width);
 17760  06EA' 30FF               	movlw	255
 17761  06EB' 0780'              	addwf	i1sprintf@width^(0+128),f
 17762  06EC' 30FF               	movlw	255
 17763  06ED' 3D80'              	addwfc	(i1sprintf@width+1)^(0+128),f
 17764  06EE' 0800'              	movf	i1sprintf@width^(0+128),w
 17765  06EF' 0400'              	iorwf	(i1sprintf@width+1)^(0+128),w
 17766  06F0' 1D03               	btfss	3,2
 17767  06F1' 2800'              	goto	u1000_21
 17768  06F2' 2800'              	goto	u1000_20
 17769  06F3'                    u1000_21:
 17770  06F3' 2800'              	goto	i1l6738
 17771  06F4'                    u1000_20:
 17772  06F4'                    i1l6744:
 17773                           
 17774                           ;doprnt.c: 1464: if(flag & 0x03)
 17775  06F4' 3003               	movlw	3
 17776  06F5' 0500'              	andwf	i1sprintf@flag^(0+128),w
 17777  06F6' 0080'              	movwf	??i1_sprintf^(0+128)
 17778  06F7' 3000               	movlw	0
 17779  06F8' 0500'              	andwf	(i1sprintf@flag+1)^(0+128),w
 17780  06F9' 0080'              	movwf	(??i1_sprintf+1)^(0+128)
 17781  06FA' 0800'              	movf	??i1_sprintf^(0+128),w
 17782  06FB' 0401'              	iorwf	(??i1_sprintf^(0+128)+1),w
 17783  06FC' 1903               	btfsc	3,2
 17784  06FD' 2800'              	goto	u1001_21
 17785  06FE' 2800'              	goto	u1001_20
 17786  06FF'                    u1001_21:
 17787  06FF' 2800'              	goto	i1l6756
 17788  0700'                    u1001_20:
 17789  0700'                    i1l6746:
 17790                           
 17791                           ;doprnt.c: 1465: ((*sp++ = ('-')));
 17792  0700' 0800'              	movf	i1sprintf@sp^(0+128),w
 17793  0701' 0086               	movwf	6
 17794  0702' 0800'              	movf	(i1sprintf@sp+1)^(0+128),w
 17795  0703' 0087               	movwf	7
 17796  0704' 302D               	movlw	45
 17797  0705' 0081               	movwf	1
 17798  0706'                    i1l6748:
 17799  0706' 3001               	movlw	1
 17800  0707' 0780'              	addwf	i1sprintf@sp^(0+128),f
 17801  0708' 3000               	movlw	0
 17802  0709' 3D80'              	addwfc	(i1sprintf@sp+1)^(0+128),f
 17803  070A' 2800'              	goto	i1l6756
 17804  070B'                    i1l6750:
 17805                           
 17806                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
 17807  070B' 3000               	movlw	0
 17808  070C' 0020               	movlb	0	; select bank0
 17809  070D' 0083'              	movwf	i1___llmod@divisor+3
 17810  070E' 3000               	movlw	0
 17811  070F' 0082'              	movwf	i1___llmod@divisor+2
 17812  0710' 3000               	movlw	0
 17813  0711' 0081'              	movwf	i1___llmod@divisor+1
 17814  0712' 300A               	movlw	10
 17815  0713' 0080'              	movwf	i1___llmod@divisor
 17816  0714' 0021               	movlb	1	; select bank1
 17817  0715' 0800'              	movf	(i1sprintf@prec+1)^(0+128),w
 17818  0716' 0085               	movwf	5
 17819  0717' 0800'              	movf	i1sprintf@prec^(0+128),w
 17820  0718' 0084               	movwf	4
 17821  0719' 3584               	lslf	4,f
 17822  071A' 0D85               	rlf	5,f
 17823  071B' 3584               	lslf	4,f
 17824  071C' 0D85               	rlf	5,f
 17825  071D' 3000'              	movlw	low (_dpowers| (0+32768))
 17826  071E' 0784               	addwf	4,f
 17827  071F' 3000'              	movlw	high (_dpowers| (0+32768))
 17828  0720' 3D85               	addwfc	5,f
 17829  0721' 3F00               	moviw [0]fsr0
 17830  0722' 0080'              	movwf	i1___lldiv@divisor
 17831  0723' 3F01               	moviw [1]fsr0
 17832  0724' 0081'              	movwf	i1___lldiv@divisor+1
 17833  0725' 3F02               	moviw [2]fsr0
 17834  0726' 0082'              	movwf	i1___lldiv@divisor+2
 17835  0727' 3F03               	moviw [3]fsr0
 17836  0728' 0083'              	movwf	i1___lldiv@divisor+3
 17837  0729' 0800'              	movf	(i1sprintf@val+3)^(0+128),w
 17838  072A' 0087'              	movwf	i1___lldiv@dividend+3
 17839  072B' 0800'              	movf	(i1sprintf@val+2)^(0+128),w
 17840  072C' 0086'              	movwf	i1___lldiv@dividend+2
 17841  072D' 0800'              	movf	(i1sprintf@val+1)^(0+128),w
 17842  072E' 0085'              	movwf	i1___lldiv@dividend+1
 17843  072F' 0800'              	movf	i1sprintf@val^(0+128),w
 17844  0730' 0084'              	movwf	i1___lldiv@dividend
 17845  0731' 3180' 2000' 3180'  	fcall	i1___lldiv
 17846  0734' 0803'              	movf	?i1___lldiv+3,w
 17847  0735' 0020               	movlb	0	; select bank0
 17848  0736' 0087'              	movwf	i1___llmod@dividend+3
 17849  0737' 0802'              	movf	?i1___lldiv+2,w
 17850  0738' 0086'              	movwf	i1___llmod@dividend+2
 17851  0739' 0801'              	movf	?i1___lldiv+1,w
 17852  073A' 0085'              	movwf	i1___llmod@dividend+1
 17853  073B' 0800'              	movf	?i1___lldiv,w
 17854  073C' 0084'              	movwf	i1___llmod@dividend
 17855  073D' 3180' 2000' 3180'  	fcall	i1___llmod
 17856  0740' 0020               	movlb	0	; select bank0
 17857  0741' 0800'              	movf	?i1___llmod,w
 17858  0742' 3E30               	addlw	48
 17859  0743' 0021               	movlb	1	; select bank1
 17860  0744' 0080'              	movwf	??i1_sprintf^(0+128)
 17861  0745' 0800'              	movf	??i1_sprintf^(0+128),w
 17862  0746' 0080'              	movwf	i1sprintf@c^(0+128)
 17863  0747'                    i1l6752:
 17864                           
 17865                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
 17866  0747' 0800'              	movf	i1sprintf@sp^(0+128),w
 17867  0748' 0086               	movwf	6
 17868  0749' 0800'              	movf	(i1sprintf@sp+1)^(0+128),w
 17869  074A' 0087               	movwf	7
 17870  074B' 0800'              	movf	i1sprintf@c^(0+128),w
 17871  074C' 0081               	movwf	1
 17872  074D'                    i1l6754:
 17873  074D' 3001               	movlw	1
 17874  074E' 0780'              	addwf	i1sprintf@sp^(0+128),f
 17875  074F' 3000               	movlw	0
 17876  0750' 3D80'              	addwfc	(i1sprintf@sp+1)^(0+128),f
 17877  0751'                    i1l6756:
 17878  0751' 30FF               	movlw	255
 17879  0752' 0780'              	addwf	i1sprintf@prec^(0+128),f
 17880  0753' 30FF               	movlw	255
 17881  0754' 3D80'              	addwfc	(i1sprintf@prec+1)^(0+128),f
 17882  0755' 0A00'              	incf	i1sprintf@prec^(0+128),w
 17883  0756' 1D03               	skipz
 17884  0757' 2800'              	goto	u1002_21
 17885  0758' 0A00'              	incf	(i1sprintf@prec+1)^(0+128),w
 17886  0759' 1D03               	btfss	3,2
 17887  075A' 2800'              	goto	u1002_21
 17888  075B' 2800'              	goto	u1002_20
 17889  075C'                    u1002_21:
 17890  075C' 2800'              	goto	i1l6750
 17891  075D'                    u1002_20:
 17892  075D'                    i1l6758:
 17893  075D' 0800'              	movf	(i1sprintf@f+1)^(0+128),w
 17894  075E' 0081'              	movwf	(??i1_sprintf^(0+128)+1)
 17895  075F' 0800'              	movf	i1sprintf@f^(0+128),w
 17896  0760' 0080'              	movwf	??i1_sprintf^(0+128)
 17897  0761' 0A80'              	incf	i1sprintf@f^(0+128),f
 17898  0762' 1903               	skipnz
 17899  0763' 0A80'              	incf	(i1sprintf@f+1)^(0+128),f
 17900  0764' 0800'              	movf	??i1_sprintf^(0+128),w
 17901  0765' 0084               	movwf	4
 17902  0766' 0800'              	movf	(??i1_sprintf+1)^(0+128),w
 17903  0767' 0085               	movwf	5
 17904  0768' 0800               	movf	0,w	;code access
 17905  0769' 0080'              	movwf	(??i1_sprintf+2)^(0+128)
 17906  076A' 0800'              	movf	(??i1_sprintf+2)^(0+128),w
 17907  076B' 0080'              	movwf	i1sprintf@c^(0+128)
 17908  076C' 0800'              	movf	i1sprintf@c^(0+128),w
 17909  076D' 1D03               	btfss	3,2
 17910  076E' 2800'              	goto	u1003_21
 17911  076F' 2800'              	goto	u1003_20
 17912  0770'                    u1003_21:
 17913  0770' 2800'              	goto	i1l6438
 17914  0771'                    u1003_20:
 17915  0771'                    i1l6760:
 17916                           
 17917                           ;doprnt.c: 1564: *sp = 0;
 17918  0771' 0800'              	movf	i1sprintf@sp^(0+128),w
 17919  0772' 0086               	movwf	6
 17920  0773' 0800'              	movf	(i1sprintf@sp+1)^(0+128),w
 17921  0774' 0087               	movwf	7
 17922  0775' 0181               	clrf	1
 17923  0776'                    i1l1177:
 17924  0776' 0008               	return
 17925  0777'                    __end_ofi1_sprintf:
 17926                           
 17927                           	psect	text44
 17928  0000'                    __ptext44:	
 17929 ;; *************** function i1_scale *****************
 17930 ;; Defined at:
 17931 ;;		line 433 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/doprnt.c"
 17932 ;; Parameters:    Size  Location     Type
 17933 ;;  scl             1    wreg     char 
 17934 ;; Auto vars:     Size  Location     Type
 17935 ;;  scl             1   50[BANK0 ] char 
 17936 ;; Return value:  Size  Location     Type
 17937 ;;                  4   30[BANK0 ] char 
 17938 ;; Registers used:
 17939 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17940 ;; Tracked objects:
 17941 ;;		On entry : 0/0
 17942 ;;		On exit  : 0/0
 17943 ;;		Unchanged: 0/0
 17944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17945 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17946 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17947 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17948 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17949 ;;Total ram usage:       21 bytes
 17950 ;; Hardware stack levels used:    1
 17951 ;; Hardware stack levels required when called:    2
 17952 ;; This function calls:
 17953 ;;		i1___awdiv
 17954 ;;		i1___awmod
 17955 ;;		i1___flmul
 17956 ;; This function is called by:
 17957 ;;		i1_sprintf
 17958 ;; This function uses a non-reentrant model
 17959 ;;
 17960                           
 17961                           
 17962                           ;psect for function i1_scale
 17963  0000'                    i1_scale:
 17964                           
 17965                           ;incstack = 0
 17966                           ; Regs used in i1_scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17967                           ;i1scale@scl stored from wreg
 17968  0000' 0020               	movlb	0	; select bank0
 17969  0001' 00B2'              	movwf	i1scale@scl
 17970  0002'                    i1l5586:
 17971                           
 17972                           ;doprnt.c: 436: if(scl < 0) {
 17973  0002' 1FB2'              	btfss	i1scale@scl,7
 17974  0003' 2800'              	goto	u753_21
 17975  0004' 2800'              	goto	u753_20
 17976  0005'                    u753_21:
 17977  0005' 2800'              	goto	i1l5608
 17978  0006'                    u753_20:
 17979  0006'                    i1l5588:
 17980                           
 17981                           ;doprnt.c: 437: scl = -scl;
 17982  0006' 09B2'              	comf	i1scale@scl,f
 17983  0007' 0AB2'              	incf	i1scale@scl,f
 17984  0008'                    i1l5590:
 17985                           
 17986                           ;doprnt.c: 438: if(scl>=110)
 17987  0008' 0832'              	movf	i1scale@scl,w
 17988  0009' 3A80               	xorlw	128
 17989  000A' 3E12               	addlw	-238
 17990  000B' 1C03               	skipc
 17991  000C' 2800'              	goto	u754_21
 17992  000D' 2800'              	goto	u754_20
 17993  000E'                    u754_21:
 17994  000E' 2800'              	goto	i1l5598
 17995  000F'                    u754_20:
 17996  000F'                    i1l5592:
 17997                           
 17998                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 17999  000F' 300A               	movlw	10
 18000  0010' 0087'              	movwf	i1___awdiv@divisor
 18001  0011' 3000               	movlw	0
 18002  0012' 0088'              	movwf	i1___awdiv@divisor+1
 18003  0013' 0832'              	movf	i1scale@scl,w
 18004  0014' 0082'              	movwf	i1___awmod@dividend
 18005  0015' 0183'              	clrf	i1___awmod@dividend+1
 18006  0016' 1B82'              	btfsc	i1___awmod@dividend,7
 18007  0017' 0383'              	decf	i1___awmod@dividend+1,f
 18008  0018' 3064               	movlw	100
 18009  0019' 0080'              	movwf	i1___awmod@divisor
 18010  001A' 3000               	movlw	0
 18011  001B' 0081'              	movwf	i1___awmod@divisor+1
 18012  001C' 3180' 2000' 3180'  	fcall	i1___awmod
 18013  001F' 0801'              	movf	?i1___awmod+1,w
 18014  0020' 008A'              	movwf	i1___awdiv@dividend+1
 18015  0021' 0800'              	movf	?i1___awmod,w
 18016  0022' 0089'              	movwf	i1___awdiv@dividend
 18017  0023' 3180' 2000' 3180'  	fcall	i1___awdiv
 18018  0026' 0807'              	movf	?i1___awdiv,w
 18019  0027' 3E09               	addlw	9
 18020  0028' 0020               	movlb	0	; select bank0
 18021  0029' 00A2'              	movwf	??i1_scale
 18022  002A' 01A3'              	clrf	??i1_scale+1
 18023  002B' 35A2'              	lslf	??i1_scale,f
 18024  002C' 0DA3'              	rlf	??i1_scale+1,f
 18025  002D' 35A2'              	lslf	??i1_scale,f
 18026  002E' 0DA3'              	rlf	??i1_scale+1,f
 18027  002F' 3000'              	movlw	low (__npowers_| (0+32768))
 18028  0030' 0722'              	addwf	??i1_scale,w
 18029  0031' 0084               	movwf	4
 18030  0032' 3000'              	movlw	high (__npowers_| (0+32768))
 18031  0033' 3D23'              	addwfc	??i1_scale+1,w
 18032  0034' 0085               	movwf	5
 18033  0035' 3F00               	moviw [0]fsr0
 18034  0036' 00A4'              	movwf	??i1_scale+2
 18035  0037' 3F01               	moviw [1]fsr0
 18036  0038' 00A5'              	movwf	??i1_scale+3
 18037  0039' 3F02               	moviw [2]fsr0
 18038  003A' 00A6'              	movwf	??i1_scale+4
 18039  003B' 3F03               	moviw [3]fsr0
 18040  003C' 00A7'              	movwf	??i1_scale+5
 18041  003D' 0827'              	movf	??i1_scale+5,w
 18042  003E' 0087'              	movwf	i1___flmul@b+3
 18043  003F' 0826'              	movf	??i1_scale+4,w
 18044  0040' 0086'              	movwf	i1___flmul@b+2
 18045  0041' 0825'              	movf	??i1_scale+3,w
 18046  0042' 0085'              	movwf	i1___flmul@b+1
 18047  0043' 0824'              	movf	??i1_scale+2,w
 18048  0044' 0084'              	movwf	i1___flmul@b
 18049  0045' 3064               	movlw	100
 18050  0046' 0087'              	movwf	i1___awdiv@divisor
 18051  0047' 3000               	movlw	0
 18052  0048' 0088'              	movwf	i1___awdiv@divisor+1
 18053  0049' 0832'              	movf	i1scale@scl,w
 18054  004A' 0089'              	movwf	i1___awdiv@dividend
 18055  004B' 018A'              	clrf	i1___awdiv@dividend+1
 18056  004C' 1B89'              	btfsc	i1___awdiv@dividend,7
 18057  004D' 038A'              	decf	i1___awdiv@dividend+1,f
 18058  004E' 3180' 2000' 3180'  	fcall	i1___awdiv
 18059  0051' 0807'              	movf	?i1___awdiv,w
 18060  0052' 3E12               	addlw	18
 18061  0053' 0020               	movlb	0	; select bank0
 18062  0054' 00A8'              	movwf	??i1_scale+6
 18063  0055' 01A9'              	clrf	??i1_scale+7
 18064  0056' 35A8'              	lslf	??i1_scale+6,f
 18065  0057' 0DA9'              	rlf	??i1_scale+7,f
 18066  0058' 35A8'              	lslf	??i1_scale+6,f
 18067  0059' 0DA9'              	rlf	??i1_scale+7,f
 18068  005A' 3000'              	movlw	low (__npowers_| (0+32768))
 18069  005B' 0728'              	addwf	??i1_scale+6,w
 18070  005C' 0084               	movwf	4
 18071  005D' 3000'              	movlw	high (__npowers_| (0+32768))
 18072  005E' 3D29'              	addwfc	??i1_scale+7,w
 18073  005F' 0085               	movwf	5
 18074  0060' 3F00               	moviw [0]fsr0
 18075  0061' 00AA'              	movwf	??i1_scale+8
 18076  0062' 3F01               	moviw [1]fsr0
 18077  0063' 00AB'              	movwf	??i1_scale+9
 18078  0064' 3F02               	moviw [2]fsr0
 18079  0065' 00AC'              	movwf	??i1_scale+10
 18080  0066' 3F03               	moviw [3]fsr0
 18081  0067' 00AD'              	movwf	??i1_scale+11
 18082  0068' 082D'              	movf	??i1_scale+11,w
 18083  0069' 008B'              	movwf	i1___flmul@a+3
 18084  006A' 082C'              	movf	??i1_scale+10,w
 18085  006B' 008A'              	movwf	i1___flmul@a+2
 18086  006C' 082B'              	movf	??i1_scale+9,w
 18087  006D' 0089'              	movwf	i1___flmul@a+1
 18088  006E' 082A'              	movf	??i1_scale+8,w
 18089  006F' 0088'              	movwf	i1___flmul@a
 18090  0070' 3180' 2000' 3180'  	fcall	i1___flmul
 18091  0073' 0020               	movlb	0	; select bank0
 18092  0074' 0807'              	movf	?i1___flmul+3,w
 18093  0075' 00B1'              	movwf	i1_scale$2782+3
 18094  0076' 0806'              	movf	?i1___flmul+2,w
 18095  0077' 00B0'              	movwf	i1_scale$2782+2
 18096  0078' 0805'              	movf	?i1___flmul+1,w
 18097  0079' 00AF'              	movwf	i1_scale$2782+1
 18098  007A' 0804'              	movf	?i1___flmul,w
 18099  007B' 00AE'              	movwf	i1_scale$2782
 18100                           
 18101                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 18102  007C' 300A               	movlw	10
 18103  007D' 0080'              	movwf	i1___awmod@divisor
 18104  007E' 3000               	movlw	0
 18105  007F' 0081'              	movwf	i1___awmod@divisor+1
 18106  0080' 0832'              	movf	i1scale@scl,w
 18107  0081' 0082'              	movwf	i1___awmod@dividend
 18108  0082' 0183'              	clrf	i1___awmod@dividend+1
 18109  0083' 1B82'              	btfsc	i1___awmod@dividend,7
 18110  0084' 0383'              	decf	i1___awmod@dividend+1,f
 18111  0085' 3180' 2000' 3180'  	fcall	i1___awmod
 18112  0088' 0800'              	movf	?i1___awmod,w
 18113  0089' 0020               	movlb	0	; select bank0
 18114  008A' 00A2'              	movwf	??i1_scale
 18115  008B' 01A3'              	clrf	??i1_scale+1
 18116  008C' 35A2'              	lslf	??i1_scale,f
 18117  008D' 0DA3'              	rlf	??i1_scale+1,f
 18118  008E' 35A2'              	lslf	??i1_scale,f
 18119  008F' 0DA3'              	rlf	??i1_scale+1,f
 18120  0090' 3000'              	movlw	low (__npowers_| (0+32768))
 18121  0091' 0722'              	addwf	??i1_scale,w
 18122  0092' 0084               	movwf	4
 18123  0093' 3000'              	movlw	high (__npowers_| (0+32768))
 18124  0094' 3D23'              	addwfc	??i1_scale+1,w
 18125  0095' 0085               	movwf	5
 18126  0096' 3F00               	moviw [0]fsr0
 18127  0097' 00A4'              	movwf	??i1_scale+2
 18128  0098' 3F01               	moviw [1]fsr0
 18129  0099' 00A5'              	movwf	??i1_scale+3
 18130  009A' 3F02               	moviw [2]fsr0
 18131  009B' 00A6'              	movwf	??i1_scale+4
 18132  009C' 3F03               	moviw [3]fsr0
 18133  009D' 00A7'              	movwf	??i1_scale+5
 18134  009E' 0827'              	movf	??i1_scale+5,w
 18135  009F' 0087'              	movwf	i1___flmul@b+3
 18136  00A0' 0826'              	movf	??i1_scale+4,w
 18137  00A1' 0086'              	movwf	i1___flmul@b+2
 18138  00A2' 0825'              	movf	??i1_scale+3,w
 18139  00A3' 0085'              	movwf	i1___flmul@b+1
 18140  00A4' 0824'              	movf	??i1_scale+2,w
 18141  00A5' 0084'              	movwf	i1___flmul@b
 18142  00A6' 0831'              	movf	i1_scale$2782+3,w
 18143  00A7' 008B'              	movwf	i1___flmul@a+3
 18144  00A8' 0830'              	movf	i1_scale$2782+2,w
 18145  00A9' 008A'              	movwf	i1___flmul@a+2
 18146  00AA' 082F'              	movf	i1_scale$2782+1,w
 18147  00AB' 0089'              	movwf	i1___flmul@a+1
 18148  00AC' 082E'              	movf	i1_scale$2782,w
 18149  00AD' 0088'              	movwf	i1___flmul@a
 18150  00AE' 3180' 2000' 3180'  	fcall	i1___flmul
 18151  00B1' 0020               	movlb	0	; select bank0
 18152  00B2' 0807'              	movf	?i1___flmul+3,w
 18153  00B3' 00A1'              	movwf	?i1_scale+3
 18154  00B4' 0806'              	movf	?i1___flmul+2,w
 18155  00B5' 00A0'              	movwf	?i1_scale+2
 18156  00B6' 0805'              	movf	?i1___flmul+1,w
 18157  00B7' 009F'              	movwf	?i1_scale+1
 18158  00B8' 0804'              	movf	?i1___flmul,w
 18159  00B9' 009E'              	movwf	?i1_scale
 18160  00BA' 2800'              	goto	i1l1067
 18161  00BB'                    i1l5598:
 18162                           
 18163                           ;doprnt.c: 440: else if(scl > 10)
 18164  00BB' 0832'              	movf	i1scale@scl,w
 18165  00BC' 3A80               	xorlw	128
 18166  00BD' 3E75               	addlw	-139
 18167  00BE' 1C03               	skipc
 18168  00BF' 2800'              	goto	u755_21
 18169  00C0' 2800'              	goto	u755_20
 18170  00C1'                    u755_21:
 18171  00C1' 2800'              	goto	i1l5604
 18172  00C2'                    u755_20:
 18173  00C2'                    i1l5600:
 18174                           
 18175                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
 18176  00C2' 300A               	movlw	10
 18177  00C3' 0080'              	movwf	i1___awmod@divisor
 18178  00C4' 3000               	movlw	0
 18179  00C5' 0081'              	movwf	i1___awmod@divisor+1
 18180  00C6' 0832'              	movf	i1scale@scl,w
 18181  00C7' 0082'              	movwf	i1___awmod@dividend
 18182  00C8' 0183'              	clrf	i1___awmod@dividend+1
 18183  00C9' 1B82'              	btfsc	i1___awmod@dividend,7
 18184  00CA' 0383'              	decf	i1___awmod@dividend+1,f
 18185  00CB' 3180' 2000' 3180'  	fcall	i1___awmod
 18186  00CE' 0800'              	movf	?i1___awmod,w
 18187  00CF' 0020               	movlb	0	; select bank0
 18188  00D0' 00A2'              	movwf	??i1_scale
 18189  00D1' 01A3'              	clrf	??i1_scale+1
 18190  00D2' 35A2'              	lslf	??i1_scale,f
 18191  00D3' 0DA3'              	rlf	??i1_scale+1,f
 18192  00D4' 35A2'              	lslf	??i1_scale,f
 18193  00D5' 0DA3'              	rlf	??i1_scale+1,f
 18194  00D6' 3000'              	movlw	low (__npowers_| (0+32768))
 18195  00D7' 0722'              	addwf	??i1_scale,w
 18196  00D8' 0084               	movwf	4
 18197  00D9' 3000'              	movlw	high (__npowers_| (0+32768))
 18198  00DA' 3D23'              	addwfc	??i1_scale+1,w
 18199  00DB' 0085               	movwf	5
 18200  00DC' 3F00               	moviw [0]fsr0
 18201  00DD' 00A4'              	movwf	??i1_scale+2
 18202  00DE' 3F01               	moviw [1]fsr0
 18203  00DF' 00A5'              	movwf	??i1_scale+3
 18204  00E0' 3F02               	moviw [2]fsr0
 18205  00E1' 00A6'              	movwf	??i1_scale+4
 18206  00E2' 3F03               	moviw [3]fsr0
 18207  00E3' 00A7'              	movwf	??i1_scale+5
 18208  00E4' 0827'              	movf	??i1_scale+5,w
 18209  00E5' 0087'              	movwf	i1___flmul@b+3
 18210  00E6' 0826'              	movf	??i1_scale+4,w
 18211  00E7' 0086'              	movwf	i1___flmul@b+2
 18212  00E8' 0825'              	movf	??i1_scale+3,w
 18213  00E9' 0085'              	movwf	i1___flmul@b+1
 18214  00EA' 0824'              	movf	??i1_scale+2,w
 18215  00EB' 0084'              	movwf	i1___flmul@b
 18216  00EC' 300A               	movlw	10
 18217  00ED' 0087'              	movwf	i1___awdiv@divisor
 18218  00EE' 3000               	movlw	0
 18219  00EF' 0088'              	movwf	i1___awdiv@divisor+1
 18220  00F0' 0832'              	movf	i1scale@scl,w
 18221  00F1' 0089'              	movwf	i1___awdiv@dividend
 18222  00F2' 018A'              	clrf	i1___awdiv@dividend+1
 18223  00F3' 1B89'              	btfsc	i1___awdiv@dividend,7
 18224  00F4' 038A'              	decf	i1___awdiv@dividend+1,f
 18225  00F5' 3180' 2000' 3180'  	fcall	i1___awdiv
 18226  00F8' 0807'              	movf	?i1___awdiv,w
 18227  00F9' 3E09               	addlw	9
 18228  00FA' 0020               	movlb	0	; select bank0
 18229  00FB' 00A8'              	movwf	??i1_scale+6
 18230  00FC' 01A9'              	clrf	??i1_scale+7
 18231  00FD' 35A8'              	lslf	??i1_scale+6,f
 18232  00FE' 0DA9'              	rlf	??i1_scale+7,f
 18233  00FF' 35A8'              	lslf	??i1_scale+6,f
 18234  0100' 0DA9'              	rlf	??i1_scale+7,f
 18235  0101' 3000'              	movlw	low (__npowers_| (0+32768))
 18236  0102' 0728'              	addwf	??i1_scale+6,w
 18237  0103' 0084               	movwf	4
 18238  0104' 3000'              	movlw	high (__npowers_| (0+32768))
 18239  0105' 3D29'              	addwfc	??i1_scale+7,w
 18240  0106' 0085               	movwf	5
 18241  0107' 3F00               	moviw [0]fsr0
 18242  0108' 00AA'              	movwf	??i1_scale+8
 18243  0109' 3F01               	moviw [1]fsr0
 18244  010A' 00AB'              	movwf	??i1_scale+9
 18245  010B' 3F02               	moviw [2]fsr0
 18246  010C' 00AC'              	movwf	??i1_scale+10
 18247  010D' 3F03               	moviw [3]fsr0
 18248  010E' 00AD'              	movwf	??i1_scale+11
 18249  010F' 082D'              	movf	??i1_scale+11,w
 18250  0110' 008B'              	movwf	i1___flmul@a+3
 18251  0111' 082C'              	movf	??i1_scale+10,w
 18252  0112' 008A'              	movwf	i1___flmul@a+2
 18253  0113' 082B'              	movf	??i1_scale+9,w
 18254  0114' 0089'              	movwf	i1___flmul@a+1
 18255  0115' 082A'              	movf	??i1_scale+8,w
 18256  0116' 0088'              	movwf	i1___flmul@a
 18257  0117' 3180' 2000' 3180'  	fcall	i1___flmul
 18258  011A' 0020               	movlb	0	; select bank0
 18259  011B' 0807'              	movf	?i1___flmul+3,w
 18260  011C' 00A1'              	movwf	?i1_scale+3
 18261  011D' 0806'              	movf	?i1___flmul+2,w
 18262  011E' 00A0'              	movwf	?i1_scale+2
 18263  011F' 0805'              	movf	?i1___flmul+1,w
 18264  0120' 009F'              	movwf	?i1_scale+1
 18265  0121' 0804'              	movf	?i1___flmul,w
 18266  0122' 009E'              	movwf	?i1_scale
 18267  0123' 2800'              	goto	i1l1067
 18268  0124'                    i1l5604:
 18269                           
 18270                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
 18271  0124' 0832'              	movf	i1scale@scl,w
 18272  0125' 00A2'              	movwf	??i1_scale
 18273  0126' 01A3'              	clrf	??i1_scale+1
 18274  0127' 35A2'              	lslf	??i1_scale,f
 18275  0128' 0DA3'              	rlf	??i1_scale+1,f
 18276  0129' 35A2'              	lslf	??i1_scale,f
 18277  012A' 0DA3'              	rlf	??i1_scale+1,f
 18278  012B' 3000'              	movlw	low (__npowers_| (0+32768))
 18279  012C' 0722'              	addwf	??i1_scale,w
 18280  012D' 0084               	movwf	4
 18281  012E' 3000'              	movlw	high (__npowers_| (0+32768))
 18282  012F' 3D23'              	addwfc	??i1_scale+1,w
 18283  0130' 0085               	movwf	5
 18284  0131' 3F00               	moviw [0]fsr0
 18285  0132' 00A4'              	movwf	??i1_scale+2
 18286  0133' 3F01               	moviw [1]fsr0
 18287  0134' 00A5'              	movwf	??i1_scale+3
 18288  0135' 3F02               	moviw [2]fsr0
 18289  0136' 00A6'              	movwf	??i1_scale+4
 18290  0137' 3F03               	moviw [3]fsr0
 18291  0138' 00A7'              	movwf	??i1_scale+5
 18292  0139' 0827'              	movf	??i1_scale+5,w
 18293  013A' 00A1'              	movwf	?i1_scale+3
 18294  013B' 0826'              	movf	??i1_scale+4,w
 18295  013C' 00A0'              	movwf	?i1_scale+2
 18296  013D' 0825'              	movf	??i1_scale+3,w
 18297  013E' 009F'              	movwf	?i1_scale+1
 18298  013F' 0824'              	movf	??i1_scale+2,w
 18299  0140' 009E'              	movwf	?i1_scale
 18300  0141' 2800'              	goto	i1l1067
 18301  0142'                    i1l5608:
 18302                           
 18303                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
 18304  0142' 0832'              	movf	i1scale@scl,w
 18305  0143' 3A80               	xorlw	128
 18306  0144' 3E12               	addlw	-238
 18307  0145' 1C03               	skipc
 18308  0146' 2800'              	goto	u756_21
 18309  0147' 2800'              	goto	u756_20
 18310  0148'                    u756_21:
 18311  0148' 2800'              	goto	i1l5616
 18312  0149'                    u756_20:
 18313  0149'                    i1l5610:
 18314                           
 18315                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 18316  0149' 300A               	movlw	10
 18317  014A' 0087'              	movwf	i1___awdiv@divisor
 18318  014B' 3000               	movlw	0
 18319  014C' 0088'              	movwf	i1___awdiv@divisor+1
 18320  014D' 0832'              	movf	i1scale@scl,w
 18321  014E' 0082'              	movwf	i1___awmod@dividend
 18322  014F' 0183'              	clrf	i1___awmod@dividend+1
 18323  0150' 1B82'              	btfsc	i1___awmod@dividend,7
 18324  0151' 0383'              	decf	i1___awmod@dividend+1,f
 18325  0152' 3064               	movlw	100
 18326  0153' 0080'              	movwf	i1___awmod@divisor
 18327  0154' 3000               	movlw	0
 18328  0155' 0081'              	movwf	i1___awmod@divisor+1
 18329  0156' 3180' 2000' 3180'  	fcall	i1___awmod
 18330  0159' 0801'              	movf	?i1___awmod+1,w
 18331  015A' 008A'              	movwf	i1___awdiv@dividend+1
 18332  015B' 0800'              	movf	?i1___awmod,w
 18333  015C' 0089'              	movwf	i1___awdiv@dividend
 18334  015D' 3180' 2000' 3180'  	fcall	i1___awdiv
 18335  0160' 0807'              	movf	?i1___awdiv,w
 18336  0161' 3E09               	addlw	9
 18337  0162' 0020               	movlb	0	; select bank0
 18338  0163' 00A2'              	movwf	??i1_scale
 18339  0164' 01A3'              	clrf	??i1_scale+1
 18340  0165' 35A2'              	lslf	??i1_scale,f
 18341  0166' 0DA3'              	rlf	??i1_scale+1,f
 18342  0167' 35A2'              	lslf	??i1_scale,f
 18343  0168' 0DA3'              	rlf	??i1_scale+1,f
 18344  0169' 3000'              	movlw	low (__powers_| (0+32768))
 18345  016A' 0722'              	addwf	??i1_scale,w
 18346  016B' 0084               	movwf	4
 18347  016C' 3000'              	movlw	high (__powers_| (0+32768))
 18348  016D' 3D23'              	addwfc	??i1_scale+1,w
 18349  016E' 0085               	movwf	5
 18350  016F' 3F00               	moviw [0]fsr0
 18351  0170' 00A4'              	movwf	??i1_scale+2
 18352  0171' 3F01               	moviw [1]fsr0
 18353  0172' 00A5'              	movwf	??i1_scale+3
 18354  0173' 3F02               	moviw [2]fsr0
 18355  0174' 00A6'              	movwf	??i1_scale+4
 18356  0175' 3F03               	moviw [3]fsr0
 18357  0176' 00A7'              	movwf	??i1_scale+5
 18358  0177' 0827'              	movf	??i1_scale+5,w
 18359  0178' 0087'              	movwf	i1___flmul@b+3
 18360  0179' 0826'              	movf	??i1_scale+4,w
 18361  017A' 0086'              	movwf	i1___flmul@b+2
 18362  017B' 0825'              	movf	??i1_scale+3,w
 18363  017C' 0085'              	movwf	i1___flmul@b+1
 18364  017D' 0824'              	movf	??i1_scale+2,w
 18365  017E' 0084'              	movwf	i1___flmul@b
 18366  017F' 3064               	movlw	100
 18367  0180' 0087'              	movwf	i1___awdiv@divisor
 18368  0181' 3000               	movlw	0
 18369  0182' 0088'              	movwf	i1___awdiv@divisor+1
 18370  0183' 0832'              	movf	i1scale@scl,w
 18371  0184' 0089'              	movwf	i1___awdiv@dividend
 18372  0185' 018A'              	clrf	i1___awdiv@dividend+1
 18373  0186' 1B89'              	btfsc	i1___awdiv@dividend,7
 18374  0187' 038A'              	decf	i1___awdiv@dividend+1,f
 18375  0188' 3180' 2000' 3180'  	fcall	i1___awdiv
 18376  018B' 0807'              	movf	?i1___awdiv,w
 18377  018C' 3E12               	addlw	18
 18378  018D' 0020               	movlb	0	; select bank0
 18379  018E' 00A8'              	movwf	??i1_scale+6
 18380  018F' 01A9'              	clrf	??i1_scale+7
 18381  0190' 35A8'              	lslf	??i1_scale+6,f
 18382  0191' 0DA9'              	rlf	??i1_scale+7,f
 18383  0192' 35A8'              	lslf	??i1_scale+6,f
 18384  0193' 0DA9'              	rlf	??i1_scale+7,f
 18385  0194' 3000'              	movlw	low (__powers_| (0+32768))
 18386  0195' 0728'              	addwf	??i1_scale+6,w
 18387  0196' 0084               	movwf	4
 18388  0197' 3000'              	movlw	high (__powers_| (0+32768))
 18389  0198' 3D29'              	addwfc	??i1_scale+7,w
 18390  0199' 0085               	movwf	5
 18391  019A' 3F00               	moviw [0]fsr0
 18392  019B' 00AA'              	movwf	??i1_scale+8
 18393  019C' 3F01               	moviw [1]fsr0
 18394  019D' 00AB'              	movwf	??i1_scale+9
 18395  019E' 3F02               	moviw [2]fsr0
 18396  019F' 00AC'              	movwf	??i1_scale+10
 18397  01A0' 3F03               	moviw [3]fsr0
 18398  01A1' 00AD'              	movwf	??i1_scale+11
 18399  01A2' 082D'              	movf	??i1_scale+11,w
 18400  01A3' 008B'              	movwf	i1___flmul@a+3
 18401  01A4' 082C'              	movf	??i1_scale+10,w
 18402  01A5' 008A'              	movwf	i1___flmul@a+2
 18403  01A6' 082B'              	movf	??i1_scale+9,w
 18404  01A7' 0089'              	movwf	i1___flmul@a+1
 18405  01A8' 082A'              	movf	??i1_scale+8,w
 18406  01A9' 0088'              	movwf	i1___flmul@a
 18407  01AA' 3180' 2000' 3180'  	fcall	i1___flmul
 18408  01AD' 0020               	movlb	0	; select bank0
 18409  01AE' 0807'              	movf	?i1___flmul+3,w
 18410  01AF' 00B1'              	movwf	i1_scale$2782+3
 18411  01B0' 0806'              	movf	?i1___flmul+2,w
 18412  01B1' 00B0'              	movwf	i1_scale$2782+2
 18413  01B2' 0805'              	movf	?i1___flmul+1,w
 18414  01B3' 00AF'              	movwf	i1_scale$2782+1
 18415  01B4' 0804'              	movf	?i1___flmul,w
 18416  01B5' 00AE'              	movwf	i1_scale$2782
 18417                           
 18418                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 18419  01B6' 300A               	movlw	10
 18420  01B7' 0080'              	movwf	i1___awmod@divisor
 18421  01B8' 3000               	movlw	0
 18422  01B9' 0081'              	movwf	i1___awmod@divisor+1
 18423  01BA' 0832'              	movf	i1scale@scl,w
 18424  01BB' 0082'              	movwf	i1___awmod@dividend
 18425  01BC' 0183'              	clrf	i1___awmod@dividend+1
 18426  01BD' 1B82'              	btfsc	i1___awmod@dividend,7
 18427  01BE' 0383'              	decf	i1___awmod@dividend+1,f
 18428  01BF' 3180' 2000' 3180'  	fcall	i1___awmod
 18429  01C2' 0800'              	movf	?i1___awmod,w
 18430  01C3' 0020               	movlb	0	; select bank0
 18431  01C4' 00A2'              	movwf	??i1_scale
 18432  01C5' 01A3'              	clrf	??i1_scale+1
 18433  01C6' 35A2'              	lslf	??i1_scale,f
 18434  01C7' 0DA3'              	rlf	??i1_scale+1,f
 18435  01C8' 35A2'              	lslf	??i1_scale,f
 18436  01C9' 0DA3'              	rlf	??i1_scale+1,f
 18437  01CA' 3000'              	movlw	low (__powers_| (0+32768))
 18438  01CB' 0722'              	addwf	??i1_scale,w
 18439  01CC' 0084               	movwf	4
 18440  01CD' 3000'              	movlw	high (__powers_| (0+32768))
 18441  01CE' 3D23'              	addwfc	??i1_scale+1,w
 18442  01CF' 0085               	movwf	5
 18443  01D0' 3F00               	moviw [0]fsr0
 18444  01D1' 00A4'              	movwf	??i1_scale+2
 18445  01D2' 3F01               	moviw [1]fsr0
 18446  01D3' 00A5'              	movwf	??i1_scale+3
 18447  01D4' 3F02               	moviw [2]fsr0
 18448  01D5' 00A6'              	movwf	??i1_scale+4
 18449  01D6' 3F03               	moviw [3]fsr0
 18450  01D7' 00A7'              	movwf	??i1_scale+5
 18451  01D8' 0827'              	movf	??i1_scale+5,w
 18452  01D9' 0087'              	movwf	i1___flmul@b+3
 18453  01DA' 0826'              	movf	??i1_scale+4,w
 18454  01DB' 0086'              	movwf	i1___flmul@b+2
 18455  01DC' 0825'              	movf	??i1_scale+3,w
 18456  01DD' 0085'              	movwf	i1___flmul@b+1
 18457  01DE' 0824'              	movf	??i1_scale+2,w
 18458  01DF' 0084'              	movwf	i1___flmul@b
 18459  01E0' 0831'              	movf	i1_scale$2782+3,w
 18460  01E1' 008B'              	movwf	i1___flmul@a+3
 18461  01E2' 0830'              	movf	i1_scale$2782+2,w
 18462  01E3' 008A'              	movwf	i1___flmul@a+2
 18463  01E4' 082F'              	movf	i1_scale$2782+1,w
 18464  01E5' 0089'              	movwf	i1___flmul@a+1
 18465  01E6' 082E'              	movf	i1_scale$2782,w
 18466  01E7' 0088'              	movwf	i1___flmul@a
 18467  01E8' 3180' 2000' 3180'  	fcall	i1___flmul
 18468  01EB' 0020               	movlb	0	; select bank0
 18469  01EC' 0807'              	movf	?i1___flmul+3,w
 18470  01ED' 00A1'              	movwf	?i1_scale+3
 18471  01EE' 0806'              	movf	?i1___flmul+2,w
 18472  01EF' 00A0'              	movwf	?i1_scale+2
 18473  01F0' 0805'              	movf	?i1___flmul+1,w
 18474  01F1' 009F'              	movwf	?i1_scale+1
 18475  01F2' 0804'              	movf	?i1___flmul,w
 18476  01F3' 009E'              	movwf	?i1_scale
 18477  01F4' 2800'              	goto	i1l1067
 18478  01F5'                    i1l5616:
 18479                           
 18480                           ;doprnt.c: 446: else if(scl > 10)
 18481  01F5' 0832'              	movf	i1scale@scl,w
 18482  01F6' 3A80               	xorlw	128
 18483  01F7' 3E75               	addlw	-139
 18484  01F8' 1C03               	skipc
 18485  01F9' 2800'              	goto	u757_21
 18486  01FA' 2800'              	goto	u757_20
 18487  01FB'                    u757_21:
 18488  01FB' 2800'              	goto	i1l5622
 18489  01FC'                    u757_20:
 18490  01FC'                    i1l5618:
 18491                           
 18492                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
 18493  01FC' 300A               	movlw	10
 18494  01FD' 0080'              	movwf	i1___awmod@divisor
 18495  01FE' 3000               	movlw	0
 18496  01FF' 0081'              	movwf	i1___awmod@divisor+1
 18497  0200' 0832'              	movf	i1scale@scl,w
 18498  0201' 0082'              	movwf	i1___awmod@dividend
 18499  0202' 0183'              	clrf	i1___awmod@dividend+1
 18500  0203' 1B82'              	btfsc	i1___awmod@dividend,7
 18501  0204' 0383'              	decf	i1___awmod@dividend+1,f
 18502  0205' 3180' 2000' 3180'  	fcall	i1___awmod
 18503  0208' 0800'              	movf	?i1___awmod,w
 18504  0209' 0020               	movlb	0	; select bank0
 18505  020A' 00A2'              	movwf	??i1_scale
 18506  020B' 01A3'              	clrf	??i1_scale+1
 18507  020C' 35A2'              	lslf	??i1_scale,f
 18508  020D' 0DA3'              	rlf	??i1_scale+1,f
 18509  020E' 35A2'              	lslf	??i1_scale,f
 18510  020F' 0DA3'              	rlf	??i1_scale+1,f
 18511  0210' 3000'              	movlw	low (__powers_| (0+32768))
 18512  0211' 0722'              	addwf	??i1_scale,w
 18513  0212' 0084               	movwf	4
 18514  0213' 3000'              	movlw	high (__powers_| (0+32768))
 18515  0214' 3D23'              	addwfc	??i1_scale+1,w
 18516  0215' 0085               	movwf	5
 18517  0216' 3F00               	moviw [0]fsr0
 18518  0217' 00A4'              	movwf	??i1_scale+2
 18519  0218' 3F01               	moviw [1]fsr0
 18520  0219' 00A5'              	movwf	??i1_scale+3
 18521  021A' 3F02               	moviw [2]fsr0
 18522  021B' 00A6'              	movwf	??i1_scale+4
 18523  021C' 3F03               	moviw [3]fsr0
 18524  021D' 00A7'              	movwf	??i1_scale+5
 18525  021E' 0827'              	movf	??i1_scale+5,w
 18526  021F' 0087'              	movwf	i1___flmul@b+3
 18527  0220' 0826'              	movf	??i1_scale+4,w
 18528  0221' 0086'              	movwf	i1___flmul@b+2
 18529  0222' 0825'              	movf	??i1_scale+3,w
 18530  0223' 0085'              	movwf	i1___flmul@b+1
 18531  0224' 0824'              	movf	??i1_scale+2,w
 18532  0225' 0084'              	movwf	i1___flmul@b
 18533  0226' 300A               	movlw	10
 18534  0227' 0087'              	movwf	i1___awdiv@divisor
 18535  0228' 3000               	movlw	0
 18536  0229' 0088'              	movwf	i1___awdiv@divisor+1
 18537  022A' 0832'              	movf	i1scale@scl,w
 18538  022B' 0089'              	movwf	i1___awdiv@dividend
 18539  022C' 018A'              	clrf	i1___awdiv@dividend+1
 18540  022D' 1B89'              	btfsc	i1___awdiv@dividend,7
 18541  022E' 038A'              	decf	i1___awdiv@dividend+1,f
 18542  022F' 3180' 2000' 3180'  	fcall	i1___awdiv
 18543  0232' 0807'              	movf	?i1___awdiv,w
 18544  0233' 3E09               	addlw	9
 18545  0234' 0020               	movlb	0	; select bank0
 18546  0235' 00A8'              	movwf	??i1_scale+6
 18547  0236' 01A9'              	clrf	??i1_scale+7
 18548  0237' 35A8'              	lslf	??i1_scale+6,f
 18549  0238' 0DA9'              	rlf	??i1_scale+7,f
 18550  0239' 35A8'              	lslf	??i1_scale+6,f
 18551  023A' 0DA9'              	rlf	??i1_scale+7,f
 18552  023B' 3000'              	movlw	low (__powers_| (0+32768))
 18553  023C' 0728'              	addwf	??i1_scale+6,w
 18554  023D' 0084               	movwf	4
 18555  023E' 3000'              	movlw	high (__powers_| (0+32768))
 18556  023F' 3D29'              	addwfc	??i1_scale+7,w
 18557  0240' 0085               	movwf	5
 18558  0241' 3F00               	moviw [0]fsr0
 18559  0242' 00AA'              	movwf	??i1_scale+8
 18560  0243' 3F01               	moviw [1]fsr0
 18561  0244' 00AB'              	movwf	??i1_scale+9
 18562  0245' 3F02               	moviw [2]fsr0
 18563  0246' 00AC'              	movwf	??i1_scale+10
 18564  0247' 3F03               	moviw [3]fsr0
 18565  0248' 00AD'              	movwf	??i1_scale+11
 18566  0249' 082D'              	movf	??i1_scale+11,w
 18567  024A' 008B'              	movwf	i1___flmul@a+3
 18568  024B' 082C'              	movf	??i1_scale+10,w
 18569  024C' 008A'              	movwf	i1___flmul@a+2
 18570  024D' 082B'              	movf	??i1_scale+9,w
 18571  024E' 0089'              	movwf	i1___flmul@a+1
 18572  024F' 082A'              	movf	??i1_scale+8,w
 18573  0250' 0088'              	movwf	i1___flmul@a
 18574  0251' 3180' 2000' 3180'  	fcall	i1___flmul
 18575  0254' 0020               	movlb	0	; select bank0
 18576  0255' 0807'              	movf	?i1___flmul+3,w
 18577  0256' 00A1'              	movwf	?i1_scale+3
 18578  0257' 0806'              	movf	?i1___flmul+2,w
 18579  0258' 00A0'              	movwf	?i1_scale+2
 18580  0259' 0805'              	movf	?i1___flmul+1,w
 18581  025A' 009F'              	movwf	?i1_scale+1
 18582  025B' 0804'              	movf	?i1___flmul,w
 18583  025C' 009E'              	movwf	?i1_scale
 18584  025D' 2800'              	goto	i1l1067
 18585  025E'                    i1l5622:
 18586                           
 18587                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
 18588  025E' 0832'              	movf	i1scale@scl,w
 18589  025F' 00A2'              	movwf	??i1_scale
 18590  0260' 01A3'              	clrf	??i1_scale+1
 18591  0261' 35A2'              	lslf	??i1_scale,f
 18592  0262' 0DA3'              	rlf	??i1_scale+1,f
 18593  0263' 35A2'              	lslf	??i1_scale,f
 18594  0264' 0DA3'              	rlf	??i1_scale+1,f
 18595  0265' 3000'              	movlw	low (__powers_| (0+32768))
 18596  0266' 0722'              	addwf	??i1_scale,w
 18597  0267' 0084               	movwf	4
 18598  0268' 3000'              	movlw	high (__powers_| (0+32768))
 18599  0269' 3D23'              	addwfc	??i1_scale+1,w
 18600  026A' 0085               	movwf	5
 18601  026B' 3F00               	moviw [0]fsr0
 18602  026C' 00A4'              	movwf	??i1_scale+2
 18603  026D' 3F01               	moviw [1]fsr0
 18604  026E' 00A5'              	movwf	??i1_scale+3
 18605  026F' 3F02               	moviw [2]fsr0
 18606  0270' 00A6'              	movwf	??i1_scale+4
 18607  0271' 3F03               	moviw [3]fsr0
 18608  0272' 00A7'              	movwf	??i1_scale+5
 18609  0273' 0827'              	movf	??i1_scale+5,w
 18610  0274' 00A1'              	movwf	?i1_scale+3
 18611  0275' 0826'              	movf	??i1_scale+4,w
 18612  0276' 00A0'              	movwf	?i1_scale+2
 18613  0277' 0825'              	movf	??i1_scale+3,w
 18614  0278' 009F'              	movwf	?i1_scale+1
 18615  0279' 0824'              	movf	??i1_scale+2,w
 18616  027A' 009E'              	movwf	?i1_scale
 18617  027B'                    i1l1067:
 18618  027B' 0008               	return
 18619  027C'                    __end_ofi1_scale:
 18620                           
 18621                           	psect	text45
 18622  0000'                    __ptext45:	
 18623 ;; *************** function i1___awmod *****************
 18624 ;; Defined at:
 18625 ;;		line 5 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/awmod.c"
 18626 ;; Parameters:    Size  Location     Type
 18627 ;;  divisor         2    0[COMMON] int 
 18628 ;;  dividend        2    2[COMMON] int 
 18629 ;; Auto vars:     Size  Location     Type
 18630 ;;  sign            1    6[COMMON] unsigned char 
 18631 ;;  counter         1    5[COMMON] unsigned char 
 18632 ;; Return value:  Size  Location     Type
 18633 ;;                  2    0[COMMON] int 
 18634 ;; Registers used:
 18635 ;;		wreg, status,2, status,0
 18636 ;; Tracked objects:
 18637 ;;		On entry : 0/0
 18638 ;;		On exit  : 0/0
 18639 ;;		Unchanged: 0/0
 18640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18641 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18642 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18643 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18644 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18645 ;;Total ram usage:        7 bytes
 18646 ;; Hardware stack levels used:    1
 18647 ;; This function calls:
 18648 ;;		Nothing
 18649 ;; This function is called by:
 18650 ;;		i1_scale
 18651 ;; This function uses a non-reentrant model
 18652 ;;
 18653                           
 18654                           
 18655                           ;psect for function i1___awmod
 18656  0000'                    i1___awmod:
 18657  0000'                    i1l5102:	
 18658                           ;incstack = 0
 18659                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
 18660                           
 18661  0000' 0186'              	clrf	i1___awmod@sign
 18662  0001'                    i1l5104:
 18663  0001' 1F83'              	btfss	i1___awmod@dividend+1,7
 18664  0002' 2800'              	goto	u648_21
 18665  0003' 2800'              	goto	u648_20
 18666  0004'                    u648_21:
 18667  0004' 2800'              	goto	i1l5110
 18668  0005'                    u648_20:
 18669  0005'                    i1l5106:
 18670  0005' 0982'              	comf	i1___awmod@dividend,f
 18671  0006' 0983'              	comf	i1___awmod@dividend+1,f
 18672  0007' 0A82'              	incf	i1___awmod@dividend,f
 18673  0008' 1903               	skipnz
 18674  0009' 0A83'              	incf	i1___awmod@dividend+1,f
 18675  000A'                    i1l5108:
 18676  000A' 0186'              	clrf	i1___awmod@sign
 18677  000B' 0A86'              	incf	i1___awmod@sign,f
 18678  000C'                    i1l5110:
 18679  000C' 1F81'              	btfss	i1___awmod@divisor+1,7
 18680  000D' 2800'              	goto	u649_21
 18681  000E' 2800'              	goto	u649_20
 18682  000F'                    u649_21:
 18683  000F' 2800'              	goto	i1l5114
 18684  0010'                    u649_20:
 18685  0010'                    i1l5112:
 18686  0010' 0980'              	comf	i1___awmod@divisor,f
 18687  0011' 0981'              	comf	i1___awmod@divisor+1,f
 18688  0012' 0A80'              	incf	i1___awmod@divisor,f
 18689  0013' 1903               	skipnz
 18690  0014' 0A81'              	incf	i1___awmod@divisor+1,f
 18691  0015'                    i1l5114:
 18692  0015' 0800'              	movf	i1___awmod@divisor,w
 18693  0016' 0401'              	iorwf	i1___awmod@divisor+1,w
 18694  0017' 1903               	btfsc	3,2
 18695  0018' 2800'              	goto	u650_21
 18696  0019' 2800'              	goto	u650_20
 18697  001A'                    u650_21:
 18698  001A' 2800'              	goto	i1l5132
 18699  001B'                    u650_20:
 18700  001B'                    i1l5116:
 18701  001B' 0185'              	clrf	i1___awmod@counter
 18702  001C' 0A85'              	incf	i1___awmod@counter,f
 18703  001D' 2800'              	goto	i1l5122
 18704  001E'                    i1l5118:
 18705  001E' 3001               	movlw	1
 18706  001F'                    u651_25:
 18707  001F' 3580'              	lslf	i1___awmod@divisor,f
 18708  0020' 0D81'              	rlf	i1___awmod@divisor+1,f
 18709  0021' 0B89               	decfsz	9,f
 18710  0022' 2800'              	goto	u651_25
 18711  0023'                    i1l5120:
 18712  0023' 3001               	movlw	1
 18713  0024' 0084'              	movwf	??i1___awmod
 18714  0025' 0804'              	movf	??i1___awmod,w
 18715  0026' 0785'              	addwf	i1___awmod@counter,f
 18716  0027'                    i1l5122:
 18717  0027' 1F81'              	btfss	i1___awmod@divisor+1,7
 18718  0028' 2800'              	goto	u652_21
 18719  0029' 2800'              	goto	u652_20
 18720  002A'                    u652_21:
 18721  002A' 2800'              	goto	i1l5118
 18722  002B'                    u652_20:
 18723  002B'                    i1l5124:
 18724  002B' 0801'              	movf	i1___awmod@divisor+1,w
 18725  002C' 0203'              	subwf	i1___awmod@dividend+1,w
 18726  002D' 1D03               	skipz
 18727  002E' 2800'              	goto	u653_25
 18728  002F' 0800'              	movf	i1___awmod@divisor,w
 18729  0030' 0202'              	subwf	i1___awmod@dividend,w
 18730  0031'                    u653_25:
 18731  0031' 1C03               	skipc
 18732  0032' 2800'              	goto	u653_21
 18733  0033' 2800'              	goto	u653_20
 18734  0034'                    u653_21:
 18735  0034' 2800'              	goto	i1l5128
 18736  0035'                    u653_20:
 18737  0035'                    i1l5126:
 18738  0035' 0800'              	movf	i1___awmod@divisor,w
 18739  0036' 0282'              	subwf	i1___awmod@dividend,f
 18740  0037' 0801'              	movf	i1___awmod@divisor+1,w
 18741  0038' 3B83'              	subwfb	i1___awmod@dividend+1,f
 18742  0039'                    i1l5128:
 18743  0039' 3001               	movlw	1
 18744  003A'                    u654_25:
 18745  003A' 3681'              	lsrf	i1___awmod@divisor+1,f
 18746  003B' 0C80'              	rrf	i1___awmod@divisor,f
 18747  003C' 0B89               	decfsz	9,f
 18748  003D' 2800'              	goto	u654_25
 18749  003E'                    i1l5130:
 18750  003E' 3001               	movlw	1
 18751  003F' 0285'              	subwf	i1___awmod@counter,f
 18752  0040' 1D03               	btfss	3,2
 18753  0041' 2800'              	goto	u655_21
 18754  0042' 2800'              	goto	u655_20
 18755  0043'                    u655_21:
 18756  0043' 2800'              	goto	i1l5124
 18757  0044'                    u655_20:
 18758  0044'                    i1l5132:
 18759  0044' 0806'              	movf	i1___awmod@sign,w
 18760  0045' 1903               	btfsc	3,2
 18761  0046' 2800'              	goto	u656_21
 18762  0047' 2800'              	goto	u656_20
 18763  0048'                    u656_21:
 18764  0048' 2800'              	goto	i1l5136
 18765  0049'                    u656_20:
 18766  0049'                    i1l5134:
 18767  0049' 0982'              	comf	i1___awmod@dividend,f
 18768  004A' 0983'              	comf	i1___awmod@dividend+1,f
 18769  004B' 0A82'              	incf	i1___awmod@dividend,f
 18770  004C' 1903               	skipnz
 18771  004D' 0A83'              	incf	i1___awmod@dividend+1,f
 18772  004E'                    i1l5136:
 18773  004E' 0803'              	movf	i1___awmod@dividend+1,w
 18774  004F' 0081'              	movwf	?i1___awmod+1
 18775  0050' 0802'              	movf	i1___awmod@dividend,w
 18776  0051' 0080'              	movwf	?i1___awmod
 18777  0052'                    i1l1347:
 18778  0052' 0008               	return
 18779  0053'                    __end_ofi1___awmod:
 18780                           
 18781                           	psect	text46
 18782  0000'                    __ptext46:	
 18783 ;; *************** function i1___awdiv *****************
 18784 ;; Defined at:
 18785 ;;		line 5 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/awdiv.c"
 18786 ;; Parameters:    Size  Location     Type
 18787 ;;  divisor         2    7[COMMON] int 
 18788 ;;  dividend        2    9[COMMON] int 
 18789 ;; Auto vars:     Size  Location     Type
 18790 ;;  quotient        2    2[BANK0 ] int 
 18791 ;;  sign            1    1[BANK0 ] unsigned char 
 18792 ;;  counter         1    0[BANK0 ] unsigned char 
 18793 ;; Return value:  Size  Location     Type
 18794 ;;                  2    7[COMMON] int 
 18795 ;; Registers used:
 18796 ;;		wreg, status,2, status,0
 18797 ;; Tracked objects:
 18798 ;;		On entry : 0/0
 18799 ;;		On exit  : 0/0
 18800 ;;		Unchanged: 0/0
 18801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18802 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18803 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18804 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18805 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18806 ;;Total ram usage:        9 bytes
 18807 ;; Hardware stack levels used:    1
 18808 ;; This function calls:
 18809 ;;		Nothing
 18810 ;; This function is called by:
 18811 ;;		i1_scale
 18812 ;;		i1_sprintf
 18813 ;; This function uses a non-reentrant model
 18814 ;;
 18815                           
 18816                           
 18817                           ;psect for function i1___awdiv
 18818  0000'                    i1___awdiv:
 18819  0000'                    i1l5058:	
 18820                           ;incstack = 0
 18821                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
 18822                           
 18823  0000' 0020               	movlb	0	; select bank0
 18824  0001' 0181'              	clrf	i1___awdiv@sign
 18825  0002'                    i1l5060:
 18826  0002' 1F88'              	btfss	i1___awdiv@divisor+1,7
 18827  0003' 2800'              	goto	u638_21
 18828  0004' 2800'              	goto	u638_20
 18829  0005'                    u638_21:
 18830  0005' 2800'              	goto	i1l5066
 18831  0006'                    u638_20:
 18832  0006'                    i1l5062:
 18833  0006' 0987'              	comf	i1___awdiv@divisor,f
 18834  0007' 0988'              	comf	i1___awdiv@divisor+1,f
 18835  0008' 0A87'              	incf	i1___awdiv@divisor,f
 18836  0009' 1903               	skipnz
 18837  000A' 0A88'              	incf	i1___awdiv@divisor+1,f
 18838  000B'                    i1l5064:
 18839  000B' 0181'              	clrf	i1___awdiv@sign
 18840  000C' 0A81'              	incf	i1___awdiv@sign,f
 18841  000D'                    i1l5066:
 18842  000D' 1F8A'              	btfss	i1___awdiv@dividend+1,7
 18843  000E' 2800'              	goto	u639_21
 18844  000F' 2800'              	goto	u639_20
 18845  0010'                    u639_21:
 18846  0010' 2800'              	goto	i1l5072
 18847  0011'                    u639_20:
 18848  0011'                    i1l5068:
 18849  0011' 0989'              	comf	i1___awdiv@dividend,f
 18850  0012' 098A'              	comf	i1___awdiv@dividend+1,f
 18851  0013' 0A89'              	incf	i1___awdiv@dividend,f
 18852  0014' 1903               	skipnz
 18853  0015' 0A8A'              	incf	i1___awdiv@dividend+1,f
 18854  0016'                    i1l5070:
 18855  0016' 3001               	movlw	1
 18856  0017' 008B'              	movwf	??i1___awdiv
 18857  0018' 080B'              	movf	??i1___awdiv,w
 18858  0019' 0681'              	xorwf	i1___awdiv@sign,f
 18859  001A'                    i1l5072:
 18860  001A' 0182'              	clrf	i1___awdiv@quotient
 18861  001B' 0183'              	clrf	i1___awdiv@quotient+1
 18862  001C'                    i1l5074:
 18863  001C' 0807'              	movf	i1___awdiv@divisor,w
 18864  001D' 0408'              	iorwf	i1___awdiv@divisor+1,w
 18865  001E' 1903               	btfsc	3,2
 18866  001F' 2800'              	goto	u640_21
 18867  0020' 2800'              	goto	u640_20
 18868  0021'                    u640_21:
 18869  0021' 2800'              	goto	i1l5094
 18870  0022'                    u640_20:
 18871  0022'                    i1l5076:
 18872  0022' 0180'              	clrf	i1___awdiv@counter
 18873  0023' 0A80'              	incf	i1___awdiv@counter,f
 18874  0024' 2800'              	goto	i1l5082
 18875  0025'                    i1l5078:
 18876  0025' 3001               	movlw	1
 18877  0026'                    u641_25:
 18878  0026' 3587'              	lslf	i1___awdiv@divisor,f
 18879  0027' 0D88'              	rlf	i1___awdiv@divisor+1,f
 18880  0028' 0B89               	decfsz	9,f
 18881  0029' 2800'              	goto	u641_25
 18882  002A'                    i1l5080:
 18883  002A' 3001               	movlw	1
 18884  002B' 008B'              	movwf	??i1___awdiv
 18885  002C' 080B'              	movf	??i1___awdiv,w
 18886  002D' 0780'              	addwf	i1___awdiv@counter,f
 18887  002E'                    i1l5082:
 18888  002E' 1F88'              	btfss	i1___awdiv@divisor+1,7
 18889  002F' 2800'              	goto	u642_21
 18890  0030' 2800'              	goto	u642_20
 18891  0031'                    u642_21:
 18892  0031' 2800'              	goto	i1l5078
 18893  0032'                    u642_20:
 18894  0032'                    i1l5084:
 18895  0032' 3001               	movlw	1
 18896  0033'                    u643_25:
 18897  0033' 3582'              	lslf	i1___awdiv@quotient,f
 18898  0034' 0D83'              	rlf	i1___awdiv@quotient+1,f
 18899  0035' 0B89               	decfsz	9,f
 18900  0036' 2800'              	goto	u643_25
 18901  0037' 0808'              	movf	i1___awdiv@divisor+1,w
 18902  0038' 020A'              	subwf	i1___awdiv@dividend+1,w
 18903  0039' 1D03               	skipz
 18904  003A' 2800'              	goto	u644_25
 18905  003B' 0807'              	movf	i1___awdiv@divisor,w
 18906  003C' 0209'              	subwf	i1___awdiv@dividend,w
 18907  003D'                    u644_25:
 18908  003D' 1C03               	skipc
 18909  003E' 2800'              	goto	u644_21
 18910  003F' 2800'              	goto	u644_20
 18911  0040'                    u644_21:
 18912  0040' 2800'              	goto	i1l5090
 18913  0041'                    u644_20:
 18914  0041'                    i1l5086:
 18915  0041' 0807'              	movf	i1___awdiv@divisor,w
 18916  0042' 0289'              	subwf	i1___awdiv@dividend,f
 18917  0043' 0808'              	movf	i1___awdiv@divisor+1,w
 18918  0044' 3B8A'              	subwfb	i1___awdiv@dividend+1,f
 18919  0045'                    i1l5088:
 18920  0045' 1402'              	bsf	i1___awdiv@quotient,0
 18921  0046'                    i1l5090:
 18922  0046' 3001               	movlw	1
 18923  0047'                    u645_25:
 18924  0047' 3688'              	lsrf	i1___awdiv@divisor+1,f
 18925  0048' 0C87'              	rrf	i1___awdiv@divisor,f
 18926  0049' 0B89               	decfsz	9,f
 18927  004A' 2800'              	goto	u645_25
 18928  004B'                    i1l5092:
 18929  004B' 3001               	movlw	1
 18930  004C' 0280'              	subwf	i1___awdiv@counter,f
 18931  004D' 1D03               	btfss	3,2
 18932  004E' 2800'              	goto	u646_21
 18933  004F' 2800'              	goto	u646_20
 18934  0050'                    u646_21:
 18935  0050' 2800'              	goto	i1l5084
 18936  0051'                    u646_20:
 18937  0051'                    i1l5094:
 18938  0051' 0801'              	movf	i1___awdiv@sign,w
 18939  0052' 1903               	btfsc	3,2
 18940  0053' 2800'              	goto	u647_21
 18941  0054' 2800'              	goto	u647_20
 18942  0055'                    u647_21:
 18943  0055' 2800'              	goto	i1l5098
 18944  0056'                    u647_20:
 18945  0056'                    i1l5096:
 18946  0056' 0982'              	comf	i1___awdiv@quotient,f
 18947  0057' 0983'              	comf	i1___awdiv@quotient+1,f
 18948  0058' 0A82'              	incf	i1___awdiv@quotient,f
 18949  0059' 1903               	skipnz
 18950  005A' 0A83'              	incf	i1___awdiv@quotient+1,f
 18951  005B'                    i1l5098:
 18952  005B' 0803'              	movf	i1___awdiv@quotient+1,w
 18953  005C' 0088'              	movwf	?i1___awdiv+1
 18954  005D' 0802'              	movf	i1___awdiv@quotient,w
 18955  005E' 0087'              	movwf	?i1___awdiv
 18956  005F'                    i1l1334:
 18957  005F' 0008               	return
 18958  0060'                    __end_ofi1___awdiv:
 18959                           
 18960                           	psect	text47
 18961  0000'                    __ptext47:	
 18962 ;; *************** function i1_isdigit *****************
 18963 ;; Defined at:
 18964 ;;		line 8 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/isdigit.c"
 18965 ;; Parameters:    Size  Location     Type
 18966 ;;  c               1    wreg     unsigned char 
 18967 ;; Auto vars:     Size  Location     Type
 18968 ;;  c               1    1[COMMON] unsigned char 
 18969 ;; Return value:  Size  Location     Type
 18970 ;;		None               void
 18971 ;; Registers used:
 18972 ;;		wreg, status,2, status,0
 18973 ;; Tracked objects:
 18974 ;;		On entry : 0/0
 18975 ;;		On exit  : 0/0
 18976 ;;		Unchanged: 0/0
 18977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18979 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18981 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18982 ;;Total ram usage:        2 bytes
 18983 ;; Hardware stack levels used:    1
 18984 ;; This function calls:
 18985 ;;		Nothing
 18986 ;; This function is called by:
 18987 ;;		i1_sprintf
 18988 ;; This function uses a non-reentrant model
 18989 ;;
 18990                           
 18991                           
 18992                           ;psect for function i1_isdigit
 18993  0000'                    i1_isdigit:
 18994                           
 18995                           ;incstack = 0
 18996                           ; Regs used in i1_isdigit: [wreg+status,2+status,0]
 18997                           ;i1isdigit@c stored from wreg
 18998  0000' 0081'              	movwf	i1isdigit@c
 18999  0001'                    i1l5914:
 19000  0001' 0180'              	clrf	i1_isdigit$2131
 19001  0002'                    i1l5916:
 19002  0002' 303A               	movlw	58
 19003  0003' 0201'              	subwf	i1isdigit@c,w
 19004  0004' 1803               	skipnc
 19005  0005' 2800'              	goto	u834_21
 19006  0006' 2800'              	goto	u834_20
 19007  0007'                    u834_21:
 19008  0007' 2800'              	goto	i1l5922
 19009  0008'                    u834_20:
 19010  0008'                    i1l5918:
 19011  0008' 3030               	movlw	48
 19012  0009' 0201'              	subwf	i1isdigit@c,w
 19013  000A' 1C03               	skipc
 19014  000B' 2800'              	goto	u835_21
 19015  000C' 2800'              	goto	u835_20
 19016  000D'                    u835_21:
 19017  000D' 2800'              	goto	i1l5922
 19018  000E'                    u835_20:
 19019  000E'                    i1l5920:
 19020  000E' 0180'              	clrf	i1_isdigit$2131
 19021  000F' 0A80'              	incf	i1_isdigit$2131,f
 19022  0010'                    i1l5922:
 19023  0010' 0C00'              	rrf	i1_isdigit$2131,w
 19024  0011'                    i1l1668:
 19025  0011' 0008               	return
 19026  0012'                    __end_ofi1_isdigit:
 19027                           
 19028                           	psect	text48
 19029  0000'                    __ptext48:	
 19030 ;; *************** function i1_fround *****************
 19031 ;; Defined at:
 19032 ;;		line 417 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/doprnt.c"
 19033 ;; Parameters:    Size  Location     Type
 19034 ;;  prec            1    wreg     unsigned char 
 19035 ;; Auto vars:     Size  Location     Type
 19036 ;;  prec            1   48[BANK0 ] unsigned char 
 19037 ;; Return value:  Size  Location     Type
 19038 ;;                  4   30[BANK0 ] unsigned char 
 19039 ;; Registers used:
 19040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19041 ;; Tracked objects:
 19042 ;;		On entry : 0/0
 19043 ;;		On exit  : 0/0
 19044 ;;		Unchanged: 0/0
 19045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19046 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19047 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19048 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19049 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19050 ;;Total ram usage:       19 bytes
 19051 ;; Hardware stack levels used:    1
 19052 ;; Hardware stack levels required when called:    2
 19053 ;; This function calls:
 19054 ;;		i1___flmul
 19055 ;;		i1___lwdiv
 19056 ;;		i1___lwmod
 19057 ;; This function is called by:
 19058 ;;		i1_sprintf
 19059 ;; This function uses a non-reentrant model
 19060 ;;
 19061                           
 19062                           
 19063                           ;psect for function i1_fround
 19064  0000'                    i1_fround:
 19065                           
 19066                           ;incstack = 0
 19067                           ; Regs used in i1_fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19068                           ;i1fround@prec stored from wreg
 19069  0000' 0020               	movlb	0	; select bank0
 19070  0001' 00B0'              	movwf	i1fround@prec
 19071  0002'                    i1l5568:
 19072                           
 19073                           ;doprnt.c: 421: if(prec>=110)
 19074  0002' 306E               	movlw	110
 19075  0003' 0230'              	subwf	i1fround@prec,w
 19076  0004' 1C03               	skipc
 19077  0005' 2800'              	goto	u751_21
 19078  0006' 2800'              	goto	u751_20
 19079  0007'                    u751_21:
 19080  0007' 2800'              	goto	i1l5576
 19081  0008'                    u751_20:
 19082  0008'                    i1l5570:
 19083                           
 19084                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 19085  0008' 303F               	movlw	63
 19086  0009' 0087'              	movwf	i1___flmul@b+3
 19087  000A' 3000               	movlw	0
 19088  000B' 0086'              	movwf	i1___flmul@b+2
 19089  000C' 3000               	movlw	0
 19090  000D' 0085'              	movwf	i1___flmul@b+1
 19091  000E' 3000               	movlw	0
 19092  000F' 0084'              	movwf	i1___flmul@b
 19093  0010' 3064               	movlw	100
 19094  0011' 0086'              	movwf	i1___lwdiv@divisor
 19095  0012' 3000               	movlw	0
 19096  0013' 0087'              	movwf	i1___lwdiv@divisor+1
 19097  0014' 0830'              	movf	i1fround@prec,w
 19098  0015' 00A2'              	movwf	??i1_fround
 19099  0016' 01A3'              	clrf	??i1_fround+1
 19100  0017' 0822'              	movf	??i1_fround,w
 19101  0018' 0088'              	movwf	i1___lwdiv@dividend
 19102  0019' 0823'              	movf	??i1_fround+1,w
 19103  001A' 0089'              	movwf	i1___lwdiv@dividend+1
 19104  001B' 3180' 2000' 3180'  	fcall	i1___lwdiv
 19105  001E' 0807'              	movf	?i1___lwdiv+1,w
 19106  001F' 0085               	movwf	5
 19107  0020' 0806'              	movf	?i1___lwdiv,w
 19108  0021' 0084               	movwf	4
 19109  0022' 3584               	lslf	4,f
 19110  0023' 0D85               	rlf	5,f
 19111  0024' 3584               	lslf	4,f
 19112  0025' 0D85               	rlf	5,f
 19113  0026' 3000'              	movlw	low ((__npowers_+72)| (0+32768))
 19114  0027' 0784               	addwf	4,f
 19115  0028' 3000'              	movlw	high ((__npowers_+72)| (0+32768))
 19116  0029' 3D85               	addwfc	5,f
 19117  002A' 3F00               	moviw [0]fsr0
 19118  002B' 0020               	movlb	0	; select bank0
 19119  002C' 00A4'              	movwf	??i1_fround+2
 19120  002D' 3F01               	moviw [1]fsr0
 19121  002E' 00A5'              	movwf	??i1_fround+3
 19122  002F' 3F02               	moviw [2]fsr0
 19123  0030' 00A6'              	movwf	??i1_fround+4
 19124  0031' 3F03               	moviw [3]fsr0
 19125  0032' 00A7'              	movwf	??i1_fround+5
 19126  0033' 0827'              	movf	??i1_fround+5,w
 19127  0034' 008B'              	movwf	i1___flmul@a+3
 19128  0035' 0826'              	movf	??i1_fround+4,w
 19129  0036' 008A'              	movwf	i1___flmul@a+2
 19130  0037' 0825'              	movf	??i1_fround+3,w
 19131  0038' 0089'              	movwf	i1___flmul@a+1
 19132  0039' 0824'              	movf	??i1_fround+2,w
 19133  003A' 0088'              	movwf	i1___flmul@a
 19134  003B' 3180' 2000' 3180'  	fcall	i1___flmul
 19135  003E' 0020               	movlb	0	; select bank0
 19136  003F' 0807'              	movf	?i1___flmul+3,w
 19137  0040' 00AF'              	movwf	i1_fround$2780+3
 19138  0041' 0806'              	movf	?i1___flmul+2,w
 19139  0042' 00AE'              	movwf	i1_fround$2780+2
 19140  0043' 0805'              	movf	?i1___flmul+1,w
 19141  0044' 00AD'              	movwf	i1_fround$2780+1
 19142  0045' 0804'              	movf	?i1___flmul,w
 19143  0046' 00AC'              	movwf	i1_fround$2780
 19144                           
 19145                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 19146  0047' 300A               	movlw	10
 19147  0048' 0086'              	movwf	i1___lwdiv@divisor
 19148  0049' 3000               	movlw	0
 19149  004A' 0087'              	movwf	i1___lwdiv@divisor+1
 19150  004B' 0830'              	movf	i1fround@prec,w
 19151  004C' 00A2'              	movwf	??i1_fround
 19152  004D' 01A3'              	clrf	??i1_fround+1
 19153  004E' 0822'              	movf	??i1_fround,w
 19154  004F' 0082'              	movwf	i1___lwmod@dividend
 19155  0050' 0823'              	movf	??i1_fround+1,w
 19156  0051' 0083'              	movwf	i1___lwmod@dividend+1
 19157  0052' 3064               	movlw	100
 19158  0053' 0080'              	movwf	i1___lwmod@divisor
 19159  0054' 3000               	movlw	0
 19160  0055' 0081'              	movwf	i1___lwmod@divisor+1
 19161  0056' 3180' 2000' 3180'  	fcall	i1___lwmod
 19162  0059' 0801'              	movf	?i1___lwmod+1,w
 19163  005A' 0089'              	movwf	i1___lwdiv@dividend+1
 19164  005B' 0800'              	movf	?i1___lwmod,w
 19165  005C' 0088'              	movwf	i1___lwdiv@dividend
 19166  005D' 3180' 2000' 3180'  	fcall	i1___lwdiv
 19167  0060' 0807'              	movf	?i1___lwdiv+1,w
 19168  0061' 0085               	movwf	5
 19169  0062' 0806'              	movf	?i1___lwdiv,w
 19170  0063' 0084               	movwf	4
 19171  0064' 3584               	lslf	4,f
 19172  0065' 0D85               	rlf	5,f
 19173  0066' 3584               	lslf	4,f
 19174  0067' 0D85               	rlf	5,f
 19175  0068' 3000'              	movlw	low ((__npowers_+36)| (0+32768))
 19176  0069' 0784               	addwf	4,f
 19177  006A' 3000'              	movlw	high ((__npowers_+36)| (0+32768))
 19178  006B' 3D85               	addwfc	5,f
 19179  006C' 3F00               	moviw [0]fsr0
 19180  006D' 0020               	movlb	0	; select bank0
 19181  006E' 00A4'              	movwf	??i1_fround+2
 19182  006F' 3F01               	moviw [1]fsr0
 19183  0070' 00A5'              	movwf	??i1_fround+3
 19184  0071' 3F02               	moviw [2]fsr0
 19185  0072' 00A6'              	movwf	??i1_fround+4
 19186  0073' 3F03               	moviw [3]fsr0
 19187  0074' 00A7'              	movwf	??i1_fround+5
 19188  0075' 0827'              	movf	??i1_fround+5,w
 19189  0076' 0087'              	movwf	i1___flmul@b+3
 19190  0077' 0826'              	movf	??i1_fround+4,w
 19191  0078' 0086'              	movwf	i1___flmul@b+2
 19192  0079' 0825'              	movf	??i1_fround+3,w
 19193  007A' 0085'              	movwf	i1___flmul@b+1
 19194  007B' 0824'              	movf	??i1_fround+2,w
 19195  007C' 0084'              	movwf	i1___flmul@b
 19196  007D' 082F'              	movf	i1_fround$2780+3,w
 19197  007E' 008B'              	movwf	i1___flmul@a+3
 19198  007F' 082E'              	movf	i1_fround$2780+2,w
 19199  0080' 008A'              	movwf	i1___flmul@a+2
 19200  0081' 082D'              	movf	i1_fround$2780+1,w
 19201  0082' 0089'              	movwf	i1___flmul@a+1
 19202  0083' 082C'              	movf	i1_fround$2780,w
 19203  0084' 0088'              	movwf	i1___flmul@a
 19204  0085' 3180' 2000' 3180'  	fcall	i1___flmul
 19205  0088' 0020               	movlb	0	; select bank0
 19206  0089' 0807'              	movf	?i1___flmul+3,w
 19207  008A' 00AB'              	movwf	i1_fround$2781+3
 19208  008B' 0806'              	movf	?i1___flmul+2,w
 19209  008C' 00AA'              	movwf	i1_fround$2781+2
 19210  008D' 0805'              	movf	?i1___flmul+1,w
 19211  008E' 00A9'              	movwf	i1_fround$2781+1
 19212  008F' 0804'              	movf	?i1___flmul,w
 19213  0090' 00A8'              	movwf	i1_fround$2781
 19214                           
 19215                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 19216  0091' 300A               	movlw	10
 19217  0092' 0080'              	movwf	i1___lwmod@divisor
 19218  0093' 3000               	movlw	0
 19219  0094' 0081'              	movwf	i1___lwmod@divisor+1
 19220  0095' 0830'              	movf	i1fround@prec,w
 19221  0096' 00A2'              	movwf	??i1_fround
 19222  0097' 01A3'              	clrf	??i1_fround+1
 19223  0098' 0822'              	movf	??i1_fround,w
 19224  0099' 0082'              	movwf	i1___lwmod@dividend
 19225  009A' 0823'              	movf	??i1_fround+1,w
 19226  009B' 0083'              	movwf	i1___lwmod@dividend+1
 19227  009C' 3180' 2000' 3180'  	fcall	i1___lwmod
 19228  009F' 0801'              	movf	?i1___lwmod+1,w
 19229  00A0' 0085               	movwf	5
 19230  00A1' 0800'              	movf	?i1___lwmod,w
 19231  00A2' 0084               	movwf	4
 19232  00A3' 3584               	lslf	4,f
 19233  00A4' 0D85               	rlf	5,f
 19234  00A5' 3584               	lslf	4,f
 19235  00A6' 0D85               	rlf	5,f
 19236  00A7' 3000'              	movlw	low (__npowers_| (0+32768))
 19237  00A8' 0784               	addwf	4,f
 19238  00A9' 3000'              	movlw	high (__npowers_| (0+32768))
 19239  00AA' 3D85               	addwfc	5,f
 19240  00AB' 3F00               	moviw [0]fsr0
 19241  00AC' 0020               	movlb	0	; select bank0
 19242  00AD' 00A4'              	movwf	??i1_fround+2
 19243  00AE' 3F01               	moviw [1]fsr0
 19244  00AF' 00A5'              	movwf	??i1_fround+3
 19245  00B0' 3F02               	moviw [2]fsr0
 19246  00B1' 00A6'              	movwf	??i1_fround+4
 19247  00B2' 3F03               	moviw [3]fsr0
 19248  00B3' 00A7'              	movwf	??i1_fround+5
 19249  00B4' 0827'              	movf	??i1_fround+5,w
 19250  00B5' 0087'              	movwf	i1___flmul@b+3
 19251  00B6' 0826'              	movf	??i1_fround+4,w
 19252  00B7' 0086'              	movwf	i1___flmul@b+2
 19253  00B8' 0825'              	movf	??i1_fround+3,w
 19254  00B9' 0085'              	movwf	i1___flmul@b+1
 19255  00BA' 0824'              	movf	??i1_fround+2,w
 19256  00BB' 0084'              	movwf	i1___flmul@b
 19257  00BC' 082B'              	movf	i1_fround$2781+3,w
 19258  00BD' 008B'              	movwf	i1___flmul@a+3
 19259  00BE' 082A'              	movf	i1_fround$2781+2,w
 19260  00BF' 008A'              	movwf	i1___flmul@a+2
 19261  00C0' 0829'              	movf	i1_fround$2781+1,w
 19262  00C1' 0089'              	movwf	i1___flmul@a+1
 19263  00C2' 0828'              	movf	i1_fround$2781,w
 19264  00C3' 0088'              	movwf	i1___flmul@a
 19265  00C4' 3180' 2000' 3180'  	fcall	i1___flmul
 19266  00C7' 0020               	movlb	0	; select bank0
 19267  00C8' 0807'              	movf	?i1___flmul+3,w
 19268  00C9' 00A1'              	movwf	?i1_fround+3
 19269  00CA' 0806'              	movf	?i1___flmul+2,w
 19270  00CB' 00A0'              	movwf	?i1_fround+2
 19271  00CC' 0805'              	movf	?i1___flmul+1,w
 19272  00CD' 009F'              	movwf	?i1_fround+1
 19273  00CE' 0804'              	movf	?i1___flmul,w
 19274  00CF' 009E'              	movwf	?i1_fround
 19275  00D0' 2800'              	goto	i1l1060
 19276  00D1'                    i1l5576:
 19277                           
 19278                           ;doprnt.c: 423: else if(prec > 10)
 19279  00D1' 300B               	movlw	11
 19280  00D2' 0230'              	subwf	i1fround@prec,w
 19281  00D3' 1C03               	skipc
 19282  00D4' 2800'              	goto	u752_21
 19283  00D5' 2800'              	goto	u752_20
 19284  00D6'                    u752_21:
 19285  00D6' 2800'              	goto	i1l5582
 19286  00D7'                    u752_20:
 19287  00D7'                    i1l5578:
 19288                           
 19289                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 19290  00D7' 303F               	movlw	63
 19291  00D8' 0087'              	movwf	i1___flmul@b+3
 19292  00D9' 3000               	movlw	0
 19293  00DA' 0086'              	movwf	i1___flmul@b+2
 19294  00DB' 3000               	movlw	0
 19295  00DC' 0085'              	movwf	i1___flmul@b+1
 19296  00DD' 3000               	movlw	0
 19297  00DE' 0084'              	movwf	i1___flmul@b
 19298  00DF' 300A               	movlw	10
 19299  00E0' 0086'              	movwf	i1___lwdiv@divisor
 19300  00E1' 3000               	movlw	0
 19301  00E2' 0087'              	movwf	i1___lwdiv@divisor+1
 19302  00E3' 0830'              	movf	i1fround@prec,w
 19303  00E4' 00A2'              	movwf	??i1_fround
 19304  00E5' 01A3'              	clrf	??i1_fround+1
 19305  00E6' 0822'              	movf	??i1_fround,w
 19306  00E7' 0088'              	movwf	i1___lwdiv@dividend
 19307  00E8' 0823'              	movf	??i1_fround+1,w
 19308  00E9' 0089'              	movwf	i1___lwdiv@dividend+1
 19309  00EA' 3180' 2000' 3180'  	fcall	i1___lwdiv
 19310  00ED' 0807'              	movf	?i1___lwdiv+1,w
 19311  00EE' 0085               	movwf	5
 19312  00EF' 0806'              	movf	?i1___lwdiv,w
 19313  00F0' 0084               	movwf	4
 19314  00F1' 3584               	lslf	4,f
 19315  00F2' 0D85               	rlf	5,f
 19316  00F3' 3584               	lslf	4,f
 19317  00F4' 0D85               	rlf	5,f
 19318  00F5' 3000'              	movlw	low ((__npowers_+36)| (0+32768))
 19319  00F6' 0784               	addwf	4,f
 19320  00F7' 3000'              	movlw	high ((__npowers_+36)| (0+32768))
 19321  00F8' 3D85               	addwfc	5,f
 19322  00F9' 3F00               	moviw [0]fsr0
 19323  00FA' 0020               	movlb	0	; select bank0
 19324  00FB' 00A4'              	movwf	??i1_fround+2
 19325  00FC' 3F01               	moviw [1]fsr0
 19326  00FD' 00A5'              	movwf	??i1_fround+3
 19327  00FE' 3F02               	moviw [2]fsr0
 19328  00FF' 00A6'              	movwf	??i1_fround+4
 19329  0100' 3F03               	moviw [3]fsr0
 19330  0101' 00A7'              	movwf	??i1_fround+5
 19331  0102' 0827'              	movf	??i1_fround+5,w
 19332  0103' 008B'              	movwf	i1___flmul@a+3
 19333  0104' 0826'              	movf	??i1_fround+4,w
 19334  0105' 008A'              	movwf	i1___flmul@a+2
 19335  0106' 0825'              	movf	??i1_fround+3,w
 19336  0107' 0089'              	movwf	i1___flmul@a+1
 19337  0108' 0824'              	movf	??i1_fround+2,w
 19338  0109' 0088'              	movwf	i1___flmul@a
 19339  010A' 3180' 2000' 3180'  	fcall	i1___flmul
 19340  010D' 0020               	movlb	0	; select bank0
 19341  010E' 0807'              	movf	?i1___flmul+3,w
 19342  010F' 00AF'              	movwf	i1_fround$2780+3
 19343  0110' 0806'              	movf	?i1___flmul+2,w
 19344  0111' 00AE'              	movwf	i1_fround$2780+2
 19345  0112' 0805'              	movf	?i1___flmul+1,w
 19346  0113' 00AD'              	movwf	i1_fround$2780+1
 19347  0114' 0804'              	movf	?i1___flmul,w
 19348  0115' 00AC'              	movwf	i1_fround$2780
 19349                           
 19350                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 19351  0116' 300A               	movlw	10
 19352  0117' 0080'              	movwf	i1___lwmod@divisor
 19353  0118' 3000               	movlw	0
 19354  0119' 0081'              	movwf	i1___lwmod@divisor+1
 19355  011A' 0830'              	movf	i1fround@prec,w
 19356  011B' 00A2'              	movwf	??i1_fround
 19357  011C' 01A3'              	clrf	??i1_fround+1
 19358  011D' 0822'              	movf	??i1_fround,w
 19359  011E' 0082'              	movwf	i1___lwmod@dividend
 19360  011F' 0823'              	movf	??i1_fround+1,w
 19361  0120' 0083'              	movwf	i1___lwmod@dividend+1
 19362  0121' 3180' 2000' 3180'  	fcall	i1___lwmod
 19363  0124' 0801'              	movf	?i1___lwmod+1,w
 19364  0125' 0085               	movwf	5
 19365  0126' 0800'              	movf	?i1___lwmod,w
 19366  0127' 0084               	movwf	4
 19367  0128' 3584               	lslf	4,f
 19368  0129' 0D85               	rlf	5,f
 19369  012A' 3584               	lslf	4,f
 19370  012B' 0D85               	rlf	5,f
 19371  012C' 3000'              	movlw	low (__npowers_| (0+32768))
 19372  012D' 0784               	addwf	4,f
 19373  012E' 3000'              	movlw	high (__npowers_| (0+32768))
 19374  012F' 3D85               	addwfc	5,f
 19375  0130' 3F00               	moviw [0]fsr0
 19376  0131' 0020               	movlb	0	; select bank0
 19377  0132' 00A4'              	movwf	??i1_fround+2
 19378  0133' 3F01               	moviw [1]fsr0
 19379  0134' 00A5'              	movwf	??i1_fround+3
 19380  0135' 3F02               	moviw [2]fsr0
 19381  0136' 00A6'              	movwf	??i1_fround+4
 19382  0137' 3F03               	moviw [3]fsr0
 19383  0138' 00A7'              	movwf	??i1_fround+5
 19384  0139' 0827'              	movf	??i1_fround+5,w
 19385  013A' 0087'              	movwf	i1___flmul@b+3
 19386  013B' 0826'              	movf	??i1_fround+4,w
 19387  013C' 0086'              	movwf	i1___flmul@b+2
 19388  013D' 0825'              	movf	??i1_fround+3,w
 19389  013E' 0085'              	movwf	i1___flmul@b+1
 19390  013F' 0824'              	movf	??i1_fround+2,w
 19391  0140' 0084'              	movwf	i1___flmul@b
 19392  0141' 082F'              	movf	i1_fround$2780+3,w
 19393  0142' 008B'              	movwf	i1___flmul@a+3
 19394  0143' 082E'              	movf	i1_fround$2780+2,w
 19395  0144' 008A'              	movwf	i1___flmul@a+2
 19396  0145' 082D'              	movf	i1_fround$2780+1,w
 19397  0146' 0089'              	movwf	i1___flmul@a+1
 19398  0147' 082C'              	movf	i1_fround$2780,w
 19399  0148' 0088'              	movwf	i1___flmul@a
 19400  0149' 3180' 2000' 3180'  	fcall	i1___flmul
 19401  014C' 0020               	movlb	0	; select bank0
 19402  014D' 0807'              	movf	?i1___flmul+3,w
 19403  014E' 00A1'              	movwf	?i1_fround+3
 19404  014F' 0806'              	movf	?i1___flmul+2,w
 19405  0150' 00A0'              	movwf	?i1_fround+2
 19406  0151' 0805'              	movf	?i1___flmul+1,w
 19407  0152' 009F'              	movwf	?i1_fround+1
 19408  0153' 0804'              	movf	?i1___flmul,w
 19409  0154' 009E'              	movwf	?i1_fround
 19410  0155' 2800'              	goto	i1l1060
 19411  0156'                    i1l5582:
 19412                           
 19413                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
 19414  0156' 303F               	movlw	63
 19415  0157' 0087'              	movwf	i1___flmul@b+3
 19416  0158' 3000               	movlw	0
 19417  0159' 0086'              	movwf	i1___flmul@b+2
 19418  015A' 3000               	movlw	0
 19419  015B' 0085'              	movwf	i1___flmul@b+1
 19420  015C' 3000               	movlw	0
 19421  015D' 0084'              	movwf	i1___flmul@b
 19422  015E' 0830'              	movf	i1fround@prec,w
 19423  015F' 00A2'              	movwf	??i1_fround
 19424  0160' 01A3'              	clrf	??i1_fround+1
 19425  0161' 35A2'              	lslf	??i1_fround,f
 19426  0162' 0DA3'              	rlf	??i1_fround+1,f
 19427  0163' 35A2'              	lslf	??i1_fround,f
 19428  0164' 0DA3'              	rlf	??i1_fround+1,f
 19429  0165' 3000'              	movlw	low (__npowers_| (0+32768))
 19430  0166' 0722'              	addwf	??i1_fround,w
 19431  0167' 0084               	movwf	4
 19432  0168' 3000'              	movlw	high (__npowers_| (0+32768))
 19433  0169' 3D23'              	addwfc	??i1_fround+1,w
 19434  016A' 0085               	movwf	5
 19435  016B' 3F00               	moviw [0]fsr0
 19436  016C' 00A4'              	movwf	??i1_fround+2
 19437  016D' 3F01               	moviw [1]fsr0
 19438  016E' 00A5'              	movwf	??i1_fround+3
 19439  016F' 3F02               	moviw [2]fsr0
 19440  0170' 00A6'              	movwf	??i1_fround+4
 19441  0171' 3F03               	moviw [3]fsr0
 19442  0172' 00A7'              	movwf	??i1_fround+5
 19443  0173' 0827'              	movf	??i1_fround+5,w
 19444  0174' 008B'              	movwf	i1___flmul@a+3
 19445  0175' 0826'              	movf	??i1_fround+4,w
 19446  0176' 008A'              	movwf	i1___flmul@a+2
 19447  0177' 0825'              	movf	??i1_fround+3,w
 19448  0178' 0089'              	movwf	i1___flmul@a+1
 19449  0179' 0824'              	movf	??i1_fround+2,w
 19450  017A' 0088'              	movwf	i1___flmul@a
 19451  017B' 3180' 2000' 3180'  	fcall	i1___flmul
 19452  017E' 0020               	movlb	0	; select bank0
 19453  017F' 0807'              	movf	?i1___flmul+3,w
 19454  0180' 00A1'              	movwf	?i1_fround+3
 19455  0181' 0806'              	movf	?i1___flmul+2,w
 19456  0182' 00A0'              	movwf	?i1_fround+2
 19457  0183' 0805'              	movf	?i1___flmul+1,w
 19458  0184' 009F'              	movwf	?i1_fround+1
 19459  0185' 0804'              	movf	?i1___flmul,w
 19460  0186' 009E'              	movwf	?i1_fround
 19461  0187'                    i1l1060:
 19462  0187' 0008               	return
 19463  0188'                    __end_ofi1_fround:
 19464                           
 19465                           	psect	text49
 19466  0000'                    __ptext49:	
 19467 ;; *************** function i1___lwmod *****************
 19468 ;; Defined at:
 19469 ;;		line 5 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/lwmod.c"
 19470 ;; Parameters:    Size  Location     Type
 19471 ;;  divisor         2    0[COMMON] unsigned int 
 19472 ;;  dividend        2    2[COMMON] unsigned int 
 19473 ;; Auto vars:     Size  Location     Type
 19474 ;;  counter         1    5[COMMON] unsigned char 
 19475 ;; Return value:  Size  Location     Type
 19476 ;;                  2    0[COMMON] unsigned int 
 19477 ;; Registers used:
 19478 ;;		wreg, status,2, status,0
 19479 ;; Tracked objects:
 19480 ;;		On entry : 0/0
 19481 ;;		On exit  : 0/0
 19482 ;;		Unchanged: 0/0
 19483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19484 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19485 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19486 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19487 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19488 ;;Total ram usage:        6 bytes
 19489 ;; Hardware stack levels used:    1
 19490 ;; This function calls:
 19491 ;;		Nothing
 19492 ;; This function is called by:
 19493 ;;		i1_fround
 19494 ;; This function uses a non-reentrant model
 19495 ;;
 19496                           
 19497                           
 19498                           ;psect for function i1___lwmod
 19499  0000'                    i1___lwmod:
 19500  0000'                    i1l5166:	
 19501                           ;incstack = 0
 19502                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
 19503                           
 19504  0000' 0800'              	movf	i1___lwmod@divisor,w
 19505  0001' 0401'              	iorwf	i1___lwmod@divisor+1,w
 19506  0002' 1903               	btfsc	3,2
 19507  0003' 2800'              	goto	u664_21
 19508  0004' 2800'              	goto	u664_20
 19509  0005'                    u664_21:
 19510  0005' 2800'              	goto	i1l5184
 19511  0006'                    u664_20:
 19512  0006'                    i1l5168:
 19513  0006' 0185'              	clrf	i1___lwmod@counter
 19514  0007' 0A85'              	incf	i1___lwmod@counter,f
 19515  0008' 2800'              	goto	i1l5174
 19516  0009'                    i1l5170:
 19517  0009' 3001               	movlw	1
 19518  000A'                    u665_25:
 19519  000A' 3580'              	lslf	i1___lwmod@divisor,f
 19520  000B' 0D81'              	rlf	i1___lwmod@divisor+1,f
 19521  000C' 0B89               	decfsz	9,f
 19522  000D' 2800'              	goto	u665_25
 19523  000E'                    i1l5172:
 19524  000E' 3001               	movlw	1
 19525  000F' 0084'              	movwf	??i1___lwmod
 19526  0010' 0804'              	movf	??i1___lwmod,w
 19527  0011' 0785'              	addwf	i1___lwmod@counter,f
 19528  0012'                    i1l5174:
 19529  0012' 1F81'              	btfss	i1___lwmod@divisor+1,7
 19530  0013' 2800'              	goto	u666_21
 19531  0014' 2800'              	goto	u666_20
 19532  0015'                    u666_21:
 19533  0015' 2800'              	goto	i1l5170
 19534  0016'                    u666_20:
 19535  0016'                    i1l5176:
 19536  0016' 0801'              	movf	i1___lwmod@divisor+1,w
 19537  0017' 0203'              	subwf	i1___lwmod@dividend+1,w
 19538  0018' 1D03               	skipz
 19539  0019' 2800'              	goto	u667_25
 19540  001A' 0800'              	movf	i1___lwmod@divisor,w
 19541  001B' 0202'              	subwf	i1___lwmod@dividend,w
 19542  001C'                    u667_25:
 19543  001C' 1C03               	skipc
 19544  001D' 2800'              	goto	u667_21
 19545  001E' 2800'              	goto	u667_20
 19546  001F'                    u667_21:
 19547  001F' 2800'              	goto	i1l5180
 19548  0020'                    u667_20:
 19549  0020'                    i1l5178:
 19550  0020' 0800'              	movf	i1___lwmod@divisor,w
 19551  0021' 0282'              	subwf	i1___lwmod@dividend,f
 19552  0022' 0801'              	movf	i1___lwmod@divisor+1,w
 19553  0023' 3B83'              	subwfb	i1___lwmod@dividend+1,f
 19554  0024'                    i1l5180:
 19555  0024' 3001               	movlw	1
 19556  0025'                    u668_25:
 19557  0025' 3681'              	lsrf	i1___lwmod@divisor+1,f
 19558  0026' 0C80'              	rrf	i1___lwmod@divisor,f
 19559  0027' 0B89               	decfsz	9,f
 19560  0028' 2800'              	goto	u668_25
 19561  0029'                    i1l5182:
 19562  0029' 3001               	movlw	1
 19563  002A' 0285'              	subwf	i1___lwmod@counter,f
 19564  002B' 1D03               	btfss	3,2
 19565  002C' 2800'              	goto	u669_21
 19566  002D' 2800'              	goto	u669_20
 19567  002E'                    u669_21:
 19568  002E' 2800'              	goto	i1l5176
 19569  002F'                    u669_20:
 19570  002F'                    i1l5184:
 19571  002F' 0803'              	movf	i1___lwmod@dividend+1,w
 19572  0030' 0081'              	movwf	?i1___lwmod+1
 19573  0031' 0802'              	movf	i1___lwmod@dividend,w
 19574  0032' 0080'              	movwf	?i1___lwmod
 19575  0033'                    i1l1497:
 19576  0033' 0008               	return
 19577  0034'                    __end_ofi1___lwmod:
 19578                           
 19579                           	psect	text50
 19580  0000'                    __ptext50:	
 19581 ;; *************** function i1___lwdiv *****************
 19582 ;; Defined at:
 19583 ;;		line 5 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/lwdiv.c"
 19584 ;; Parameters:    Size  Location     Type
 19585 ;;  divisor         2    6[COMMON] unsigned int 
 19586 ;;  dividend        2    8[COMMON] unsigned int 
 19587 ;; Auto vars:     Size  Location     Type
 19588 ;;  quotient        2   11[COMMON] unsigned int 
 19589 ;;  counter         1   13[COMMON] unsigned char 
 19590 ;; Return value:  Size  Location     Type
 19591 ;;                  2    6[COMMON] unsigned int 
 19592 ;; Registers used:
 19593 ;;		wreg, status,2, status,0
 19594 ;; Tracked objects:
 19595 ;;		On entry : 0/0
 19596 ;;		On exit  : 0/0
 19597 ;;		Unchanged: 0/0
 19598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19599 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19600 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19601 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19602 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19603 ;;Total ram usage:        8 bytes
 19604 ;; Hardware stack levels used:    1
 19605 ;; This function calls:
 19606 ;;		Nothing
 19607 ;; This function is called by:
 19608 ;;		i1_fround
 19609 ;; This function uses a non-reentrant model
 19610 ;;
 19611                           
 19612                           
 19613                           ;psect for function i1___lwdiv
 19614  0000'                    i1___lwdiv:
 19615  0000'                    i1l5140:	
 19616                           ;incstack = 0
 19617                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
 19618                           
 19619  0000' 018B'              	clrf	i1___lwdiv@quotient
 19620  0001' 018C'              	clrf	i1___lwdiv@quotient+1
 19621  0002'                    i1l5142:
 19622  0002' 0806'              	movf	i1___lwdiv@divisor,w
 19623  0003' 0407'              	iorwf	i1___lwdiv@divisor+1,w
 19624  0004' 1903               	btfsc	3,2
 19625  0005' 2800'              	goto	u657_21
 19626  0006' 2800'              	goto	u657_20
 19627  0007'                    u657_21:
 19628  0007' 2800'              	goto	i1l5162
 19629  0008'                    u657_20:
 19630  0008'                    i1l5144:
 19631  0008' 018D'              	clrf	i1___lwdiv@counter
 19632  0009' 0A8D'              	incf	i1___lwdiv@counter,f
 19633  000A' 2800'              	goto	i1l5150
 19634  000B'                    i1l5146:
 19635  000B' 3001               	movlw	1
 19636  000C'                    u658_25:
 19637  000C' 3586'              	lslf	i1___lwdiv@divisor,f
 19638  000D' 0D87'              	rlf	i1___lwdiv@divisor+1,f
 19639  000E' 0B89               	decfsz	9,f
 19640  000F' 2800'              	goto	u658_25
 19641  0010'                    i1l5148:
 19642  0010' 3001               	movlw	1
 19643  0011' 008A'              	movwf	??i1___lwdiv
 19644  0012' 080A'              	movf	??i1___lwdiv,w
 19645  0013' 078D'              	addwf	i1___lwdiv@counter,f
 19646  0014'                    i1l5150:
 19647  0014' 1F87'              	btfss	i1___lwdiv@divisor+1,7
 19648  0015' 2800'              	goto	u659_21
 19649  0016' 2800'              	goto	u659_20
 19650  0017'                    u659_21:
 19651  0017' 2800'              	goto	i1l5146
 19652  0018'                    u659_20:
 19653  0018'                    i1l5152:
 19654  0018' 3001               	movlw	1
 19655  0019'                    u660_25:
 19656  0019' 358B'              	lslf	i1___lwdiv@quotient,f
 19657  001A' 0D8C'              	rlf	i1___lwdiv@quotient+1,f
 19658  001B' 0B89               	decfsz	9,f
 19659  001C' 2800'              	goto	u660_25
 19660  001D' 0807'              	movf	i1___lwdiv@divisor+1,w
 19661  001E' 0209'              	subwf	i1___lwdiv@dividend+1,w
 19662  001F' 1D03               	skipz
 19663  0020' 2800'              	goto	u661_25
 19664  0021' 0806'              	movf	i1___lwdiv@divisor,w
 19665  0022' 0208'              	subwf	i1___lwdiv@dividend,w
 19666  0023'                    u661_25:
 19667  0023' 1C03               	skipc
 19668  0024' 2800'              	goto	u661_21
 19669  0025' 2800'              	goto	u661_20
 19670  0026'                    u661_21:
 19671  0026' 2800'              	goto	i1l5158
 19672  0027'                    u661_20:
 19673  0027'                    i1l5154:
 19674  0027' 0806'              	movf	i1___lwdiv@divisor,w
 19675  0028' 0288'              	subwf	i1___lwdiv@dividend,f
 19676  0029' 0807'              	movf	i1___lwdiv@divisor+1,w
 19677  002A' 3B89'              	subwfb	i1___lwdiv@dividend+1,f
 19678  002B'                    i1l5156:
 19679  002B' 140B'              	bsf	i1___lwdiv@quotient,0
 19680  002C'                    i1l5158:
 19681  002C' 3001               	movlw	1
 19682  002D'                    u662_25:
 19683  002D' 3687'              	lsrf	i1___lwdiv@divisor+1,f
 19684  002E' 0C86'              	rrf	i1___lwdiv@divisor,f
 19685  002F' 0B89               	decfsz	9,f
 19686  0030' 2800'              	goto	u662_25
 19687  0031'                    i1l5160:
 19688  0031' 3001               	movlw	1
 19689  0032' 028D'              	subwf	i1___lwdiv@counter,f
 19690  0033' 1D03               	btfss	3,2
 19691  0034' 2800'              	goto	u663_21
 19692  0035' 2800'              	goto	u663_20
 19693  0036'                    u663_21:
 19694  0036' 2800'              	goto	i1l5152
 19695  0037'                    u663_20:
 19696  0037'                    i1l5162:
 19697  0037' 080C'              	movf	i1___lwdiv@quotient+1,w
 19698  0038' 0087'              	movwf	?i1___lwdiv+1
 19699  0039' 080B'              	movf	i1___lwdiv@quotient,w
 19700  003A' 0086'              	movwf	?i1___lwdiv
 19701  003B'                    i1l1487:
 19702  003B' 0008               	return
 19703  003C'                    __end_ofi1___lwdiv:
 19704                           
 19705                           	psect	text51
 19706  0000'                    __ptext51:	
 19707 ;; *************** function i1___flmul *****************
 19708 ;; Defined at:
 19709 ;;		line 8 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/sprcmul.c"
 19710 ;; Parameters:    Size  Location     Type
 19711 ;;  b               4    4[BANK0 ] unsigned int 
 19712 ;;  a               4    8[BANK0 ] unsigned int 
 19713 ;; Auto vars:     Size  Location     Type
 19714 ;;  prod            4   24[BANK0 ] struct .
 19715 ;;  grs             4   18[BANK0 ] unsigned long 
 19716 ;;  temp            2   28[BANK0 ] struct .
 19717 ;;  bexp            1   23[BANK0 ] unsigned char 
 19718 ;;  aexp            1   22[BANK0 ] unsigned char 
 19719 ;;  sign            1   17[BANK0 ] unsigned char 
 19720 ;; Return value:  Size  Location     Type
 19721 ;;                  4    4[BANK0 ] unsigned char 
 19722 ;; Registers used:
 19723 ;;		wreg, status,2, status,0, pclath, cstack
 19724 ;; Tracked objects:
 19725 ;;		On entry : 0/0
 19726 ;;		On exit  : 0/0
 19727 ;;		Unchanged: 0/0
 19728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19729 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19730 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19731 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19732 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19733 ;;Total ram usage:       26 bytes
 19734 ;; Hardware stack levels used:    1
 19735 ;; Hardware stack levels required when called:    1
 19736 ;; This function calls:
 19737 ;;		i1__Umul8_16
 19738 ;; This function is called by:
 19739 ;;		i1_fround
 19740 ;;		i1_scale
 19741 ;;		i1_sprintf
 19742 ;; This function uses a non-reentrant model
 19743 ;;
 19744                           
 19745                           
 19746                           ;psect for function i1___flmul
 19747  0000'                    i1___flmul:
 19748  0000'                    i1l5382:	
 19749                           ;incstack = 0
 19750                           ; Regs used in i1___flmul: [wreg+status,2+status,0+pclath+cstack]
 19751                           
 19752  0000' 0020               	movlb	0	; select bank0
 19753  0001' 0807'              	movf	i1___flmul@b+3,w
 19754  0002' 3980               	andlw	128
 19755  0003' 008C'              	movwf	??i1___flmul
 19756  0004' 080C'              	movf	??i1___flmul,w
 19757  0005' 0091'              	movwf	i1___flmul@sign
 19758  0006'                    i1l5384:
 19759  0006' 3507'              	lslf	i1___flmul@b+3,w
 19760  0007' 008C'              	movwf	??i1___flmul
 19761  0008' 080C'              	movf	??i1___flmul,w
 19762  0009' 0097'              	movwf	i1___flmul@bexp
 19763  000A'                    i1l5386:
 19764  000A' 1F86'              	btfss	i1___flmul@b+2,7
 19765  000B' 2800'              	goto	u713_21
 19766  000C' 2800'              	goto	u713_20
 19767  000D'                    u713_21:
 19768  000D' 2800'              	goto	i1l5390
 19769  000E'                    u713_20:
 19770  000E'                    i1l5388:
 19771  000E' 1417'              	bsf	i1___flmul@bexp,0
 19772  000F'                    i1l5390:
 19773  000F' 0817'              	movf	i1___flmul@bexp,w
 19774  0010' 1903               	btfsc	3,2
 19775  0011' 2800'              	goto	u714_21
 19776  0012' 2800'              	goto	u714_20
 19777  0013'                    u714_21:
 19778  0013' 2800'              	goto	i1l5398
 19779  0014'                    u714_20:
 19780  0014'                    i1l5392:
 19781  0014' 0A17'              	incf	i1___flmul@bexp,w
 19782  0015' 1D03               	btfss	3,2
 19783  0016' 2800'              	goto	u715_21
 19784  0017' 2800'              	goto	u715_20
 19785  0018'                    u715_21:
 19786  0018' 2800'              	goto	i1l5396
 19787  0019'                    u715_20:
 19788  0019'                    i1l5394:
 19789  0019' 3000               	movlw	0
 19790  001A' 0087'              	movwf	i1___flmul@b+3
 19791  001B' 3000               	movlw	0
 19792  001C' 0086'              	movwf	i1___flmul@b+2
 19793  001D' 3000               	movlw	0
 19794  001E' 0085'              	movwf	i1___flmul@b+1
 19795  001F' 3000               	movlw	0
 19796  0020' 0084'              	movwf	i1___flmul@b
 19797  0021'                    i1l5396:
 19798  0021' 1786'              	bsf	i1___flmul@b+2,7
 19799  0022' 2800'              	goto	i1l5400
 19800  0023'                    i1l5398:
 19801  0023' 3000               	movlw	0
 19802  0024' 0087'              	movwf	i1___flmul@b+3
 19803  0025' 3000               	movlw	0
 19804  0026' 0086'              	movwf	i1___flmul@b+2
 19805  0027' 3000               	movlw	0
 19806  0028' 0085'              	movwf	i1___flmul@b+1
 19807  0029' 3000               	movlw	0
 19808  002A' 0084'              	movwf	i1___flmul@b
 19809  002B'                    i1l5400:
 19810  002B' 080B'              	movf	i1___flmul@a+3,w
 19811  002C' 3980               	andlw	128
 19812  002D' 008C'              	movwf	??i1___flmul
 19813  002E' 080C'              	movf	??i1___flmul,w
 19814  002F' 0691'              	xorwf	i1___flmul@sign,f
 19815  0030'                    i1l5402:
 19816  0030' 350B'              	lslf	i1___flmul@a+3,w
 19817  0031' 008C'              	movwf	??i1___flmul
 19818  0032' 080C'              	movf	??i1___flmul,w
 19819  0033' 0096'              	movwf	i1___flmul@aexp
 19820  0034'                    i1l5404:
 19821  0034' 1F8A'              	btfss	i1___flmul@a+2,7
 19822  0035' 2800'              	goto	u716_21
 19823  0036' 2800'              	goto	u716_20
 19824  0037'                    u716_21:
 19825  0037' 2800'              	goto	i1l5408
 19826  0038'                    u716_20:
 19827  0038'                    i1l5406:
 19828  0038' 1416'              	bsf	i1___flmul@aexp,0
 19829  0039'                    i1l5408:
 19830  0039' 0816'              	movf	i1___flmul@aexp,w
 19831  003A' 1903               	btfsc	3,2
 19832  003B' 2800'              	goto	u717_21
 19833  003C' 2800'              	goto	u717_20
 19834  003D'                    u717_21:
 19835  003D' 2800'              	goto	i1l5416
 19836  003E'                    u717_20:
 19837  003E'                    i1l5410:
 19838  003E' 0A16'              	incf	i1___flmul@aexp,w
 19839  003F' 1D03               	btfss	3,2
 19840  0040' 2800'              	goto	u718_21
 19841  0041' 2800'              	goto	u718_20
 19842  0042'                    u718_21:
 19843  0042' 2800'              	goto	i1l5414
 19844  0043'                    u718_20:
 19845  0043'                    i1l5412:
 19846  0043' 3000               	movlw	0
 19847  0044' 008B'              	movwf	i1___flmul@a+3
 19848  0045' 3000               	movlw	0
 19849  0046' 008A'              	movwf	i1___flmul@a+2
 19850  0047' 3000               	movlw	0
 19851  0048' 0089'              	movwf	i1___flmul@a+1
 19852  0049' 3000               	movlw	0
 19853  004A' 0088'              	movwf	i1___flmul@a
 19854  004B'                    i1l5414:
 19855  004B' 178A'              	bsf	i1___flmul@a+2,7
 19856  004C' 2800'              	goto	i1l5418
 19857  004D'                    i1l5416:
 19858  004D' 3000               	movlw	0
 19859  004E' 008B'              	movwf	i1___flmul@a+3
 19860  004F' 3000               	movlw	0
 19861  0050' 008A'              	movwf	i1___flmul@a+2
 19862  0051' 3000               	movlw	0
 19863  0052' 0089'              	movwf	i1___flmul@a+1
 19864  0053' 3000               	movlw	0
 19865  0054' 0088'              	movwf	i1___flmul@a
 19866  0055'                    i1l5418:
 19867  0055' 0816'              	movf	i1___flmul@aexp,w
 19868  0056' 1903               	btfsc	3,2
 19869  0057' 2800'              	goto	u719_21
 19870  0058' 2800'              	goto	u719_20
 19871  0059'                    u719_21:
 19872  0059' 2800'              	goto	i1l5422
 19873  005A'                    u719_20:
 19874  005A'                    i1l5420:
 19875  005A' 0817'              	movf	i1___flmul@bexp,w
 19876  005B' 1D03               	btfss	3,2
 19877  005C' 2800'              	goto	u720_21
 19878  005D' 2800'              	goto	u720_20
 19879  005E'                    u720_21:
 19880  005E' 2800'              	goto	i1l5426
 19881  005F'                    u720_20:
 19882  005F'                    i1l5422:
 19883  005F' 3000               	movlw	0
 19884  0060' 0087'              	movwf	?i1___flmul+3
 19885  0061' 3000               	movlw	0
 19886  0062' 0086'              	movwf	?i1___flmul+2
 19887  0063' 3000               	movlw	0
 19888  0064' 0085'              	movwf	?i1___flmul+1
 19889  0065' 3000               	movlw	0
 19890  0066' 0084'              	movwf	?i1___flmul
 19891  0067' 2800'              	goto	i1l1604
 19892  0068'                    i1l5426:
 19893  0068' 0804'              	movf	i1___flmul@b,w
 19894  0069' 008C'              	movwf	??i1___flmul
 19895  006A' 080C'              	movf	??i1___flmul,w
 19896  006B' 0080'              	movwf	i1__Umul8_16@multiplicand
 19897  006C' 080A'              	movf	i1___flmul@a+2,w
 19898  006D' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 19899  0070' 0801'              	movf	?i1__Umul8_16+1,w
 19900  0071' 0020               	movlb	0	; select bank0
 19901  0072' 009D'              	movwf	i1___flmul@temp+1
 19902  0073' 0800'              	movf	?i1__Umul8_16,w
 19903  0074' 009C'              	movwf	i1___flmul@temp
 19904  0075'                    i1l5428:
 19905  0075' 081C'              	movf	i1___flmul@temp,w
 19906  0076' 008C'              	movwf	??i1___flmul
 19907  0077' 018D'              	clrf	??i1___flmul+1
 19908  0078' 018E'              	clrf	??i1___flmul+2
 19909  0079' 018F'              	clrf	??i1___flmul+3
 19910  007A' 080F'              	movf	??i1___flmul+3,w
 19911  007B' 0095'              	movwf	i1___flmul@grs+3
 19912  007C' 080E'              	movf	??i1___flmul+2,w
 19913  007D' 0094'              	movwf	i1___flmul@grs+2
 19914  007E' 080D'              	movf	??i1___flmul+1,w
 19915  007F' 0093'              	movwf	i1___flmul@grs+1
 19916  0080' 080C'              	movf	??i1___flmul,w
 19917  0081' 0092'              	movwf	i1___flmul@grs
 19918  0082'                    i1l5430:
 19919  0082' 081D'              	movf	i1___flmul@temp+1,w
 19920  0083' 008C'              	movwf	??i1___flmul
 19921  0084' 018D'              	clrf	??i1___flmul+1
 19922  0085' 018E'              	clrf	??i1___flmul+2
 19923  0086' 018F'              	clrf	??i1___flmul+3
 19924  0087' 080F'              	movf	??i1___flmul+3,w
 19925  0088' 009B'              	movwf	i1___flmul@prod+3
 19926  0089' 080E'              	movf	??i1___flmul+2,w
 19927  008A' 009A'              	movwf	i1___flmul@prod+2
 19928  008B' 080D'              	movf	??i1___flmul+1,w
 19929  008C' 0099'              	movwf	i1___flmul@prod+1
 19930  008D' 080C'              	movf	??i1___flmul,w
 19931  008E' 0098'              	movwf	i1___flmul@prod
 19932  008F' 0805'              	movf	i1___flmul@b+1,w
 19933  0090' 008C'              	movwf	??i1___flmul
 19934  0091' 080C'              	movf	??i1___flmul,w
 19935  0092' 0080'              	movwf	i1__Umul8_16@multiplicand
 19936  0093' 0809'              	movf	i1___flmul@a+1,w
 19937  0094' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 19938  0097' 0801'              	movf	?i1__Umul8_16+1,w
 19939  0098' 0020               	movlb	0	; select bank0
 19940  0099' 009D'              	movwf	i1___flmul@temp+1
 19941  009A' 0800'              	movf	?i1__Umul8_16,w
 19942  009B' 009C'              	movwf	i1___flmul@temp
 19943  009C'                    i1l5432:
 19944  009C' 081C'              	movf	i1___flmul@temp,w
 19945  009D' 008C'              	movwf	??i1___flmul
 19946  009E' 018D'              	clrf	??i1___flmul+1
 19947  009F' 018E'              	clrf	??i1___flmul+2
 19948  00A0' 018F'              	clrf	??i1___flmul+3
 19949  00A1' 080C'              	movf	??i1___flmul,w
 19950  00A2' 0792'              	addwf	i1___flmul@grs,f
 19951  00A3' 080D'              	movf	??i1___flmul+1,w
 19952  00A4' 3D93'              	addwfc	i1___flmul@grs+1,f
 19953  00A5' 080E'              	movf	??i1___flmul+2,w
 19954  00A6' 3D94'              	addwfc	i1___flmul@grs+2,f
 19955  00A7' 080F'              	movf	??i1___flmul+3,w
 19956  00A8' 3D95'              	addwfc	i1___flmul@grs+3,f
 19957  00A9'                    i1l5434:
 19958  00A9' 081D'              	movf	i1___flmul@temp+1,w
 19959  00AA' 008C'              	movwf	??i1___flmul
 19960  00AB' 018D'              	clrf	??i1___flmul+1
 19961  00AC' 018E'              	clrf	??i1___flmul+2
 19962  00AD' 018F'              	clrf	??i1___flmul+3
 19963  00AE' 080C'              	movf	??i1___flmul,w
 19964  00AF' 0798'              	addwf	i1___flmul@prod,f
 19965  00B0' 080D'              	movf	??i1___flmul+1,w
 19966  00B1' 3D99'              	addwfc	i1___flmul@prod+1,f
 19967  00B2' 080E'              	movf	??i1___flmul+2,w
 19968  00B3' 3D9A'              	addwfc	i1___flmul@prod+2,f
 19969  00B4' 080F'              	movf	??i1___flmul+3,w
 19970  00B5' 3D9B'              	addwfc	i1___flmul@prod+3,f
 19971  00B6' 0806'              	movf	i1___flmul@b+2,w
 19972  00B7' 008C'              	movwf	??i1___flmul
 19973  00B8' 080C'              	movf	??i1___flmul,w
 19974  00B9' 0080'              	movwf	i1__Umul8_16@multiplicand
 19975  00BA' 0808'              	movf	i1___flmul@a,w
 19976  00BB' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 19977  00BE' 0801'              	movf	?i1__Umul8_16+1,w
 19978  00BF' 0020               	movlb	0	; select bank0
 19979  00C0' 009D'              	movwf	i1___flmul@temp+1
 19980  00C1' 0800'              	movf	?i1__Umul8_16,w
 19981  00C2' 009C'              	movwf	i1___flmul@temp
 19982  00C3'                    i1l5436:
 19983  00C3' 081C'              	movf	i1___flmul@temp,w
 19984  00C4' 008C'              	movwf	??i1___flmul
 19985  00C5' 018D'              	clrf	??i1___flmul+1
 19986  00C6' 018E'              	clrf	??i1___flmul+2
 19987  00C7' 018F'              	clrf	??i1___flmul+3
 19988  00C8' 080C'              	movf	??i1___flmul,w
 19989  00C9' 0792'              	addwf	i1___flmul@grs,f
 19990  00CA' 080D'              	movf	??i1___flmul+1,w
 19991  00CB' 3D93'              	addwfc	i1___flmul@grs+1,f
 19992  00CC' 080E'              	movf	??i1___flmul+2,w
 19993  00CD' 3D94'              	addwfc	i1___flmul@grs+2,f
 19994  00CE' 080F'              	movf	??i1___flmul+3,w
 19995  00CF' 3D95'              	addwfc	i1___flmul@grs+3,f
 19996  00D0'                    i1l5438:
 19997  00D0' 081D'              	movf	i1___flmul@temp+1,w
 19998  00D1' 008C'              	movwf	??i1___flmul
 19999  00D2' 018D'              	clrf	??i1___flmul+1
 20000  00D3' 018E'              	clrf	??i1___flmul+2
 20001  00D4' 018F'              	clrf	??i1___flmul+3
 20002  00D5' 080C'              	movf	??i1___flmul,w
 20003  00D6' 0798'              	addwf	i1___flmul@prod,f
 20004  00D7' 080D'              	movf	??i1___flmul+1,w
 20005  00D8' 3D99'              	addwfc	i1___flmul@prod+1,f
 20006  00D9' 080E'              	movf	??i1___flmul+2,w
 20007  00DA' 3D9A'              	addwfc	i1___flmul@prod+2,f
 20008  00DB' 080F'              	movf	??i1___flmul+3,w
 20009  00DC' 3D9B'              	addwfc	i1___flmul@prod+3,f
 20010  00DD'                    i1l5440:
 20011  00DD' 3008               	movlw	8
 20012  00DE'                    u721_25:
 20013  00DE' 3592'              	lslf	i1___flmul@grs,f
 20014  00DF' 0D93'              	rlf	i1___flmul@grs+1,f
 20015  00E0' 0D94'              	rlf	i1___flmul@grs+2,f
 20016  00E1' 0D95'              	rlf	i1___flmul@grs+3,f
 20017  00E2' 0B89               	decfsz	9,f
 20018  00E3' 2800'              	goto	u721_25
 20019  00E4'                    i1l5442:
 20020  00E4' 0805'              	movf	i1___flmul@b+1,w
 20021  00E5' 008C'              	movwf	??i1___flmul
 20022  00E6' 080C'              	movf	??i1___flmul,w
 20023  00E7' 0080'              	movwf	i1__Umul8_16@multiplicand
 20024  00E8' 0808'              	movf	i1___flmul@a,w
 20025  00E9' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 20026  00EC' 0801'              	movf	?i1__Umul8_16+1,w
 20027  00ED' 0020               	movlb	0	; select bank0
 20028  00EE' 009D'              	movwf	i1___flmul@temp+1
 20029  00EF' 0800'              	movf	?i1__Umul8_16,w
 20030  00F0' 009C'              	movwf	i1___flmul@temp
 20031  00F1'                    i1l5444:
 20032  00F1' 081C'              	movf	i1___flmul@temp,w
 20033  00F2' 0792'              	addwf	i1___flmul@grs,f
 20034  00F3' 081D'              	movf	i1___flmul@temp+1,w
 20035  00F4' 3D93'              	addwfc	i1___flmul@grs+1,f
 20036  00F5' 3000               	movlw	0
 20037  00F6' 3D94'              	addwfc	i1___flmul@grs+2,f
 20038  00F7' 3D95'              	addwfc	i1___flmul@grs+3,f
 20039  00F8'                    i1l5446:
 20040  00F8' 0804'              	movf	i1___flmul@b,w
 20041  00F9' 008C'              	movwf	??i1___flmul
 20042  00FA' 080C'              	movf	??i1___flmul,w
 20043  00FB' 0080'              	movwf	i1__Umul8_16@multiplicand
 20044  00FC' 0809'              	movf	i1___flmul@a+1,w
 20045  00FD' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 20046  0100' 0801'              	movf	?i1__Umul8_16+1,w
 20047  0101' 0020               	movlb	0	; select bank0
 20048  0102' 009D'              	movwf	i1___flmul@temp+1
 20049  0103' 0800'              	movf	?i1__Umul8_16,w
 20050  0104' 009C'              	movwf	i1___flmul@temp
 20051  0105'                    i1l5448:
 20052  0105' 081C'              	movf	i1___flmul@temp,w
 20053  0106' 0792'              	addwf	i1___flmul@grs,f
 20054  0107' 081D'              	movf	i1___flmul@temp+1,w
 20055  0108' 3D93'              	addwfc	i1___flmul@grs+1,f
 20056  0109' 3000               	movlw	0
 20057  010A' 3D94'              	addwfc	i1___flmul@grs+2,f
 20058  010B' 3D95'              	addwfc	i1___flmul@grs+3,f
 20059  010C'                    i1l5450:
 20060  010C' 3008               	movlw	8
 20061  010D'                    u722_25:
 20062  010D' 3592'              	lslf	i1___flmul@grs,f
 20063  010E' 0D93'              	rlf	i1___flmul@grs+1,f
 20064  010F' 0D94'              	rlf	i1___flmul@grs+2,f
 20065  0110' 0D95'              	rlf	i1___flmul@grs+3,f
 20066  0111' 0B89               	decfsz	9,f
 20067  0112' 2800'              	goto	u722_25
 20068  0113' 0804'              	movf	i1___flmul@b,w
 20069  0114' 008C'              	movwf	??i1___flmul
 20070  0115' 080C'              	movf	??i1___flmul,w
 20071  0116' 0080'              	movwf	i1__Umul8_16@multiplicand
 20072  0117' 0808'              	movf	i1___flmul@a,w
 20073  0118' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 20074  011B' 0801'              	movf	?i1__Umul8_16+1,w
 20075  011C' 0020               	movlb	0	; select bank0
 20076  011D' 009D'              	movwf	i1___flmul@temp+1
 20077  011E' 0800'              	movf	?i1__Umul8_16,w
 20078  011F' 009C'              	movwf	i1___flmul@temp
 20079  0120'                    i1l5452:
 20080  0120' 081C'              	movf	i1___flmul@temp,w
 20081  0121' 0792'              	addwf	i1___flmul@grs,f
 20082  0122' 081D'              	movf	i1___flmul@temp+1,w
 20083  0123' 3D93'              	addwfc	i1___flmul@grs+1,f
 20084  0124' 3000               	movlw	0
 20085  0125' 3D94'              	addwfc	i1___flmul@grs+2,f
 20086  0126' 3D95'              	addwfc	i1___flmul@grs+3,f
 20087  0127'                    i1l5454:
 20088  0127' 0805'              	movf	i1___flmul@b+1,w
 20089  0128' 008C'              	movwf	??i1___flmul
 20090  0129' 080C'              	movf	??i1___flmul,w
 20091  012A' 0080'              	movwf	i1__Umul8_16@multiplicand
 20092  012B' 080A'              	movf	i1___flmul@a+2,w
 20093  012C' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 20094  012F' 0801'              	movf	?i1__Umul8_16+1,w
 20095  0130' 0020               	movlb	0	; select bank0
 20096  0131' 009D'              	movwf	i1___flmul@temp+1
 20097  0132' 0800'              	movf	?i1__Umul8_16,w
 20098  0133' 009C'              	movwf	i1___flmul@temp
 20099  0134' 081C'              	movf	i1___flmul@temp,w
 20100  0135' 0798'              	addwf	i1___flmul@prod,f
 20101  0136' 081D'              	movf	i1___flmul@temp+1,w
 20102  0137' 3D99'              	addwfc	i1___flmul@prod+1,f
 20103  0138' 3000               	movlw	0
 20104  0139' 3D9A'              	addwfc	i1___flmul@prod+2,f
 20105  013A' 3D9B'              	addwfc	i1___flmul@prod+3,f
 20106  013B'                    i1l5456:
 20107  013B' 0806'              	movf	i1___flmul@b+2,w
 20108  013C' 008C'              	movwf	??i1___flmul
 20109  013D' 080C'              	movf	??i1___flmul,w
 20110  013E' 0080'              	movwf	i1__Umul8_16@multiplicand
 20111  013F' 0809'              	movf	i1___flmul@a+1,w
 20112  0140' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 20113  0143' 0801'              	movf	?i1__Umul8_16+1,w
 20114  0144' 0020               	movlb	0	; select bank0
 20115  0145' 009D'              	movwf	i1___flmul@temp+1
 20116  0146' 0800'              	movf	?i1__Umul8_16,w
 20117  0147' 009C'              	movwf	i1___flmul@temp
 20118  0148'                    i1l5458:
 20119  0148' 081C'              	movf	i1___flmul@temp,w
 20120  0149' 0798'              	addwf	i1___flmul@prod,f
 20121  014A' 081D'              	movf	i1___flmul@temp+1,w
 20122  014B' 3D99'              	addwfc	i1___flmul@prod+1,f
 20123  014C' 3000               	movlw	0
 20124  014D' 3D9A'              	addwfc	i1___flmul@prod+2,f
 20125  014E' 3D9B'              	addwfc	i1___flmul@prod+3,f
 20126  014F' 0806'              	movf	i1___flmul@b+2,w
 20127  0150' 008C'              	movwf	??i1___flmul
 20128  0151' 080C'              	movf	??i1___flmul,w
 20129  0152' 0080'              	movwf	i1__Umul8_16@multiplicand
 20130  0153' 080A'              	movf	i1___flmul@a+2,w
 20131  0154' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 20132  0157' 0801'              	movf	?i1__Umul8_16+1,w
 20133  0158' 0020               	movlb	0	; select bank0
 20134  0159' 009D'              	movwf	i1___flmul@temp+1
 20135  015A' 0800'              	movf	?i1__Umul8_16,w
 20136  015B' 009C'              	movwf	i1___flmul@temp
 20137  015C'                    i1l5460:
 20138  015C' 081C'              	movf	i1___flmul@temp,w
 20139  015D' 008C'              	movwf	??i1___flmul
 20140  015E' 081D'              	movf	i1___flmul@temp+1,w
 20141  015F' 008D'              	movwf	??i1___flmul+1
 20142  0160' 018E'              	clrf	??i1___flmul+2
 20143  0161' 018F'              	clrf	??i1___flmul+3
 20144  0162' 3008               	movlw	8
 20145  0163'                    u723_25:
 20146  0163' 358C'              	lslf	??i1___flmul,f
 20147  0164' 0D8D'              	rlf	??i1___flmul+1,f
 20148  0165' 0D8E'              	rlf	??i1___flmul+2,f
 20149  0166' 0D8F'              	rlf	??i1___flmul+3,f
 20150  0167'                    u723_20:
 20151  0167' 0B89               	decfsz	9,f
 20152  0168' 2800'              	goto	u723_25
 20153  0169' 080C'              	movf	??i1___flmul,w
 20154  016A' 0798'              	addwf	i1___flmul@prod,f
 20155  016B' 080D'              	movf	??i1___flmul+1,w
 20156  016C' 3D99'              	addwfc	i1___flmul@prod+1,f
 20157  016D' 080E'              	movf	??i1___flmul+2,w
 20158  016E' 3D9A'              	addwfc	i1___flmul@prod+2,f
 20159  016F' 080F'              	movf	??i1___flmul+3,w
 20160  0170' 3D9B'              	addwfc	i1___flmul@prod+3,f
 20161  0171'                    i1l5462:
 20162  0171' 0812'              	movf	i1___flmul@grs,w
 20163  0172' 008C'              	movwf	??i1___flmul
 20164  0173' 0813'              	movf	i1___flmul@grs+1,w
 20165  0174' 008D'              	movwf	??i1___flmul+1
 20166  0175' 0814'              	movf	i1___flmul@grs+2,w
 20167  0176' 008E'              	movwf	??i1___flmul+2
 20168  0177' 0815'              	movf	i1___flmul@grs+3,w
 20169  0178' 008F'              	movwf	??i1___flmul+3
 20170  0179' 3018               	movlw	24
 20171  017A'                    u724_25:
 20172  017A' 368F'              	lsrf	??i1___flmul+3,f
 20173  017B' 0C8E'              	rrf	??i1___flmul+2,f
 20174  017C' 0C8D'              	rrf	??i1___flmul+1,f
 20175  017D' 0C8C'              	rrf	??i1___flmul,f
 20176  017E'                    u724_20:
 20177  017E' 0B89               	decfsz	9,f
 20178  017F' 2800'              	goto	u724_25
 20179  0180' 080C'              	movf	??i1___flmul,w
 20180  0181' 0798'              	addwf	i1___flmul@prod,f
 20181  0182' 080D'              	movf	??i1___flmul+1,w
 20182  0183' 3D99'              	addwfc	i1___flmul@prod+1,f
 20183  0184' 080E'              	movf	??i1___flmul+2,w
 20184  0185' 3D9A'              	addwfc	i1___flmul@prod+2,f
 20185  0186' 080F'              	movf	??i1___flmul+3,w
 20186  0187' 3D9B'              	addwfc	i1___flmul@prod+3,f
 20187  0188'                    i1l5464:
 20188  0188' 3008               	movlw	8
 20189  0189'                    u725_25:
 20190  0189' 3592'              	lslf	i1___flmul@grs,f
 20191  018A' 0D93'              	rlf	i1___flmul@grs+1,f
 20192  018B' 0D94'              	rlf	i1___flmul@grs+2,f
 20193  018C' 0D95'              	rlf	i1___flmul@grs+3,f
 20194  018D' 0B89               	decfsz	9,f
 20195  018E' 2800'              	goto	u725_25
 20196  018F'                    i1l5466:
 20197  018F' 0817'              	movf	i1___flmul@bexp,w
 20198  0190' 0716'              	addwf	i1___flmul@aexp,w
 20199  0191' 008C'              	movwf	??i1___flmul
 20200  0192' 018D'              	clrf	??i1___flmul+1
 20201  0193' 0D8D'              	rlf	??i1___flmul+1,f
 20202  0194' 080C'              	movf	??i1___flmul,w
 20203  0195' 3E82               	addlw	130
 20204  0196' 009C'              	movwf	i1___flmul@temp
 20205  0197' 30FF               	movlw	255
 20206  0198' 3D0D'              	addwfc	??i1___flmul+1,w
 20207  0199' 009D'              	movwf	i1___flmul@temp+1
 20208  019A' 2800'              	goto	i1l5478
 20209  019B'                    i1l5468:
 20210  019B' 3001               	movlw	1
 20211  019C'                    u726_25:
 20212  019C' 3598'              	lslf	i1___flmul@prod,f
 20213  019D' 0D99'              	rlf	i1___flmul@prod+1,f
 20214  019E' 0D9A'              	rlf	i1___flmul@prod+2,f
 20215  019F' 0D9B'              	rlf	i1___flmul@prod+3,f
 20216  01A0' 0B89               	decfsz	9,f
 20217  01A1' 2800'              	goto	u726_25
 20218  01A2'                    i1l5470:
 20219  01A2' 1F95'              	btfss	i1___flmul@grs+3,7
 20220  01A3' 2800'              	goto	u727_21
 20221  01A4' 2800'              	goto	u727_20
 20222  01A5'                    u727_21:
 20223  01A5' 2800'              	goto	i1l5474
 20224  01A6'                    u727_20:
 20225  01A6'                    i1l5472:
 20226  01A6' 1418'              	bsf	i1___flmul@prod,0
 20227  01A7'                    i1l5474:
 20228  01A7' 3001               	movlw	1
 20229  01A8'                    u728_25:
 20230  01A8' 3592'              	lslf	i1___flmul@grs,f
 20231  01A9' 0D93'              	rlf	i1___flmul@grs+1,f
 20232  01AA' 0D94'              	rlf	i1___flmul@grs+2,f
 20233  01AB' 0D95'              	rlf	i1___flmul@grs+3,f
 20234  01AC' 0B89               	decfsz	9,f
 20235  01AD' 2800'              	goto	u728_25
 20236  01AE'                    i1l5476:
 20237  01AE' 30FF               	movlw	255
 20238  01AF' 079C'              	addwf	i1___flmul@temp,f
 20239  01B0' 30FF               	movlw	255
 20240  01B1' 3D9D'              	addwfc	i1___flmul@temp+1,f
 20241  01B2'                    i1l5478:
 20242  01B2' 1F9A'              	btfss	i1___flmul@prod+2,7
 20243  01B3' 2800'              	goto	u729_21
 20244  01B4' 2800'              	goto	u729_20
 20245  01B5'                    u729_21:
 20246  01B5' 2800'              	goto	i1l5468
 20247  01B6'                    u729_20:
 20248  01B6'                    i1l5480:
 20249  01B6' 0196'              	clrf	i1___flmul@aexp
 20250  01B7'                    i1l5482:
 20251  01B7' 1F95'              	btfss	i1___flmul@grs+3,7
 20252  01B8' 2800'              	goto	u730_21
 20253  01B9' 2800'              	goto	u730_20
 20254  01BA'                    u730_21:
 20255  01BA' 2800'              	goto	i1l5490
 20256  01BB'                    u730_20:
 20257  01BB'                    i1l5484:
 20258  01BB' 30FF               	movlw	255
 20259  01BC' 0512'              	andwf	i1___flmul@grs,w
 20260  01BD' 008C'              	movwf	??i1___flmul
 20261  01BE' 30FF               	movlw	255
 20262  01BF' 0513'              	andwf	i1___flmul@grs+1,w
 20263  01C0' 008D'              	movwf	??i1___flmul+1
 20264  01C1' 30FF               	movlw	255
 20265  01C2' 0514'              	andwf	i1___flmul@grs+2,w
 20266  01C3' 008E'              	movwf	??i1___flmul+2
 20267  01C4' 307F               	movlw	127
 20268  01C5' 0515'              	andwf	i1___flmul@grs+3,w
 20269  01C6' 008F'              	movwf	??i1___flmul+3
 20270  01C7' 080F'              	movf	??i1___flmul+3,w
 20271  01C8' 040E'              	iorwf	??i1___flmul+2,w
 20272  01C9' 040D'              	iorwf	??i1___flmul+1,w
 20273  01CA' 040C'              	iorwf	??i1___flmul,w
 20274  01CB' 1903               	skipnz
 20275  01CC' 2800'              	goto	u731_21
 20276  01CD' 2800'              	goto	u731_20
 20277  01CE'                    u731_21:
 20278  01CE' 2800'              	goto	i1l1610
 20279  01CF'                    u731_20:
 20280  01CF'                    i1l5486:
 20281  01CF' 0196'              	clrf	i1___flmul@aexp
 20282  01D0' 0A96'              	incf	i1___flmul@aexp,f
 20283  01D1' 2800'              	goto	i1l5490
 20284  01D2'                    i1l1610:
 20285  01D2' 1C18'              	btfss	i1___flmul@prod,0
 20286  01D3' 2800'              	goto	u732_21
 20287  01D4' 2800'              	goto	u732_20
 20288  01D5'                    u732_21:
 20289  01D5' 2800'              	goto	i1l5490
 20290  01D6'                    u732_20:
 20291  01D6' 2800'              	goto	i1l5486
 20292  01D7'                    i1l5490:
 20293  01D7' 0816'              	movf	i1___flmul@aexp,w
 20294  01D8' 1903               	btfsc	3,2
 20295  01D9' 2800'              	goto	u733_21
 20296  01DA' 2800'              	goto	u733_20
 20297  01DB'                    u733_21:
 20298  01DB' 2800'              	goto	i1l5500
 20299  01DC'                    u733_20:
 20300  01DC'                    i1l5492:
 20301  01DC' 3001               	movlw	1
 20302  01DD' 0798'              	addwf	i1___flmul@prod,f
 20303  01DE' 3000               	movlw	0
 20304  01DF' 3D99'              	addwfc	i1___flmul@prod+1,f
 20305  01E0' 3000               	movlw	0
 20306  01E1' 3D9A'              	addwfc	i1___flmul@prod+2,f
 20307  01E2' 3000               	movlw	0
 20308  01E3' 3D9B'              	addwfc	i1___flmul@prod+3,f
 20309  01E4'                    i1l5494:
 20310  01E4' 1C1B'              	btfss	i1___flmul@prod+3,0
 20311  01E5' 2800'              	goto	u734_21
 20312  01E6' 2800'              	goto	u734_20
 20313  01E7'                    u734_21:
 20314  01E7' 2800'              	goto	i1l5500
 20315  01E8'                    u734_20:
 20316  01E8'                    i1l5496:
 20317  01E8' 0818'              	movf	i1___flmul@prod,w
 20318  01E9' 008C'              	movwf	??i1___flmul
 20319  01EA' 0819'              	movf	i1___flmul@prod+1,w
 20320  01EB' 008D'              	movwf	??i1___flmul+1
 20321  01EC' 081A'              	movf	i1___flmul@prod+2,w
 20322  01ED' 008E'              	movwf	??i1___flmul+2
 20323  01EE' 081B'              	movf	i1___flmul@prod+3,w
 20324  01EF' 008F'              	movwf	??i1___flmul+3
 20325  01F0' 3001               	movlw	1
 20326  01F1' 0090'              	movwf	??i1___flmul+4
 20327  01F2'                    u735_25:
 20328  01F2' 378F'              	asrf	??i1___flmul+3,f
 20329  01F3' 0C8E'              	rrf	??i1___flmul+2,f
 20330  01F4' 0C8D'              	rrf	??i1___flmul+1,f
 20331  01F5' 0C8C'              	rrf	??i1___flmul,f
 20332  01F6'                    u735_20:
 20333  01F6' 0B90'              	decfsz	??i1___flmul+4,f
 20334  01F7' 2800'              	goto	u735_25
 20335  01F8' 080F'              	movf	??i1___flmul+3,w
 20336  01F9' 009B'              	movwf	i1___flmul@prod+3
 20337  01FA' 080E'              	movf	??i1___flmul+2,w
 20338  01FB' 009A'              	movwf	i1___flmul@prod+2
 20339  01FC' 080D'              	movf	??i1___flmul+1,w
 20340  01FD' 0099'              	movwf	i1___flmul@prod+1
 20341  01FE' 080C'              	movf	??i1___flmul,w
 20342  01FF' 0098'              	movwf	i1___flmul@prod
 20343  0200'                    i1l5498:
 20344  0200' 3001               	movlw	1
 20345  0201' 079C'              	addwf	i1___flmul@temp,f
 20346  0202' 3000               	movlw	0
 20347  0203' 3D9D'              	addwfc	i1___flmul@temp+1,f
 20348  0204'                    i1l5500:
 20349  0204' 081D'              	movf	i1___flmul@temp+1,w
 20350  0205' 3A80               	xorlw	128
 20351  0206' 008C'              	movwf	??i1___flmul
 20352  0207' 3080               	movlw	128
 20353  0208' 020C'              	subwf	??i1___flmul,w
 20354  0209' 1D03               	skipz
 20355  020A' 2800'              	goto	u736_25
 20356  020B' 30FF               	movlw	255
 20357  020C' 021C'              	subwf	i1___flmul@temp,w
 20358  020D'                    u736_25:
 20359  020D' 1C03               	skipc
 20360  020E' 2800'              	goto	u736_21
 20361  020F' 2800'              	goto	u736_20
 20362  0210'                    u736_21:
 20363  0210' 2800'              	goto	i1l5504
 20364  0211'                    u736_20:
 20365  0211'                    i1l5502:
 20366  0211' 307F               	movlw	127
 20367  0212' 0020               	movlb	0	; select bank0
 20368  0213' 009B'              	movwf	i1___flmul@prod+3
 20369  0214' 3080               	movlw	128
 20370  0215' 009A'              	movwf	i1___flmul@prod+2
 20371  0216' 3000               	movlw	0
 20372  0217' 0099'              	movwf	i1___flmul@prod+1
 20373  0218' 3000               	movlw	0
 20374  0219' 0098'              	movwf	i1___flmul@prod
 20375  021A' 2800'              	goto	i1l1616
 20376  021B'                    i1l5504:
 20377  021B' 0020               	movlb	0	; select bank0
 20378  021C' 081D'              	movf	i1___flmul@temp+1,w
 20379  021D' 3A80               	xorlw	128
 20380  021E' 008C'              	movwf	??i1___flmul
 20381  021F' 3080               	movlw	128
 20382  0220' 020C'              	subwf	??i1___flmul,w
 20383  0221' 1D03               	skipz
 20384  0222' 2800'              	goto	u737_25
 20385  0223' 3001               	movlw	1
 20386  0224' 021C'              	subwf	i1___flmul@temp,w
 20387  0225'                    u737_25:
 20388  0225' 1803               	skipnc
 20389  0226' 2800'              	goto	u737_21
 20390  0227' 2800'              	goto	u737_20
 20391  0228'                    u737_21:
 20392  0228' 2800'              	goto	i1l5510
 20393  0229'                    u737_20:
 20394  0229'                    i1l5506:
 20395  0229' 3000               	movlw	0
 20396  022A' 0020               	movlb	0	; select bank0
 20397  022B' 009B'              	movwf	i1___flmul@prod+3
 20398  022C' 3000               	movlw	0
 20399  022D' 009A'              	movwf	i1___flmul@prod+2
 20400  022E' 3000               	movlw	0
 20401  022F' 0099'              	movwf	i1___flmul@prod+1
 20402  0230' 3000               	movlw	0
 20403  0231' 0098'              	movwf	i1___flmul@prod
 20404  0232'                    i1l5508:
 20405  0232' 0191'              	clrf	i1___flmul@sign
 20406  0233' 2800'              	goto	i1l1616
 20407  0234'                    i1l5510:
 20408  0234' 0020               	movlb	0	; select bank0
 20409  0235' 081C'              	movf	i1___flmul@temp,w
 20410  0236' 008C'              	movwf	??i1___flmul
 20411  0237' 080C'              	movf	??i1___flmul,w
 20412  0238' 0097'              	movwf	i1___flmul@bexp
 20413  0239' 30FF               	movlw	255
 20414  023A' 0598'              	andwf	i1___flmul@prod,f
 20415  023B' 30FF               	movlw	255
 20416  023C' 0599'              	andwf	i1___flmul@prod+1,f
 20417  023D' 307F               	movlw	127
 20418  023E' 059A'              	andwf	i1___flmul@prod+2,f
 20419  023F' 3000               	movlw	0
 20420  0240' 059B'              	andwf	i1___flmul@prod+3,f
 20421  0241'                    i1l5512:
 20422  0241' 1C17'              	btfss	i1___flmul@bexp,0
 20423  0242' 2800'              	goto	u738_21
 20424  0243' 2800'              	goto	u738_20
 20425  0244'                    u738_21:
 20426  0244' 2800'              	goto	i1l5516
 20427  0245'                    u738_20:
 20428  0245'                    i1l5514:
 20429  0245' 179A'              	bsf	i1___flmul@prod+2,7
 20430  0246'                    i1l5516:
 20431  0246' 3617'              	lsrf	i1___flmul@bexp,w
 20432  0247' 008C'              	movwf	??i1___flmul
 20433  0248' 080C'              	movf	??i1___flmul,w
 20434  0249' 009B'              	movwf	i1___flmul@prod+3
 20435  024A'                    i1l1616:
 20436  024A' 0811'              	movf	i1___flmul@sign,w
 20437  024B' 008C'              	movwf	??i1___flmul
 20438  024C' 080C'              	movf	??i1___flmul,w
 20439  024D' 049B'              	iorwf	i1___flmul@prod+3,f
 20440  024E'                    i1l5518:
 20441  024E' 081B'              	movf	i1___flmul@prod+3,w
 20442  024F' 0087'              	movwf	?i1___flmul+3
 20443  0250' 081A'              	movf	i1___flmul@prod+2,w
 20444  0251' 0086'              	movwf	?i1___flmul+2
 20445  0252' 0819'              	movf	i1___flmul@prod+1,w
 20446  0253' 0085'              	movwf	?i1___flmul+1
 20447  0254' 0818'              	movf	i1___flmul@prod,w
 20448  0255' 0084'              	movwf	?i1___flmul
 20449  0256'                    i1l1604:
 20450  0256' 0008               	return
 20451  0257'                    __end_ofi1___flmul:
 20452                           
 20453                           	psect	text52
 20454  0000'                    __ptext52:	
 20455 ;; *************** function i1__Umul8_16 *****************
 20456 ;; Defined at:
 20457 ;;		line 4 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/Umul8_16.c"
 20458 ;; Parameters:    Size  Location     Type
 20459 ;;  multiplier      1    wreg     unsigned char 
 20460 ;;  multiplicand    1    0[COMMON] unsigned char 
 20461 ;; Auto vars:     Size  Location     Type
 20462 ;;  multiplier      1    8[COMMON] unsigned char 
 20463 ;;  word_mpld       2    6[COMMON] unsigned int 
 20464 ;;  product         2    4[COMMON] unsigned int 
 20465 ;; Return value:  Size  Location     Type
 20466 ;;                  2    0[COMMON] unsigned int 
 20467 ;; Registers used:
 20468 ;;		wreg, status,2, status,0
 20469 ;; Tracked objects:
 20470 ;;		On entry : 0/0
 20471 ;;		On exit  : 0/0
 20472 ;;		Unchanged: 0/0
 20473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20474 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20475 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20476 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20477 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20478 ;;Total ram usage:        9 bytes
 20479 ;; Hardware stack levels used:    1
 20480 ;; This function calls:
 20481 ;;		Nothing
 20482 ;; This function is called by:
 20483 ;;		i1___flmul
 20484 ;; This function uses a non-reentrant model
 20485 ;;
 20486                           
 20487                           
 20488                           ;psect for function i1__Umul8_16
 20489  0000'                    i1__Umul8_16:
 20490                           
 20491                           ;incstack = 0
 20492                           ; Regs used in i1__Umul8_16: [wreg+status,2+status,0]
 20493                           ;i1__Umul8_16@multiplier stored from wreg
 20494  0000' 0088'              	movwf	i1__Umul8_16@multiplier
 20495  0001'                    i1l5008:
 20496  0001' 0184'              	clrf	i1__Umul8_16@product
 20497  0002' 0185'              	clrf	i1__Umul8_16@product+1
 20498  0003'                    i1l5010:
 20499  0003' 0800'              	movf	i1__Umul8_16@multiplicand,w
 20500  0004' 0082'              	movwf	??i1__Umul8_16
 20501  0005' 0183'              	clrf	??i1__Umul8_16+1
 20502  0006' 0802'              	movf	??i1__Umul8_16,w
 20503  0007' 0086'              	movwf	i1__Umul8_16@word_mpld
 20504  0008' 0803'              	movf	??i1__Umul8_16+1,w
 20505  0009' 0087'              	movwf	i1__Umul8_16@word_mpld+1
 20506  000A'                    i1l5012:
 20507  000A' 1C08'              	btfss	i1__Umul8_16@multiplier,0
 20508  000B' 2800'              	goto	u623_21
 20509  000C' 2800'              	goto	u623_20
 20510  000D'                    u623_21:
 20511  000D' 2800'              	goto	i1l1623
 20512  000E'                    u623_20:
 20513  000E'                    i1l5014:
 20514  000E' 0806'              	movf	i1__Umul8_16@word_mpld,w
 20515  000F' 0784'              	addwf	i1__Umul8_16@product,f
 20516  0010' 0807'              	movf	i1__Umul8_16@word_mpld+1,w
 20517  0011' 3D85'              	addwfc	i1__Umul8_16@product+1,f
 20518  0012'                    i1l1623:
 20519  0012' 3001               	movlw	1
 20520  0013'                    u624_25:
 20521  0013' 3586'              	lslf	i1__Umul8_16@word_mpld,f
 20522  0014' 0D87'              	rlf	i1__Umul8_16@word_mpld+1,f
 20523  0015' 0B89               	decfsz	9,f
 20524  0016' 2800'              	goto	u624_25
 20525  0017' 1003               	clrc
 20526  0018' 0C88'              	rrf	i1__Umul8_16@multiplier,f
 20527  0019'                    i1l5016:
 20528  0019' 0808'              	movf	i1__Umul8_16@multiplier,w
 20529  001A' 1D03               	btfss	3,2
 20530  001B' 2800'              	goto	u625_21
 20531  001C' 2800'              	goto	u625_20
 20532  001D'                    u625_21:
 20533  001D' 2800'              	goto	i1l5012
 20534  001E'                    u625_20:
 20535  001E'                    i1l5018:
 20536  001E' 0805'              	movf	i1__Umul8_16@product+1,w
 20537  001F' 0081'              	movwf	?i1__Umul8_16+1
 20538  0020' 0804'              	movf	i1__Umul8_16@product,w
 20539  0021' 0080'              	movwf	?i1__Umul8_16
 20540  0022'                    i1l1625:
 20541  0022' 0008               	return
 20542  0023'                    __end_ofi1__Umul8_16:
 20543                           
 20544                           	psect	text53
 20545  0000'                    __ptext53:	
 20546 ;; *************** function i1__tdiv_to_l_ *****************
 20547 ;; Defined at:
 20548 ;;		line 60 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/ftdivl.c"
 20549 ;; Parameters:    Size  Location     Type
 20550 ;;  f1              4    0[COMMON] float 
 20551 ;;  f2              4    4[COMMON] float 
 20552 ;; Auto vars:     Size  Location     Type
 20553 ;;  quot            4    0[BANK0 ] unsigned long 
 20554 ;;  exp1            1    5[BANK0 ] unsigned char 
 20555 ;;  cntr            1    4[BANK0 ] unsigned char 
 20556 ;; Return value:  Size  Location     Type
 20557 ;;                  4    0[COMMON] unsigned long 
 20558 ;; Registers used:
 20559 ;;		wreg, status,2, status,0
 20560 ;; Tracked objects:
 20561 ;;		On entry : 0/0
 20562 ;;		On exit  : 0/0
 20563 ;;		Unchanged: 0/0
 20564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20565 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20566 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20567 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20568 ;;      Totals:        12       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20569 ;;Total ram usage:       18 bytes
 20570 ;; Hardware stack levels used:    1
 20571 ;; This function calls:
 20572 ;;		Nothing
 20573 ;; This function is called by:
 20574 ;;		i1_sprintf
 20575 ;; This function uses a non-reentrant model
 20576 ;;
 20577                           
 20578                           
 20579                           ;psect for function i1__tdiv_to_l_
 20580  0000'                    i1__tdiv_to_l_:
 20581  0000'                    i1l5792:	
 20582                           ;incstack = 0
 20583                           ; Regs used in i1__tdiv_to_l_: [wreg+status,2+status,0]
 20584                           
 20585  0000' 0800'              	movf	i1__tdiv_to_l_@f1,w
 20586  0001' 0088'              	movwf	??i1__tdiv_to_l_
 20587  0002' 0801'              	movf	i1__tdiv_to_l_@f1+1,w
 20588  0003' 0089'              	movwf	??i1__tdiv_to_l_+1
 20589  0004' 0802'              	movf	i1__tdiv_to_l_@f1+2,w
 20590  0005' 008A'              	movwf	??i1__tdiv_to_l_+2
 20591  0006' 1003               	clrc
 20592  0007' 0D09'              	rlf	??i1__tdiv_to_l_+1,w
 20593  0008' 0D0A'              	rlf	??i1__tdiv_to_l_+2,w
 20594  0009' 008B'              	movwf	??i1__tdiv_to_l_+3
 20595  000A' 080B'              	movf	??i1__tdiv_to_l_+3,w
 20596  000B' 0020               	movlb	0	; select bank0
 20597  000C' 0085'              	movwf	i1__tdiv_to_l_@exp1
 20598  000D' 0805'              	movf	i1__tdiv_to_l_@exp1,w
 20599  000E' 1D03               	btfss	3,2
 20600  000F' 2800'              	goto	u801_21
 20601  0010' 2800'              	goto	u801_20
 20602  0011'                    u801_21:
 20603  0011' 2800'              	goto	i1l5798
 20604  0012'                    u801_20:
 20605  0012'                    i1l5794:
 20606  0012' 3000               	movlw	0
 20607  0013' 0083'              	movwf	?i1__tdiv_to_l_+3
 20608  0014' 3000               	movlw	0
 20609  0015' 0082'              	movwf	?i1__tdiv_to_l_+2
 20610  0016' 3000               	movlw	0
 20611  0017' 0081'              	movwf	?i1__tdiv_to_l_+1
 20612  0018' 3000               	movlw	0
 20613  0019' 0080'              	movwf	?i1__tdiv_to_l_
 20614  001A' 2800'              	goto	i1l1398
 20615  001B'                    i1l5798:
 20616  001B' 0804'              	movf	i1__tdiv_to_l_@f2,w
 20617  001C' 0088'              	movwf	??i1__tdiv_to_l_
 20618  001D' 0805'              	movf	i1__tdiv_to_l_@f2+1,w
 20619  001E' 0089'              	movwf	??i1__tdiv_to_l_+1
 20620  001F' 0806'              	movf	i1__tdiv_to_l_@f2+2,w
 20621  0020' 008A'              	movwf	??i1__tdiv_to_l_+2
 20622  0021' 1003               	clrc
 20623  0022' 0D09'              	rlf	??i1__tdiv_to_l_+1,w
 20624  0023' 0D0A'              	rlf	??i1__tdiv_to_l_+2,w
 20625  0024' 008B'              	movwf	??i1__tdiv_to_l_+3
 20626  0025' 080B'              	movf	??i1__tdiv_to_l_+3,w
 20627  0026' 0084'              	movwf	i1__tdiv_to_l_@cntr
 20628  0027' 0804'              	movf	i1__tdiv_to_l_@cntr,w
 20629  0028' 1D03               	btfss	3,2
 20630  0029' 2800'              	goto	u802_21
 20631  002A' 2800'              	goto	u802_20
 20632  002B'                    u802_21:
 20633  002B' 2800'              	goto	i1l1399
 20634  002C'                    u802_20:
 20635  002C' 2800'              	goto	i1l5794
 20636  002D'                    i1l1399:
 20637  002D' 1781'              	bsf	i1__tdiv_to_l_@f1+1,7
 20638  002E'                    i1l5804:
 20639  002E' 30FF               	movlw	255
 20640  002F' 0580'              	andwf	i1__tdiv_to_l_@f1,f
 20641  0030' 30FF               	movlw	255
 20642  0031' 0581'              	andwf	i1__tdiv_to_l_@f1+1,f
 20643  0032' 3000               	movlw	0
 20644  0033' 0582'              	andwf	i1__tdiv_to_l_@f1+2,f
 20645  0034'                    i1l5806:
 20646  0034' 1785'              	bsf	i1__tdiv_to_l_@f2+1,7
 20647  0035' 30FF               	movlw	255
 20648  0036' 0584'              	andwf	i1__tdiv_to_l_@f2,f
 20649  0037' 30FF               	movlw	255
 20650  0038' 0585'              	andwf	i1__tdiv_to_l_@f2+1,f
 20651  0039' 3000               	movlw	0
 20652  003A' 0586'              	andwf	i1__tdiv_to_l_@f2+2,f
 20653  003B' 3000               	movlw	0
 20654  003C' 0083'              	movwf	i1__tdiv_to_l_@quot+3
 20655  003D' 3000               	movlw	0
 20656  003E' 0082'              	movwf	i1__tdiv_to_l_@quot+2
 20657  003F' 3000               	movlw	0
 20658  0040' 0081'              	movwf	i1__tdiv_to_l_@quot+1
 20659  0041' 3000               	movlw	0
 20660  0042' 0080'              	movwf	i1__tdiv_to_l_@quot
 20661  0043'                    i1l5808:
 20662  0043' 307F               	movlw	127
 20663  0044' 0285'              	subwf	i1__tdiv_to_l_@exp1,f
 20664  0045'                    i1l5810:
 20665  0045' 3098               	movlw	152
 20666  0046' 0704'              	addwf	i1__tdiv_to_l_@cntr,w
 20667  0047' 0088'              	movwf	??i1__tdiv_to_l_
 20668  0048' 0808'              	movf	??i1__tdiv_to_l_,w
 20669  0049' 0285'              	subwf	i1__tdiv_to_l_@exp1,f
 20670  004A' 3018               	movlw	24
 20671  004B' 0088'              	movwf	??i1__tdiv_to_l_
 20672  004C' 0808'              	movf	??i1__tdiv_to_l_,w
 20673  004D' 0084'              	movwf	i1__tdiv_to_l_@cntr
 20674  004E'                    i1l5812:
 20675  004E' 3001               	movlw	1
 20676  004F'                    u803_25:
 20677  004F' 3580'              	lslf	i1__tdiv_to_l_@quot,f
 20678  0050' 0D81'              	rlf	i1__tdiv_to_l_@quot+1,f
 20679  0051' 0D82'              	rlf	i1__tdiv_to_l_@quot+2,f
 20680  0052' 0D83'              	rlf	i1__tdiv_to_l_@quot+3,f
 20681  0053' 0B89               	decfsz	9,f
 20682  0054' 2800'              	goto	u803_25
 20683  0055'                    i1l5814:
 20684  0055' 0806'              	movf	i1__tdiv_to_l_@f2+2,w
 20685  0056' 0202'              	subwf	i1__tdiv_to_l_@f1+2,w
 20686  0057' 1D03               	skipz
 20687  0058' 2800'              	goto	u804_25
 20688  0059' 0805'              	movf	i1__tdiv_to_l_@f2+1,w
 20689  005A' 0201'              	subwf	i1__tdiv_to_l_@f1+1,w
 20690  005B' 1D03               	skipz
 20691  005C' 2800'              	goto	u804_25
 20692  005D' 0804'              	movf	i1__tdiv_to_l_@f2,w
 20693  005E' 0200'              	subwf	i1__tdiv_to_l_@f1,w
 20694  005F'                    u804_25:
 20695  005F' 1C03               	skipc
 20696  0060' 2800'              	goto	u804_21
 20697  0061' 2800'              	goto	u804_20
 20698  0062'                    u804_21:
 20699  0062' 2800'              	goto	i1l5820
 20700  0063'                    u804_20:
 20701  0063'                    i1l5816:
 20702  0063' 0804'              	movf	i1__tdiv_to_l_@f2,w
 20703  0064' 0280'              	subwf	i1__tdiv_to_l_@f1,f
 20704  0065' 0805'              	movf	i1__tdiv_to_l_@f2+1,w
 20705  0066' 3B81'              	subwfb	i1__tdiv_to_l_@f1+1,f
 20706  0067' 0806'              	movf	i1__tdiv_to_l_@f2+2,w
 20707  0068' 3B82'              	subwfb	i1__tdiv_to_l_@f1+2,f
 20708  0069'                    i1l5818:
 20709  0069' 1400'              	bsf	i1__tdiv_to_l_@quot,0
 20710  006A'                    i1l5820:
 20711  006A' 3001               	movlw	1
 20712  006B'                    u805_25:
 20713  006B' 3580'              	lslf	i1__tdiv_to_l_@f1,f
 20714  006C' 0D81'              	rlf	i1__tdiv_to_l_@f1+1,f
 20715  006D' 0D82'              	rlf	i1__tdiv_to_l_@f1+2,f
 20716  006E' 0B89               	decfsz	9,f
 20717  006F' 2800'              	goto	u805_25
 20718  0070'                    i1l5822:
 20719  0070' 3001               	movlw	1
 20720  0071' 0284'              	subwf	i1__tdiv_to_l_@cntr,f
 20721  0072' 1D03               	btfss	3,2
 20722  0073' 2800'              	goto	u806_21
 20723  0074' 2800'              	goto	u806_20
 20724  0075'                    u806_21:
 20725  0075' 2800'              	goto	i1l5812
 20726  0076'                    u806_20:
 20727  0076'                    i1l1402:
 20728  0076' 1F85'              	btfss	i1__tdiv_to_l_@exp1,7
 20729  0077' 2800'              	goto	u807_21
 20730  0078' 2800'              	goto	u807_20
 20731  0079'                    u807_21:
 20732  0079' 2800'              	goto	i1l5832
 20733  007A'                    u807_20:
 20734  007A'                    i1l5824:
 20735  007A' 0805'              	movf	i1__tdiv_to_l_@exp1,w
 20736  007B' 3A80               	xorlw	128
 20737  007C' 3E97               	addlw	151
 20738  007D' 1803               	skipnc
 20739  007E' 2800'              	goto	u808_21
 20740  007F' 2800'              	goto	u808_20
 20741  0080'                    u808_21:
 20742  0080' 2800'              	goto	i1l5830
 20743  0081'                    u808_20:
 20744  0081' 2800'              	goto	i1l5794
 20745  0082'                    i1l5830:
 20746  0082' 3001               	movlw	1
 20747  0083'                    u809_25:
 20748  0083' 3683'              	lsrf	i1__tdiv_to_l_@quot+3,f
 20749  0084' 0C82'              	rrf	i1__tdiv_to_l_@quot+2,f
 20750  0085' 0C81'              	rrf	i1__tdiv_to_l_@quot+1,f
 20751  0086' 0C80'              	rrf	i1__tdiv_to_l_@quot,f
 20752  0087' 0B89               	decfsz	9,f
 20753  0088' 2800'              	goto	u809_25
 20754  0089' 3001               	movlw	1
 20755  008A' 0088'              	movwf	??i1__tdiv_to_l_
 20756  008B' 0808'              	movf	??i1__tdiv_to_l_,w
 20757  008C' 0785'              	addwf	i1__tdiv_to_l_@exp1,f
 20758  008D' 1D03               	btfss	3,2
 20759  008E' 2800'              	goto	u810_21
 20760  008F' 2800'              	goto	u810_20
 20761  0090'                    u810_21:
 20762  0090' 2800'              	goto	i1l5830
 20763  0091'                    u810_20:
 20764  0091' 2800'              	goto	i1l5840
 20765  0092'                    i1l5832:
 20766  0092' 3018               	movlw	24
 20767  0093' 0205'              	subwf	i1__tdiv_to_l_@exp1,w
 20768  0094' 1C03               	skipc
 20769  0095' 2800'              	goto	u811_21
 20770  0096' 2800'              	goto	u811_20
 20771  0097'                    u811_21:
 20772  0097' 2800'              	goto	i1l1409
 20773  0098'                    u811_20:
 20774  0098' 2800'              	goto	i1l5794
 20775  0099'                    i1l5838:
 20776  0099' 3001               	movlw	1
 20777  009A'                    u812_25:
 20778  009A' 3580'              	lslf	i1__tdiv_to_l_@quot,f
 20779  009B' 0D81'              	rlf	i1__tdiv_to_l_@quot+1,f
 20780  009C' 0D82'              	rlf	i1__tdiv_to_l_@quot+2,f
 20781  009D' 0D83'              	rlf	i1__tdiv_to_l_@quot+3,f
 20782  009E' 0B89               	decfsz	9,f
 20783  009F' 2800'              	goto	u812_25
 20784  00A0' 3001               	movlw	1
 20785  00A1' 0285'              	subwf	i1__tdiv_to_l_@exp1,f
 20786  00A2'                    i1l1409:
 20787  00A2' 0805'              	movf	i1__tdiv_to_l_@exp1,w
 20788  00A3' 1D03               	btfss	3,2
 20789  00A4' 2800'              	goto	u813_21
 20790  00A5' 2800'              	goto	u813_20
 20791  00A6'                    u813_21:
 20792  00A6' 2800'              	goto	i1l5838
 20793  00A7'                    u813_20:
 20794  00A7'                    i1l5840:
 20795  00A7' 0803'              	movf	i1__tdiv_to_l_@quot+3,w
 20796  00A8' 0083'              	movwf	?i1__tdiv_to_l_+3
 20797  00A9' 0802'              	movf	i1__tdiv_to_l_@quot+2,w
 20798  00AA' 0082'              	movwf	?i1__tdiv_to_l_+2
 20799  00AB' 0801'              	movf	i1__tdiv_to_l_@quot+1,w
 20800  00AC' 0081'              	movwf	?i1__tdiv_to_l_+1
 20801  00AD' 0800'              	movf	i1__tdiv_to_l_@quot,w
 20802  00AE' 0080'              	movwf	?i1__tdiv_to_l_
 20803  00AF'                    i1l1398:
 20804  00AF' 0008               	return
 20805  00B0'                    __end_ofi1__tdiv_to_l_:
 20806                           
 20807                           	psect	text54
 20808  0000'                    __ptext54:	
 20809 ;; *************** function i1__div_to_l_ *****************
 20810 ;; Defined at:
 20811 ;;		line 60 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/fldivl.c"
 20812 ;; Parameters:    Size  Location     Type
 20813 ;;  f1              4    0[COMMON] unsigned long 
 20814 ;;  f2              4    4[COMMON] unsigned long 
 20815 ;; Auto vars:     Size  Location     Type
 20816 ;;  quot            4    0[BANK0 ] unsigned long 
 20817 ;;  exp1            1    5[BANK0 ] unsigned char 
 20818 ;;  cntr            1    4[BANK0 ] unsigned char 
 20819 ;; Return value:  Size  Location     Type
 20820 ;;                  4    0[COMMON] unsigned long 
 20821 ;; Registers used:
 20822 ;;		wreg, status,2, status,0
 20823 ;; Tracked objects:
 20824 ;;		On entry : 0/0
 20825 ;;		On exit  : 0/0
 20826 ;;		Unchanged: 0/0
 20827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20828 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20829 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20830 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20831 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20832 ;;Total ram usage:       15 bytes
 20833 ;; Hardware stack levels used:    1
 20834 ;; This function calls:
 20835 ;;		Nothing
 20836 ;; This function is called by:
 20837 ;;		i1_sprintf
 20838 ;; This function uses a non-reentrant model
 20839 ;;
 20840                           
 20841                           
 20842                           ;psect for function i1__div_to_l_
 20843  0000'                    i1__div_to_l_:
 20844  0000'                    i1l5664:	
 20845                           ;incstack = 0
 20846                           ; Regs used in i1__div_to_l_: [wreg+status,2+status,0]
 20847                           
 20848  0000' 1003               	clrc
 20849  0001' 0D02'              	rlf	i1__div_to_l_@f1+2,w
 20850  0002' 0D03'              	rlf	i1__div_to_l_@f1+3,w
 20851  0003' 0088'              	movwf	??i1__div_to_l_
 20852  0004' 0808'              	movf	??i1__div_to_l_,w
 20853  0005' 0020               	movlb	0	; select bank0
 20854  0006' 0085'              	movwf	i1__div_to_l_@exp1
 20855  0007' 0805'              	movf	i1__div_to_l_@exp1,w
 20856  0008' 1D03               	btfss	3,2
 20857  0009' 2800'              	goto	u769_21
 20858  000A' 2800'              	goto	u769_20
 20859  000B'                    u769_21:
 20860  000B' 2800'              	goto	i1l5670
 20861  000C'                    u769_20:
 20862  000C'                    i1l5666:
 20863  000C' 3000               	movlw	0
 20864  000D' 0083'              	movwf	?i1__div_to_l_+3
 20865  000E' 3000               	movlw	0
 20866  000F' 0082'              	movwf	?i1__div_to_l_+2
 20867  0010' 3000               	movlw	0
 20868  0011' 0081'              	movwf	?i1__div_to_l_+1
 20869  0012' 3000               	movlw	0
 20870  0013' 0080'              	movwf	?i1__div_to_l_
 20871  0014' 2800'              	goto	i1l1351
 20872  0015'                    i1l5670:
 20873  0015' 1003               	clrc
 20874  0016' 0D06'              	rlf	i1__div_to_l_@f2+2,w
 20875  0017' 0D07'              	rlf	i1__div_to_l_@f2+3,w
 20876  0018' 0088'              	movwf	??i1__div_to_l_
 20877  0019' 0808'              	movf	??i1__div_to_l_,w
 20878  001A' 0084'              	movwf	i1__div_to_l_@cntr
 20879  001B' 0804'              	movf	i1__div_to_l_@cntr,w
 20880  001C' 1D03               	btfss	3,2
 20881  001D' 2800'              	goto	u770_21
 20882  001E' 2800'              	goto	u770_20
 20883  001F'                    u770_21:
 20884  001F' 2800'              	goto	i1l1352
 20885  0020'                    u770_20:
 20886  0020' 2800'              	goto	i1l5666
 20887  0021'                    i1l1352:
 20888  0021' 1782'              	bsf	i1__div_to_l_@f1+2,7
 20889  0022'                    i1l5676:
 20890  0022' 30FF               	movlw	255
 20891  0023' 0580'              	andwf	i1__div_to_l_@f1,f
 20892  0024' 30FF               	movlw	255
 20893  0025' 0581'              	andwf	i1__div_to_l_@f1+1,f
 20894  0026' 30FF               	movlw	255
 20895  0027' 0582'              	andwf	i1__div_to_l_@f1+2,f
 20896  0028' 3000               	movlw	0
 20897  0029' 0583'              	andwf	i1__div_to_l_@f1+3,f
 20898  002A'                    i1l5678:
 20899  002A' 1786'              	bsf	i1__div_to_l_@f2+2,7
 20900  002B' 30FF               	movlw	255
 20901  002C' 0584'              	andwf	i1__div_to_l_@f2,f
 20902  002D' 30FF               	movlw	255
 20903  002E' 0585'              	andwf	i1__div_to_l_@f2+1,f
 20904  002F' 30FF               	movlw	255
 20905  0030' 0586'              	andwf	i1__div_to_l_@f2+2,f
 20906  0031' 3000               	movlw	0
 20907  0032' 0587'              	andwf	i1__div_to_l_@f2+3,f
 20908  0033' 3000               	movlw	0
 20909  0034' 0083'              	movwf	i1__div_to_l_@quot+3
 20910  0035' 3000               	movlw	0
 20911  0036' 0082'              	movwf	i1__div_to_l_@quot+2
 20912  0037' 3000               	movlw	0
 20913  0038' 0081'              	movwf	i1__div_to_l_@quot+1
 20914  0039' 3000               	movlw	0
 20915  003A' 0080'              	movwf	i1__div_to_l_@quot
 20916  003B'                    i1l5680:
 20917  003B' 307F               	movlw	127
 20918  003C' 0285'              	subwf	i1__div_to_l_@exp1,f
 20919  003D'                    i1l5682:
 20920  003D' 30A0               	movlw	160
 20921  003E' 0704'              	addwf	i1__div_to_l_@cntr,w
 20922  003F' 0088'              	movwf	??i1__div_to_l_
 20923  0040' 0808'              	movf	??i1__div_to_l_,w
 20924  0041' 0285'              	subwf	i1__div_to_l_@exp1,f
 20925  0042' 3020               	movlw	32
 20926  0043' 0088'              	movwf	??i1__div_to_l_
 20927  0044' 0808'              	movf	??i1__div_to_l_,w
 20928  0045' 0084'              	movwf	i1__div_to_l_@cntr
 20929  0046'                    i1l5684:
 20930  0046' 3001               	movlw	1
 20931  0047'                    u771_25:
 20932  0047' 3580'              	lslf	i1__div_to_l_@quot,f
 20933  0048' 0D81'              	rlf	i1__div_to_l_@quot+1,f
 20934  0049' 0D82'              	rlf	i1__div_to_l_@quot+2,f
 20935  004A' 0D83'              	rlf	i1__div_to_l_@quot+3,f
 20936  004B' 0B89               	decfsz	9,f
 20937  004C' 2800'              	goto	u771_25
 20938  004D'                    i1l5686:
 20939  004D' 0807'              	movf	i1__div_to_l_@f2+3,w
 20940  004E' 0203'              	subwf	i1__div_to_l_@f1+3,w
 20941  004F' 1D03               	skipz
 20942  0050' 2800'              	goto	u772_25
 20943  0051' 0806'              	movf	i1__div_to_l_@f2+2,w
 20944  0052' 0202'              	subwf	i1__div_to_l_@f1+2,w
 20945  0053' 1D03               	skipz
 20946  0054' 2800'              	goto	u772_25
 20947  0055' 0805'              	movf	i1__div_to_l_@f2+1,w
 20948  0056' 0201'              	subwf	i1__div_to_l_@f1+1,w
 20949  0057' 1D03               	skipz
 20950  0058' 2800'              	goto	u772_25
 20951  0059' 0804'              	movf	i1__div_to_l_@f2,w
 20952  005A' 0200'              	subwf	i1__div_to_l_@f1,w
 20953  005B'                    u772_25:
 20954  005B' 1C03               	skipc
 20955  005C' 2800'              	goto	u772_21
 20956  005D' 2800'              	goto	u772_20
 20957  005E'                    u772_21:
 20958  005E' 2800'              	goto	i1l5692
 20959  005F'                    u772_20:
 20960  005F'                    i1l5688:
 20961  005F' 0804'              	movf	i1__div_to_l_@f2,w
 20962  0060' 0280'              	subwf	i1__div_to_l_@f1,f
 20963  0061' 0805'              	movf	i1__div_to_l_@f2+1,w
 20964  0062' 3B81'              	subwfb	i1__div_to_l_@f1+1,f
 20965  0063' 0806'              	movf	i1__div_to_l_@f2+2,w
 20966  0064' 3B82'              	subwfb	i1__div_to_l_@f1+2,f
 20967  0065' 0807'              	movf	i1__div_to_l_@f2+3,w
 20968  0066' 3B83'              	subwfb	i1__div_to_l_@f1+3,f
 20969  0067'                    i1l5690:
 20970  0067' 1400'              	bsf	i1__div_to_l_@quot,0
 20971  0068'                    i1l5692:
 20972  0068' 3001               	movlw	1
 20973  0069'                    u773_25:
 20974  0069' 3580'              	lslf	i1__div_to_l_@f1,f
 20975  006A' 0D81'              	rlf	i1__div_to_l_@f1+1,f
 20976  006B' 0D82'              	rlf	i1__div_to_l_@f1+2,f
 20977  006C' 0D83'              	rlf	i1__div_to_l_@f1+3,f
 20978  006D' 0B89               	decfsz	9,f
 20979  006E' 2800'              	goto	u773_25
 20980  006F'                    i1l5694:
 20981  006F' 3001               	movlw	1
 20982  0070' 0284'              	subwf	i1__div_to_l_@cntr,f
 20983  0071' 1D03               	btfss	3,2
 20984  0072' 2800'              	goto	u774_21
 20985  0073' 2800'              	goto	u774_20
 20986  0074'                    u774_21:
 20987  0074' 2800'              	goto	i1l5684
 20988  0075'                    u774_20:
 20989  0075'                    i1l1355:
 20990  0075' 1F85'              	btfss	i1__div_to_l_@exp1,7
 20991  0076' 2800'              	goto	u775_21
 20992  0077' 2800'              	goto	u775_20
 20993  0078'                    u775_21:
 20994  0078' 2800'              	goto	i1l5704
 20995  0079'                    u775_20:
 20996  0079'                    i1l5696:
 20997  0079' 0805'              	movf	i1__div_to_l_@exp1,w
 20998  007A' 3A80               	xorlw	128
 20999  007B' 3E9F               	addlw	159
 21000  007C' 1803               	skipnc
 21001  007D' 2800'              	goto	u776_21
 21002  007E' 2800'              	goto	u776_20
 21003  007F'                    u776_21:
 21004  007F' 2800'              	goto	i1l5702
 21005  0080'                    u776_20:
 21006  0080' 2800'              	goto	i1l5666
 21007  0081'                    i1l5702:
 21008  0081' 3001               	movlw	1
 21009  0082'                    u777_25:
 21010  0082' 3683'              	lsrf	i1__div_to_l_@quot+3,f
 21011  0083' 0C82'              	rrf	i1__div_to_l_@quot+2,f
 21012  0084' 0C81'              	rrf	i1__div_to_l_@quot+1,f
 21013  0085' 0C80'              	rrf	i1__div_to_l_@quot,f
 21014  0086' 0B89               	decfsz	9,f
 21015  0087' 2800'              	goto	u777_25
 21016  0088' 3001               	movlw	1
 21017  0089' 0088'              	movwf	??i1__div_to_l_
 21018  008A' 0808'              	movf	??i1__div_to_l_,w
 21019  008B' 0785'              	addwf	i1__div_to_l_@exp1,f
 21020  008C' 1D03               	btfss	3,2
 21021  008D' 2800'              	goto	u778_21
 21022  008E' 2800'              	goto	u778_20
 21023  008F'                    u778_21:
 21024  008F' 2800'              	goto	i1l5702
 21025  0090'                    u778_20:
 21026  0090' 2800'              	goto	i1l5712
 21027  0091'                    i1l5704:
 21028  0091' 3020               	movlw	32
 21029  0092' 0205'              	subwf	i1__div_to_l_@exp1,w
 21030  0093' 1C03               	skipc
 21031  0094' 2800'              	goto	u779_21
 21032  0095' 2800'              	goto	u779_20
 21033  0096'                    u779_21:
 21034  0096' 2800'              	goto	i1l1362
 21035  0097'                    u779_20:
 21036  0097' 2800'              	goto	i1l5666
 21037  0098'                    i1l5710:
 21038  0098' 3001               	movlw	1
 21039  0099'                    u780_25:
 21040  0099' 3580'              	lslf	i1__div_to_l_@quot,f
 21041  009A' 0D81'              	rlf	i1__div_to_l_@quot+1,f
 21042  009B' 0D82'              	rlf	i1__div_to_l_@quot+2,f
 21043  009C' 0D83'              	rlf	i1__div_to_l_@quot+3,f
 21044  009D' 0B89               	decfsz	9,f
 21045  009E' 2800'              	goto	u780_25
 21046  009F' 3001               	movlw	1
 21047  00A0' 0285'              	subwf	i1__div_to_l_@exp1,f
 21048  00A1'                    i1l1362:
 21049  00A1' 0805'              	movf	i1__div_to_l_@exp1,w
 21050  00A2' 1D03               	btfss	3,2
 21051  00A3' 2800'              	goto	u781_21
 21052  00A4' 2800'              	goto	u781_20
 21053  00A5'                    u781_21:
 21054  00A5' 2800'              	goto	i1l5710
 21055  00A6'                    u781_20:
 21056  00A6'                    i1l5712:
 21057  00A6' 0803'              	movf	i1__div_to_l_@quot+3,w
 21058  00A7' 0083'              	movwf	?i1__div_to_l_+3
 21059  00A8' 0802'              	movf	i1__div_to_l_@quot+2,w
 21060  00A9' 0082'              	movwf	?i1__div_to_l_+2
 21061  00AA' 0801'              	movf	i1__div_to_l_@quot+1,w
 21062  00AB' 0081'              	movwf	?i1__div_to_l_+1
 21063  00AC' 0800'              	movf	i1__div_to_l_@quot,w
 21064  00AD' 0080'              	movwf	?i1__div_to_l_
 21065  00AE'                    i1l1351:
 21066  00AE' 0008               	return
 21067  00AF'                    __end_ofi1__div_to_l_:
 21068                           
 21069                           	psect	text55
 21070  0000'                    __ptext55:	
 21071 ;; *************** function i1___xxtofl *****************
 21072 ;; Defined at:
 21073 ;;		line 10 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/xxtofl.c"
 21074 ;; Parameters:    Size  Location     Type
 21075 ;;  sign            1    wreg     unsigned char 
 21076 ;;  val             4    0[COMMON] long 
 21077 ;; Auto vars:     Size  Location     Type
 21078 ;;  sign            1    8[COMMON] unsigned char 
 21079 ;;  arg             4   10[COMMON] unsigned long 
 21080 ;;  exp             1    9[COMMON] unsigned char 
 21081 ;; Return value:  Size  Location     Type
 21082 ;;                  4    0[COMMON] unsigned char 
 21083 ;; Registers used:
 21084 ;;		wreg, status,2, status,0
 21085 ;; Tracked objects:
 21086 ;;		On entry : 0/0
 21087 ;;		On exit  : 0/0
 21088 ;;		Unchanged: 0/0
 21089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21090 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21091 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21092 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21093 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21094 ;;Total ram usage:       14 bytes
 21095 ;; Hardware stack levels used:    1
 21096 ;; This function calls:
 21097 ;;		Nothing
 21098 ;; This function is called by:
 21099 ;;		i1_sprintf
 21100 ;; This function uses a non-reentrant model
 21101 ;;
 21102                           
 21103                           
 21104                           ;psect for function i1___xxtofl
 21105  0000'                    i1___xxtofl:
 21106                           
 21107                           ;incstack = 0
 21108                           ; Regs used in i1___xxtofl: [wreg+status,2+status,0]
 21109                           ;i1___xxtofl@sign stored from wreg
 21110  0000' 0088'              	movwf	i1___xxtofl@sign
 21111  0001'                    i1l5870:
 21112  0001' 0808'              	movf	i1___xxtofl@sign,w
 21113  0002' 1903               	btfsc	3,2
 21114  0003' 2800'              	goto	u820_21
 21115  0004' 2800'              	goto	u820_20
 21116  0005'                    u820_21:
 21117  0005' 2800'              	goto	i1l5876
 21118  0006'                    u820_20:
 21119  0006'                    i1l5872:
 21120  0006' 1F83'              	btfss	i1___xxtofl@val+3,7
 21121  0007' 2800'              	goto	u821_21
 21122  0008' 2800'              	goto	u821_20
 21123  0009'                    u821_21:
 21124  0009' 2800'              	goto	i1l5876
 21125  000A'                    u821_20:
 21126  000A'                    i1l5874:
 21127  000A' 0900'              	comf	i1___xxtofl@val,w
 21128  000B' 008A'              	movwf	i1___xxtofl@arg
 21129  000C' 0901'              	comf	i1___xxtofl@val+1,w
 21130  000D' 008B'              	movwf	i1___xxtofl@arg+1
 21131  000E' 0902'              	comf	i1___xxtofl@val+2,w
 21132  000F' 008C'              	movwf	i1___xxtofl@arg+2
 21133  0010' 0903'              	comf	i1___xxtofl@val+3,w
 21134  0011' 008D'              	movwf	i1___xxtofl@arg+3
 21135  0012' 0A8A'              	incf	i1___xxtofl@arg,f
 21136  0013' 1903               	skipnz
 21137  0014' 0A8B'              	incf	i1___xxtofl@arg+1,f
 21138  0015' 1903               	skipnz
 21139  0016' 0A8C'              	incf	i1___xxtofl@arg+2,f
 21140  0017' 1903               	skipnz
 21141  0018' 0A8D'              	incf	i1___xxtofl@arg+3,f
 21142  0019' 2800'              	goto	i1l1648
 21143  001A'                    i1l5876:
 21144  001A' 0803'              	movf	i1___xxtofl@val+3,w
 21145  001B' 008D'              	movwf	i1___xxtofl@arg+3
 21146  001C' 0802'              	movf	i1___xxtofl@val+2,w
 21147  001D' 008C'              	movwf	i1___xxtofl@arg+2
 21148  001E' 0801'              	movf	i1___xxtofl@val+1,w
 21149  001F' 008B'              	movwf	i1___xxtofl@arg+1
 21150  0020' 0800'              	movf	i1___xxtofl@val,w
 21151  0021' 008A'              	movwf	i1___xxtofl@arg
 21152  0022'                    i1l1648:
 21153  0022' 0803'              	movf	i1___xxtofl@val+3,w
 21154  0023' 0402'              	iorwf	i1___xxtofl@val+2,w
 21155  0024' 0401'              	iorwf	i1___xxtofl@val+1,w
 21156  0025' 0400'              	iorwf	i1___xxtofl@val,w
 21157  0026' 1D03               	skipz
 21158  0027' 2800'              	goto	u822_21
 21159  0028' 2800'              	goto	u822_20
 21160  0029'                    u822_21:
 21161  0029' 2800'              	goto	i1l5882
 21162  002A'                    u822_20:
 21163  002A'                    i1l5878:
 21164  002A' 3000               	movlw	0
 21165  002B' 0083'              	movwf	?i1___xxtofl+3
 21166  002C' 3000               	movlw	0
 21167  002D' 0082'              	movwf	?i1___xxtofl+2
 21168  002E' 3000               	movlw	0
 21169  002F' 0081'              	movwf	?i1___xxtofl+1
 21170  0030' 3000               	movlw	0
 21171  0031' 0080'              	movwf	?i1___xxtofl
 21172  0032' 2800'              	goto	i1l1650
 21173  0033'                    i1l5882:
 21174  0033' 3096               	movlw	150
 21175  0034' 0084'              	movwf	??i1___xxtofl
 21176  0035' 0804'              	movf	??i1___xxtofl,w
 21177  0036' 0089'              	movwf	i1___xxtofl@exp
 21178  0037' 2800'              	goto	i1l5886
 21179  0038'                    i1l5884:
 21180  0038' 3001               	movlw	1
 21181  0039' 0084'              	movwf	??i1___xxtofl
 21182  003A' 0804'              	movf	??i1___xxtofl,w
 21183  003B' 0789'              	addwf	i1___xxtofl@exp,f
 21184  003C' 3001               	movlw	1
 21185  003D'                    u823_25:
 21186  003D' 368D'              	lsrf	i1___xxtofl@arg+3,f
 21187  003E' 0C8C'              	rrf	i1___xxtofl@arg+2,f
 21188  003F' 0C8B'              	rrf	i1___xxtofl@arg+1,f
 21189  0040' 0C8A'              	rrf	i1___xxtofl@arg,f
 21190  0041' 0B89               	decfsz	9,f
 21191  0042' 2800'              	goto	u823_25
 21192  0043'                    i1l5886:
 21193  0043' 30FE               	movlw	254
 21194  0044' 050D'              	andwf	i1___xxtofl@arg+3,w
 21195  0045' 1D03               	btfss	3,2
 21196  0046' 2800'              	goto	u824_21
 21197  0047' 2800'              	goto	u824_20
 21198  0048'                    u824_21:
 21199  0048' 2800'              	goto	i1l5884
 21200  0049'                    u824_20:
 21201  0049' 2800'              	goto	i1l1654
 21202  004A'                    i1l5888:
 21203  004A' 3001               	movlw	1
 21204  004B' 0084'              	movwf	??i1___xxtofl
 21205  004C' 0804'              	movf	??i1___xxtofl,w
 21206  004D' 0789'              	addwf	i1___xxtofl@exp,f
 21207  004E'                    i1l5890:
 21208  004E' 3001               	movlw	1
 21209  004F' 078A'              	addwf	i1___xxtofl@arg,f
 21210  0050' 3000               	movlw	0
 21211  0051' 3D8B'              	addwfc	i1___xxtofl@arg+1,f
 21212  0052' 3000               	movlw	0
 21213  0053' 3D8C'              	addwfc	i1___xxtofl@arg+2,f
 21214  0054' 3000               	movlw	0
 21215  0055' 3D8D'              	addwfc	i1___xxtofl@arg+3,f
 21216  0056'                    i1l5892:
 21217  0056' 3001               	movlw	1
 21218  0057'                    u825_25:
 21219  0057' 368D'              	lsrf	i1___xxtofl@arg+3,f
 21220  0058' 0C8C'              	rrf	i1___xxtofl@arg+2,f
 21221  0059' 0C8B'              	rrf	i1___xxtofl@arg+1,f
 21222  005A' 0C8A'              	rrf	i1___xxtofl@arg,f
 21223  005B' 0B89               	decfsz	9,f
 21224  005C' 2800'              	goto	u825_25
 21225  005D'                    i1l1654:
 21226  005D' 30FF               	movlw	255
 21227  005E' 050D'              	andwf	i1___xxtofl@arg+3,w
 21228  005F' 1D03               	btfss	3,2
 21229  0060' 2800'              	goto	u826_21
 21230  0061' 2800'              	goto	u826_20
 21231  0062'                    u826_21:
 21232  0062' 2800'              	goto	i1l5888
 21233  0063'                    u826_20:
 21234  0063' 2800'              	goto	i1l5896
 21235  0064'                    i1l5894:
 21236  0064' 3001               	movlw	1
 21237  0065' 0289'              	subwf	i1___xxtofl@exp,f
 21238  0066' 3001               	movlw	1
 21239  0067'                    u827_25:
 21240  0067' 358A'              	lslf	i1___xxtofl@arg,f
 21241  0068' 0D8B'              	rlf	i1___xxtofl@arg+1,f
 21242  0069' 0D8C'              	rlf	i1___xxtofl@arg+2,f
 21243  006A' 0D8D'              	rlf	i1___xxtofl@arg+3,f
 21244  006B' 0B89               	decfsz	9,f
 21245  006C' 2800'              	goto	u827_25
 21246  006D'                    i1l5896:
 21247  006D' 1B8C'              	btfsc	i1___xxtofl@arg+2,7
 21248  006E' 2800'              	goto	u828_21
 21249  006F' 2800'              	goto	u828_20
 21250  0070'                    u828_21:
 21251  0070' 2800'              	goto	i1l1661
 21252  0071'                    u828_20:
 21253  0071'                    i1l5898:
 21254  0071' 3002               	movlw	2
 21255  0072' 0209'              	subwf	i1___xxtofl@exp,w
 21256  0073' 1803               	skipnc
 21257  0074' 2800'              	goto	u829_21
 21258  0075' 2800'              	goto	u829_20
 21259  0076'                    u829_21:
 21260  0076' 2800'              	goto	i1l5894
 21261  0077'                    u829_20:
 21262  0077'                    i1l1661:
 21263  0077' 1809'              	btfsc	i1___xxtofl@exp,0
 21264  0078' 2800'              	goto	u830_21
 21265  0079' 2800'              	goto	u830_20
 21266  007A'                    u830_21:
 21267  007A' 2800'              	goto	i1l1662
 21268  007B'                    u830_20:
 21269  007B'                    i1l5900:
 21270  007B' 30FF               	movlw	255
 21271  007C' 058A'              	andwf	i1___xxtofl@arg,f
 21272  007D' 30FF               	movlw	255
 21273  007E' 058B'              	andwf	i1___xxtofl@arg+1,f
 21274  007F' 307F               	movlw	127
 21275  0080' 058C'              	andwf	i1___xxtofl@arg+2,f
 21276  0081' 30FF               	movlw	255
 21277  0082' 058D'              	andwf	i1___xxtofl@arg+3,f
 21278  0083'                    i1l1662:
 21279  0083' 1003               	clrc
 21280  0084' 0C89'              	rrf	i1___xxtofl@exp,f
 21281  0085'                    i1l5902:
 21282  0085' 0809'              	movf	i1___xxtofl@exp,w
 21283  0086' 0084'              	movwf	??i1___xxtofl
 21284  0087' 0185'              	clrf	??i1___xxtofl+1
 21285  0088' 0186'              	clrf	??i1___xxtofl+2
 21286  0089' 0187'              	clrf	??i1___xxtofl+3
 21287  008A' 3018               	movlw	24
 21288  008B'                    u831_25:
 21289  008B' 3584'              	lslf	??i1___xxtofl,f
 21290  008C' 0D85'              	rlf	??i1___xxtofl+1,f
 21291  008D' 0D86'              	rlf	??i1___xxtofl+2,f
 21292  008E' 0D87'              	rlf	??i1___xxtofl+3,f
 21293  008F'                    u831_20:
 21294  008F' 0B89               	decfsz	9,f
 21295  0090' 2800'              	goto	u831_25
 21296  0091' 0804'              	movf	??i1___xxtofl,w
 21297  0092' 048A'              	iorwf	i1___xxtofl@arg,f
 21298  0093' 0805'              	movf	??i1___xxtofl+1,w
 21299  0094' 048B'              	iorwf	i1___xxtofl@arg+1,f
 21300  0095' 0806'              	movf	??i1___xxtofl+2,w
 21301  0096' 048C'              	iorwf	i1___xxtofl@arg+2,f
 21302  0097' 0807'              	movf	??i1___xxtofl+3,w
 21303  0098' 048D'              	iorwf	i1___xxtofl@arg+3,f
 21304  0099'                    i1l5904:
 21305  0099' 0808'              	movf	i1___xxtofl@sign,w
 21306  009A' 1903               	btfsc	3,2
 21307  009B' 2800'              	goto	u832_21
 21308  009C' 2800'              	goto	u832_20
 21309  009D'                    u832_21:
 21310  009D' 2800'              	goto	i1l5910
 21311  009E'                    u832_20:
 21312  009E'                    i1l5906:
 21313  009E' 1F83'              	btfss	i1___xxtofl@val+3,7
 21314  009F' 2800'              	goto	u833_21
 21315  00A0' 2800'              	goto	u833_20
 21316  00A1'                    u833_21:
 21317  00A1' 2800'              	goto	i1l5910
 21318  00A2'                    u833_20:
 21319  00A2'                    i1l5908:
 21320  00A2' 178D'              	bsf	i1___xxtofl@arg+3,7
 21321  00A3'                    i1l5910:
 21322  00A3' 080D'              	movf	i1___xxtofl@arg+3,w
 21323  00A4' 0083'              	movwf	?i1___xxtofl+3
 21324  00A5' 080C'              	movf	i1___xxtofl@arg+2,w
 21325  00A6' 0082'              	movwf	?i1___xxtofl+2
 21326  00A7' 080B'              	movf	i1___xxtofl@arg+1,w
 21327  00A8' 0081'              	movwf	?i1___xxtofl+1
 21328  00A9' 080A'              	movf	i1___xxtofl@arg,w
 21329  00AA' 0080'              	movwf	?i1___xxtofl
 21330  00AB'                    i1l1650:
 21331  00AB' 0008               	return
 21332  00AC'                    __end_ofi1___xxtofl:
 21333                           
 21334                           	psect	text56
 21335  0000'                    __ptext56:	
 21336 ;; *************** function i1___wmul *****************
 21337 ;; Defined at:
 21338 ;;		line 15 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/Umul16.c"
 21339 ;; Parameters:    Size  Location     Type
 21340 ;;  multiplier      2    0[COMMON] unsigned int 
 21341 ;;  multiplicand    2    2[COMMON] unsigned int 
 21342 ;; Auto vars:     Size  Location     Type
 21343 ;;  product         2    4[COMMON] unsigned int 
 21344 ;; Return value:  Size  Location     Type
 21345 ;;                  2    0[COMMON] unsigned int 
 21346 ;; Registers used:
 21347 ;;		wreg, status,2, status,0
 21348 ;; Tracked objects:
 21349 ;;		On entry : 0/0
 21350 ;;		On exit  : 0/0
 21351 ;;		Unchanged: 0/0
 21352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21353 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21354 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21356 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21357 ;;Total ram usage:        6 bytes
 21358 ;; Hardware stack levels used:    1
 21359 ;; This function calls:
 21360 ;;		Nothing
 21361 ;; This function is called by:
 21362 ;;		i1_sprintf
 21363 ;; This function uses a non-reentrant model
 21364 ;;
 21365                           
 21366                           
 21367                           ;psect for function i1___wmul
 21368  0000'                    i1___wmul:
 21369  0000'                    i1l5626:	
 21370                           ;incstack = 0
 21371                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 21372                           
 21373  0000' 0184'              	clrf	i1___wmul@product
 21374  0001' 0185'              	clrf	i1___wmul@product+1
 21375  0002'                    i1l5628:
 21376  0002' 1C00'              	btfss	i1___wmul@multiplier,0
 21377  0003' 2800'              	goto	u758_21
 21378  0004' 2800'              	goto	u758_20
 21379  0005'                    u758_21:
 21380  0005' 2800'              	goto	i1l1181
 21381  0006'                    u758_20:
 21382  0006'                    i1l5630:
 21383  0006' 0802'              	movf	i1___wmul@multiplicand,w
 21384  0007' 0784'              	addwf	i1___wmul@product,f
 21385  0008' 0803'              	movf	i1___wmul@multiplicand+1,w
 21386  0009' 3D85'              	addwfc	i1___wmul@product+1,f
 21387  000A'                    i1l1181:
 21388  000A' 3001               	movlw	1
 21389  000B'                    u759_25:
 21390  000B' 3582'              	lslf	i1___wmul@multiplicand,f
 21391  000C' 0D83'              	rlf	i1___wmul@multiplicand+1,f
 21392  000D' 0B89               	decfsz	9,f
 21393  000E' 2800'              	goto	u759_25
 21394  000F'                    i1l5632:
 21395  000F' 3001               	movlw	1
 21396  0010'                    u760_25:
 21397  0010' 3681'              	lsrf	i1___wmul@multiplier+1,f
 21398  0011' 0C80'              	rrf	i1___wmul@multiplier,f
 21399  0012' 0B89               	decfsz	9,f
 21400  0013' 2800'              	goto	u760_25
 21401  0014'                    i1l5634:
 21402  0014' 0800'              	movf	i1___wmul@multiplier,w
 21403  0015' 0401'              	iorwf	i1___wmul@multiplier+1,w
 21404  0016' 1D03               	btfss	3,2
 21405  0017' 2800'              	goto	u761_21
 21406  0018' 2800'              	goto	u761_20
 21407  0019'                    u761_21:
 21408  0019' 2800'              	goto	i1l5628
 21409  001A'                    u761_20:
 21410  001A'                    i1l5636:
 21411  001A' 0805'              	movf	i1___wmul@product+1,w
 21412  001B' 0081'              	movwf	?i1___wmul+1
 21413  001C' 0804'              	movf	i1___wmul@product,w
 21414  001D' 0080'              	movwf	?i1___wmul
 21415  001E'                    i1l1183:
 21416  001E' 0008               	return
 21417  001F'                    __end_ofi1___wmul:
 21418                           
 21419                           	psect	text57
 21420  0000'                    __ptext57:	
 21421 ;; *************** function i1___llmod *****************
 21422 ;; Defined at:
 21423 ;;		line 5 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/llmod.c"
 21424 ;; Parameters:    Size  Location     Type
 21425 ;;  divisor         4    0[BANK0 ] unsigned long 
 21426 ;;  dividend        4    4[BANK0 ] unsigned long 
 21427 ;; Auto vars:     Size  Location     Type
 21428 ;;  counter         1    9[BANK0 ] unsigned char 
 21429 ;; Return value:  Size  Location     Type
 21430 ;;                  4    0[BANK0 ] unsigned long 
 21431 ;; Registers used:
 21432 ;;		wreg, status,2, status,0
 21433 ;; Tracked objects:
 21434 ;;		On entry : 0/0
 21435 ;;		On exit  : 0/0
 21436 ;;		Unchanged: 0/0
 21437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21438 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21439 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21440 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21441 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21442 ;;Total ram usage:       10 bytes
 21443 ;; Hardware stack levels used:    1
 21444 ;; This function calls:
 21445 ;;		Nothing
 21446 ;; This function is called by:
 21447 ;;		i1_sprintf
 21448 ;; This function uses a non-reentrant model
 21449 ;;
 21450                           
 21451                           
 21452                           ;psect for function i1___llmod
 21453  0000'                    i1___llmod:
 21454  0000'                    i1l5844:	
 21455                           ;incstack = 0
 21456                           ; Regs used in i1___llmod: [wreg+status,2+status,0]
 21457                           
 21458  0000' 0020               	movlb	0	; select bank0
 21459  0001' 0803'              	movf	i1___llmod@divisor+3,w
 21460  0002' 0402'              	iorwf	i1___llmod@divisor+2,w
 21461  0003' 0401'              	iorwf	i1___llmod@divisor+1,w
 21462  0004' 0400'              	iorwf	i1___llmod@divisor,w
 21463  0005' 1903               	skipnz
 21464  0006' 2800'              	goto	u814_21
 21465  0007' 2800'              	goto	u814_20
 21466  0008'                    u814_21:
 21467  0008' 2800'              	goto	i1l5860
 21468  0009'                    u814_20:
 21469  0009'                    i1l5846:
 21470  0009' 0189'              	clrf	i1___llmod@counter
 21471  000A' 0A89'              	incf	i1___llmod@counter,f
 21472  000B' 2800'              	goto	i1l5850
 21473  000C'                    i1l5848:
 21474  000C' 3001               	movlw	1
 21475  000D'                    u815_25:
 21476  000D' 3580'              	lslf	i1___llmod@divisor,f
 21477  000E' 0D81'              	rlf	i1___llmod@divisor+1,f
 21478  000F' 0D82'              	rlf	i1___llmod@divisor+2,f
 21479  0010' 0D83'              	rlf	i1___llmod@divisor+3,f
 21480  0011' 0B89               	decfsz	9,f
 21481  0012' 2800'              	goto	u815_25
 21482  0013' 3001               	movlw	1
 21483  0014' 0088'              	movwf	??i1___llmod
 21484  0015' 0808'              	movf	??i1___llmod,w
 21485  0016' 0789'              	addwf	i1___llmod@counter,f
 21486  0017'                    i1l5850:
 21487  0017' 1F83'              	btfss	i1___llmod@divisor+3,7
 21488  0018' 2800'              	goto	u816_21
 21489  0019' 2800'              	goto	u816_20
 21490  001A'                    u816_21:
 21491  001A' 2800'              	goto	i1l5848
 21492  001B'                    u816_20:
 21493  001B'                    i1l5852:
 21494  001B' 0803'              	movf	i1___llmod@divisor+3,w
 21495  001C' 0207'              	subwf	i1___llmod@dividend+3,w
 21496  001D' 1D03               	skipz
 21497  001E' 2800'              	goto	u817_25
 21498  001F' 0802'              	movf	i1___llmod@divisor+2,w
 21499  0020' 0206'              	subwf	i1___llmod@dividend+2,w
 21500  0021' 1D03               	skipz
 21501  0022' 2800'              	goto	u817_25
 21502  0023' 0801'              	movf	i1___llmod@divisor+1,w
 21503  0024' 0205'              	subwf	i1___llmod@dividend+1,w
 21504  0025' 1D03               	skipz
 21505  0026' 2800'              	goto	u817_25
 21506  0027' 0800'              	movf	i1___llmod@divisor,w
 21507  0028' 0204'              	subwf	i1___llmod@dividend,w
 21508  0029'                    u817_25:
 21509  0029' 1C03               	skipc
 21510  002A' 2800'              	goto	u817_21
 21511  002B' 2800'              	goto	u817_20
 21512  002C'                    u817_21:
 21513  002C' 2800'              	goto	i1l5856
 21514  002D'                    u817_20:
 21515  002D'                    i1l5854:
 21516  002D' 0800'              	movf	i1___llmod@divisor,w
 21517  002E' 0284'              	subwf	i1___llmod@dividend,f
 21518  002F' 0801'              	movf	i1___llmod@divisor+1,w
 21519  0030' 3B85'              	subwfb	i1___llmod@dividend+1,f
 21520  0031' 0802'              	movf	i1___llmod@divisor+2,w
 21521  0032' 3B86'              	subwfb	i1___llmod@dividend+2,f
 21522  0033' 0803'              	movf	i1___llmod@divisor+3,w
 21523  0034' 3B87'              	subwfb	i1___llmod@dividend+3,f
 21524  0035'                    i1l5856:
 21525  0035' 3001               	movlw	1
 21526  0036'                    u818_25:
 21527  0036' 3683'              	lsrf	i1___llmod@divisor+3,f
 21528  0037' 0C82'              	rrf	i1___llmod@divisor+2,f
 21529  0038' 0C81'              	rrf	i1___llmod@divisor+1,f
 21530  0039' 0C80'              	rrf	i1___llmod@divisor,f
 21531  003A' 0B89               	decfsz	9,f
 21532  003B' 2800'              	goto	u818_25
 21533  003C'                    i1l5858:
 21534  003C' 3001               	movlw	1
 21535  003D' 0289'              	subwf	i1___llmod@counter,f
 21536  003E' 1D03               	btfss	3,2
 21537  003F' 2800'              	goto	u819_21
 21538  0040' 2800'              	goto	u819_20
 21539  0041'                    u819_21:
 21540  0041' 2800'              	goto	i1l5852
 21541  0042'                    u819_20:
 21542  0042'                    i1l5860:
 21543  0042' 0807'              	movf	i1___llmod@dividend+3,w
 21544  0043' 0083'              	movwf	?i1___llmod+3
 21545  0044' 0806'              	movf	i1___llmod@dividend+2,w
 21546  0045' 0082'              	movwf	?i1___llmod+2
 21547  0046' 0805'              	movf	i1___llmod@dividend+1,w
 21548  0047' 0081'              	movwf	?i1___llmod+1
 21549  0048' 0804'              	movf	i1___llmod@dividend,w
 21550  0049' 0080'              	movwf	?i1___llmod
 21551  004A'                    i1l1437:
 21552  004A' 0008               	return
 21553  004B'                    __end_ofi1___llmod:
 21554                           
 21555                           	psect	text58
 21556  0000'                    __ptext58:	
 21557 ;; *************** function i1___lldiv *****************
 21558 ;; Defined at:
 21559 ;;		line 5 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/__lldiv.c"
 21560 ;; Parameters:    Size  Location     Type
 21561 ;;  divisor         4    0[COMMON] unsigned long 
 21562 ;;  dividend        4    4[COMMON] unsigned long 
 21563 ;; Auto vars:     Size  Location     Type
 21564 ;;  quotient        4    9[COMMON] unsigned long 
 21565 ;;  counter         1   13[COMMON] unsigned char 
 21566 ;; Return value:  Size  Location     Type
 21567 ;;                  4    0[COMMON] unsigned long 
 21568 ;; Registers used:
 21569 ;;		wreg, status,2, status,0
 21570 ;; Tracked objects:
 21571 ;;		On entry : 0/0
 21572 ;;		On exit  : 0/0
 21573 ;;		Unchanged: 0/0
 21574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21575 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21576 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21577 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21578 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21579 ;;Total ram usage:       14 bytes
 21580 ;; Hardware stack levels used:    1
 21581 ;; This function calls:
 21582 ;;		Nothing
 21583 ;; This function is called by:
 21584 ;;		i1_sprintf
 21585 ;; This function uses a non-reentrant model
 21586 ;;
 21587                           
 21588                           
 21589                           ;psect for function i1___lldiv
 21590  0000'                    i1___lldiv:
 21591  0000'                    i1l5640:	
 21592                           ;incstack = 0
 21593                           ; Regs used in i1___lldiv: [wreg+status,2+status,0]
 21594                           
 21595  0000' 3000               	movlw	0
 21596  0001' 008C'              	movwf	i1___lldiv@quotient+3
 21597  0002' 3000               	movlw	0
 21598  0003' 008B'              	movwf	i1___lldiv@quotient+2
 21599  0004' 3000               	movlw	0
 21600  0005' 008A'              	movwf	i1___lldiv@quotient+1
 21601  0006' 3000               	movlw	0
 21602  0007' 0089'              	movwf	i1___lldiv@quotient
 21603  0008' 0803'              	movf	i1___lldiv@divisor+3,w
 21604  0009' 0402'              	iorwf	i1___lldiv@divisor+2,w
 21605  000A' 0401'              	iorwf	i1___lldiv@divisor+1,w
 21606  000B' 0400'              	iorwf	i1___lldiv@divisor,w
 21607  000C' 1903               	skipnz
 21608  000D' 2800'              	goto	u762_21
 21609  000E' 2800'              	goto	u762_20
 21610  000F'                    u762_21:
 21611  000F' 2800'              	goto	i1l5660
 21612  0010'                    u762_20:
 21613  0010'                    i1l5642:
 21614  0010' 018D'              	clrf	i1___lldiv@counter
 21615  0011' 0A8D'              	incf	i1___lldiv@counter,f
 21616  0012' 2800'              	goto	i1l5646
 21617  0013'                    i1l5644:
 21618  0013' 3001               	movlw	1
 21619  0014'                    u763_25:
 21620  0014' 3580'              	lslf	i1___lldiv@divisor,f
 21621  0015' 0D81'              	rlf	i1___lldiv@divisor+1,f
 21622  0016' 0D82'              	rlf	i1___lldiv@divisor+2,f
 21623  0017' 0D83'              	rlf	i1___lldiv@divisor+3,f
 21624  0018' 0B89               	decfsz	9,f
 21625  0019' 2800'              	goto	u763_25
 21626  001A' 3001               	movlw	1
 21627  001B' 0088'              	movwf	??i1___lldiv
 21628  001C' 0808'              	movf	??i1___lldiv,w
 21629  001D' 078D'              	addwf	i1___lldiv@counter,f
 21630  001E'                    i1l5646:
 21631  001E' 1F83'              	btfss	i1___lldiv@divisor+3,7
 21632  001F' 2800'              	goto	u764_21
 21633  0020' 2800'              	goto	u764_20
 21634  0021'                    u764_21:
 21635  0021' 2800'              	goto	i1l5644
 21636  0022'                    u764_20:
 21637  0022'                    i1l5648:
 21638  0022' 3001               	movlw	1
 21639  0023'                    u765_25:
 21640  0023' 3589'              	lslf	i1___lldiv@quotient,f
 21641  0024' 0D8A'              	rlf	i1___lldiv@quotient+1,f
 21642  0025' 0D8B'              	rlf	i1___lldiv@quotient+2,f
 21643  0026' 0D8C'              	rlf	i1___lldiv@quotient+3,f
 21644  0027' 0B89               	decfsz	9,f
 21645  0028' 2800'              	goto	u765_25
 21646  0029'                    i1l5650:
 21647  0029' 0803'              	movf	i1___lldiv@divisor+3,w
 21648  002A' 0207'              	subwf	i1___lldiv@dividend+3,w
 21649  002B' 1D03               	skipz
 21650  002C' 2800'              	goto	u766_25
 21651  002D' 0802'              	movf	i1___lldiv@divisor+2,w
 21652  002E' 0206'              	subwf	i1___lldiv@dividend+2,w
 21653  002F' 1D03               	skipz
 21654  0030' 2800'              	goto	u766_25
 21655  0031' 0801'              	movf	i1___lldiv@divisor+1,w
 21656  0032' 0205'              	subwf	i1___lldiv@dividend+1,w
 21657  0033' 1D03               	skipz
 21658  0034' 2800'              	goto	u766_25
 21659  0035' 0800'              	movf	i1___lldiv@divisor,w
 21660  0036' 0204'              	subwf	i1___lldiv@dividend,w
 21661  0037'                    u766_25:
 21662  0037' 1C03               	skipc
 21663  0038' 2800'              	goto	u766_21
 21664  0039' 2800'              	goto	u766_20
 21665  003A'                    u766_21:
 21666  003A' 2800'              	goto	i1l5656
 21667  003B'                    u766_20:
 21668  003B'                    i1l5652:
 21669  003B' 0800'              	movf	i1___lldiv@divisor,w
 21670  003C' 0284'              	subwf	i1___lldiv@dividend,f
 21671  003D' 0801'              	movf	i1___lldiv@divisor+1,w
 21672  003E' 3B85'              	subwfb	i1___lldiv@dividend+1,f
 21673  003F' 0802'              	movf	i1___lldiv@divisor+2,w
 21674  0040' 3B86'              	subwfb	i1___lldiv@dividend+2,f
 21675  0041' 0803'              	movf	i1___lldiv@divisor+3,w
 21676  0042' 3B87'              	subwfb	i1___lldiv@dividend+3,f
 21677  0043'                    i1l5654:
 21678  0043' 1409'              	bsf	i1___lldiv@quotient,0
 21679  0044'                    i1l5656:
 21680  0044' 3001               	movlw	1
 21681  0045'                    u767_25:
 21682  0045' 3683'              	lsrf	i1___lldiv@divisor+3,f
 21683  0046' 0C82'              	rrf	i1___lldiv@divisor+2,f
 21684  0047' 0C81'              	rrf	i1___lldiv@divisor+1,f
 21685  0048' 0C80'              	rrf	i1___lldiv@divisor,f
 21686  0049' 0B89               	decfsz	9,f
 21687  004A' 2800'              	goto	u767_25
 21688  004B'                    i1l5658:
 21689  004B' 3001               	movlw	1
 21690  004C' 028D'              	subwf	i1___lldiv@counter,f
 21691  004D' 1D03               	btfss	3,2
 21692  004E' 2800'              	goto	u768_21
 21693  004F' 2800'              	goto	u768_20
 21694  0050'                    u768_21:
 21695  0050' 2800'              	goto	i1l5648
 21696  0051'                    u768_20:
 21697  0051'                    i1l5660:
 21698  0051' 080C'              	movf	i1___lldiv@quotient+3,w
 21699  0052' 0083'              	movwf	?i1___lldiv+3
 21700  0053' 080B'              	movf	i1___lldiv@quotient+2,w
 21701  0054' 0082'              	movwf	?i1___lldiv+2
 21702  0055' 080A'              	movf	i1___lldiv@quotient+1,w
 21703  0056' 0081'              	movwf	?i1___lldiv+1
 21704  0057' 0809'              	movf	i1___lldiv@quotient,w
 21705  0058' 0080'              	movwf	?i1___lldiv
 21706  0059'                    i1l1217:
 21707  0059' 0008               	return
 21708  005A'                    __end_ofi1___lldiv:
 21709                           
 21710                           	psect	text59
 21711  0000'                    __ptext59:	
 21712 ;; *************** function i1___fltol *****************
 21713 ;; Defined at:
 21714 ;;		line 43 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/fltol.c"
 21715 ;; Parameters:    Size  Location     Type
 21716 ;;  f1              4   30[BANK0 ] unsigned long 
 21717 ;; Auto vars:     Size  Location     Type
 21718 ;;  exp1            1   40[BANK0 ] unsigned char 
 21719 ;;  sign1           1   39[BANK0 ] unsigned char 
 21720 ;; Return value:  Size  Location     Type
 21721 ;;                  4   30[BANK0 ] long 
 21722 ;; Registers used:
 21723 ;;		wreg, status,2, status,0
 21724 ;; Tracked objects:
 21725 ;;		On entry : 0/0
 21726 ;;		On exit  : 0/0
 21727 ;;		Unchanged: 0/0
 21728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21729 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21730 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21731 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21732 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21733 ;;Total ram usage:       11 bytes
 21734 ;; Hardware stack levels used:    1
 21735 ;; This function calls:
 21736 ;;		Nothing
 21737 ;; This function is called by:
 21738 ;;		i1_sprintf
 21739 ;; This function uses a non-reentrant model
 21740 ;;
 21741                           
 21742                           
 21743                           ;psect for function i1___fltol
 21744  0000'                    i1___fltol:
 21745  0000'                    i1l5756:	
 21746                           ;incstack = 0
 21747                           ; Regs used in i1___fltol: [wreg+status,2+status,0]
 21748                           
 21749  0000' 1003               	clrc
 21750  0001' 0020               	movlb	0	; select bank0
 21751  0002' 0D20'              	rlf	i1___fltol@f1+2,w
 21752  0003' 0D21'              	rlf	i1___fltol@f1+3,w
 21753  0004' 00A2'              	movwf	??i1___fltol
 21754  0005' 0822'              	movf	??i1___fltol,w
 21755  0006' 00A8'              	movwf	i1___fltol@exp1
 21756  0007' 0828'              	movf	i1___fltol@exp1,w
 21757  0008' 1D03               	btfss	3,2
 21758  0009' 2800'              	goto	u791_21
 21759  000A' 2800'              	goto	u791_20
 21760  000B'                    u791_21:
 21761  000B' 2800'              	goto	i1l5762
 21762  000C'                    u791_20:
 21763  000C'                    i1l5758:
 21764  000C' 3000               	movlw	0
 21765  000D' 00A1'              	movwf	?i1___fltol+3
 21766  000E' 3000               	movlw	0
 21767  000F' 00A0'              	movwf	?i1___fltol+2
 21768  0010' 3000               	movlw	0
 21769  0011' 009F'              	movwf	?i1___fltol+1
 21770  0012' 3000               	movlw	0
 21771  0013' 009E'              	movwf	?i1___fltol
 21772  0014' 2800'              	goto	i1l1384
 21773  0015'                    i1l5762:
 21774  0015' 081E'              	movf	i1___fltol@f1,w
 21775  0016' 00A2'              	movwf	??i1___fltol
 21776  0017' 081F'              	movf	i1___fltol@f1+1,w
 21777  0018' 00A3'              	movwf	??i1___fltol+1
 21778  0019' 0820'              	movf	i1___fltol@f1+2,w
 21779  001A' 00A4'              	movwf	??i1___fltol+2
 21780  001B' 0821'              	movf	i1___fltol@f1+3,w
 21781  001C' 00A5'              	movwf	??i1___fltol+3
 21782  001D' 301F               	movlw	31
 21783  001E'                    u792_25:
 21784  001E' 36A5'              	lsrf	??i1___fltol+3,f
 21785  001F' 0CA4'              	rrf	??i1___fltol+2,f
 21786  0020' 0CA3'              	rrf	??i1___fltol+1,f
 21787  0021' 0CA2'              	rrf	??i1___fltol,f
 21788  0022'                    u792_20:
 21789  0022' 0B89               	decfsz	9,f
 21790  0023' 2800'              	goto	u792_25
 21791  0024' 0822'              	movf	??i1___fltol,w
 21792  0025' 00A6'              	movwf	??i1___fltol+4
 21793  0026' 0826'              	movf	??i1___fltol+4,w
 21794  0027' 00A7'              	movwf	i1___fltol@sign1
 21795  0028'                    i1l5764:
 21796  0028' 17A0'              	bsf	i1___fltol@f1+2,7
 21797  0029'                    i1l5766:
 21798  0029' 30FF               	movlw	255
 21799  002A' 059E'              	andwf	i1___fltol@f1,f
 21800  002B' 30FF               	movlw	255
 21801  002C' 059F'              	andwf	i1___fltol@f1+1,f
 21802  002D' 30FF               	movlw	255
 21803  002E' 05A0'              	andwf	i1___fltol@f1+2,f
 21804  002F' 3000               	movlw	0
 21805  0030' 05A1'              	andwf	i1___fltol@f1+3,f
 21806  0031'                    i1l5768:
 21807  0031' 3096               	movlw	150
 21808  0032' 02A8'              	subwf	i1___fltol@exp1,f
 21809  0033'                    i1l5770:
 21810  0033' 1FA8'              	btfss	i1___fltol@exp1,7
 21811  0034' 2800'              	goto	u793_21
 21812  0035' 2800'              	goto	u793_20
 21813  0036'                    u793_21:
 21814  0036' 2800'              	goto	i1l5780
 21815  0037'                    u793_20:
 21816  0037'                    i1l5772:
 21817  0037' 0828'              	movf	i1___fltol@exp1,w
 21818  0038' 3A80               	xorlw	128
 21819  0039' 3E97               	addlw	151
 21820  003A' 1803               	skipnc
 21821  003B' 2800'              	goto	u794_21
 21822  003C' 2800'              	goto	u794_20
 21823  003D'                    u794_21:
 21824  003D' 2800'              	goto	i1l5778
 21825  003E'                    u794_20:
 21826  003E' 2800'              	goto	i1l5758
 21827  003F'                    i1l5778:
 21828  003F' 3001               	movlw	1
 21829  0040'                    u795_25:
 21830  0040' 36A1'              	lsrf	i1___fltol@f1+3,f
 21831  0041' 0CA0'              	rrf	i1___fltol@f1+2,f
 21832  0042' 0C9F'              	rrf	i1___fltol@f1+1,f
 21833  0043' 0C9E'              	rrf	i1___fltol@f1,f
 21834  0044' 0B89               	decfsz	9,f
 21835  0045' 2800'              	goto	u795_25
 21836  0046' 3001               	movlw	1
 21837  0047' 00A2'              	movwf	??i1___fltol
 21838  0048' 0822'              	movf	??i1___fltol,w
 21839  0049' 07A8'              	addwf	i1___fltol@exp1,f
 21840  004A' 1D03               	btfss	3,2
 21841  004B' 2800'              	goto	u796_21
 21842  004C' 2800'              	goto	u796_20
 21843  004D'                    u796_21:
 21844  004D' 2800'              	goto	i1l5778
 21845  004E'                    u796_20:
 21846  004E' 2800'              	goto	i1l5788
 21847  004F'                    i1l5780:
 21848  004F' 3020               	movlw	32
 21849  0050' 0228'              	subwf	i1___fltol@exp1,w
 21850  0051' 1C03               	skipc
 21851  0052' 2800'              	goto	u797_21
 21852  0053' 2800'              	goto	u797_20
 21853  0054'                    u797_21:
 21854  0054' 2800'              	goto	i1l1391
 21855  0055'                    u797_20:
 21856  0055' 2800'              	goto	i1l5758
 21857  0056'                    i1l5786:
 21858  0056' 3001               	movlw	1
 21859  0057'                    u798_25:
 21860  0057' 359E'              	lslf	i1___fltol@f1,f
 21861  0058' 0D9F'              	rlf	i1___fltol@f1+1,f
 21862  0059' 0DA0'              	rlf	i1___fltol@f1+2,f
 21863  005A' 0DA1'              	rlf	i1___fltol@f1+3,f
 21864  005B' 0B89               	decfsz	9,f
 21865  005C' 2800'              	goto	u798_25
 21866  005D' 3001               	movlw	1
 21867  005E' 02A8'              	subwf	i1___fltol@exp1,f
 21868  005F'                    i1l1391:
 21869  005F' 0828'              	movf	i1___fltol@exp1,w
 21870  0060' 1D03               	btfss	3,2
 21871  0061' 2800'              	goto	u799_21
 21872  0062' 2800'              	goto	u799_20
 21873  0063'                    u799_21:
 21874  0063' 2800'              	goto	i1l5786
 21875  0064'                    u799_20:
 21876  0064'                    i1l5788:
 21877  0064' 0827'              	movf	i1___fltol@sign1,w
 21878  0065' 1903               	btfsc	3,2
 21879  0066' 2800'              	goto	u800_21
 21880  0067' 2800'              	goto	u800_20
 21881  0068'                    u800_21:
 21882  0068' 2800'              	goto	i1l1394
 21883  0069'                    u800_20:
 21884  0069'                    i1l5790:
 21885  0069' 099E'              	comf	i1___fltol@f1,f
 21886  006A' 099F'              	comf	i1___fltol@f1+1,f
 21887  006B' 09A0'              	comf	i1___fltol@f1+2,f
 21888  006C' 09A1'              	comf	i1___fltol@f1+3,f
 21889  006D' 0A9E'              	incf	i1___fltol@f1,f
 21890  006E' 1903               	skipnz
 21891  006F' 0A9F'              	incf	i1___fltol@f1+1,f
 21892  0070' 1903               	skipnz
 21893  0071' 0AA0'              	incf	i1___fltol@f1+2,f
 21894  0072' 1903               	skipnz
 21895  0073' 0AA1'              	incf	i1___fltol@f1+3,f
 21896  0074'                    i1l1394:
 21897  0074'                    i1l1384:
 21898  0074' 0008               	return
 21899  0075'                    __end_ofi1___fltol:
 21900                           
 21901                           	psect	text60
 21902  0000'                    __ptext60:	
 21903 ;; *************** function i1___flsub *****************
 21904 ;; Defined at:
 21905 ;;		line 242 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/sprcadd.c"
 21906 ;; Parameters:    Size  Location     Type
 21907 ;;  a               4   69[BANK0 ] long 
 21908 ;;  b               4   73[BANK0 ] long 
 21909 ;; Auto vars:     Size  Location     Type
 21910 ;;		None
 21911 ;; Return value:  Size  Location     Type
 21912 ;;                  4   69[BANK0 ] long 
 21913 ;; Registers used:
 21914 ;;		wreg, status,2, status,0, pclath, cstack
 21915 ;; Tracked objects:
 21916 ;;		On entry : 0/0
 21917 ;;		On exit  : 0/0
 21918 ;;		Unchanged: 0/0
 21919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21920 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21923 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21924 ;;Total ram usage:        8 bytes
 21925 ;; Hardware stack levels used:    1
 21926 ;; Hardware stack levels required when called:    1
 21927 ;; This function calls:
 21928 ;;		i1___fladd
 21929 ;; This function is called by:
 21930 ;;		i1_sprintf
 21931 ;; This function uses a non-reentrant model
 21932 ;;
 21933                           
 21934                           
 21935                           ;psect for function i1___flsub
 21936  0000'                    i1___flsub:
 21937  0000'                    i1l5864:	
 21938                           ;incstack = 0
 21939                           ; Regs used in i1___flsub: [wreg+status,2+status,0+pclath+cstack]
 21940                           
 21941  0000' 3080               	movlw	128
 21942  0001' 0020               	movlb	0	; select bank0
 21943  0002' 06C8'              	xorwf	i1___flsub@a+3,f
 21944  0003'                    i1l5866:
 21945  0003' 084C'              	movf	i1___flsub@b+3,w
 21946  0004' 00B4'              	movwf	i1___fladd@b+3
 21947  0005' 084B'              	movf	i1___flsub@b+2,w
 21948  0006' 00B3'              	movwf	i1___fladd@b+2
 21949  0007' 084A'              	movf	i1___flsub@b+1,w
 21950  0008' 00B2'              	movwf	i1___fladd@b+1
 21951  0009' 0849'              	movf	i1___flsub@b,w
 21952  000A' 00B1'              	movwf	i1___fladd@b
 21953  000B' 0848'              	movf	i1___flsub@a+3,w
 21954  000C' 00B8'              	movwf	i1___fladd@a+3
 21955  000D' 0847'              	movf	i1___flsub@a+2,w
 21956  000E' 00B7'              	movwf	i1___fladd@a+2
 21957  000F' 0846'              	movf	i1___flsub@a+1,w
 21958  0010' 00B6'              	movwf	i1___fladd@a+1
 21959  0011' 0845'              	movf	i1___flsub@a,w
 21960  0012' 00B5'              	movwf	i1___fladd@a
 21961  0013' 3180' 2000' 3180'  	fcall	i1___fladd
 21962  0016' 0020               	movlb	0	; select bank0
 21963  0017' 0834'              	movf	?i1___fladd+3,w
 21964  0018' 00C8'              	movwf	?i1___flsub+3
 21965  0019' 0833'              	movf	?i1___fladd+2,w
 21966  001A' 00C7'              	movwf	?i1___flsub+2
 21967  001B' 0832'              	movf	?i1___fladd+1,w
 21968  001C' 00C6'              	movwf	?i1___flsub+1
 21969  001D' 0831'              	movf	?i1___fladd,w
 21970  001E' 00C5'              	movwf	?i1___flsub
 21971  001F'                    i1l1554:
 21972  001F' 0008               	return
 21973  0020'                    __end_ofi1___flsub:
 21974                           
 21975                           	psect	text61
 21976  0000'                    __ptext61:	
 21977 ;; *************** function i1___fladd *****************
 21978 ;; Defined at:
 21979 ;;		line 10 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/sprcadd.c"
 21980 ;; Parameters:    Size  Location     Type
 21981 ;;  b               4   49[BANK0 ] long 
 21982 ;;  a               4   53[BANK0 ] long 
 21983 ;; Auto vars:     Size  Location     Type
 21984 ;;  grs             1   68[BANK0 ] unsigned char 
 21985 ;;  bexp            1   67[BANK0 ] unsigned char 
 21986 ;;  aexp            1   66[BANK0 ] unsigned char 
 21987 ;;  signs           1   65[BANK0 ] unsigned char 
 21988 ;; Return value:  Size  Location     Type
 21989 ;;                  4   49[BANK0 ] unsigned char 
 21990 ;; Registers used:
 21991 ;;		wreg, status,2, status,0
 21992 ;; Tracked objects:
 21993 ;;		On entry : 0/0
 21994 ;;		On exit  : 0/0
 21995 ;;		Unchanged: 0/0
 21996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21997 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21998 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21999 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22000 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22001 ;;Total ram usage:       20 bytes
 22002 ;; Hardware stack levels used:    1
 22003 ;; This function calls:
 22004 ;;		Nothing
 22005 ;; This function is called by:
 22006 ;;		i1_sprintf
 22007 ;;		i1___flsub
 22008 ;; This function uses a non-reentrant model
 22009 ;;
 22010                           
 22011                           
 22012                           ;psect for function i1___fladd
 22013  0000'                    i1___fladd:
 22014  0000'                    i1l5188:	
 22015                           ;incstack = 0
 22016                           ; Regs used in i1___fladd: [wreg+status,2+status,0]
 22017                           
 22018  0000' 0020               	movlb	0	; select bank0
 22019  0001' 0834'              	movf	i1___fladd@b+3,w
 22020  0002' 3980               	andlw	128
 22021  0003' 00B9'              	movwf	??i1___fladd
 22022  0004' 0839'              	movf	??i1___fladd,w
 22023  0005' 00C1'              	movwf	i1___fladd@signs
 22024  0006'                    i1l5190:
 22025  0006' 3534'              	lslf	i1___fladd@b+3,w
 22026  0007' 00B9'              	movwf	??i1___fladd
 22027  0008' 0839'              	movf	??i1___fladd,w
 22028  0009' 00C3'              	movwf	i1___fladd@bexp
 22029  000A'                    i1l5192:
 22030  000A' 1FB3'              	btfss	i1___fladd@b+2,7
 22031  000B' 2800'              	goto	u670_21
 22032  000C' 2800'              	goto	u670_20
 22033  000D'                    u670_21:
 22034  000D' 2800'              	goto	i1l5196
 22035  000E'                    u670_20:
 22036  000E'                    i1l5194:
 22037  000E' 1443'              	bsf	i1___fladd@bexp,0
 22038  000F'                    i1l5196:
 22039  000F' 0843'              	movf	i1___fladd@bexp,w
 22040  0010' 1903               	btfsc	3,2
 22041  0011' 2800'              	goto	u671_21
 22042  0012' 2800'              	goto	u671_20
 22043  0013'                    u671_21:
 22044  0013' 2800'              	goto	i1l5206
 22045  0014'                    u671_20:
 22046  0014'                    i1l5198:
 22047  0014' 0A43'              	incf	i1___fladd@bexp,w
 22048  0015' 1D03               	btfss	3,2
 22049  0016' 2800'              	goto	u672_21
 22050  0017' 2800'              	goto	u672_20
 22051  0018'                    u672_21:
 22052  0018' 2800'              	goto	i1l5202
 22053  0019'                    u672_20:
 22054  0019'                    i1l5200:
 22055  0019' 3000               	movlw	0
 22056  001A' 00B4'              	movwf	i1___fladd@b+3
 22057  001B' 3000               	movlw	0
 22058  001C' 00B3'              	movwf	i1___fladd@b+2
 22059  001D' 3000               	movlw	0
 22060  001E' 00B2'              	movwf	i1___fladd@b+1
 22061  001F' 3000               	movlw	0
 22062  0020' 00B1'              	movwf	i1___fladd@b
 22063  0021'                    i1l5202:
 22064  0021' 17B3'              	bsf	i1___fladd@b+2,7
 22065  0022'                    i1l5204:
 22066  0022' 01B4'              	clrf	i1___fladd@b+3
 22067  0023' 2800'              	goto	i1l5208
 22068  0024'                    i1l5206:
 22069  0024' 3000               	movlw	0
 22070  0025' 00B4'              	movwf	i1___fladd@b+3
 22071  0026' 3000               	movlw	0
 22072  0027' 00B3'              	movwf	i1___fladd@b+2
 22073  0028' 3000               	movlw	0
 22074  0029' 00B2'              	movwf	i1___fladd@b+1
 22075  002A' 3000               	movlw	0
 22076  002B' 00B1'              	movwf	i1___fladd@b
 22077  002C'                    i1l5208:
 22078  002C' 0838'              	movf	i1___fladd@a+3,w
 22079  002D' 3980               	andlw	128
 22080  002E' 00B9'              	movwf	??i1___fladd
 22081  002F' 0839'              	movf	??i1___fladd,w
 22082  0030' 00C2'              	movwf	i1___fladd@aexp
 22083  0031'                    i1l5210:
 22084  0031' 0842'              	movf	i1___fladd@aexp,w
 22085  0032' 0641'              	xorwf	i1___fladd@signs,w
 22086  0033' 1903               	skipnz
 22087  0034' 2800'              	goto	u673_21
 22088  0035' 2800'              	goto	u673_20
 22089  0036'                    u673_21:
 22090  0036' 2800'              	goto	i1l5214
 22091  0037'                    u673_20:
 22092  0037'                    i1l5212:
 22093  0037' 1741'              	bsf	i1___fladd@signs,6
 22094  0038'                    i1l5214:
 22095  0038' 3538'              	lslf	i1___fladd@a+3,w
 22096  0039' 00B9'              	movwf	??i1___fladd
 22097  003A' 0839'              	movf	??i1___fladd,w
 22098  003B' 00C2'              	movwf	i1___fladd@aexp
 22099  003C'                    i1l5216:
 22100  003C' 1FB7'              	btfss	i1___fladd@a+2,7
 22101  003D' 2800'              	goto	u674_21
 22102  003E' 2800'              	goto	u674_20
 22103  003F'                    u674_21:
 22104  003F' 2800'              	goto	i1l5220
 22105  0040'                    u674_20:
 22106  0040'                    i1l5218:
 22107  0040' 1442'              	bsf	i1___fladd@aexp,0
 22108  0041'                    i1l5220:
 22109  0041' 0842'              	movf	i1___fladd@aexp,w
 22110  0042' 1903               	btfsc	3,2
 22111  0043' 2800'              	goto	u675_21
 22112  0044' 2800'              	goto	u675_20
 22113  0045'                    u675_21:
 22114  0045' 2800'              	goto	i1l5230
 22115  0046'                    u675_20:
 22116  0046'                    i1l5222:
 22117  0046' 0A42'              	incf	i1___fladd@aexp,w
 22118  0047' 1D03               	btfss	3,2
 22119  0048' 2800'              	goto	u676_21
 22120  0049' 2800'              	goto	u676_20
 22121  004A'                    u676_21:
 22122  004A' 2800'              	goto	i1l5226
 22123  004B'                    u676_20:
 22124  004B'                    i1l5224:
 22125  004B' 3000               	movlw	0
 22126  004C' 00B8'              	movwf	i1___fladd@a+3
 22127  004D' 3000               	movlw	0
 22128  004E' 00B7'              	movwf	i1___fladd@a+2
 22129  004F' 3000               	movlw	0
 22130  0050' 00B6'              	movwf	i1___fladd@a+1
 22131  0051' 3000               	movlw	0
 22132  0052' 00B5'              	movwf	i1___fladd@a
 22133  0053'                    i1l5226:
 22134  0053' 17B7'              	bsf	i1___fladd@a+2,7
 22135  0054'                    i1l5228:
 22136  0054' 01B8'              	clrf	i1___fladd@a+3
 22137  0055' 2800'              	goto	i1l1508
 22138  0056'                    i1l5230:
 22139  0056' 3000               	movlw	0
 22140  0057' 00B8'              	movwf	i1___fladd@a+3
 22141  0058' 3000               	movlw	0
 22142  0059' 00B7'              	movwf	i1___fladd@a+2
 22143  005A' 3000               	movlw	0
 22144  005B' 00B6'              	movwf	i1___fladd@a+1
 22145  005C' 3000               	movlw	0
 22146  005D' 00B5'              	movwf	i1___fladd@a
 22147  005E'                    i1l1508:
 22148  005E' 0843'              	movf	i1___fladd@bexp,w
 22149  005F' 0242'              	subwf	i1___fladd@aexp,w
 22150  0060' 1803               	skipnc
 22151  0061' 2800'              	goto	u677_21
 22152  0062' 2800'              	goto	u677_20
 22153  0063'                    u677_21:
 22154  0063' 2800'              	goto	i1l5266
 22155  0064'                    u677_20:
 22156  0064'                    i1l5232:
 22157  0064' 1F41'              	btfss	i1___fladd@signs,6
 22158  0065' 2800'              	goto	u678_21
 22159  0066' 2800'              	goto	u678_20
 22160  0067'                    u678_21:
 22161  0067' 2800'              	goto	i1l5236
 22162  0068'                    u678_20:
 22163  0068'                    i1l5234:
 22164  0068' 3080               	movlw	128
 22165  0069' 00B9'              	movwf	??i1___fladd
 22166  006A' 0839'              	movf	??i1___fladd,w
 22167  006B' 06C1'              	xorwf	i1___fladd@signs,f
 22168  006C'                    i1l5236:
 22169  006C' 0843'              	movf	i1___fladd@bexp,w
 22170  006D' 00B9'              	movwf	??i1___fladd
 22171  006E' 0839'              	movf	??i1___fladd,w
 22172  006F' 00C4'              	movwf	i1___fladd@grs
 22173  0070'                    i1l5238:
 22174  0070' 0842'              	movf	i1___fladd@aexp,w
 22175  0071' 00B9'              	movwf	??i1___fladd
 22176  0072' 0839'              	movf	??i1___fladd,w
 22177  0073' 00C3'              	movwf	i1___fladd@bexp
 22178  0074'                    i1l5240:
 22179  0074' 0844'              	movf	i1___fladd@grs,w
 22180  0075' 00B9'              	movwf	??i1___fladd
 22181  0076' 0839'              	movf	??i1___fladd,w
 22182  0077' 00C2'              	movwf	i1___fladd@aexp
 22183  0078'                    i1l5242:
 22184  0078' 0831'              	movf	i1___fladd@b,w
 22185  0079' 00B9'              	movwf	??i1___fladd
 22186  007A' 0839'              	movf	??i1___fladd,w
 22187  007B' 00C4'              	movwf	i1___fladd@grs
 22188  007C'                    i1l5244:
 22189  007C' 0835'              	movf	i1___fladd@a,w
 22190  007D' 00B9'              	movwf	??i1___fladd
 22191  007E' 0839'              	movf	??i1___fladd,w
 22192  007F' 00B1'              	movwf	i1___fladd@b
 22193  0080'                    i1l5246:
 22194  0080' 0844'              	movf	i1___fladd@grs,w
 22195  0081' 00B9'              	movwf	??i1___fladd
 22196  0082' 0839'              	movf	??i1___fladd,w
 22197  0083' 00B5'              	movwf	i1___fladd@a
 22198  0084'                    i1l5248:
 22199  0084' 0832'              	movf	i1___fladd@b+1,w
 22200  0085' 00B9'              	movwf	??i1___fladd
 22201  0086' 0839'              	movf	??i1___fladd,w
 22202  0087' 00C4'              	movwf	i1___fladd@grs
 22203  0088'                    i1l5250:
 22204  0088' 0836'              	movf	i1___fladd@a+1,w
 22205  0089' 00B9'              	movwf	??i1___fladd
 22206  008A' 0839'              	movf	??i1___fladd,w
 22207  008B' 00B2'              	movwf	i1___fladd@b+1
 22208  008C'                    i1l5252:
 22209  008C' 0844'              	movf	i1___fladd@grs,w
 22210  008D' 00B9'              	movwf	??i1___fladd
 22211  008E' 0839'              	movf	??i1___fladd,w
 22212  008F' 00B6'              	movwf	i1___fladd@a+1
 22213  0090'                    i1l5254:
 22214  0090' 0833'              	movf	i1___fladd@b+2,w
 22215  0091' 00B9'              	movwf	??i1___fladd
 22216  0092' 0839'              	movf	??i1___fladd,w
 22217  0093' 00C4'              	movwf	i1___fladd@grs
 22218  0094'                    i1l5256:
 22219  0094' 0837'              	movf	i1___fladd@a+2,w
 22220  0095' 00B9'              	movwf	??i1___fladd
 22221  0096' 0839'              	movf	??i1___fladd,w
 22222  0097' 00B3'              	movwf	i1___fladd@b+2
 22223  0098'                    i1l5258:
 22224  0098' 0844'              	movf	i1___fladd@grs,w
 22225  0099' 00B9'              	movwf	??i1___fladd
 22226  009A' 0839'              	movf	??i1___fladd,w
 22227  009B' 00B7'              	movwf	i1___fladd@a+2
 22228  009C'                    i1l5260:
 22229  009C' 0834'              	movf	i1___fladd@b+3,w
 22230  009D' 00B9'              	movwf	??i1___fladd
 22231  009E' 0839'              	movf	??i1___fladd,w
 22232  009F' 00C4'              	movwf	i1___fladd@grs
 22233  00A0'                    i1l5262:
 22234  00A0' 0838'              	movf	i1___fladd@a+3,w
 22235  00A1' 00B9'              	movwf	??i1___fladd
 22236  00A2' 0839'              	movf	??i1___fladd,w
 22237  00A3' 00B4'              	movwf	i1___fladd@b+3
 22238  00A4'                    i1l5264:
 22239  00A4' 0844'              	movf	i1___fladd@grs,w
 22240  00A5' 00B9'              	movwf	??i1___fladd
 22241  00A6' 0839'              	movf	??i1___fladd,w
 22242  00A7' 00B8'              	movwf	i1___fladd@a+3
 22243  00A8'                    i1l5266:
 22244  00A8' 01C4'              	clrf	i1___fladd@grs
 22245  00A9'                    i1l5268:
 22246  00A9' 0842'              	movf	i1___fladd@aexp,w
 22247  00AA' 00B9'              	movwf	??i1___fladd
 22248  00AB' 01BA'              	clrf	??i1___fladd+1
 22249  00AC' 083A'              	movf	??i1___fladd+1,w
 22250  00AD' 00BC'              	movwf	??i1___fladd+3
 22251  00AE' 0843'              	movf	i1___fladd@bexp,w
 22252  00AF' 0239'              	subwf	??i1___fladd,w
 22253  00B0' 00BB'              	movwf	??i1___fladd+2
 22254  00B1' 1C03               	skipc
 22255  00B2' 03BC'              	decf	??i1___fladd+3,f
 22256  00B3' 083C'              	movf	??i1___fladd+3,w
 22257  00B4' 3A80               	xorlw	128
 22258  00B5' 00BD'              	movwf	??i1___fladd+4
 22259  00B6' 3080               	movlw	128
 22260  00B7' 023D'              	subwf	??i1___fladd+4,w
 22261  00B8' 1D03               	skipz
 22262  00B9' 2800'              	goto	u679_25
 22263  00BA' 301A               	movlw	26
 22264  00BB' 023B'              	subwf	??i1___fladd+2,w
 22265  00BC'                    u679_25:
 22266  00BC' 1C03               	skipc
 22267  00BD' 2800'              	goto	u679_21
 22268  00BE' 2800'              	goto	u679_20
 22269  00BF'                    u679_21:
 22270  00BF' 2800'              	goto	i1l5284
 22271  00C0'                    u679_20:
 22272  00C0'                    i1l5270:
 22273  00C0' 0020               	movlb	0	; select bank0
 22274  00C1' 0834'              	movf	i1___fladd@b+3,w
 22275  00C2' 0433'              	iorwf	i1___fladd@b+2,w
 22276  00C3' 0432'              	iorwf	i1___fladd@b+1,w
 22277  00C4' 0431'              	iorwf	i1___fladd@b,w
 22278  00C5' 1D03               	skipz
 22279  00C6' 2800'              	goto	u680_21
 22280  00C7' 2800'              	goto	u680_20
 22281  00C8'                    u680_21:
 22282  00C8' 3001               	movlw	1
 22283  00C9' 2800'              	goto	u681_20
 22284  00CA'                    u680_20:
 22285  00CA' 3000               	movlw	0
 22286  00CB'                    u681_20:
 22287  00CB' 00B9'              	movwf	??i1___fladd
 22288  00CC' 0839'              	movf	??i1___fladd,w
 22289  00CD' 00C4'              	movwf	i1___fladd@grs
 22290  00CE' 3000               	movlw	0
 22291  00CF' 00B4'              	movwf	i1___fladd@b+3
 22292  00D0' 3000               	movlw	0
 22293  00D1' 00B3'              	movwf	i1___fladd@b+2
 22294  00D2' 3000               	movlw	0
 22295  00D3' 00B2'              	movwf	i1___fladd@b+1
 22296  00D4' 3000               	movlw	0
 22297  00D5' 00B1'              	movwf	i1___fladd@b
 22298  00D6' 0842'              	movf	i1___fladd@aexp,w
 22299  00D7' 00B9'              	movwf	??i1___fladd
 22300  00D8' 0839'              	movf	??i1___fladd,w
 22301  00D9' 00C3'              	movwf	i1___fladd@bexp
 22302  00DA' 2800'              	goto	i1l1512
 22303  00DB'                    i1l1514:
 22304  00DB' 1C44'              	btfss	i1___fladd@grs,0
 22305  00DC' 2800'              	goto	u682_21
 22306  00DD' 2800'              	goto	u682_20
 22307  00DE'                    u682_21:
 22308  00DE' 2800'              	goto	i1l5274
 22309  00DF'                    u682_20:
 22310  00DF'                    i1l5272:
 22311  00DF' 3644'              	lsrf	i1___fladd@grs,w
 22312  00E0' 3801               	iorlw	1
 22313  00E1' 00B9'              	movwf	??i1___fladd
 22314  00E2' 0839'              	movf	??i1___fladd,w
 22315  00E3' 00C4'              	movwf	i1___fladd@grs
 22316  00E4' 2800'              	goto	i1l5276
 22317  00E5'                    i1l5274:
 22318  00E5' 1003               	clrc
 22319  00E6' 0CC4'              	rrf	i1___fladd@grs,f
 22320  00E7'                    i1l5276:
 22321  00E7' 1C31'              	btfss	i1___fladd@b,0
 22322  00E8' 2800'              	goto	u683_21
 22323  00E9' 2800'              	goto	u683_20
 22324  00EA'                    u683_21:
 22325  00EA' 2800'              	goto	i1l5280
 22326  00EB'                    u683_20:
 22327  00EB'                    i1l5278:
 22328  00EB' 17C4'              	bsf	i1___fladd@grs,7
 22329  00EC'                    i1l5280:
 22330  00EC' 3001               	movlw	1
 22331  00ED' 00B9'              	movwf	??i1___fladd
 22332  00EE'                    u684_25:
 22333  00EE' 37B4'              	asrf	i1___fladd@b+3,f
 22334  00EF' 0CB3'              	rrf	i1___fladd@b+2,f
 22335  00F0' 0CB2'              	rrf	i1___fladd@b+1,f
 22336  00F1' 0CB1'              	rrf	i1___fladd@b,f
 22337  00F2' 0B80'              	decfsz	??i1___fladd& (0+127),f
 22338  00F3' 2800'              	goto	u684_25
 22339  00F4'                    i1l5282:
 22340  00F4' 3001               	movlw	1
 22341  00F5' 00B9'              	movwf	??i1___fladd
 22342  00F6' 0839'              	movf	??i1___fladd,w
 22343  00F7' 07C3'              	addwf	i1___fladd@bexp,f
 22344  00F8'                    i1l5284:
 22345  00F8' 0020               	movlb	0	; select bank0
 22346  00F9' 0842'              	movf	i1___fladd@aexp,w
 22347  00FA' 0243'              	subwf	i1___fladd@bexp,w
 22348  00FB' 1C03               	skipc
 22349  00FC' 2800'              	goto	u685_21
 22350  00FD' 2800'              	goto	u685_20
 22351  00FE'                    u685_21:
 22352  00FE' 2800'              	goto	i1l1514
 22353  00FF'                    u685_20:
 22354  00FF'                    i1l1512:
 22355  00FF' 1B41'              	btfsc	i1___fladd@signs,6
 22356  0100' 2800'              	goto	u686_21
 22357  0101' 2800'              	goto	u686_20
 22358  0102'                    u686_21:
 22359  0102' 2800'              	goto	i1l5310
 22360  0103'                    u686_20:
 22361  0103'                    i1l5286:
 22362  0103' 0843'              	movf	i1___fladd@bexp,w
 22363  0104' 1D03               	btfss	3,2
 22364  0105' 2800'              	goto	u687_21
 22365  0106' 2800'              	goto	u687_20
 22366  0107'                    u687_21:
 22367  0107' 2800'              	goto	i1l5292
 22368  0108'                    u687_20:
 22369  0108'                    i1l5288:
 22370  0108' 3000               	movlw	0
 22371  0109' 00B4'              	movwf	?i1___fladd+3
 22372  010A' 3000               	movlw	0
 22373  010B' 00B3'              	movwf	?i1___fladd+2
 22374  010C' 3000               	movlw	0
 22375  010D' 00B2'              	movwf	?i1___fladd+1
 22376  010E' 3000               	movlw	0
 22377  010F' 00B1'              	movwf	?i1___fladd
 22378  0110' 2800'              	goto	i1l1521
 22379  0111'                    i1l5292:
 22380  0111' 0835'              	movf	i1___fladd@a,w
 22381  0112' 07B1'              	addwf	i1___fladd@b,f
 22382  0113' 0836'              	movf	i1___fladd@a+1,w
 22383  0114' 3DB2'              	addwfc	i1___fladd@b+1,f
 22384  0115' 0837'              	movf	i1___fladd@a+2,w
 22385  0116' 3DB3'              	addwfc	i1___fladd@b+2,f
 22386  0117' 0838'              	movf	i1___fladd@a+3,w
 22387  0118' 3DB4'              	addwfc	i1___fladd@b+3,f
 22388  0119'                    i1l5294:
 22389  0119' 1C34'              	btfss	i1___fladd@b+3,0
 22390  011A' 2800'              	goto	u688_21
 22391  011B' 2800'              	goto	u688_20
 22392  011C'                    u688_21:
 22393  011C' 2800'              	goto	i1l5344
 22394  011D'                    u688_20:
 22395  011D'                    i1l5296:
 22396  011D' 1C44'              	btfss	i1___fladd@grs,0
 22397  011E' 2800'              	goto	u689_21
 22398  011F' 2800'              	goto	u689_20
 22399  0120'                    u689_21:
 22400  0120' 2800'              	goto	i1l5300
 22401  0121'                    u689_20:
 22402  0121'                    i1l5298:
 22403  0121' 3644'              	lsrf	i1___fladd@grs,w
 22404  0122' 3801               	iorlw	1
 22405  0123' 00B9'              	movwf	??i1___fladd
 22406  0124' 0839'              	movf	??i1___fladd,w
 22407  0125' 00C4'              	movwf	i1___fladd@grs
 22408  0126' 2800'              	goto	i1l5302
 22409  0127'                    i1l5300:
 22410  0127' 1003               	clrc
 22411  0128' 0CC4'              	rrf	i1___fladd@grs,f
 22412  0129'                    i1l5302:
 22413  0129' 1C31'              	btfss	i1___fladd@b,0
 22414  012A' 2800'              	goto	u690_21
 22415  012B' 2800'              	goto	u690_20
 22416  012C'                    u690_21:
 22417  012C' 2800'              	goto	i1l5306
 22418  012D'                    u690_20:
 22419  012D'                    i1l5304:
 22420  012D' 17C4'              	bsf	i1___fladd@grs,7
 22421  012E'                    i1l5306:
 22422  012E' 3001               	movlw	1
 22423  012F' 00B9'              	movwf	??i1___fladd
 22424  0130'                    u691_25:
 22425  0130' 37B4'              	asrf	i1___fladd@b+3,f
 22426  0131' 0CB3'              	rrf	i1___fladd@b+2,f
 22427  0132' 0CB2'              	rrf	i1___fladd@b+1,f
 22428  0133' 0CB1'              	rrf	i1___fladd@b,f
 22429  0134' 0B80'              	decfsz	??i1___fladd& (0+127),f
 22430  0135' 2800'              	goto	u691_25
 22431  0136'                    i1l5308:
 22432  0136' 3001               	movlw	1
 22433  0137' 00B9'              	movwf	??i1___fladd
 22434  0138' 0839'              	movf	??i1___fladd,w
 22435  0139' 07C3'              	addwf	i1___fladd@bexp,f
 22436  013A' 2800'              	goto	i1l5344
 22437  013B'                    i1l5310:
 22438  013B' 0834'              	movf	i1___fladd@b+3,w
 22439  013C' 3A80               	xorlw	128
 22440  013D' 00B9'              	movwf	??i1___fladd
 22441  013E' 0838'              	movf	i1___fladd@a+3,w
 22442  013F' 3A80               	xorlw	128
 22443  0140' 0239'              	subwf	??i1___fladd,w
 22444  0141' 1D03               	skipz
 22445  0142' 2800'              	goto	u692_23
 22446  0143' 0837'              	movf	i1___fladd@a+2,w
 22447  0144' 0233'              	subwf	i1___fladd@b+2,w
 22448  0145' 1D03               	skipz
 22449  0146' 2800'              	goto	u692_23
 22450  0147' 0836'              	movf	i1___fladd@a+1,w
 22451  0148' 0232'              	subwf	i1___fladd@b+1,w
 22452  0149' 1D03               	skipz
 22453  014A' 2800'              	goto	u692_23
 22454  014B' 0835'              	movf	i1___fladd@a,w
 22455  014C' 0231'              	subwf	i1___fladd@b,w
 22456  014D'                    u692_23:
 22457  014D' 1803               	skipnc
 22458  014E' 2800'              	goto	u692_21
 22459  014F' 2800'              	goto	u692_20
 22460  0150'                    u692_21:
 22461  0150' 2800'              	goto	i1l5320
 22462  0151'                    u692_20:
 22463  0151'                    i1l5312:
 22464  0151' 30FF               	movlw	255
 22465  0152' 00B9'              	movwf	??i1___fladd
 22466  0153' 30FF               	movlw	255
 22467  0154' 00BA'              	movwf	??i1___fladd+1
 22468  0155' 30FF               	movlw	255
 22469  0156' 00BB'              	movwf	??i1___fladd+2
 22470  0157' 30FF               	movlw	255
 22471  0158' 00BC'              	movwf	??i1___fladd+3
 22472  0159' 0831'              	movf	i1___fladd@b,w
 22473  015A' 0235'              	subwf	i1___fladd@a,w
 22474  015B' 00BD'              	movwf	??i1___fladd+4
 22475  015C' 0832'              	movf	i1___fladd@b+1,w
 22476  015D' 3B36'              	subwfb	i1___fladd@a+1,w
 22477  015E' 00BE'              	movwf	??i1___fladd+5
 22478  015F' 0833'              	movf	i1___fladd@b+2,w
 22479  0160' 3B37'              	subwfb	i1___fladd@a+2,w
 22480  0161' 00BF'              	movwf	??i1___fladd+6
 22481  0162' 0834'              	movf	i1___fladd@b+3,w
 22482  0163' 3B38'              	subwfb	i1___fladd@a+3,w
 22483  0164' 00C0'              	movwf	??i1___fladd+7
 22484  0165' 083D'              	movf	??i1___fladd+4,w
 22485  0166' 07B9'              	addwf	??i1___fladd,f
 22486  0167' 083E'              	movf	??i1___fladd+5,w
 22487  0168' 3DBA'              	addwfc	??i1___fladd+1,f
 22488  0169' 083F'              	movf	??i1___fladd+6,w
 22489  016A' 3DBB'              	addwfc	??i1___fladd+2,f
 22490  016B' 0840'              	movf	??i1___fladd+7,w
 22491  016C' 3DBC'              	addwfc	??i1___fladd+3,f
 22492  016D' 083C'              	movf	??i1___fladd+3,w
 22493  016E' 00B4'              	movwf	i1___fladd@b+3
 22494  016F' 083B'              	movf	??i1___fladd+2,w
 22495  0170' 00B3'              	movwf	i1___fladd@b+2
 22496  0171' 083A'              	movf	??i1___fladd+1,w
 22497  0172' 00B2'              	movwf	i1___fladd@b+1
 22498  0173' 0839'              	movf	??i1___fladd,w
 22499  0174' 00B1'              	movwf	i1___fladd@b
 22500  0175'                    i1l5314:
 22501  0175' 3080               	movlw	128
 22502  0176' 00B9'              	movwf	??i1___fladd
 22503  0177' 0839'              	movf	??i1___fladd,w
 22504  0178' 06C1'              	xorwf	i1___fladd@signs,f
 22505  0179' 09C4'              	comf	i1___fladd@grs,f
 22506  017A' 0AC4'              	incf	i1___fladd@grs,f
 22507  017B'                    i1l5316:
 22508  017B' 0844'              	movf	i1___fladd@grs,w
 22509  017C' 1D03               	btfss	3,2
 22510  017D' 2800'              	goto	u693_21
 22511  017E' 2800'              	goto	u693_20
 22512  017F'                    u693_21:
 22513  017F' 2800'              	goto	i1l1529
 22514  0180'                    u693_20:
 22515  0180'                    i1l5318:
 22516  0180' 3001               	movlw	1
 22517  0181' 07B1'              	addwf	i1___fladd@b,f
 22518  0182' 3000               	movlw	0
 22519  0183' 3DB2'              	addwfc	i1___fladd@b+1,f
 22520  0184' 3000               	movlw	0
 22521  0185' 3DB3'              	addwfc	i1___fladd@b+2,f
 22522  0186' 3000               	movlw	0
 22523  0187' 3DB4'              	addwfc	i1___fladd@b+3,f
 22524  0188' 2800'              	goto	i1l1529
 22525  0189'                    i1l5320:
 22526  0189' 0835'              	movf	i1___fladd@a,w
 22527  018A' 02B1'              	subwf	i1___fladd@b,f
 22528  018B' 0836'              	movf	i1___fladd@a+1,w
 22529  018C' 3BB2'              	subwfb	i1___fladd@b+1,f
 22530  018D' 0837'              	movf	i1___fladd@a+2,w
 22531  018E' 3BB3'              	subwfb	i1___fladd@b+2,f
 22532  018F' 0838'              	movf	i1___fladd@a+3,w
 22533  0190' 3BB4'              	subwfb	i1___fladd@b+3,f
 22534  0191'                    i1l1529:
 22535  0191' 0834'              	movf	i1___fladd@b+3,w
 22536  0192' 0433'              	iorwf	i1___fladd@b+2,w
 22537  0193' 0432'              	iorwf	i1___fladd@b+1,w
 22538  0194' 0431'              	iorwf	i1___fladd@b,w
 22539  0195' 1D03               	skipz
 22540  0196' 2800'              	goto	u694_21
 22541  0197' 2800'              	goto	u694_20
 22542  0198'                    u694_21:
 22543  0198' 2800'              	goto	i1l5342
 22544  0199'                    u694_20:
 22545  0199'                    i1l5322:
 22546  0199' 0844'              	movf	i1___fladd@grs,w
 22547  019A' 1D03               	btfss	3,2
 22548  019B' 2800'              	goto	u695_21
 22549  019C' 2800'              	goto	u695_20
 22550  019D'                    u695_21:
 22551  019D' 2800'              	goto	i1l5342
 22552  019E'                    u695_20:
 22553  019E'                    i1l5324:
 22554  019E' 3000               	movlw	0
 22555  019F' 00B4'              	movwf	?i1___fladd+3
 22556  01A0' 3000               	movlw	0
 22557  01A1' 00B3'              	movwf	?i1___fladd+2
 22558  01A2' 3000               	movlw	0
 22559  01A3' 00B2'              	movwf	?i1___fladd+1
 22560  01A4' 3000               	movlw	0
 22561  01A5' 00B1'              	movwf	?i1___fladd
 22562  01A6' 2800'              	goto	i1l1521
 22563  01A7'                    i1l5328:
 22564  01A7' 3001               	movlw	1
 22565  01A8'                    u696_25:
 22566  01A8' 35B1'              	lslf	i1___fladd@b,f
 22567  01A9' 0DB2'              	rlf	i1___fladd@b+1,f
 22568  01AA' 0DB3'              	rlf	i1___fladd@b+2,f
 22569  01AB' 0DB4'              	rlf	i1___fladd@b+3,f
 22570  01AC' 0B89               	decfsz	9,f
 22571  01AD' 2800'              	goto	u696_25
 22572  01AE'                    i1l5330:
 22573  01AE' 1FC4'              	btfss	i1___fladd@grs,7
 22574  01AF' 2800'              	goto	u697_21
 22575  01B0' 2800'              	goto	u697_20
 22576  01B1'                    u697_21:
 22577  01B1' 2800'              	goto	i1l1533
 22578  01B2'                    u697_20:
 22579  01B2'                    i1l5332:
 22580  01B2' 1431'              	bsf	i1___fladd@b,0
 22581  01B3'                    i1l1533:
 22582  01B3' 1C44'              	btfss	i1___fladd@grs,0
 22583  01B4' 2800'              	goto	u698_21
 22584  01B5' 2800'              	goto	u698_20
 22585  01B6'                    u698_21:
 22586  01B6' 2800'              	goto	i1l5336
 22587  01B7'                    u698_20:
 22588  01B7'                    i1l5334:
 22589  01B7' 1403               	setc
 22590  01B8' 0DC4'              	rlf	i1___fladd@grs,f
 22591  01B9' 2800'              	goto	i1l5338
 22592  01BA'                    i1l5336:
 22593  01BA' 1003               	clrc
 22594  01BB' 0DC4'              	rlf	i1___fladd@grs,f
 22595  01BC'                    i1l5338:
 22596  01BC' 0843'              	movf	i1___fladd@bexp,w
 22597  01BD' 1903               	btfsc	3,2
 22598  01BE' 2800'              	goto	u699_21
 22599  01BF' 2800'              	goto	u699_20
 22600  01C0'                    u699_21:
 22601  01C0' 2800'              	goto	i1l5342
 22602  01C1'                    u699_20:
 22603  01C1'                    i1l5340:
 22604  01C1' 3001               	movlw	1
 22605  01C2' 02C3'              	subwf	i1___fladd@bexp,f
 22606  01C3'                    i1l5342:
 22607  01C3' 1FB3'              	btfss	i1___fladd@b+2,7
 22608  01C4' 2800'              	goto	u700_21
 22609  01C5' 2800'              	goto	u700_20
 22610  01C6'                    u700_21:
 22611  01C6' 2800'              	goto	i1l5328
 22612  01C7'                    u700_20:
 22613  01C7'                    i1l5344:
 22614  01C7' 01C2'              	clrf	i1___fladd@aexp
 22615  01C8'                    i1l5346:
 22616  01C8' 1FC4'              	btfss	i1___fladd@grs,7
 22617  01C9' 2800'              	goto	u701_21
 22618  01CA' 2800'              	goto	u701_20
 22619  01CB'                    u701_21:
 22620  01CB' 2800'              	goto	i1l5354
 22621  01CC'                    u701_20:
 22622  01CC'                    i1l5348:
 22623  01CC' 0844'              	movf	i1___fladd@grs,w
 22624  01CD' 397F               	andlw	127
 22625  01CE' 1903               	btfsc	3,2
 22626  01CF' 2800'              	goto	u702_21
 22627  01D0' 2800'              	goto	u702_20
 22628  01D1'                    u702_21:
 22629  01D1' 2800'              	goto	i1l1539
 22630  01D2'                    u702_20:
 22631  01D2'                    i1l5350:
 22632  01D2' 01C2'              	clrf	i1___fladd@aexp
 22633  01D3' 0AC2'              	incf	i1___fladd@aexp,f
 22634  01D4' 2800'              	goto	i1l5354
 22635  01D5'                    i1l1539:
 22636  01D5' 1C31'              	btfss	i1___fladd@b,0
 22637  01D6' 2800'              	goto	u703_21
 22638  01D7' 2800'              	goto	u703_20
 22639  01D8'                    u703_21:
 22640  01D8' 2800'              	goto	i1l5354
 22641  01D9'                    u703_20:
 22642  01D9' 2800'              	goto	i1l5350
 22643  01DA'                    i1l5354:
 22644  01DA' 0842'              	movf	i1___fladd@aexp,w
 22645  01DB' 1903               	btfsc	3,2
 22646  01DC' 2800'              	goto	u704_21
 22647  01DD' 2800'              	goto	u704_20
 22648  01DE'                    u704_21:
 22649  01DE' 2800'              	goto	i1l1542
 22650  01DF'                    u704_20:
 22651  01DF'                    i1l5356:
 22652  01DF' 3001               	movlw	1
 22653  01E0' 07B1'              	addwf	i1___fladd@b,f
 22654  01E1' 3000               	movlw	0
 22655  01E2' 3DB2'              	addwfc	i1___fladd@b+1,f
 22656  01E3' 3000               	movlw	0
 22657  01E4' 3DB3'              	addwfc	i1___fladd@b+2,f
 22658  01E5' 3000               	movlw	0
 22659  01E6' 3DB4'              	addwfc	i1___fladd@b+3,f
 22660  01E7'                    i1l5358:
 22661  01E7' 1C34'              	btfss	i1___fladd@b+3,0
 22662  01E8' 2800'              	goto	u705_21
 22663  01E9' 2800'              	goto	u705_20
 22664  01EA'                    u705_21:
 22665  01EA' 2800'              	goto	i1l1542
 22666  01EB'                    u705_20:
 22667  01EB'                    i1l5360:
 22668  01EB' 0831'              	movf	i1___fladd@b,w
 22669  01EC' 00B9'              	movwf	??i1___fladd
 22670  01ED' 0832'              	movf	i1___fladd@b+1,w
 22671  01EE' 00BA'              	movwf	??i1___fladd+1
 22672  01EF' 0833'              	movf	i1___fladd@b+2,w
 22673  01F0' 00BB'              	movwf	??i1___fladd+2
 22674  01F1' 0834'              	movf	i1___fladd@b+3,w
 22675  01F2' 00BC'              	movwf	??i1___fladd+3
 22676  01F3' 3001               	movlw	1
 22677  01F4' 00BD'              	movwf	??i1___fladd+4
 22678  01F5'                    u706_25:
 22679  01F5' 37BC'              	asrf	??i1___fladd+3,f
 22680  01F6' 0CBB'              	rrf	??i1___fladd+2,f
 22681  01F7' 0CBA'              	rrf	??i1___fladd+1,f
 22682  01F8' 0CB9'              	rrf	??i1___fladd,f
 22683  01F9'                    u706_20:
 22684  01F9' 0BBD'              	decfsz	??i1___fladd+4,f
 22685  01FA' 2800'              	goto	u706_25
 22686  01FB' 083C'              	movf	??i1___fladd+3,w
 22687  01FC' 00B4'              	movwf	i1___fladd@b+3
 22688  01FD' 083B'              	movf	??i1___fladd+2,w
 22689  01FE' 00B3'              	movwf	i1___fladd@b+2
 22690  01FF' 083A'              	movf	??i1___fladd+1,w
 22691  0200' 00B2'              	movwf	i1___fladd@b+1
 22692  0201' 0839'              	movf	??i1___fladd,w
 22693  0202' 00B1'              	movwf	i1___fladd@b
 22694  0203' 0A43'              	incf	i1___fladd@bexp,w
 22695  0204' 1903               	btfsc	3,2
 22696  0205' 2800'              	goto	u707_21
 22697  0206' 2800'              	goto	u707_20
 22698  0207'                    u707_21:
 22699  0207' 2800'              	goto	i1l1542
 22700  0208'                    u707_20:
 22701  0208'                    i1l5362:
 22702  0208' 3001               	movlw	1
 22703  0209' 00B9'              	movwf	??i1___fladd
 22704  020A' 0839'              	movf	??i1___fladd,w
 22705  020B' 07C3'              	addwf	i1___fladd@bexp,f
 22706  020C'                    i1l1542:
 22707  020C' 0A43'              	incf	i1___fladd@bexp,w
 22708  020D' 1903               	btfsc	3,2
 22709  020E' 2800'              	goto	u708_21
 22710  020F' 2800'              	goto	u708_20
 22711  0210'                    u708_21:
 22712  0210' 2800'              	goto	i1l5366
 22713  0211'                    u708_20:
 22714  0211'                    i1l5364:
 22715  0211' 0843'              	movf	i1___fladd@bexp,w
 22716  0212' 1D03               	btfss	3,2
 22717  0213' 2800'              	goto	u709_21
 22718  0214' 2800'              	goto	u709_20
 22719  0215'                    u709_21:
 22720  0215' 2800'              	goto	i1l5372
 22721  0216'                    u709_20:
 22722  0216'                    i1l5366:
 22723  0216' 3000               	movlw	0
 22724  0217' 00B4'              	movwf	i1___fladd@b+3
 22725  0218' 3000               	movlw	0
 22726  0219' 00B3'              	movwf	i1___fladd@b+2
 22727  021A' 3000               	movlw	0
 22728  021B' 00B2'              	movwf	i1___fladd@b+1
 22729  021C' 3000               	movlw	0
 22730  021D' 00B1'              	movwf	i1___fladd@b
 22731  021E'                    i1l5368:
 22732  021E' 0843'              	movf	i1___fladd@bexp,w
 22733  021F' 1D03               	btfss	3,2
 22734  0220' 2800'              	goto	u710_21
 22735  0221' 2800'              	goto	u710_20
 22736  0222'                    u710_21:
 22737  0222' 2800'              	goto	i1l5372
 22738  0223'                    u710_20:
 22739  0223'                    i1l5370:
 22740  0223' 01C1'              	clrf	i1___fladd@signs
 22741  0224'                    i1l5372:
 22742  0224' 1C43'              	btfss	i1___fladd@bexp,0
 22743  0225' 2800'              	goto	u711_21
 22744  0226' 2800'              	goto	u711_20
 22745  0227'                    u711_21:
 22746  0227' 2800'              	goto	i1l5376
 22747  0228'                    u711_20:
 22748  0228'                    i1l5374:
 22749  0228' 17B3'              	bsf	i1___fladd@b+2,7
 22750  0229' 2800'              	goto	i1l1550
 22751  022A'                    i1l5376:
 22752  022A' 307F               	movlw	127
 22753  022B' 00B9'              	movwf	??i1___fladd
 22754  022C' 0839'              	movf	??i1___fladd,w
 22755  022D' 05B3'              	andwf	i1___fladd@b+2,f
 22756  022E'                    i1l1550:
 22757  022E' 3643'              	lsrf	i1___fladd@bexp,w
 22758  022F' 00B9'              	movwf	??i1___fladd
 22759  0230' 0839'              	movf	??i1___fladd,w
 22760  0231' 00B4'              	movwf	i1___fladd@b+3
 22761  0232'                    i1l5378:
 22762  0232' 1FC1'              	btfss	i1___fladd@signs,7
 22763  0233' 2800'              	goto	u712_21
 22764  0234' 2800'              	goto	u712_20
 22765  0235'                    u712_21:
 22766  0235' 2800'              	goto	i1l1551
 22767  0236'                    u712_20:
 22768  0236'                    i1l5380:
 22769  0236' 17B4'              	bsf	i1___fladd@b+3,7
 22770  0237'                    i1l1551:
 22771  0237'                    i1l1521:
 22772  0237' 0008               	return
 22773  0238'                    __end_ofi1___fladd:
 22774                           
 22775                           	psect	text62
 22776  0000'                    __ptext62:	
 22777 ;; *************** function i1___flneg *****************
 22778 ;; Defined at:
 22779 ;;		line 15 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/flneg.c"
 22780 ;; Parameters:    Size  Location     Type
 22781 ;;  f1              4    0[COMMON] unsigned char 
 22782 ;; Auto vars:     Size  Location     Type
 22783 ;;		None
 22784 ;; Return value:  Size  Location     Type
 22785 ;;                  4    0[COMMON] unsigned char 
 22786 ;; Registers used:
 22787 ;;		wreg
 22788 ;; Tracked objects:
 22789 ;;		On entry : 0/0
 22790 ;;		On exit  : 0/0
 22791 ;;		Unchanged: 0/0
 22792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22793 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22796 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22797 ;;Total ram usage:        4 bytes
 22798 ;; Hardware stack levels used:    1
 22799 ;; This function calls:
 22800 ;;		Nothing
 22801 ;; This function is called by:
 22802 ;;		i1_sprintf
 22803 ;; This function uses a non-reentrant model
 22804 ;;
 22805                           
 22806                           
 22807                           ;psect for function i1___flneg
 22808  0000'                    i1___flneg:
 22809  0000'                    i1l5748:	
 22810                           ;incstack = 0
 22811                           ; Regs used in i1___flneg: [wreg]
 22812                           
 22813  0000' 0803'              	movf	i1___flneg@f1+3,w
 22814  0001' 0402'              	iorwf	i1___flneg@f1+2,w
 22815  0002' 0401'              	iorwf	i1___flneg@f1+1,w
 22816  0003' 0400'              	iorwf	i1___flneg@f1,w
 22817  0004' 1903               	skipnz
 22818  0005' 2800'              	goto	u790_21
 22819  0006' 2800'              	goto	u790_20
 22820  0007'                    u790_21:
 22821  0007' 2800'              	goto	i1l5752
 22822  0008'                    u790_20:
 22823  0008'                    i1l5750:
 22824  0008' 3080               	movlw	128
 22825  0009' 0683'              	xorwf	i1___flneg@f1+3,f
 22826  000A'                    i1l5752:
 22827  000A'                    i1l1380:
 22828  000A' 0008               	return
 22829  000B'                    __end_ofi1___flneg:
 22830                           
 22831                           	psect	text63
 22832  0000'                    __ptext63:	
 22833 ;; *************** function i1___flge *****************
 22834 ;; Defined at:
 22835 ;;		line 4 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/flge.c"
 22836 ;; Parameters:    Size  Location     Type
 22837 ;;  ff1             4    0[COMMON] unsigned char 
 22838 ;;  ff2             4    4[COMMON] unsigned char 
 22839 ;; Auto vars:     Size  Location     Type
 22840 ;;		None
 22841 ;; Return value:  Size  Location     Type
 22842 ;;		None               void
 22843 ;; Registers used:
 22844 ;;		wreg, status,2, status,0
 22845 ;; Tracked objects:
 22846 ;;		On entry : 0/0
 22847 ;;		On exit  : 0/0
 22848 ;;		Unchanged: 0/0
 22849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22850 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22852 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22853 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22854 ;;Total ram usage:       12 bytes
 22855 ;; Hardware stack levels used:    1
 22856 ;; This function calls:
 22857 ;;		Nothing
 22858 ;; This function is called by:
 22859 ;;		i1_sprintf
 22860 ;; This function uses a non-reentrant model
 22861 ;;
 22862                           
 22863                           
 22864                           ;psect for function i1___flge
 22865  0000'                    i1___flge:
 22866  0000'                    i1l5728:	
 22867                           ;incstack = 0
 22868                           ; Regs used in i1___flge: [wreg+status,2+status,0]
 22869                           
 22870  0000' 3000               	movlw	0
 22871  0001' 0500'              	andwf	i1___flge@ff1,w
 22872  0002' 0088'              	movwf	??i1___flge
 22873  0003' 3000               	movlw	0
 22874  0004' 0501'              	andwf	i1___flge@ff1+1,w
 22875  0005' 0089'              	movwf	??i1___flge+1
 22876  0006' 3080               	movlw	128
 22877  0007' 0502'              	andwf	i1___flge@ff1+2,w
 22878  0008' 008A'              	movwf	??i1___flge+2
 22879  0009' 307F               	movlw	127
 22880  000A' 0503'              	andwf	i1___flge@ff1+3,w
 22881  000B' 008B'              	movwf	??i1___flge+3
 22882  000C' 080B'              	movf	??i1___flge+3,w
 22883  000D' 040A'              	iorwf	??i1___flge+2,w
 22884  000E' 0409'              	iorwf	??i1___flge+1,w
 22885  000F' 0408'              	iorwf	??i1___flge,w
 22886  0010' 1D03               	skipz
 22887  0011' 2800'              	goto	u785_21
 22888  0012' 2800'              	goto	u785_20
 22889  0013'                    u785_21:
 22890  0013' 2800'              	goto	i1l1372
 22891  0014'                    u785_20:
 22892  0014'                    i1l5730:
 22893  0014' 3000               	movlw	0
 22894  0015' 0083'              	movwf	i1___flge@ff1+3
 22895  0016' 3000               	movlw	0
 22896  0017' 0082'              	movwf	i1___flge@ff1+2
 22897  0018' 3000               	movlw	0
 22898  0019' 0081'              	movwf	i1___flge@ff1+1
 22899  001A' 3000               	movlw	0
 22900  001B' 0080'              	movwf	i1___flge@ff1
 22901  001C'                    i1l1372:
 22902  001C' 3000               	movlw	0
 22903  001D' 0504'              	andwf	i1___flge@ff2,w
 22904  001E' 0088'              	movwf	??i1___flge
 22905  001F' 3000               	movlw	0
 22906  0020' 0505'              	andwf	i1___flge@ff2+1,w
 22907  0021' 0089'              	movwf	??i1___flge+1
 22908  0022' 3080               	movlw	128
 22909  0023' 0506'              	andwf	i1___flge@ff2+2,w
 22910  0024' 008A'              	movwf	??i1___flge+2
 22911  0025' 307F               	movlw	127
 22912  0026' 0507'              	andwf	i1___flge@ff2+3,w
 22913  0027' 008B'              	movwf	??i1___flge+3
 22914  0028' 080B'              	movf	??i1___flge+3,w
 22915  0029' 040A'              	iorwf	??i1___flge+2,w
 22916  002A' 0409'              	iorwf	??i1___flge+1,w
 22917  002B' 0408'              	iorwf	??i1___flge,w
 22918  002C' 1D03               	skipz
 22919  002D' 2800'              	goto	u786_21
 22920  002E' 2800'              	goto	u786_20
 22921  002F'                    u786_21:
 22922  002F' 2800'              	goto	i1l5734
 22923  0030'                    u786_20:
 22924  0030'                    i1l5732:
 22925  0030' 3000               	movlw	0
 22926  0031' 0087'              	movwf	i1___flge@ff2+3
 22927  0032' 3000               	movlw	0
 22928  0033' 0086'              	movwf	i1___flge@ff2+2
 22929  0034' 3000               	movlw	0
 22930  0035' 0085'              	movwf	i1___flge@ff2+1
 22931  0036' 3000               	movlw	0
 22932  0037' 0084'              	movwf	i1___flge@ff2
 22933  0038'                    i1l5734:
 22934  0038' 1F83'              	btfss	i1___flge@ff1+3,7
 22935  0039' 2800'              	goto	u787_21
 22936  003A' 2800'              	goto	u787_20
 22937  003B'                    u787_21:
 22938  003B' 2800'              	goto	i1l5738
 22939  003C'                    u787_20:
 22940  003C'                    i1l5736:
 22941  003C' 3000               	movlw	0
 22942  003D' 0088'              	movwf	??i1___flge
 22943  003E' 3000               	movlw	0
 22944  003F' 0089'              	movwf	??i1___flge+1
 22945  0040' 3000               	movlw	0
 22946  0041' 008A'              	movwf	??i1___flge+2
 22947  0042' 3080               	movlw	128
 22948  0043' 008B'              	movwf	??i1___flge+3
 22949  0044' 0800'              	movf	i1___flge@ff1,w
 22950  0045' 0288'              	subwf	??i1___flge,f
 22951  0046' 0801'              	movf	i1___flge@ff1+1,w
 22952  0047' 3B89'              	subwfb	??i1___flge+1,f
 22953  0048' 0802'              	movf	i1___flge@ff1+2,w
 22954  0049' 3B8A'              	subwfb	??i1___flge+2,f
 22955  004A' 0803'              	movf	i1___flge@ff1+3,w
 22956  004B' 3B8B'              	subwfb	??i1___flge+3,f
 22957  004C' 080B'              	movf	??i1___flge+3,w
 22958  004D' 0083'              	movwf	i1___flge@ff1+3
 22959  004E' 080A'              	movf	??i1___flge+2,w
 22960  004F' 0082'              	movwf	i1___flge@ff1+2
 22961  0050' 0809'              	movf	??i1___flge+1,w
 22962  0051' 0081'              	movwf	i1___flge@ff1+1
 22963  0052' 0808'              	movf	??i1___flge,w
 22964  0053' 0080'              	movwf	i1___flge@ff1
 22965  0054'                    i1l5738:
 22966  0054' 1F87'              	btfss	i1___flge@ff2+3,7
 22967  0055' 2800'              	goto	u788_21
 22968  0056' 2800'              	goto	u788_20
 22969  0057'                    u788_21:
 22970  0057' 2800'              	goto	i1l1375
 22971  0058'                    u788_20:
 22972  0058'                    i1l5740:
 22973  0058' 3000               	movlw	0
 22974  0059' 0088'              	movwf	??i1___flge
 22975  005A' 3000               	movlw	0
 22976  005B' 0089'              	movwf	??i1___flge+1
 22977  005C' 3000               	movlw	0
 22978  005D' 008A'              	movwf	??i1___flge+2
 22979  005E' 3080               	movlw	128
 22980  005F' 008B'              	movwf	??i1___flge+3
 22981  0060' 0804'              	movf	i1___flge@ff2,w
 22982  0061' 0288'              	subwf	??i1___flge,f
 22983  0062' 0805'              	movf	i1___flge@ff2+1,w
 22984  0063' 3B89'              	subwfb	??i1___flge+1,f
 22985  0064' 0806'              	movf	i1___flge@ff2+2,w
 22986  0065' 3B8A'              	subwfb	??i1___flge+2,f
 22987  0066' 0807'              	movf	i1___flge@ff2+3,w
 22988  0067' 3B8B'              	subwfb	??i1___flge+3,f
 22989  0068' 080B'              	movf	??i1___flge+3,w
 22990  0069' 0087'              	movwf	i1___flge@ff2+3
 22991  006A' 080A'              	movf	??i1___flge+2,w
 22992  006B' 0086'              	movwf	i1___flge@ff2+2
 22993  006C' 0809'              	movf	??i1___flge+1,w
 22994  006D' 0085'              	movwf	i1___flge@ff2+1
 22995  006E' 0808'              	movf	??i1___flge,w
 22996  006F' 0084'              	movwf	i1___flge@ff2
 22997  0070'                    i1l1375:
 22998  0070' 3080               	movlw	128
 22999  0071' 0683'              	xorwf	i1___flge@ff1+3,f
 23000  0072' 3080               	movlw	128
 23001  0073' 0687'              	xorwf	i1___flge@ff2+3,f
 23002  0074' 0807'              	movf	i1___flge@ff2+3,w
 23003  0075' 0203'              	subwf	i1___flge@ff1+3,w
 23004  0076' 1D03               	skipz
 23005  0077' 2800'              	goto	u789_25
 23006  0078' 0806'              	movf	i1___flge@ff2+2,w
 23007  0079' 0202'              	subwf	i1___flge@ff1+2,w
 23008  007A' 1D03               	skipz
 23009  007B' 2800'              	goto	u789_25
 23010  007C' 0805'              	movf	i1___flge@ff2+1,w
 23011  007D' 0201'              	subwf	i1___flge@ff1+1,w
 23012  007E' 1D03               	skipz
 23013  007F' 2800'              	goto	u789_25
 23014  0080' 0804'              	movf	i1___flge@ff2,w
 23015  0081' 0200'              	subwf	i1___flge@ff1,w
 23016  0082'                    u789_25:
 23017  0082' 1803               	skipnc
 23018  0083' 2800'              	goto	u789_21
 23019  0084' 2800'              	goto	u789_20
 23020  0085'                    u789_21:
 23021  0085' 2800'              	goto	i1l5744
 23022  0086'                    u789_20:
 23023  0086'                    i1l5742:
 23024  0086' 1003               	clrc
 23025  0087' 2800'              	goto	i1l1376
 23026  0088'                    i1l5744:
 23027  0088' 1403               	setc
 23028  0089'                    i1l1376:
 23029  0089' 0008               	return
 23030  008A'                    __end_ofi1___flge:
 23031                           
 23032                           	psect	text64
 23033  0000'                    __ptext64:	
 23034 ;; *************** function i1___fleq *****************
 23035 ;; Defined at:
 23036 ;;		line 4 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/fleq.c"
 23037 ;; Parameters:    Size  Location     Type
 23038 ;;  ff1             4    0[COMMON] unsigned char 
 23039 ;;  ff2             4    4[COMMON] unsigned char 
 23040 ;; Auto vars:     Size  Location     Type
 23041 ;;		None
 23042 ;; Return value:  Size  Location     Type
 23043 ;;		None               void
 23044 ;; Registers used:
 23045 ;;		wreg, status,2, status,0
 23046 ;; Tracked objects:
 23047 ;;		On entry : 0/0
 23048 ;;		On exit  : 0/0
 23049 ;;		Unchanged: 0/0
 23050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23051 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23053 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23054 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23055 ;;Total ram usage:       12 bytes
 23056 ;; Hardware stack levels used:    1
 23057 ;; This function calls:
 23058 ;;		Nothing
 23059 ;; This function is called by:
 23060 ;;		i1_sprintf
 23061 ;; This function uses a non-reentrant model
 23062 ;;
 23063                           
 23064                           
 23065                           ;psect for function i1___fleq
 23066  0000'                    i1___fleq:
 23067  0000'                    i1l5716:	
 23068                           ;incstack = 0
 23069                           ; Regs used in i1___fleq: [wreg+status,2+status,0]
 23070                           
 23071  0000' 3000               	movlw	0
 23072  0001' 0500'              	andwf	i1___fleq@ff1,w
 23073  0002' 0088'              	movwf	??i1___fleq
 23074  0003' 3000               	movlw	0
 23075  0004' 0501'              	andwf	i1___fleq@ff1+1,w
 23076  0005' 0089'              	movwf	??i1___fleq+1
 23077  0006' 3080               	movlw	128
 23078  0007' 0502'              	andwf	i1___fleq@ff1+2,w
 23079  0008' 008A'              	movwf	??i1___fleq+2
 23080  0009' 307F               	movlw	127
 23081  000A' 0503'              	andwf	i1___fleq@ff1+3,w
 23082  000B' 008B'              	movwf	??i1___fleq+3
 23083  000C' 080B'              	movf	??i1___fleq+3,w
 23084  000D' 040A'              	iorwf	??i1___fleq+2,w
 23085  000E' 0409'              	iorwf	??i1___fleq+1,w
 23086  000F' 0408'              	iorwf	??i1___fleq,w
 23087  0010' 1D03               	skipz
 23088  0011' 2800'              	goto	u782_21
 23089  0012' 2800'              	goto	u782_20
 23090  0013'                    u782_21:
 23091  0013' 2800'              	goto	i1l1367
 23092  0014'                    u782_20:
 23093  0014'                    i1l5718:
 23094  0014' 3000               	movlw	0
 23095  0015' 0083'              	movwf	i1___fleq@ff1+3
 23096  0016' 3000               	movlw	0
 23097  0017' 0082'              	movwf	i1___fleq@ff1+2
 23098  0018' 3000               	movlw	0
 23099  0019' 0081'              	movwf	i1___fleq@ff1+1
 23100  001A' 3000               	movlw	0
 23101  001B' 0080'              	movwf	i1___fleq@ff1
 23102  001C'                    i1l1367:
 23103  001C' 3000               	movlw	0
 23104  001D' 0504'              	andwf	i1___fleq@ff2,w
 23105  001E' 0088'              	movwf	??i1___fleq
 23106  001F' 3000               	movlw	0
 23107  0020' 0505'              	andwf	i1___fleq@ff2+1,w
 23108  0021' 0089'              	movwf	??i1___fleq+1
 23109  0022' 3080               	movlw	128
 23110  0023' 0506'              	andwf	i1___fleq@ff2+2,w
 23111  0024' 008A'              	movwf	??i1___fleq+2
 23112  0025' 307F               	movlw	127
 23113  0026' 0507'              	andwf	i1___fleq@ff2+3,w
 23114  0027' 008B'              	movwf	??i1___fleq+3
 23115  0028' 080B'              	movf	??i1___fleq+3,w
 23116  0029' 040A'              	iorwf	??i1___fleq+2,w
 23117  002A' 0409'              	iorwf	??i1___fleq+1,w
 23118  002B' 0408'              	iorwf	??i1___fleq,w
 23119  002C' 1D03               	skipz
 23120  002D' 2800'              	goto	u783_21
 23121  002E' 2800'              	goto	u783_20
 23122  002F'                    u783_21:
 23123  002F' 2800'              	goto	i1l1368
 23124  0030'                    u783_20:
 23125  0030'                    i1l5720:
 23126  0030' 3000               	movlw	0
 23127  0031' 0087'              	movwf	i1___fleq@ff2+3
 23128  0032' 3000               	movlw	0
 23129  0033' 0086'              	movwf	i1___fleq@ff2+2
 23130  0034' 3000               	movlw	0
 23131  0035' 0085'              	movwf	i1___fleq@ff2+1
 23132  0036' 3000               	movlw	0
 23133  0037' 0084'              	movwf	i1___fleq@ff2
 23134  0038'                    i1l1368:
 23135  0038' 0807'              	movf	i1___fleq@ff2+3,w
 23136  0039' 0603'              	xorwf	i1___fleq@ff1+3,w
 23137  003A' 1D03               	skipz
 23138  003B' 2800'              	goto	u784_25
 23139  003C' 0806'              	movf	i1___fleq@ff2+2,w
 23140  003D' 0602'              	xorwf	i1___fleq@ff1+2,w
 23141  003E' 1D03               	skipz
 23142  003F' 2800'              	goto	u784_25
 23143  0040' 0805'              	movf	i1___fleq@ff2+1,w
 23144  0041' 0601'              	xorwf	i1___fleq@ff1+1,w
 23145  0042' 1D03               	skipz
 23146  0043' 2800'              	goto	u784_25
 23147  0044' 0804'              	movf	i1___fleq@ff2,w
 23148  0045' 0600'              	xorwf	i1___fleq@ff1,w
 23149  0046'                    u784_25:
 23150  0046' 1903               	skipnz
 23151  0047' 2800'              	goto	u784_21
 23152  0048' 2800'              	goto	u784_20
 23153  0049'                    u784_21:
 23154  0049' 2800'              	goto	i1l5724
 23155  004A'                    u784_20:
 23156  004A'                    i1l5722:
 23157  004A' 1003               	clrc
 23158  004B' 2800'              	goto	i1l1369
 23159  004C'                    i1l5724:
 23160  004C' 1403               	setc
 23161  004D'                    i1l1369:
 23162  004D' 0008               	return
 23163  004E'                    __end_ofi1___fleq:
 23164                           
 23165                           	psect	text65
 23166  0000'                    __ptext65:	
 23167 ;; *************** function i1_LCDstr *****************
 23168 ;; Defined at:
 23169 ;;		line 160 in file "main.c"
 23170 ;; Parameters:    Size  Location     Type
 23171 ;;  p               2    9[COMMON] PTR unsigned char 
 23172 ;;		 -> sensor_ISR@buf(17), count_time_ISR@buf(17), main@buf(17), 
 23173 ;; Auto vars:     Size  Location     Type
 23174 ;;  c               1    0[BANK0 ] unsigned char 
 23175 ;; Return value:  Size  Location     Type
 23176 ;;                  1    wreg      void 
 23177 ;; Registers used:
 23178 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23179 ;; Tracked objects:
 23180 ;;		On entry : 0/0
 23181 ;;		On exit  : 0/0
 23182 ;;		Unchanged: 0/0
 23183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23184 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23185 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23186 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23187 ;;      Totals:         5       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23188 ;;Total ram usage:        6 bytes
 23189 ;; Hardware stack levels used:    1
 23190 ;; Hardware stack levels required when called:    3
 23191 ;; This function calls:
 23192 ;;		i1_LCDchar
 23193 ;; This function is called by:
 23194 ;;		_count_time_ISR
 23195 ;; This function uses a non-reentrant model
 23196 ;;
 23197                           
 23198                           
 23199                           ;psect for function i1_LCDstr
 23200  0000'                    i1_LCDstr:
 23201  0000'                    i1l6430:	
 23202                           ;incstack = 0
 23203                           ; Regs used in i1_LCDstr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 23204                           
 23205                           
 23206                           ;main.c: 162: unsigned char c;;main.c: 164: while((c = *p++)) LCDchar(c);
 23207  0000' 2800'              	goto	i1l6434
 23208  0001'                    i1l6432:
 23209  0001' 0800'              	movf	i1LCDstr@c,w
 23210  0002' 3180' 2000' 3180'  	fcall	i1_LCDchar
 23211  0005'                    i1l6434:
 23212  0005' 080A'              	movf	i1LCDstr@p+1,w
 23213  0006' 008C'              	movwf	??i1_LCDstr+1
 23214  0007' 0809'              	movf	i1LCDstr@p,w
 23215  0008' 008B'              	movwf	??i1_LCDstr
 23216  0009' 0A89'              	incf	i1LCDstr@p,f
 23217  000A' 1903               	skipnz
 23218  000B' 0A8A'              	incf	i1LCDstr@p+1,f
 23219  000C' 080B'              	movf	??i1_LCDstr,w
 23220  000D' 0086               	movwf	6
 23221  000E' 080C'              	movf	??i1_LCDstr+1,w
 23222  000F' 0087               	movwf	7
 23223  0010' 0801               	movf	1,w
 23224  0011' 008D'              	movwf	??i1_LCDstr+2
 23225  0012' 080D'              	movf	??i1_LCDstr+2,w
 23226  0013' 0020               	movlb	0	; select bank0
 23227  0014' 0080'              	movwf	i1LCDstr@c
 23228  0015' 0800'              	movf	i1LCDstr@c,w
 23229  0016' 1D03               	btfss	3,2
 23230  0017' 2800'              	goto	u949_21
 23231  0018' 2800'              	goto	u949_20
 23232  0019'                    u949_21:
 23233  0019' 2800'              	goto	i1l6432
 23234  001A'                    u949_20:
 23235  001A'                    i1l787:
 23236  001A' 0008               	return
 23237  001B'                    __end_ofi1_LCDstr:
 23238                           
 23239                           	psect	text66
 23240  0000'                    __ptext66:	
 23241 ;; *************** function i1_LCDchar *****************
 23242 ;; Defined at:
 23243 ;;		line 155 in file "main.c"
 23244 ;; Parameters:    Size  Location     Type
 23245 ;;  c               1    wreg     unsigned char 
 23246 ;; Auto vars:     Size  Location     Type
 23247 ;;  c               1    8[COMMON] unsigned char 
 23248 ;; Return value:  Size  Location     Type
 23249 ;;                  1    wreg      void 
 23250 ;; Registers used:
 23251 ;;		wreg, status,2, status,0, pclath, cstack
 23252 ;; Tracked objects:
 23253 ;;		On entry : 0/0
 23254 ;;		On exit  : 0/0
 23255 ;;		Unchanged: 0/0
 23256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23258 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23260 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23261 ;;Total ram usage:        1 bytes
 23262 ;; Hardware stack levels used:    1
 23263 ;; Hardware stack levels required when called:    2
 23264 ;; This function calls:
 23265 ;;		i1_LCDsend2x4
 23266 ;; This function is called by:
 23267 ;;		i1_LCDstr
 23268 ;; This function uses a non-reentrant model
 23269 ;;
 23270                           
 23271                           
 23272                           ;psect for function i1_LCDchar
 23273  0000'                    i1_LCDchar:
 23274                           
 23275                           ;incstack = 0
 23276                           ; Regs used in i1_LCDchar: [wreg+status,2+status,0+pclath+cstack]
 23277                           ;i1LCDchar@c stored from wreg
 23278  0000' 0088'              	movwf	i1LCDchar@c
 23279  0001'                    i1l5566:
 23280                           
 23281                           ;main.c: 157: LCDsend2x4(c, 0x01);
 23282  0001' 0182'              	clrf	i1LCDsend2x4@mode
 23283  0002' 0A82'              	incf	i1LCDsend2x4@mode,f
 23284  0003' 0808'              	movf	i1LCDchar@c,w
 23285  0004' 3180' 2000' 3180'  	fcall	i1_LCDsend2x4
 23286  0007'                    i1l781:
 23287  0007' 0008               	return
 23288  0008'                    __end_ofi1_LCDchar:
 23289                           
 23290                           	psect	text67
 23291  0000'                    __ptext67:	
 23292 ;; *************** function i1_LCDcmd *****************
 23293 ;; Defined at:
 23294 ;;		line 150 in file "main.c"
 23295 ;; Parameters:    Size  Location     Type
 23296 ;;  c               1    wreg     unsigned char 
 23297 ;; Auto vars:     Size  Location     Type
 23298 ;;  c               1    8[COMMON] unsigned char 
 23299 ;; Return value:  Size  Location     Type
 23300 ;;                  1    wreg      void 
 23301 ;; Registers used:
 23302 ;;		wreg, status,2, status,0, pclath, cstack
 23303 ;; Tracked objects:
 23304 ;;		On entry : 0/0
 23305 ;;		On exit  : 0/0
 23306 ;;		Unchanged: 0/0
 23307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23309 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23311 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23312 ;;Total ram usage:        1 bytes
 23313 ;; Hardware stack levels used:    1
 23314 ;; Hardware stack levels required when called:    2
 23315 ;; This function calls:
 23316 ;;		i1_LCDsend2x4
 23317 ;; This function is called by:
 23318 ;;		_count_time_ISR
 23319 ;; This function uses a non-reentrant model
 23320 ;;
 23321                           
 23322                           
 23323                           ;psect for function i1_LCDcmd
 23324  0000'                    i1_LCDcmd:
 23325                           
 23326                           ;incstack = 0
 23327                           ; Regs used in i1_LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 23328                           ;i1LCDcmd@c stored from wreg
 23329  0000' 0088'              	movwf	i1LCDcmd@c
 23330  0001'                    i1l6428:
 23331                           
 23332                           ;main.c: 152: LCDsend2x4(c, 0);
 23333  0001' 0182'              	clrf	i1LCDsend2x4@mode
 23334  0002' 0808'              	movf	i1LCDcmd@c,w
 23335  0003' 3180' 2000' 3180'  	fcall	i1_LCDsend2x4
 23336  0006'                    i1l778:
 23337  0006' 0008               	return
 23338  0007'                    __end_ofi1_LCDcmd:
 23339                           
 23340                           	psect	text68
 23341  0000'                    __ptext68:	
 23342 ;; *************** function i1_LCDsend2x4 *****************
 23343 ;; Defined at:
 23344 ;;		line 104 in file "main.c"
 23345 ;; Parameters:    Size  Location     Type
 23346 ;;  c               1    wreg     unsigned char 
 23347 ;;  mode            1    2[COMMON] unsigned char 
 23348 ;; Auto vars:     Size  Location     Type
 23349 ;;  c               1    5[COMMON] unsigned char 
 23350 ;;  lc              1    7[COMMON] unsigned char 
 23351 ;;  hc              1    6[COMMON] unsigned char 
 23352 ;; Return value:  Size  Location     Type
 23353 ;;                  1    wreg      void 
 23354 ;; Registers used:
 23355 ;;		wreg, status,2, status,0, pclath, cstack
 23356 ;; Tracked objects:
 23357 ;;		On entry : 0/0
 23358 ;;		On exit  : 0/0
 23359 ;;		Unchanged: 0/0
 23360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23361 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23362 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23363 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23364 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23365 ;;Total ram usage:        6 bytes
 23366 ;; Hardware stack levels used:    1
 23367 ;; Hardware stack levels required when called:    1
 23368 ;; This function calls:
 23369 ;;		i1_WriteI2C
 23370 ;; This function is called by:
 23371 ;;		i1_LCDcmd
 23372 ;;		i1_LCDchar
 23373 ;; This function uses a non-reentrant model
 23374 ;;
 23375                           
 23376                           
 23377                           ;psect for function i1_LCDsend2x4
 23378  0000'                    i1_LCDsend2x4:
 23379                           
 23380                           ;incstack = 0
 23381                           ; Regs used in i1_LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 23382                           ;i1LCDsend2x4@c stored from wreg
 23383  0000' 0085'              	movwf	i1LCDsend2x4@c
 23384  0001'                    i1l5022:
 23385                           
 23386                           ;main.c: 106: unsigned char hc;;main.c: 107: unsigned char lc;;main.c: 109: hc = c & 0xf
      +                          0;
 23387  0001' 0805'              	movf	i1LCDsend2x4@c,w
 23388  0002' 39F0               	andlw	240
 23389  0003' 0083'              	movwf	??i1_LCDsend2x4
 23390  0004' 0803'              	movf	??i1_LCDsend2x4,w
 23391  0005' 0086'              	movwf	i1LCDsend2x4@hc
 23392  0006'                    i1l5024:
 23393                           
 23394                           ;main.c: 110: lc = (c << 4) & 0xf0;
 23395  0006' 0805'              	movf	i1LCDsend2x4@c,w
 23396  0007' 0083'              	movwf	??i1_LCDsend2x4
 23397  0008' 3003               	movlw	3
 23398  0009'                    u626_25:
 23399  0009' 3583'              	lslf	??i1_LCDsend2x4,f
 23400  000A' 3EFF               	addlw	-1
 23401  000B' 1D03               	skipz
 23402  000C' 2800'              	goto	u626_25
 23403  000D' 3503'              	lslf	??i1_LCDsend2x4,w
 23404  000E' 39F0               	andlw	240
 23405  000F' 0084'              	movwf	??i1_LCDsend2x4+1
 23406  0010' 0804'              	movf	??i1_LCDsend2x4+1,w
 23407  0011' 0087'              	movwf	i1LCDsend2x4@lc
 23408  0012'                    i1l5026:	
 23409                           ;main.c: 112: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 23410                           
 23411  0012' 0023               	movlb	3	; select bank3
 23412  0013' 0C0F               	rrf	15,w	;volatile
 23413  0014' 0C89               	rrf	9,f
 23414  0015' 3901               	andlw	1
 23415  0016' 0083'              	movwf	??i1_LCDsend2x4
 23416  0017' 0811               	movf	17,w	;volatile
 23417  0018' 391F               	andlw	31
 23418  0019' 0403'              	iorwf	??i1_LCDsend2x4,w
 23419  001A' 1D03               	btfss	3,2
 23420  001B' 2800'              	goto	u627_21
 23421  001C' 2800'              	goto	u627_20
 23422  001D'                    u627_21:
 23423  001D' 2800'              	goto	i1l5026
 23424  001E'                    u627_20:
 23425  001E'                    i1l741:
 23426                           
 23427                           ;main.c: 113: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 23428  001E' 1411               	bsf	17,0	;volatile
 23429  001F'                    i1l742:
 23430  001F' 1811               	btfsc	17,0	;volatile
 23431  0020' 2800'              	goto	u628_21
 23432  0021' 2800'              	goto	u628_20
 23433  0022'                    u628_21:
 23434  0022' 2800'              	goto	i1l742
 23435  0023'                    u628_20:
 23436  0023'                    i1l5028:
 23437  0023' 0C0F               	rrf	15,w	;volatile
 23438  0024' 0C89               	rrf	9,f
 23439  0025' 3901               	andlw	1
 23440  0026' 0083'              	movwf	??i1_LCDsend2x4
 23441  0027' 0811               	movf	17,w	;volatile
 23442  0028' 391F               	andlw	31
 23443  0029' 0403'              	iorwf	??i1_LCDsend2x4,w
 23444  002A' 1D03               	btfss	3,2
 23445  002B' 2800'              	goto	u629_21
 23446  002C' 2800'              	goto	u629_20
 23447  002D'                    u629_21:
 23448  002D' 2800'              	goto	i1l5028
 23449  002E'                    u629_20:
 23450  002E'                    i1l5030:
 23451                           
 23452                           ;main.c: 114: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 23453  002E' 304E               	movlw	78
 23454  002F' 3180' 2000' 3180'  	fcall	i1_WriteI2C
 23455  0032'                    i1l5032:
 23456  0032' 0023               	movlb	3	; select bank3
 23457  0033' 0C0F               	rrf	15,w	;volatile
 23458  0034' 0C89               	rrf	9,f
 23459  0035' 3901               	andlw	1
 23460  0036' 0083'              	movwf	??i1_LCDsend2x4
 23461  0037' 0811               	movf	17,w	;volatile
 23462  0038' 391F               	andlw	31
 23463  0039' 0403'              	iorwf	??i1_LCDsend2x4,w
 23464  003A' 1D03               	btfss	3,2
 23465  003B' 2800'              	goto	u630_21
 23466  003C' 2800'              	goto	u630_20
 23467  003D'                    u630_21:
 23468  003D' 2800'              	goto	i1l5032
 23469  003E'                    u630_20:
 23470  003E'                    i1l5034:
 23471                           
 23472                           ;main.c: 115: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 23473  003E' 0806'              	movf	i1LCDsend2x4@hc,w
 23474  003F' 0402'              	iorwf	i1LCDsend2x4@mode,w
 23475  0040' 3808               	iorlw	8
 23476  0041' 3180' 2000' 3180'  	fcall	i1_WriteI2C
 23477  0044'                    i1l5036:
 23478  0044' 0023               	movlb	3	; select bank3
 23479  0045' 0C0F               	rrf	15,w	;volatile
 23480  0046' 0C89               	rrf	9,f
 23481  0047' 3901               	andlw	1
 23482  0048' 0083'              	movwf	??i1_LCDsend2x4
 23483  0049' 0811               	movf	17,w	;volatile
 23484  004A' 391F               	andlw	31
 23485  004B' 0403'              	iorwf	??i1_LCDsend2x4,w
 23486  004C' 1D03               	btfss	3,2
 23487  004D' 2800'              	goto	u631_21
 23488  004E' 2800'              	goto	u631_20
 23489  004F'                    u631_21:
 23490  004F' 2800'              	goto	i1l5036
 23491  0050'                    u631_20:
 23492  0050'                    i1l5038:
 23493                           
 23494                           ;main.c: 116: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 23495  0050' 0806'              	movf	i1LCDsend2x4@hc,w
 23496  0051' 0402'              	iorwf	i1LCDsend2x4@mode,w
 23497  0052' 380C               	iorlw	12
 23498  0053' 3180' 2000' 3180'  	fcall	i1_WriteI2C
 23499  0056'                    i1l5040:
 23500  0056' 0023               	movlb	3	; select bank3
 23501  0057' 0C0F               	rrf	15,w	;volatile
 23502  0058' 0C89               	rrf	9,f
 23503  0059' 3901               	andlw	1
 23504  005A' 0083'              	movwf	??i1_LCDsend2x4
 23505  005B' 0811               	movf	17,w	;volatile
 23506  005C' 391F               	andlw	31
 23507  005D' 0403'              	iorwf	??i1_LCDsend2x4,w
 23508  005E' 1D03               	btfss	3,2
 23509  005F' 2800'              	goto	u632_21
 23510  0060' 2800'              	goto	u632_20
 23511  0061'                    u632_21:
 23512  0061' 2800'              	goto	i1l5040
 23513  0062'                    u632_20:
 23514  0062'                    i1l756:
 23515  0062'                    i1l5042:	
 23516                           ;main.c: 117: _delay((unsigned long)((1)*(500000/4000000.0)));
 23517                           
 23518                           
 23519                           ;main.c: 118: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 23520  0062' 0806'              	movf	i1LCDsend2x4@hc,w
 23521  0063' 0402'              	iorwf	i1LCDsend2x4@mode,w
 23522  0064' 3808               	iorlw	8
 23523  0065' 3180' 2000' 3180'  	fcall	i1_WriteI2C
 23524  0068'                    i1l5044:
 23525  0068' 0023               	movlb	3	; select bank3
 23526  0069' 0C0F               	rrf	15,w	;volatile
 23527  006A' 0C89               	rrf	9,f
 23528  006B' 3901               	andlw	1
 23529  006C' 0083'              	movwf	??i1_LCDsend2x4
 23530  006D' 0811               	movf	17,w	;volatile
 23531  006E' 391F               	andlw	31
 23532  006F' 0403'              	iorwf	??i1_LCDsend2x4,w
 23533  0070' 1D03               	btfss	3,2
 23534  0071' 2800'              	goto	u633_21
 23535  0072' 2800'              	goto	u633_20
 23536  0073'                    u633_21:
 23537  0073' 2800'              	goto	i1l5044
 23538  0074'                    u633_20:
 23539  0074'                    i1l5046:
 23540                           
 23541                           ;main.c: 119: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 23542  0074' 0807'              	movf	i1LCDsend2x4@lc,w
 23543  0075' 0402'              	iorwf	i1LCDsend2x4@mode,w
 23544  0076' 3808               	iorlw	8
 23545  0077' 3180' 2000' 3180'  	fcall	i1_WriteI2C
 23546  007A'                    i1l5048:
 23547  007A' 0023               	movlb	3	; select bank3
 23548  007B' 0C0F               	rrf	15,w	;volatile
 23549  007C' 0C89               	rrf	9,f
 23550  007D' 3901               	andlw	1
 23551  007E' 0083'              	movwf	??i1_LCDsend2x4
 23552  007F' 0811               	movf	17,w	;volatile
 23553  0080' 391F               	andlw	31
 23554  0081' 0403'              	iorwf	??i1_LCDsend2x4,w
 23555  0082' 1D03               	btfss	3,2
 23556  0083' 2800'              	goto	u634_21
 23557  0084' 2800'              	goto	u634_20
 23558  0085'                    u634_21:
 23559  0085' 2800'              	goto	i1l5048
 23560  0086'                    u634_20:
 23561  0086'                    i1l5050:
 23562                           
 23563                           ;main.c: 120: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 23564  0086' 0807'              	movf	i1LCDsend2x4@lc,w
 23565  0087' 0402'              	iorwf	i1LCDsend2x4@mode,w
 23566  0088' 380C               	iorlw	12
 23567  0089' 3180' 2000' 3180'  	fcall	i1_WriteI2C
 23568  008C'                    i1l5052:
 23569  008C' 0023               	movlb	3	; select bank3
 23570  008D' 0C0F               	rrf	15,w	;volatile
 23571  008E' 0C89               	rrf	9,f
 23572  008F' 3901               	andlw	1
 23573  0090' 0083'              	movwf	??i1_LCDsend2x4
 23574  0091' 0811               	movf	17,w	;volatile
 23575  0092' 391F               	andlw	31
 23576  0093' 0403'              	iorwf	??i1_LCDsend2x4,w
 23577  0094' 1D03               	btfss	3,2
 23578  0095' 2800'              	goto	u635_21
 23579  0096' 2800'              	goto	u635_20
 23580  0097'                    u635_21:
 23581  0097' 2800'              	goto	i1l5052
 23582  0098'                    u635_20:
 23583  0098'                    i1l765:
 23584  0098'                    i1l5054:	
 23585                           ;main.c: 121: _delay((unsigned long)((1)*(500000/4000000.0)));
 23586                           
 23587                           
 23588                           ;main.c: 122: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 23589  0098' 0807'              	movf	i1LCDsend2x4@lc,w
 23590  0099' 0402'              	iorwf	i1LCDsend2x4@mode,w
 23591  009A' 3808               	iorlw	8
 23592  009B' 3180' 2000' 3180'  	fcall	i1_WriteI2C
 23593  009E'                    i1l5056:
 23594  009E' 0023               	movlb	3	; select bank3
 23595  009F' 0C0F               	rrf	15,w	;volatile
 23596  00A0' 0C89               	rrf	9,f
 23597  00A1' 3901               	andlw	1
 23598  00A2' 0083'              	movwf	??i1_LCDsend2x4
 23599  00A3' 0811               	movf	17,w	;volatile
 23600  00A4' 391F               	andlw	31
 23601  00A5' 0403'              	iorwf	??i1_LCDsend2x4,w
 23602  00A6' 1D03               	btfss	3,2
 23603  00A7' 2800'              	goto	u636_21
 23604  00A8' 2800'              	goto	u636_20
 23605  00A9'                    u636_21:
 23606  00A9' 2800'              	goto	i1l5056
 23607  00AA'                    u636_20:
 23608  00AA'                    i1l768:
 23609                           
 23610                           ;main.c: 123: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 23611  00AA' 1511               	bsf	17,2	;volatile
 23612  00AB'                    i1l769:
 23613  00AB' 1911               	btfsc	17,2	;volatile
 23614  00AC' 2800'              	goto	u637_21
 23615  00AD' 2800'              	goto	u637_20
 23616  00AE'                    u637_21:
 23617  00AE' 2800'              	goto	i1l769
 23618  00AF'                    u637_20:
 23619  00AF'                    i1l771:
 23620                           
 23621                           ;main.c: 124: _delay((unsigned long)((50)*(500000/4000000.0)));
 23622  00AF' 3200               	nop2	;2 cycle nop
 23623  00B0' 3200               	nop2	;2 cycle nop
 23624  00B1' 3200               	nop2	;2 cycle nop
 23625  00B2'                    i1l772:
 23626  00B2' 0008               	return
 23627  00B3'                    __end_ofi1_LCDsend2x4:
 23628                           
 23629                           	psect	text69
 23630  0000'                    __ptext69:	
 23631 ;; *************** function i1_WriteI2C *****************
 23632 ;; Defined at:
 23633 ;;		line 47 in file "I2C/i2c.c"
 23634 ;; Parameters:    Size  Location     Type
 23635 ;;  data_out        1    wreg     unsigned char 
 23636 ;; Auto vars:     Size  Location     Type
 23637 ;;  data_out        1    1[COMMON] unsigned char 
 23638 ;; Return value:  Size  Location     Type
 23639 ;;                  1    wreg      char 
 23640 ;; Registers used:
 23641 ;;		wreg, status,2, status,0
 23642 ;; Tracked objects:
 23643 ;;		On entry : 0/0
 23644 ;;		On exit  : 0/0
 23645 ;;		Unchanged: 0/0
 23646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23648 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23649 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23650 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23651 ;;Total ram usage:        2 bytes
 23652 ;; Hardware stack levels used:    1
 23653 ;; This function calls:
 23654 ;;		Nothing
 23655 ;; This function is called by:
 23656 ;;		i1_LCDsend2x4
 23657 ;; This function uses a non-reentrant model
 23658 ;;
 23659                           
 23660                           
 23661                           ;psect for function i1_WriteI2C
 23662  0000'                    i1_WriteI2C:
 23663                           
 23664                           ;incstack = 0
 23665                           ; Regs used in i1_WriteI2C: [wreg+status,2+status,0]
 23666                           ;i1WriteI2C@data_out stored from wreg
 23667  0000' 0081'              	movwf	i1WriteI2C@data_out
 23668  0001'                    i1l4978:
 23669                           
 23670                           ;i2c.c: 49: SSP1BUF = data_out;
 23671  0001' 0801'              	movf	i1WriteI2C@data_out,w
 23672  0002' 0023               	movlb	3	; select bank3
 23673  0003' 008C               	movwf	12	;volatile
 23674  0004'                    i1l4980:
 23675                           
 23676                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 23677  0004' 1F90               	btfss	16,7	;volatile
 23678  0005' 2800'              	goto	u614_21
 23679  0006' 2800'              	goto	u614_20
 23680  0007'                    u614_21:
 23681  0007' 2800'              	goto	i1l4986
 23682  0008'                    u614_20:
 23683  0008' 2800'              	goto	i1l30
 23684  0009'                    i1l4986:
 23685                           
 23686                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 23687  0009' 300F               	movlw	15
 23688  000A' 0510               	andwf	16,w	;volatile
 23689  000B' 0080'              	movwf	??i1_WriteI2C
 23690  000C' 3008               	movlw	8
 23691  000D' 0600'              	xorwf	??i1_WriteI2C,w
 23692  000E' 1903               	btfsc	3,2
 23693  000F' 2800'              	goto	u615_21
 23694  0010' 2800'              	goto	u615_20
 23695  0011'                    u615_21:
 23696  0011' 2800'              	goto	i1l4998
 23697  0012'                    u615_20:
 23698  0012'                    i1l4988:
 23699  0012' 300F               	movlw	15
 23700  0013' 0510               	andwf	16,w	;volatile
 23701  0014' 0080'              	movwf	??i1_WriteI2C
 23702  0015' 300B               	movlw	11
 23703  0016' 0600'              	xorwf	??i1_WriteI2C,w
 23704  0017' 1903               	btfsc	3,2
 23705  0018' 2800'              	goto	u616_21
 23706  0019' 2800'              	goto	u616_20
 23707  001A'                    u616_21:
 23708  001A' 2800'              	goto	i1l4998
 23709  001B'                    u616_20:
 23710  001B'                    i1l4990:
 23711                           
 23712                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 23713  001B' 1610               	bsf	16,4	;volatile
 23714  001C'                    i1l33:	
 23715                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 23716                           
 23717  001C' 002E               	movlb	14	; select bank14
 23718  001D' 1C0F               	btfss	15,0	;volatile
 23719  001E' 2800'              	goto	u617_21
 23720  001F' 2800'              	goto	u617_20
 23721  0020'                    u617_21:
 23722  0020' 2800'              	goto	i1l33
 23723  0021'                    u617_20:
 23724  0021'                    i1l35:
 23725                           
 23726                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 23727  0021' 0023               	movlb	3	; select bank3
 23728  0022' 190F               	btfsc	15,2	;volatile
 23729  0023' 2800'              	goto	u618_21
 23730  0024' 2800'              	goto	u618_20
 23731  0025'                    u618_21:
 23732  0025' 2800'              	goto	i1l30
 23733  0026'                    u618_20:
 23734  0026'                    i1l4992:
 23735  0026' 080F               	movf	15,w	;volatile
 23736  0027' 2800'              	goto	i1l30
 23737  0028'                    i1l4998:
 23738                           
 23739                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 23740  0028' 300F               	movlw	15
 23741  0029' 0510               	andwf	16,w	;volatile
 23742  002A' 0080'              	movwf	??i1_WriteI2C
 23743  002B' 3008               	movlw	8
 23744  002C' 0600'              	xorwf	??i1_WriteI2C,w
 23745  002D' 1903               	btfsc	3,2
 23746  002E' 2800'              	goto	u619_21
 23747  002F' 2800'              	goto	u619_20
 23748  0030'                    u619_21:
 23749  0030' 2800'              	goto	i1l42
 23750  0031'                    u619_20:
 23751  0031'                    i1l5000:
 23752  0031' 300F               	movlw	15
 23753  0032' 0510               	andwf	16,w	;volatile
 23754  0033' 0080'              	movwf	??i1_WriteI2C
 23755  0034' 300B               	movlw	11
 23756  0035' 0600'              	xorwf	??i1_WriteI2C,w
 23757  0036' 1D03               	btfss	3,2
 23758  0037' 2800'              	goto	u620_21
 23759  0038' 2800'              	goto	u620_20
 23760  0039'                    u620_21:
 23761  0039' 2800'              	goto	i1l30
 23762  003A'                    u620_20:
 23763  003A'                    i1l42:
 23764  003A' 180F               	btfsc	15,0	;volatile
 23765  003B' 2800'              	goto	u621_21
 23766  003C' 2800'              	goto	u621_20
 23767  003D'                    u621_21:
 23768  003D' 2800'              	goto	i1l42
 23769  003E'                    u621_20:
 23770  003E'                    i1l5002:
 23771  003E' 0C0F               	rrf	15,w	;volatile
 23772  003F' 0C89               	rrf	9,f
 23773  0040' 3901               	andlw	1
 23774  0041' 0080'              	movwf	??i1_WriteI2C
 23775  0042' 0811               	movf	17,w	;volatile
 23776  0043' 391F               	andlw	31
 23777  0044' 0400'              	iorwf	??i1_WriteI2C,w
 23778  0045' 1D03               	btfss	3,2
 23779  0046' 2800'              	goto	u622_21
 23780  0047' 2800'              	goto	u622_20
 23781  0048'                    u622_21:
 23782  0048' 2800'              	goto	i1l5002
 23783  0049'                    u622_20:
 23784  0049'                    i1l47:
 23785                           
 23786                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 23787  0049' 0811               	movf	17,w	;volatile
 23788  004A'                    i1l30:
 23789  004A' 0008               	return
 23790  004B'                    __end_ofi1_WriteI2C:
 23791                           
 23792                           	psect	text70
 23793  0000'                    __ptext70:	
 23794 ;; *************** function _TMR1_WriteTimer *****************
 23795 ;; Defined at:
 23796 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 23797 ;; Parameters:    Size  Location     Type
 23798 ;;  timerVal        2    0[COMMON] unsigned int 
 23799 ;; Auto vars:     Size  Location     Type
 23800 ;;		None
 23801 ;; Return value:  Size  Location     Type
 23802 ;;                  1    wreg      void 
 23803 ;; Registers used:
 23804 ;;		wreg, status,2
 23805 ;; Tracked objects:
 23806 ;;		On entry : 0/0
 23807 ;;		On exit  : 0/0
 23808 ;;		Unchanged: 0/0
 23809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23810 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23813 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23814 ;;Total ram usage:        2 bytes
 23815 ;; Hardware stack levels used:    1
 23816 ;; This function calls:
 23817 ;;		Nothing
 23818 ;; This function is called by:
 23819 ;;		_TMR1_ISR
 23820 ;;		_TMR1_Reload
 23821 ;; This function uses a non-reentrant model
 23822 ;;
 23823                           
 23824                           
 23825                           ;psect for function _TMR1_WriteTimer
 23826  0000'                    _TMR1_WriteTimer:
 23827  0000'                    i1l6850:	
 23828                           ;incstack = 0
 23829                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 23830                           
 23831                           
 23832                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 23833  0000' 0024               	movlb	4	; select bank4
 23834  0001' 1D0E               	btfss	14,2	;volatile
 23835  0002' 2800'              	goto	u1007_21
 23836  0003' 2800'              	goto	u1007_20
 23837  0004'                    u1007_21:
 23838  0004' 2800'              	goto	i1l6860
 23839  0005'                    u1007_20:
 23840  0005'                    i1l6852:
 23841                           
 23842                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 23843  0005' 100E               	bcf	14,0	;volatile
 23844  0006'                    i1l6854:
 23845                           
 23846                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 23847  0006' 0801'              	movf	TMR1_WriteTimer@timerVal+1,w
 23848  0007' 008D               	movwf	13	;volatile
 23849  0008'                    i1l6856:
 23850                           
 23851                           ;tmr1.c: 136: TMR1L = timerVal;
 23852  0008' 0800'              	movf	TMR1_WriteTimer@timerVal,w
 23853  0009' 008C               	movwf	12	;volatile
 23854  000A'                    i1l6858:
 23855                           
 23856                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 23857  000A' 140E               	bsf	14,0	;volatile
 23858                           
 23859                           ;tmr1.c: 140: }
 23860  000B' 2800'              	goto	i1l403
 23861  000C'                    i1l6860:
 23862                           
 23863                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 23864  000C' 0801'              	movf	TMR1_WriteTimer@timerVal+1,w
 23865  000D' 008D               	movwf	13	;volatile
 23866  000E'                    i1l6862:
 23867                           
 23868                           ;tmr1.c: 145: TMR1L = timerVal;
 23869  000E' 0800'              	movf	TMR1_WriteTimer@timerVal,w
 23870  000F' 008C               	movwf	12	;volatile
 23871  0010'                    i1l403:
 23872  0010' 0008               	return
 23873  0011'                    __end_of_TMR1_WriteTimer:
 23874  007E                     btemp	set	126	;btemp
 23875  007E                     int$flags	set	126
 23876  007E                     wtemp0	set	126
 23877                           
 23878                           	psect	config
 23879                           
 23880                           ;Config register CONFIG1 @ 0x8007
 23881                           ;	External Oscillator mode selection bits
 23882                           ;	FEXTOSC = OFF, Oscillator not enabled
 23883                           ;	Power-up default value for COSC bits
 23884                           ;	RSTOSC = LFINT, LFINTOSC
 23885                           ;	Clock Out Enable bit
 23886                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 23887                           ;	Clock Switch Enable bit
 23888                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 23889                           ;	Fail-Safe Clock Monitor Enable bit
 23890                           ;	FCMEN = ON, FSCM timer enabled
 23891  8007                     	org	32775
 23892  8007  3FDC               	dw	16348
 23893                           
 23894                           ;Config register CONFIG2 @ 0x8008
 23895                           ;	Master Clear Enable bit
 23896                           ;	MCLRE = ON, MCLR pin is Master Clear function
 23897                           ;	Power-up Timer Enable bit
 23898                           ;	PWRTE = OFF, PWRT disabled
 23899                           ;	Low-Power BOR enable bit
 23900                           ;	LPBOREN = OFF, ULPBOR disabled
 23901                           ;	Brown-out reset enable bits
 23902                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 23903                           ;	Brown-out Reset Voltage Selection
 23904                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 23905                           ;	Zero-cross detect disable
 23906                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 23907                           ;	Peripheral Pin Select one-way control
 23908                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 23909                           ;	Stack Overflow/Underflow Reset Enable bit
 23910                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 23911                           ;	Background Debugger
 23912                           ;	DEBUG = OFF, Background Debugger disabled
 23913  8008                     	org	32776
 23914  8008  3FFF               	dw	16383
 23915                           
 23916                           ;Config register CONFIG3 @ 0x8009
 23917                           ;	WDT Period Select bits
 23918                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 23919                           ;	WDT operating mode
 23920                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 23921                           ;	WDT Window Select bits
 23922                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 23923                           ;	WDT input clock selector
 23924                           ;	WDTCCS = SC, Software Control
 23925  8009                     	org	32777
 23926  8009  3F9F               	dw	16287
 23927                           
 23928                           ;Config register CONFIG4 @ 0x800A
 23929                           ;	UserNVM self-write protection bits
 23930                           ;	WRT = OFF, Write protection off
 23931                           ;	Scanner Enable bit
 23932                           ;	SCANE = available, Scanner module is available for use
 23933                           ;	Low Voltage Programming Enable bit
 23934                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 23935  800A                     	org	32778
 23936  800A  3FFF               	dw	16383
 23937                           
 23938                           ;Config register CONFIG5 @ 0x800B
 23939                           ;	UserNVM Program memory code protection bit
 23940                           ;	CP = OFF, Program Memory code protection disabled
 23941                           ;	DataNVM code protection bit
 23942                           ;	CPD = OFF, Data EEPROM code protection disabled
 23943  800B                     	org	32779
 23944  800B  3FFF               	dw	16383
 23945                           
 23946                           	psect	text1_split_1
 23947  0000'                    u14550:
 23948  0000'                    l9004:
 23949  0000' 0023               	movlb	3	; select bank3
 23950  0001' 0800'              	movf	(sprintf@fval+3)^(0+384),w
 23951  0002' 0022               	movlb	2	; select bank2
 23952  0003' 0080'              	movwf	(___fleq@ff1+3)^(0+256)
 23953  0004' 0023               	movlb	3	; select bank3
 23954  0005' 0800'              	movf	(sprintf@fval+2)^(0+384),w
 23955  0006' 0022               	movlb	2	; select bank2
 23956  0007' 0080'              	movwf	(___fleq@ff1+2)^(0+256)
 23957  0008' 0023               	movlb	3	; select bank3
 23958  0009' 0800'              	movf	(sprintf@fval+1)^(0+384),w
 23959  000A' 0022               	movlb	2	; select bank2
 23960  000B' 0080'              	movwf	(___fleq@ff1+1)^(0+256)
 23961  000C' 0023               	movlb	3	; select bank3
 23962  000D' 0800'              	movf	sprintf@fval^(0+384),w
 23963  000E' 0022               	movlb	2	; select bank2
 23964  000F' 0080'              	movwf	___fleq@ff1^(0+256)
 23965  0010' 3000               	movlw	0
 23966  0011' 0080'              	movwf	(___fleq@ff2+3)^(0+256)
 23967  0012' 3000               	movlw	0
 23968  0013' 0080'              	movwf	(___fleq@ff2+2)^(0+256)
 23969  0014' 3000               	movlw	0
 23970  0015' 0080'              	movwf	(___fleq@ff2+1)^(0+256)
 23971  0016' 3000               	movlw	0
 23972  0017' 0080'              	movwf	___fleq@ff2^(0+256)
 23973  0018' 3180' 2000' 3180'  	fcall	___fleq
 23974  001B' 1803               	btfsc	3,0
 23975  001C' 2800'              	goto	u14561
 23976  001D' 2800'              	goto	u14560
 23977  001E'                    u14561:
 23978  001E' 2800'              	goto	l9024
 23979  001F'                    u14560:
 23980  001F'                    l9006:
 23981  001F' 0023               	movlb	3	; select bank3
 23982  0020' 0800'              	movf	(sprintf@fval+3)^(0+384),w
 23983  0021' 0022               	movlb	2	; select bank2
 23984  0022' 0080'              	movwf	(___fltol@f1+3)^(0+256)
 23985  0023' 0023               	movlb	3	; select bank3
 23986  0024' 0800'              	movf	(sprintf@fval+2)^(0+384),w
 23987  0025' 0022               	movlb	2	; select bank2
 23988  0026' 0080'              	movwf	(___fltol@f1+2)^(0+256)
 23989  0027' 0023               	movlb	3	; select bank3
 23990  0028' 0800'              	movf	(sprintf@fval+1)^(0+384),w
 23991  0029' 0022               	movlb	2	; select bank2
 23992  002A' 0080'              	movwf	(___fltol@f1+1)^(0+256)
 23993  002B' 0023               	movlb	3	; select bank3
 23994  002C' 0800'              	movf	sprintf@fval^(0+384),w
 23995  002D' 0022               	movlb	2	; select bank2
 23996  002E' 0080'              	movwf	___fltol@f1^(0+256)
 23997  002F' 3180' 2000' 3180'  	fcall	___fltol
 23998  0032' 0022               	movlb	2	; select bank2
 23999  0033' 0800'              	movf	(?___fltol+3)^(0+256),w
 24000  0034' 0400'              	iorwf	(?___fltol+2)^(0+256),w
 24001  0035' 0400'              	iorwf	(?___fltol+1)^(0+256),w
 24002  0036' 0400'              	iorwf	?___fltol^(0+256),w
 24003  0037' 1D03               	skipz
 24004  0038' 2800'              	goto	u14571
 24005  0039' 2800'              	goto	u14570
 24006  003A'                    u14571:
 24007  003A' 2800'              	goto	l9024
 24008  003B'                    u14570:
 24009  003B'                    l9008:
 24010  003B' 0023               	movlb	3	; select bank3
 24011  003C' 0800'              	movf	(sprintf@eexp+1)^(0+384),w
 24012  003D' 3A80               	xorlw	128
 24013  003E' 0080'              	movwf	??_sprintf^(0+384)
 24014  003F' 3080               	movlw	128
 24015  0040' 0200'              	subwf	??_sprintf^(0+384),w
 24016  0041' 1D03               	skipz
 24017  0042' 2800'              	goto	u14585
 24018  0043' 3002               	movlw	2
 24019  0044' 0200'              	subwf	sprintf@eexp^(0+384),w
 24020  0045'                    u14585:
 24021  0045' 1C03               	skipc
 24022  0046' 2800'              	goto	u14581
 24023  0047' 2800'              	goto	u14580
 24024  0048'                    u14581:
 24025  0048' 2800'              	goto	l9024
 24026  0049'                    u14580:
 24027  0049'                    l9010:
 24028                           
 24029                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
 24030  0049' 0023               	movlb	3	; select bank3
 24031  004A' 0800'              	movf	(sprintf@tmpval+3)^(0+384),w
 24032  004B' 0022               	movlb	2	; select bank2
 24033  004C' 0080'              	movwf	(___flge@ff1+3)^(0+256)
 24034  004D' 0023               	movlb	3	; select bank3
 24035  004E' 0800'              	movf	(sprintf@tmpval+2)^(0+384),w
 24036  004F' 0022               	movlb	2	; select bank2
 24037  0050' 0080'              	movwf	(___flge@ff1+2)^(0+256)
 24038  0051' 0023               	movlb	3	; select bank3
 24039  0052' 0800'              	movf	(sprintf@tmpval+1)^(0+384),w
 24040  0053' 0022               	movlb	2	; select bank2
 24041  0054' 0080'              	movwf	(___flge@ff1+1)^(0+256)
 24042  0055' 0023               	movlb	3	; select bank3
 24043  0056' 0800'              	movf	sprintf@tmpval^(0+384),w
 24044  0057' 0022               	movlb	2	; select bank2
 24045  0058' 0080'              	movwf	___flge@ff1^(0+256)
 24046  0059' 3040               	movlw	64
 24047  005A' 0080'              	movwf	(___flge@ff2+3)^(0+256)
 24048  005B' 3089               	movlw	137
 24049  005C' 0080'              	movwf	(___flge@ff2+2)^(0+256)
 24050  005D' 3070               	movlw	112
 24051  005E' 0080'              	movwf	(___flge@ff2+1)^(0+256)
 24052  005F' 305F               	movlw	95
 24053  0060' 0080'              	movwf	___flge@ff2^(0+256)
 24054  0061' 3180' 2000' 3180'  	fcall	___flge
 24055  0064' 1803               	btfsc	3,0
 24056  0065' 2800'              	goto	u14591
 24057  0066' 2800'              	goto	u14590
 24058  0067'                    u14591:
 24059  0067' 2800'              	goto	l9014
 24060  0068'                    u14590:
 24061  0068'                    l9012:
 24062                           
 24063                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
 24064  0068' 30F7               	movlw	247
 24065  0069' 0023               	movlb	3	; select bank3
 24066  006A' 0780'              	addwf	sprintf@eexp^(0+384),f
 24067  006B' 30FF               	movlw	255
 24068  006C' 3D80'              	addwfc	(sprintf@eexp+1)^(0+384),f
 24069                           
 24070                           ;doprnt.c: 1148: }else{
 24071  006D' 2800'              	goto	l9016
 24072  006E'                    l9014:
 24073                           
 24074                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
 24075  006E' 30F8               	movlw	248
 24076  006F' 0023               	movlb	3	; select bank3
 24077  0070' 0780'              	addwf	sprintf@eexp^(0+384),f
 24078  0071' 30FF               	movlw	255
 24079  0072' 3D80'              	addwfc	(sprintf@eexp+1)^(0+384),f
 24080  0073'                    l9016:
 24081                           
 24082                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 24083  0073' 0800'              	movf	sprintf@eexp^(0+384),w
 24084  0074' 3180' 2000' 3180'  	fcall	_scale
 24085  0077' 0022               	movlb	2	; select bank2
 24086  0078' 0800'              	movf	(?_scale+3)^(0+256),w
 24087  0079' 0023               	movlb	3	; select bank3
 24088  007A' 0080'              	movwf	(sprintf@tmpval+3)^(0+384)
 24089  007B' 0022               	movlb	2	; select bank2
 24090  007C' 0800'              	movf	(?_scale+2)^(0+256),w
 24091  007D' 0023               	movlb	3	; select bank3
 24092  007E' 0080'              	movwf	(sprintf@tmpval+2)^(0+384)
 24093  007F' 0022               	movlb	2	; select bank2
 24094  0080' 0800'              	movf	(?_scale+1)^(0+256),w
 24095  0081' 0023               	movlb	3	; select bank3
 24096  0082' 0080'              	movwf	(sprintf@tmpval+1)^(0+384)
 24097  0083' 0022               	movlb	2	; select bank2
 24098  0084' 0800'              	movf	?_scale^(0+256),w
 24099  0085' 0023               	movlb	3	; select bank3
 24100  0086' 0080'              	movwf	sprintf@tmpval^(0+384)
 24101  0087'                    l9018:
 24102  0087' 0800'              	movf	(sprintf@fval+3)^(0+384),w
 24103  0088' 0022               	movlb	2	; select bank2
 24104  0089' 0080'              	movwf	(__div_to_l_@f1+3)^(0+256)
 24105  008A' 0023               	movlb	3	; select bank3
 24106  008B' 0800'              	movf	(sprintf@fval+2)^(0+384),w
 24107  008C' 0022               	movlb	2	; select bank2
 24108  008D' 0080'              	movwf	(__div_to_l_@f1+2)^(0+256)
 24109  008E' 0023               	movlb	3	; select bank3
 24110  008F' 0800'              	movf	(sprintf@fval+1)^(0+384),w
 24111  0090' 0022               	movlb	2	; select bank2
 24112  0091' 0080'              	movwf	(__div_to_l_@f1+1)^(0+256)
 24113  0092' 0023               	movlb	3	; select bank3
 24114  0093' 0800'              	movf	sprintf@fval^(0+384),w
 24115  0094' 0022               	movlb	2	; select bank2
 24116  0095' 0080'              	movwf	__div_to_l_@f1^(0+256)
 24117  0096' 0023               	movlb	3	; select bank3
 24118  0097' 0800'              	movf	(sprintf@tmpval+3)^(0+384),w
 24119  0098' 0022               	movlb	2	; select bank2
 24120  0099' 0080'              	movwf	(__div_to_l_@f2+3)^(0+256)
 24121  009A' 0023               	movlb	3	; select bank3
 24122  009B' 0800'              	movf	(sprintf@tmpval+2)^(0+384),w
 24123  009C' 0022               	movlb	2	; select bank2
 24124  009D' 0080'              	movwf	(__div_to_l_@f2+2)^(0+256)
 24125  009E' 0023               	movlb	3	; select bank3
 24126  009F' 0800'              	movf	(sprintf@tmpval+1)^(0+384),w
 24127  00A0' 0022               	movlb	2	; select bank2
 24128  00A1' 0080'              	movwf	(__div_to_l_@f2+1)^(0+256)
 24129  00A2' 0023               	movlb	3	; select bank3
 24130  00A3' 0800'              	movf	sprintf@tmpval^(0+384),w
 24131  00A4' 0022               	movlb	2	; select bank2
 24132  00A5' 0080'              	movwf	__div_to_l_@f2^(0+256)
 24133  00A6' 3180' 2000' 3180'  	fcall	__div_to_l_
 24134  00A9' 0022               	movlb	2	; select bank2
 24135  00AA' 0800'              	movf	(?__div_to_l_+3)^(0+256),w
 24136  00AB' 0023               	movlb	3	; select bank3
 24137  00AC' 0080'              	movwf	(sprintf@val+3)^(0+384)
 24138  00AD' 0022               	movlb	2	; select bank2
 24139  00AE' 0800'              	movf	(?__div_to_l_+2)^(0+256),w
 24140  00AF' 0023               	movlb	3	; select bank3
 24141  00B0' 0080'              	movwf	(sprintf@val+2)^(0+384)
 24142  00B1' 0022               	movlb	2	; select bank2
 24143  00B2' 0800'              	movf	(?__div_to_l_+1)^(0+256),w
 24144  00B3' 0023               	movlb	3	; select bank3
 24145  00B4' 0080'              	movwf	(sprintf@val+1)^(0+384)
 24146  00B5' 0022               	movlb	2	; select bank2
 24147  00B6' 0800'              	movf	?__div_to_l_^(0+256),w
 24148  00B7' 0023               	movlb	3	; select bank3
 24149  00B8' 0080'              	movwf	sprintf@val^(0+384)
 24150  00B9'                    l9022:
 24151                           
 24152                           ;doprnt.c: 1155: fval = 0.0;
 24153  00B9' 3000               	movlw	0
 24154  00BA' 0080'              	movwf	(sprintf@fval+3)^(0+384)
 24155  00BB' 3000               	movlw	0
 24156  00BC' 0080'              	movwf	(sprintf@fval+2)^(0+384)
 24157  00BD' 3000               	movlw	0
 24158  00BE' 0080'              	movwf	(sprintf@fval+1)^(0+384)
 24159  00BF' 3000               	movlw	0
 24160  00C0' 0080'              	movwf	sprintf@fval^(0+384)
 24161                           
 24162                           ;doprnt.c: 1156: } else {
 24163  00C1' 2800'              	goto	l9028
 24164  00C2'                    l9024:
 24165                           
 24166                           ;doprnt.c: 1157: val = (unsigned long)fval;
 24167  00C2' 0023               	movlb	3	; select bank3
 24168  00C3' 0800'              	movf	(sprintf@fval+3)^(0+384),w
 24169  00C4' 0022               	movlb	2	; select bank2
 24170  00C5' 0080'              	movwf	(___fltol@f1+3)^(0+256)
 24171  00C6' 0023               	movlb	3	; select bank3
 24172  00C7' 0800'              	movf	(sprintf@fval+2)^(0+384),w
 24173  00C8' 0022               	movlb	2	; select bank2
 24174  00C9' 0080'              	movwf	(___fltol@f1+2)^(0+256)
 24175  00CA' 0023               	movlb	3	; select bank3
 24176  00CB' 0800'              	movf	(sprintf@fval+1)^(0+384),w
 24177  00CC' 0022               	movlb	2	; select bank2
 24178  00CD' 0080'              	movwf	(___fltol@f1+1)^(0+256)
 24179  00CE' 0023               	movlb	3	; select bank3
 24180  00CF' 0800'              	movf	sprintf@fval^(0+384),w
 24181  00D0' 0022               	movlb	2	; select bank2
 24182  00D1' 0080'              	movwf	___fltol@f1^(0+256)
 24183  00D2' 3180' 2000' 3180'  	fcall	___fltol
 24184  00D5' 0022               	movlb	2	; select bank2
 24185  00D6' 0800'              	movf	(?___fltol+3)^(0+256),w
 24186  00D7' 0023               	movlb	3	; select bank3
 24187  00D8' 0080'              	movwf	(sprintf@val+3)^(0+384)
 24188  00D9' 0022               	movlb	2	; select bank2
 24189  00DA' 0800'              	movf	(?___fltol+2)^(0+256),w
 24190  00DB' 0023               	movlb	3	; select bank3
 24191  00DC' 0080'              	movwf	(sprintf@val+2)^(0+384)
 24192  00DD' 0022               	movlb	2	; select bank2
 24193  00DE' 0800'              	movf	(?___fltol+1)^(0+256),w
 24194  00DF' 0023               	movlb	3	; select bank3
 24195  00E0' 0080'              	movwf	(sprintf@val+1)^(0+384)
 24196  00E1' 0022               	movlb	2	; select bank2
 24197  00E2' 0800'              	movf	?___fltol^(0+256),w
 24198  00E3' 0023               	movlb	3	; select bank3
 24199  00E4' 0080'              	movwf	sprintf@val^(0+384)
 24200                           
 24201                           ;doprnt.c: 1158: fval -= (double)val;
 24202  00E5' 0800'              	movf	(sprintf@val+3)^(0+384),w
 24203  00E6' 0022               	movlb	2	; select bank2
 24204  00E7' 0080'              	movwf	(___xxtofl@val+3)^(0+256)
 24205  00E8' 0023               	movlb	3	; select bank3
 24206  00E9' 0800'              	movf	(sprintf@val+2)^(0+384),w
 24207  00EA' 0022               	movlb	2	; select bank2
 24208  00EB' 0080'              	movwf	(___xxtofl@val+2)^(0+256)
 24209  00EC' 0023               	movlb	3	; select bank3
 24210  00ED' 0800'              	movf	(sprintf@val+1)^(0+384),w
 24211  00EE' 0022               	movlb	2	; select bank2
 24212  00EF' 0080'              	movwf	(___xxtofl@val+1)^(0+256)
 24213  00F0' 0023               	movlb	3	; select bank3
 24214  00F1' 0800'              	movf	sprintf@val^(0+384),w
 24215  00F2' 0022               	movlb	2	; select bank2
 24216  00F3' 0080'              	movwf	___xxtofl@val^(0+256)
 24217  00F4' 3000               	movlw	0
 24218  00F5' 3180' 2000' 3180'  	fcall	___xxtofl
 24219  00F8' 0022               	movlb	2	; select bank2
 24220  00F9' 0800'              	movf	(?___xxtofl+3)^(0+256),w
 24221  00FA' 0023               	movlb	3	; select bank3
 24222  00FB' 0080'              	movwf	(___flsub@a+3)^(0+384)
 24223  00FC' 0022               	movlb	2	; select bank2
 24224  00FD' 0800'              	movf	(?___xxtofl+2)^(0+256),w
 24225  00FE' 0023               	movlb	3	; select bank3
 24226  00FF' 0080'              	movwf	(___flsub@a+2)^(0+384)
 24227  0100' 0022               	movlb	2	; select bank2
 24228  0101' 0800'              	movf	(?___xxtofl+1)^(0+256),w
 24229  0102' 0023               	movlb	3	; select bank3
 24230  0103' 0080'              	movwf	(___flsub@a+1)^(0+384)
 24231  0104' 0022               	movlb	2	; select bank2
 24232  0105' 0800'              	movf	?___xxtofl^(0+256),w
 24233  0106' 0023               	movlb	3	; select bank3
 24234  0107' 0080'              	movwf	___flsub@a^(0+384)
 24235  0108' 0800'              	movf	(sprintf@fval+3)^(0+384),w
 24236  0109' 0080'              	movwf	(___flsub@b+3)^(0+384)
 24237  010A' 0800'              	movf	(sprintf@fval+2)^(0+384),w
 24238  010B' 0080'              	movwf	(___flsub@b+2)^(0+384)
 24239  010C' 0800'              	movf	(sprintf@fval+1)^(0+384),w
 24240  010D' 0080'              	movwf	(___flsub@b+1)^(0+384)
 24241  010E' 0800'              	movf	sprintf@fval^(0+384),w
 24242  010F' 0080'              	movwf	___flsub@b^(0+384)
 24243  0110' 3180' 2000' 3180'  	fcall	___flsub
 24244  0113' 0023               	movlb	3	; select bank3
 24245  0114' 0800'              	movf	(?___flsub+3)^(0+384),w
 24246  0115' 0080'              	movwf	(sprintf@fval+3)^(0+384)
 24247  0116' 0800'              	movf	(?___flsub+2)^(0+384),w
 24248  0117' 0080'              	movwf	(sprintf@fval+2)^(0+384)
 24249  0118' 0800'              	movf	(?___flsub+1)^(0+384),w
 24250  0119' 0080'              	movwf	(sprintf@fval+1)^(0+384)
 24251  011A' 0800'              	movf	?___flsub^(0+384),w
 24252  011B' 0080'              	movwf	sprintf@fval^(0+384)
 24253  011C'                    l9026:
 24254                           
 24255                           ;doprnt.c: 1159: eexp = 0;
 24256  011C' 0180'              	clrf	sprintf@eexp^(0+384)
 24257  011D' 0180'              	clrf	(sprintf@eexp+1)^(0+384)
 24258  011E'                    l9028:
 24259                           
 24260                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
 24261  011E' 0180'              	clrf	sprintf@c^(0+384)
 24262  011F' 0A80'              	incf	sprintf@c^(0+384),f
 24263  0120'                    l9034:
 24264                           
 24265                           ;doprnt.c: 1163: if(val < dpowers[c])
 24266  0120' 0800'              	movf	sprintf@c^(0+384),w
 24267  0121' 0080'              	movwf	??_sprintf^(0+384)
 24268  0122' 0181'              	clrf	(??_sprintf^(0+384)+1)
 24269  0123' 3580'              	lslf	??_sprintf^(0+384),f
 24270  0124' 0D81'              	rlf	(??_sprintf^(0+384)+1),f
 24271  0125' 3580'              	lslf	??_sprintf^(0+384),f
 24272  0126' 0D81'              	rlf	(??_sprintf^(0+384)+1),f
 24273  0127' 3000'              	movlw	low (_dpowers| (0+32768))
 24274  0128' 0700'              	addwf	??_sprintf^(0+384),w
 24275  0129' 0084               	movwf	4
 24276  012A' 3000'              	movlw	high (_dpowers| (0+32768))
 24277  012B' 3D00'              	addwfc	(??_sprintf+1)^(0+384),w
 24278  012C' 0085               	movwf	5
 24279  012D' 3F00               	moviw [0]fsr0
 24280  012E' 0080'              	movwf	(??_sprintf+2)^(0+384)
 24281  012F' 3F01               	moviw [1]fsr0
 24282  0130' 0081'              	movwf	((??_sprintf+2)^(0+384)+1)
 24283  0131' 3F02               	moviw [2]fsr0
 24284  0132' 0082'              	movwf	((??_sprintf+2)^(0+384)+2)
 24285  0133' 3F03               	moviw [3]fsr0
 24286  0134' 0083'              	movwf	((??_sprintf+2)^(0+384)+3)
 24287  0135' 0800'              	movf	(??_sprintf+5)^(0+384),w
 24288  0136' 0200'              	subwf	(sprintf@val+3)^(0+384),w
 24289  0137' 1D03               	skipz
 24290  0138' 2800'              	goto	u14605
 24291  0139' 0800'              	movf	(??_sprintf+4)^(0+384),w
 24292  013A' 0200'              	subwf	(sprintf@val+2)^(0+384),w
 24293  013B' 1D03               	skipz
 24294  013C' 2800'              	goto	u14605
 24295  013D' 0800'              	movf	(??_sprintf+3)^(0+384),w
 24296  013E' 0200'              	subwf	(sprintf@val+1)^(0+384),w
 24297  013F' 1D03               	skipz
 24298  0140' 2800'              	goto	u14605
 24299  0141' 0800'              	movf	(??_sprintf+2)^(0+384),w
 24300  0142' 0200'              	subwf	sprintf@val^(0+384),w
 24301  0143'                    u14605:
 24302  0143' 1803               	skipnc
 24303  0144' 2800'              	goto	u14601
 24304  0145' 2800'              	goto	u14600
 24305  0146'                    u14601:
 24306  0146' 2800'              	goto	l9038
 24307  0147'                    u14600:
 24308  0147' 2800'              	goto	l9040
 24309  0148'                    l9038:
 24310  0148' 3001               	movlw	1
 24311  0149' 0080'              	movwf	??_sprintf^(0+384)
 24312  014A' 0800'              	movf	??_sprintf^(0+384),w
 24313  014B' 0780'              	addwf	sprintf@c^(0+384),f
 24314  014C' 300A               	movlw	10
 24315  014D' 0600'              	xorwf	sprintf@c^(0+384),w
 24316  014E' 1D03               	btfss	3,2
 24317  014F' 2800'              	goto	u14611
 24318  0150' 2800'              	goto	u14610
 24319  0151'                    u14611:
 24320  0151' 2800'              	goto	l9034
 24321  0152'                    u14610:
 24322  0152'                    l9040:
 24323                           
 24324                           ;doprnt.c: 1168: width -= prec + c + eexp;
 24325  0152' 0800'              	movf	sprintf@c^(0+384),w
 24326  0153' 0700'              	addwf	sprintf@prec^(0+384),w
 24327  0154' 0080'              	movwf	??_sprintf^(0+384)
 24328  0155' 0800'              	movf	(sprintf@prec+1)^(0+384),w
 24329  0156' 1803               	skipnc
 24330  0157' 0A00'              	incf	(sprintf@prec+1)^(0+384),w
 24331  0158' 0081'              	movwf	(??_sprintf^(0+384)+1)
 24332  0159' 0800'              	movf	sprintf@eexp^(0+384),w
 24333  015A' 0700'              	addwf	??_sprintf^(0+384),w
 24334  015B' 0080'              	movwf	(??_sprintf+2)^(0+384)
 24335  015C' 0800'              	movf	(sprintf@eexp+1)^(0+384),w
 24336  015D' 3D00'              	addwfc	(??_sprintf+1)^(0+384),w
 24337  015E' 0080'              	movwf	(??_sprintf+3)^(0+384)
 24338  015F' 0800'              	movf	(??_sprintf+2)^(0+384),w
 24339  0160' 0280'              	subwf	sprintf@width^(0+384),f
 24340  0161' 0800'              	movf	(??_sprintf+3)^(0+384),w
 24341  0162' 3B80'              	subwfb	(sprintf@width+1)^(0+384),f
 24342                           
 24343                           ;doprnt.c: 1169: if(;doprnt.c: 1173: prec)
 24344  0163' 0800'              	movf	sprintf@prec^(0+384),w
 24345  0164' 0400'              	iorwf	(sprintf@prec+1)^(0+384),w
 24346  0165' 1903               	btfsc	3,2
 24347  0166' 2800'              	goto	u14621
 24348  0167' 2800'              	goto	u14620
 24349  0168'                    u14621:
 24350  0168' 2800'              	goto	l9044
 24351  0169'                    u14620:
 24352  0169'                    l9042:
 24353                           
 24354                           ;doprnt.c: 1174: width--;
 24355  0169' 30FF               	movlw	255
 24356  016A' 0780'              	addwf	sprintf@width^(0+384),f
 24357  016B' 30FF               	movlw	255
 24358  016C' 3D80'              	addwfc	(sprintf@width+1)^(0+384),f
 24359  016D'                    l9044:
 24360                           
 24361                           ;doprnt.c: 1175: if(flag & 0x03)
 24362  016D' 3003               	movlw	3
 24363  016E' 0500'              	andwf	sprintf@flag^(0+384),w
 24364  016F' 0080'              	movwf	??_sprintf^(0+384)
 24365  0170' 3000               	movlw	0
 24366  0171' 0500'              	andwf	(sprintf@flag+1)^(0+384),w
 24367  0172' 0080'              	movwf	(??_sprintf+1)^(0+384)
 24368  0173' 0800'              	movf	??_sprintf^(0+384),w
 24369  0174' 0401'              	iorwf	(??_sprintf^(0+384)+1),w
 24370  0175' 1903               	btfsc	3,2
 24371  0176' 2800'              	goto	u14631
 24372  0177' 2800'              	goto	u14630
 24373  0178'                    u14631:
 24374  0178' 2800'              	goto	l9048
 24375  0179'                    u14630:
 24376  0179'                    l9046:
 24377                           
 24378                           ;doprnt.c: 1176: width--;
 24379  0179' 30FF               	movlw	255
 24380  017A' 0780'              	addwf	sprintf@width^(0+384),f
 24381  017B' 30FF               	movlw	255
 24382  017C' 3D80'              	addwfc	(sprintf@width+1)^(0+384),f
 24383  017D'                    l9048:
 24384                           
 24385                           ;doprnt.c: 1179: if(flag & 0x04) {
 24386  017D' 1D00'              	btfss	sprintf@flag^(0+384),2
 24387  017E' 2800'              	goto	u14641
 24388  017F' 2800'              	goto	u14640
 24389  0180'                    u14641:
 24390  0180' 2800'              	goto	l9070
 24391  0181'                    u14640:
 24392  0181'                    l9050:
 24393                           
 24394                           ;doprnt.c: 1183: if(flag & 0x03)
 24395  0181' 3003               	movlw	3
 24396  0182' 0500'              	andwf	sprintf@flag^(0+384),w
 24397  0183' 0080'              	movwf	??_sprintf^(0+384)
 24398  0184' 3000               	movlw	0
 24399  0185' 0500'              	andwf	(sprintf@flag+1)^(0+384),w
 24400  0186' 0080'              	movwf	(??_sprintf+1)^(0+384)
 24401  0187' 0800'              	movf	??_sprintf^(0+384),w
 24402  0188' 0401'              	iorwf	(??_sprintf^(0+384)+1),w
 24403  0189' 1903               	btfsc	3,2
 24404  018A' 2800'              	goto	u14651
 24405  018B' 2800'              	goto	u14650
 24406  018C'                    u14651:
 24407  018C' 2800'              	goto	l9062
 24408  018D'                    u14650:
 24409  018D'                    l9052:
 24410                           
 24411                           ;doprnt.c: 1185: ((*sp++ = ('-')));
 24412  018D' 0800'              	movf	sprintf@sp^(0+384),w
 24413  018E' 0086               	movwf	6
 24414  018F' 0800'              	movf	(sprintf@sp+1)^(0+384),w
 24415  0190' 0087               	movwf	7
 24416  0191' 302D               	movlw	45
 24417  0192' 0081               	movwf	1
 24418  0193'                    l9054:
 24419  0193' 3001               	movlw	1
 24420  0194' 0780'              	addwf	sprintf@sp^(0+384),f
 24421  0195' 3000               	movlw	0
 24422  0196' 3D80'              	addwfc	(sprintf@sp+1)^(0+384),f
 24423  0197' 2800'              	goto	l9062
 24424  0198'                    l9056:
 24425                           
 24426                           ;doprnt.c: 1195: ((*sp++ = ('0')));
 24427  0198' 0023               	movlb	3	; select bank3
 24428  0199' 0800'              	movf	sprintf@sp^(0+384),w
 24429  019A' 0086               	movwf	6
 24430  019B' 0800'              	movf	(sprintf@sp+1)^(0+384),w
 24431  019C' 0087               	movwf	7
 24432  019D' 3030               	movlw	48
 24433  019E' 0081               	movwf	1
 24434  019F'                    l9058:
 24435  019F' 3001               	movlw	1
 24436  01A0' 0780'              	addwf	sprintf@sp^(0+384),f
 24437  01A1' 3000               	movlw	0
 24438  01A2' 3D80'              	addwfc	(sprintf@sp+1)^(0+384),f
 24439  01A3'                    l9060:
 24440                           
 24441                           ;doprnt.c: 1196: width--;
 24442  01A3' 30FF               	movlw	255
 24443  01A4' 0780'              	addwf	sprintf@width^(0+384),f
 24444  01A5' 30FF               	movlw	255
 24445  01A6' 3D80'              	addwfc	(sprintf@width+1)^(0+384),f
 24446  01A7'                    l9062:
 24447  01A7' 0800'              	movf	(sprintf@width+1)^(0+384),w
 24448  01A8' 3A80               	xorlw	128
 24449  01A9' 0080'              	movwf	??_sprintf^(0+384)
 24450  01AA' 3080               	movlw	128
 24451  01AB' 0200'              	subwf	??_sprintf^(0+384),w
 24452  01AC' 1D03               	skipz
 24453  01AD' 2800'              	goto	u14665
 24454  01AE' 3001               	movlw	1
 24455  01AF' 0200'              	subwf	sprintf@width^(0+384),w
 24456  01B0'                    u14665:
 24457  01B0' 1803               	skipnc
 24458  01B1' 2800'              	goto	u14661
 24459  01B2' 2800'              	goto	u14660
 24460  01B3'                    u14661:
 24461  01B3' 2800'              	goto	l9056
 24462  01B4'                    u14660:
 24463  01B4' 2800'              	goto	l9086
 24464  01B5'                    l9064:
 24465                           
 24466                           ;doprnt.c: 1207: ((*sp++ = (' ')));
 24467  01B5' 0023               	movlb	3	; select bank3
 24468  01B6' 0800'              	movf	sprintf@sp^(0+384),w
 24469  01B7' 0086               	movwf	6
 24470  01B8' 0800'              	movf	(sprintf@sp+1)^(0+384),w
 24471  01B9' 0087               	movwf	7
 24472  01BA' 3020               	movlw	32
 24473  01BB' 0081               	movwf	1
 24474  01BC'                    l9066:
 24475  01BC' 3001               	movlw	1
 24476  01BD' 0780'              	addwf	sprintf@sp^(0+384),f
 24477  01BE' 3000               	movlw	0
 24478  01BF' 3D80'              	addwfc	(sprintf@sp+1)^(0+384),f
 24479  01C0'                    l9068:
 24480                           
 24481                           ;doprnt.c: 1208: width--;
 24482  01C0' 30FF               	movlw	255
 24483  01C1' 0780'              	addwf	sprintf@width^(0+384),f
 24484  01C2' 30FF               	movlw	255
 24485  01C3' 3D80'              	addwfc	(sprintf@width+1)^(0+384),f
 24486  01C4'                    l9070:
 24487  01C4' 0800'              	movf	(sprintf@width+1)^(0+384),w
 24488  01C5' 3A80               	xorlw	128
 24489  01C6' 0080'              	movwf	??_sprintf^(0+384)
 24490  01C7' 3080               	movlw	128
 24491  01C8' 0200'              	subwf	??_sprintf^(0+384),w
 24492  01C9' 1D03               	skipz
 24493  01CA' 2800'              	goto	u14675
 24494  01CB' 3001               	movlw	1
 24495  01CC' 0200'              	subwf	sprintf@width^(0+384),w
 24496  01CD'                    u14675:
 24497  01CD' 1803               	skipnc
 24498  01CE' 2800'              	goto	u14671
 24499  01CF' 2800'              	goto	u14670
 24500  01D0'                    u14671:
 24501  01D0' 2800'              	goto	l9064
 24502  01D1'                    u14670:
 24503  01D1'                    l9072:
 24504                           
 24505                           ;doprnt.c: 1209: };doprnt.c: 1214: if(flag & 0x03)
 24506  01D1' 3003               	movlw	3
 24507  01D2' 0023               	movlb	3	; select bank3
 24508  01D3' 0500'              	andwf	sprintf@flag^(0+384),w
 24509  01D4' 0080'              	movwf	??_sprintf^(0+384)
 24510  01D5' 3000               	movlw	0
 24511  01D6' 0500'              	andwf	(sprintf@flag+1)^(0+384),w
 24512  01D7' 0080'              	movwf	(??_sprintf+1)^(0+384)
 24513  01D8' 0800'              	movf	??_sprintf^(0+384),w
 24514  01D9' 0401'              	iorwf	(??_sprintf^(0+384)+1),w
 24515  01DA' 1903               	btfsc	3,2
 24516  01DB' 2800'              	goto	u14681
 24517  01DC' 2800'              	goto	u14680
 24518  01DD'                    u14681:
 24519  01DD' 2800'              	goto	l9086
 24520  01DE'                    u14680:
 24521  01DE'                    l9074:
 24522                           
 24523                           ;doprnt.c: 1216: ((*sp++ = ('-')));
 24524  01DE' 0800'              	movf	sprintf@sp^(0+384),w
 24525  01DF' 0086               	movwf	6
 24526  01E0' 0800'              	movf	(sprintf@sp+1)^(0+384),w
 24527  01E1' 0087               	movwf	7
 24528  01E2' 302D               	movlw	45
 24529  01E3' 0081               	movwf	1
 24530  01E4'                    l9076:
 24531  01E4' 3001               	movlw	1
 24532  01E5' 0780'              	addwf	sprintf@sp^(0+384),f
 24533  01E6' 3000               	movlw	0
 24534  01E7' 3D80'              	addwfc	(sprintf@sp+1)^(0+384),f
 24535  01E8' 2800'              	goto	l9086
 24536  01E9'                    l9078:
 24537                           
 24538                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
 24539  01E9' 0800'              	movf	sprintf@c^(0+384),w
 24540  01EA' 0080'              	movwf	??_sprintf^(0+384)
 24541  01EB' 0181'              	clrf	(??_sprintf^(0+384)+1)
 24542  01EC' 3580'              	lslf	??_sprintf^(0+384),f
 24543  01ED' 0D81'              	rlf	(??_sprintf^(0+384)+1),f
 24544  01EE' 3580'              	lslf	??_sprintf^(0+384),f
 24545  01EF' 0D81'              	rlf	(??_sprintf^(0+384)+1),f
 24546  01F0' 3000'              	movlw	low (_dpowers| (0+32768))
 24547  01F1' 0700'              	addwf	??_sprintf^(0+384),w
 24548  01F2' 0084               	movwf	4
 24549  01F3' 3000'              	movlw	high (_dpowers| (0+32768))
 24550  01F4' 3D00'              	addwfc	(??_sprintf+1)^(0+384),w
 24551  01F5' 0085               	movwf	5
 24552  01F6' 3F00               	moviw [0]fsr0
 24553  01F7' 0022               	movlb	2	; select bank2
 24554  01F8' 0080'              	movwf	___lldiv@divisor^(0+256)
 24555  01F9' 3F01               	moviw [1]fsr0
 24556  01FA' 0080'              	movwf	(___lldiv@divisor+1)^(0+256)
 24557  01FB' 3F02               	moviw [2]fsr0
 24558  01FC' 0080'              	movwf	(___lldiv@divisor+2)^(0+256)
 24559  01FD' 3F03               	moviw [3]fsr0
 24560  01FE' 0080'              	movwf	(___lldiv@divisor+3)^(0+256)
 24561  01FF' 0023               	movlb	3	; select bank3
 24562  0200' 0800'              	movf	(sprintf@val+3)^(0+384),w
 24563  0201' 0022               	movlb	2	; select bank2
 24564  0202' 0080'              	movwf	(___lldiv@dividend+3)^(0+256)
 24565  0203' 0023               	movlb	3	; select bank3
 24566  0204' 0800'              	movf	(sprintf@val+2)^(0+384),w
 24567  0205' 0022               	movlb	2	; select bank2
 24568  0206' 0080'              	movwf	(___lldiv@dividend+2)^(0+256)
 24569  0207' 0023               	movlb	3	; select bank3
 24570  0208' 0800'              	movf	(sprintf@val+1)^(0+384),w
 24571  0209' 0022               	movlb	2	; select bank2
 24572  020A' 0080'              	movwf	(___lldiv@dividend+1)^(0+256)
 24573  020B' 0023               	movlb	3	; select bank3
 24574  020C' 0800'              	movf	sprintf@val^(0+384),w
 24575  020D' 0022               	movlb	2	; select bank2
 24576  020E' 0080'              	movwf	___lldiv@dividend^(0+256)
 24577  020F' 3180' 2000' 3180'  	fcall	___lldiv
 24578  0212' 0022               	movlb	2	; select bank2
 24579  0213' 0800'              	movf	(?___lldiv+3)^(0+256),w
 24580  0214' 0023               	movlb	3	; select bank3
 24581  0215' 0080'              	movwf	(sprintf@tmpval+3)^(0+384)
 24582  0216' 0022               	movlb	2	; select bank2
 24583  0217' 0800'              	movf	(?___lldiv+2)^(0+256),w
 24584  0218' 0023               	movlb	3	; select bank3
 24585  0219' 0080'              	movwf	(sprintf@tmpval+2)^(0+384)
 24586  021A' 0022               	movlb	2	; select bank2
 24587  021B' 0800'              	movf	(?___lldiv+1)^(0+256),w
 24588  021C' 0023               	movlb	3	; select bank3
 24589  021D' 0080'              	movwf	(sprintf@tmpval+1)^(0+384)
 24590  021E' 0022               	movlb	2	; select bank2
 24591  021F' 0800'              	movf	?___lldiv^(0+256),w
 24592  0220' 0023               	movlb	3	; select bank3
 24593  0221' 0080'              	movwf	sprintf@tmpval^(0+384)
 24594  0222'                    l9080:
 24595                           
 24596                           ;doprnt.c: 1228: tmpval.vd %= 10;
 24597  0222' 3000               	movlw	0
 24598  0223' 0022               	movlb	2	; select bank2
 24599  0224' 0080'              	movwf	(___llmod@divisor+3)^(0+256)
 24600  0225' 3000               	movlw	0
 24601  0226' 0080'              	movwf	(___llmod@divisor+2)^(0+256)
 24602  0227' 3000               	movlw	0
 24603  0228' 0080'              	movwf	(___llmod@divisor+1)^(0+256)
 24604  0229' 300A               	movlw	10
 24605  022A' 0080'              	movwf	___llmod@divisor^(0+256)
 24606  022B' 0023               	movlb	3	; select bank3
 24607  022C' 0800'              	movf	(sprintf@tmpval+3)^(0+384),w
 24608  022D' 0022               	movlb	2	; select bank2
 24609  022E' 0080'              	movwf	(___llmod@dividend+3)^(0+256)
 24610  022F' 0023               	movlb	3	; select bank3
 24611  0230' 0800'              	movf	(sprintf@tmpval+2)^(0+384),w
 24612  0231' 0022               	movlb	2	; select bank2
 24613  0232' 0080'              	movwf	(___llmod@dividend+2)^(0+256)
 24614  0233' 0023               	movlb	3	; select bank3
 24615  0234' 0800'              	movf	(sprintf@tmpval+1)^(0+384),w
 24616  0235' 0022               	movlb	2	; select bank2
 24617  0236' 0080'              	movwf	(___llmod@dividend+1)^(0+256)
 24618  0237' 0023               	movlb	3	; select bank3
 24619  0238' 0800'              	movf	sprintf@tmpval^(0+384),w
 24620  0239' 0022               	movlb	2	; select bank2
 24621  023A' 0080'              	movwf	___llmod@dividend^(0+256)
 24622  023B' 3180' 2000' 3180'  	fcall	___llmod
 24623  023E' 0022               	movlb	2	; select bank2
 24624  023F' 0800'              	movf	(?___llmod+3)^(0+256),w
 24625  0240' 0023               	movlb	3	; select bank3
 24626  0241' 0080'              	movwf	(sprintf@tmpval+3)^(0+384)
 24627  0242' 0022               	movlb	2	; select bank2
 24628  0243' 0800'              	movf	(?___llmod+2)^(0+256),w
 24629  0244' 0023               	movlb	3	; select bank3
 24630  0245' 0080'              	movwf	(sprintf@tmpval+2)^(0+384)
 24631  0246' 0022               	movlb	2	; select bank2
 24632  0247' 0800'              	movf	(?___llmod+1)^(0+256),w
 24633  0248' 0023               	movlb	3	; select bank3
 24634  0249' 0080'              	movwf	(sprintf@tmpval+1)^(0+384)
 24635  024A' 0022               	movlb	2	; select bank2
 24636  024B' 0800'              	movf	?___llmod^(0+256),w
 24637  024C' 0023               	movlb	3	; select bank3
 24638  024D' 0080'              	movwf	sprintf@tmpval^(0+384)
 24639  024E'                    l9082:
 24640                           
 24641                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)));
 24642  024E' 0800'              	movf	sprintf@tmpval^(0+384),w
 24643  024F' 3E30               	addlw	48
 24644  0250' 0080'              	movwf	??_sprintf^(0+384)
 24645  0251' 0800'              	movf	sprintf@sp^(0+384),w
 24646  0252' 0086               	movwf	6
 24647  0253' 0800'              	movf	(sprintf@sp+1)^(0+384),w
 24648  0254' 0087               	movwf	7
 24649  0255' 0800'              	movf	??_sprintf^(0+384),w
 24650  0256' 0081               	movwf	1
 24651  0257'                    l9084:
 24652  0257' 3001               	movlw	1
 24653  0258' 0780'              	addwf	sprintf@sp^(0+384),f
 24654  0259' 3000               	movlw	0
 24655  025A' 3D80'              	addwfc	(sprintf@sp+1)^(0+384),f
 24656  025B'                    l9086:
 24657  025B' 3001               	movlw	1
 24658  025C' 0023               	movlb	3	; select bank3
 24659  025D' 0280'              	subwf	sprintf@c^(0+384),f
 24660  025E' 0A00'              	incf	sprintf@c^(0+384),w
 24661  025F' 1D03               	btfss	3,2
 24662  0260' 2800'              	goto	u14691
 24663  0261' 2800'              	goto	u14690
 24664  0262'                    u14691:
 24665  0262' 2800'              	goto	l9078
 24666  0263'                    u14690:
 24667  0263' 2800'              	goto	l9094
 24668  0264'                    l9088:
 24669                           
 24670                           ;doprnt.c: 1234: ((*sp++ = ('0')));
 24671  0264' 0023               	movlb	3	; select bank3
 24672  0265' 0800'              	movf	sprintf@sp^(0+384),w
 24673  0266' 0086               	movwf	6
 24674  0267' 0800'              	movf	(sprintf@sp+1)^(0+384),w
 24675  0268' 0087               	movwf	7
 24676  0269' 3030               	movlw	48
 24677  026A' 0081               	movwf	1
 24678  026B'                    l9090:
 24679  026B' 3001               	movlw	1
 24680  026C' 0780'              	addwf	sprintf@sp^(0+384),f
 24681  026D' 3000               	movlw	0
 24682  026E' 3D80'              	addwfc	(sprintf@sp+1)^(0+384),f
 24683  026F'                    l9092:
 24684                           
 24685                           ;doprnt.c: 1235: eexp--;
 24686  026F' 30FF               	movlw	255
 24687  0270' 0780'              	addwf	sprintf@eexp^(0+384),f
 24688  0271' 30FF               	movlw	255
 24689  0272' 3D80'              	addwfc	(sprintf@eexp+1)^(0+384),f
 24690  0273'                    l9094:
 24691  0273' 0800'              	movf	(sprintf@eexp+1)^(0+384),w
 24692  0274' 3A80               	xorlw	128
 24693  0275' 0080'              	movwf	??_sprintf^(0+384)
 24694  0276' 3080               	movlw	128
 24695  0277' 0200'              	subwf	??_sprintf^(0+384),w
 24696  0278' 1D03               	skipz
 24697  0279' 2800'              	goto	u14705
 24698  027A' 3001               	movlw	1
 24699  027B' 0200'              	subwf	sprintf@eexp^(0+384),w
 24700  027C'                    u14705:
 24701  027C' 1803               	skipnc
 24702  027D' 2800'              	goto	u14701
 24703  027E' 2800'              	goto	u14700
 24704  027F'                    u14701:
 24705  027F' 2800'              	goto	l9088
 24706  0280'                    u14700:
 24707  0280'                    l9096:
 24708                           
 24709                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
 24710  0280' 0023               	movlb	3	; select bank3
 24711  0281' 0800'              	movf	(sprintf@prec+1)^(0+384),w
 24712  0282' 3A80               	xorlw	128
 24713  0283' 0080'              	movwf	??_sprintf^(0+384)
 24714  0284' 3080               	movlw	128
 24715  0285' 0200'              	subwf	??_sprintf^(0+384),w
 24716  0286' 1D03               	skipz
 24717  0287' 2800'              	goto	u14715
 24718  0288' 3009               	movlw	9
 24719  0289' 0200'              	subwf	sprintf@prec^(0+384),w
 24720  028A'                    u14715:
 24721  028A' 1C03               	skipc
 24722  028B' 2800'              	goto	u14711
 24723  028C' 2800'              	goto	u14710
 24724  028D'                    u14711:
 24725  028D' 2800'              	goto	l9100
 24726  028E'                    u14710:
 24727  028E'                    l9098:
 24728                           
 24729                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
 24730  028E' 3008               	movlw	8
 24731  028F' 0023               	movlb	3	; select bank3
 24732  0290' 0080'              	movwf	??_sprintf^(0+384)
 24733  0291' 0800'              	movf	??_sprintf^(0+384),w
 24734  0292' 0080'              	movwf	sprintf@c^(0+384)
 24735  0293' 2800'              	goto	l1141
 24736  0294'                    l9100:
 24737                           
 24738                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
 24739  0294' 0023               	movlb	3	; select bank3
 24740  0295' 0800'              	movf	sprintf@prec^(0+384),w
 24741  0296' 0080'              	movwf	??_sprintf^(0+384)
 24742  0297' 0800'              	movf	??_sprintf^(0+384),w
 24743  0298' 0080'              	movwf	sprintf@c^(0+384)
 24744  0299'                    l1141:
 24745                           
 24746                           ;doprnt.c: 1241: prec -= (int)c;
 24747  0299' 0800'              	movf	sprintf@c^(0+384),w
 24748  029A' 0080'              	movwf	??_sprintf^(0+384)
 24749  029B' 0181'              	clrf	(??_sprintf^(0+384)+1)
 24750  029C' 0800'              	movf	??_sprintf^(0+384),w
 24751  029D' 0280'              	subwf	sprintf@prec^(0+384),f
 24752  029E' 0800'              	movf	(??_sprintf+1)^(0+384),w
 24753  029F' 3B80'              	subwfb	(sprintf@prec+1)^(0+384),f
 24754  02A0'                    l9102:
 24755                           
 24756                           ;doprnt.c: 1245: if(c)
 24757  02A0' 0800'              	movf	sprintf@c^(0+384),w
 24758  02A1' 1903               	btfsc	3,2
 24759  02A2' 2800'              	goto	u14721
 24760  02A3' 2800'              	goto	u14720
 24761  02A4'                    u14721:
 24762  02A4' 2800'              	goto	l9108
 24763  02A5'                    u14720:
 24764  02A5'                    l9104:
 24765                           
 24766                           ;doprnt.c: 1247: ((*sp++ = ('.')));
 24767  02A5' 0800'              	movf	sprintf@sp^(0+384),w
 24768  02A6' 0086               	movwf	6
 24769  02A7' 0800'              	movf	(sprintf@sp+1)^(0+384),w
 24770  02A8' 0087               	movwf	7
 24771  02A9' 302E               	movlw	46
 24772  02AA' 0081               	movwf	1
 24773  02AB'                    l9106:
 24774  02AB' 3001               	movlw	1
 24775  02AC' 0780'              	addwf	sprintf@sp^(0+384),f
 24776  02AD' 3000               	movlw	0
 24777  02AE' 3D80'              	addwfc	(sprintf@sp+1)^(0+384),f
 24778  02AF'                    l9108:
 24779                           
 24780                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
 24781  02AF' 0800'              	movf	sprintf@c^(0+384),w
 24782  02B0' 3180' 2000' 3180'  	fcall	_scale
 24783  02B3' 0022               	movlb	2	; select bank2
 24784  02B4' 0800'              	movf	(?_scale+3)^(0+256),w
 24785  02B5' 0023               	movlb	3	; select bank3
 24786  02B6' 0080'              	movwf	(_sprintf$2539+3)^(0+384)
 24787  02B7' 0022               	movlb	2	; select bank2
 24788  02B8' 0800'              	movf	(?_scale+2)^(0+256),w
 24789  02B9' 0023               	movlb	3	; select bank3
 24790  02BA' 0080'              	movwf	(_sprintf$2539+2)^(0+384)
 24791  02BB' 0022               	movlb	2	; select bank2
 24792  02BC' 0800'              	movf	(?_scale+1)^(0+256),w
 24793  02BD' 0023               	movlb	3	; select bank3
 24794  02BE' 0080'              	movwf	(_sprintf$2539+1)^(0+384)
 24795  02BF' 0022               	movlb	2	; select bank2
 24796  02C0' 0800'              	movf	?_scale^(0+256),w
 24797  02C1' 0023               	movlb	3	; select bank3
 24798  02C2' 0080'              	movwf	_sprintf$2539^(0+384)
 24799  02C3'                    l9110:
 24800                           
 24801                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
 24802  02C3' 0800'              	movf	(_sprintf$2539+3)^(0+384),w
 24803  02C4' 0022               	movlb	2	; select bank2
 24804  02C5' 0080'              	movwf	(___flmul@a+3)^(0+256)
 24805  02C6' 0023               	movlb	3	; select bank3
 24806  02C7' 0800'              	movf	(_sprintf$2539+2)^(0+384),w
 24807  02C8' 0022               	movlb	2	; select bank2
 24808  02C9' 0080'              	movwf	(___flmul@a+2)^(0+256)
 24809  02CA' 0023               	movlb	3	; select bank3
 24810  02CB' 0800'              	movf	(_sprintf$2539+1)^(0+384),w
 24811  02CC' 0022               	movlb	2	; select bank2
 24812  02CD' 0080'              	movwf	(___flmul@a+1)^(0+256)
 24813  02CE' 0023               	movlb	3	; select bank3
 24814  02CF' 0800'              	movf	_sprintf$2539^(0+384),w
 24815  02D0' 0022               	movlb	2	; select bank2
 24816  02D1' 0080'              	movwf	___flmul@a^(0+256)
 24817  02D2' 0023               	movlb	3	; select bank3
 24818  02D3' 0800'              	movf	(sprintf@fval+3)^(0+384),w
 24819  02D4' 0022               	movlb	2	; select bank2
 24820  02D5' 0080'              	movwf	(___flmul@b+3)^(0+256)
 24821  02D6' 0023               	movlb	3	; select bank3
 24822  02D7' 0800'              	movf	(sprintf@fval+2)^(0+384),w
 24823  02D8' 0022               	movlb	2	; select bank2
 24824  02D9' 0080'              	movwf	(___flmul@b+2)^(0+256)
 24825  02DA' 0023               	movlb	3	; select bank3
 24826  02DB' 0800'              	movf	(sprintf@fval+1)^(0+384),w
 24827  02DC' 0022               	movlb	2	; select bank2
 24828  02DD' 0080'              	movwf	(___flmul@b+1)^(0+256)
 24829  02DE' 0023               	movlb	3	; select bank3
 24830  02DF' 0800'              	movf	sprintf@fval^(0+384),w
 24831  02E0' 0022               	movlb	2	; select bank2
 24832  02E1' 0080'              	movwf	___flmul@b^(0+256)
 24833  02E2' 3180' 2000' 3180'  	fcall	___flmul
 24834  02E5' 0022               	movlb	2	; select bank2
 24835  02E6' 0800'              	movf	(?___flmul+3)^(0+256),w
 24836  02E7' 0080'              	movwf	(___fltol@f1+3)^(0+256)
 24837  02E8' 0800'              	movf	(?___flmul+2)^(0+256),w
 24838  02E9' 0080'              	movwf	(___fltol@f1+2)^(0+256)
 24839  02EA' 0800'              	movf	(?___flmul+1)^(0+256),w
 24840  02EB' 0080'              	movwf	(___fltol@f1+1)^(0+256)
 24841  02EC' 0800'              	movf	?___flmul^(0+256),w
 24842  02ED' 0080'              	movwf	___fltol@f1^(0+256)
 24843  02EE' 3180' 2000' 3180'  	fcall	___fltol
 24844  02F1' 0022               	movlb	2	; select bank2
 24845  02F2' 0800'              	movf	(?___fltol+3)^(0+256),w
 24846  02F3' 0023               	movlb	3	; select bank3
 24847  02F4' 0080'              	movwf	(sprintf@val+3)^(0+384)
 24848  02F5' 0022               	movlb	2	; select bank2
 24849  02F6' 0800'              	movf	(?___fltol+2)^(0+256),w
 24850  02F7' 0023               	movlb	3	; select bank3
 24851  02F8' 0080'              	movwf	(sprintf@val+2)^(0+384)
 24852  02F9' 0022               	movlb	2	; select bank2
 24853  02FA' 0800'              	movf	(?___fltol+1)^(0+256),w
 24854  02FB' 0023               	movlb	3	; select bank3
 24855  02FC' 0080'              	movwf	(sprintf@val+1)^(0+384)
 24856  02FD' 0022               	movlb	2	; select bank2
 24857  02FE' 0800'              	movf	?___fltol^(0+256),w
 24858  02FF' 0023               	movlb	3	; select bank3
 24859  0300' 0080'              	movwf	sprintf@val^(0+384)
 24860                           
 24861                           ;doprnt.c: 1254: while(c--) {
 24862  0301' 2800'              	goto	l9122
 24863  0302'                    l9112:
 24864                           
 24865                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
 24866  0302' 0800'              	movf	sprintf@c^(0+384),w
 24867  0303' 0080'              	movwf	??_sprintf^(0+384)
 24868  0304' 0181'              	clrf	(??_sprintf^(0+384)+1)
 24869  0305' 3580'              	lslf	??_sprintf^(0+384),f
 24870  0306' 0D81'              	rlf	(??_sprintf^(0+384)+1),f
 24871  0307' 3580'              	lslf	??_sprintf^(0+384),f
 24872  0308' 0D81'              	rlf	(??_sprintf^(0+384)+1),f
 24873  0309' 3000'              	movlw	low (_dpowers| (0+32768))
 24874  030A' 0700'              	addwf	??_sprintf^(0+384),w
 24875  030B' 0084               	movwf	4
 24876  030C' 3000'              	movlw	high (_dpowers| (0+32768))
 24877  030D' 3D00'              	addwfc	(??_sprintf+1)^(0+384),w
 24878  030E' 0085               	movwf	5
 24879  030F' 3F00               	moviw [0]fsr0
 24880  0310' 0022               	movlb	2	; select bank2
 24881  0311' 0080'              	movwf	___lldiv@divisor^(0+256)
 24882  0312' 3F01               	moviw [1]fsr0
 24883  0313' 0080'              	movwf	(___lldiv@divisor+1)^(0+256)
 24884  0314' 3F02               	moviw [2]fsr0
 24885  0315' 0080'              	movwf	(___lldiv@divisor+2)^(0+256)
 24886  0316' 3F03               	moviw [3]fsr0
 24887  0317' 0080'              	movwf	(___lldiv@divisor+3)^(0+256)
 24888  0318' 0023               	movlb	3	; select bank3
 24889  0319' 0800'              	movf	(sprintf@val+3)^(0+384),w
 24890  031A' 0022               	movlb	2	; select bank2
 24891  031B' 0080'              	movwf	(___lldiv@dividend+3)^(0+256)
 24892  031C' 0023               	movlb	3	; select bank3
 24893  031D' 0800'              	movf	(sprintf@val+2)^(0+384),w
 24894  031E' 0022               	movlb	2	; select bank2
 24895  031F' 0080'              	movwf	(___lldiv@dividend+2)^(0+256)
 24896  0320' 0023               	movlb	3	; select bank3
 24897  0321' 0800'              	movf	(sprintf@val+1)^(0+384),w
 24898  0322' 0022               	movlb	2	; select bank2
 24899  0323' 0080'              	movwf	(___lldiv@dividend+1)^(0+256)
 24900  0324' 0023               	movlb	3	; select bank3
 24901  0325' 0800'              	movf	sprintf@val^(0+384),w
 24902  0326' 0022               	movlb	2	; select bank2
 24903  0327' 0080'              	movwf	___lldiv@dividend^(0+256)
 24904  0328' 3180' 2000' 3180'  	fcall	___lldiv
 24905  032B' 0022               	movlb	2	; select bank2
 24906  032C' 0800'              	movf	(?___lldiv+3)^(0+256),w
 24907  032D' 0023               	movlb	3	; select bank3
 24908  032E' 0080'              	movwf	(sprintf@tmpval+3)^(0+384)
 24909  032F' 0022               	movlb	2	; select bank2
 24910  0330' 0800'              	movf	(?___lldiv+2)^(0+256),w
 24911  0331' 0023               	movlb	3	; select bank3
 24912  0332' 0080'              	movwf	(sprintf@tmpval+2)^(0+384)
 24913  0333' 0022               	movlb	2	; select bank2
 24914  0334' 0800'              	movf	(?___lldiv+1)^(0+256),w
 24915  0335' 0023               	movlb	3	; select bank3
 24916  0336' 0080'              	movwf	(sprintf@tmpval+1)^(0+384)
 24917  0337' 0022               	movlb	2	; select bank2
 24918  0338' 0800'              	movf	?___lldiv^(0+256),w
 24919  0339' 0023               	movlb	3	; select bank3
 24920  033A' 0080'              	movwf	sprintf@tmpval^(0+384)
 24921  033B'                    l9114:
 24922                           
 24923                           ;doprnt.c: 1256: tmpval.vd %= 10;
 24924  033B' 3000               	movlw	0
 24925  033C' 0022               	movlb	2	; select bank2
 24926  033D' 0080'              	movwf	(___llmod@divisor+3)^(0+256)
 24927  033E' 3000               	movlw	0
 24928  033F' 0080'              	movwf	(___llmod@divisor+2)^(0+256)
 24929  0340' 3000               	movlw	0
 24930  0341' 0080'              	movwf	(___llmod@divisor+1)^(0+256)
 24931  0342' 300A               	movlw	10
 24932  0343' 0080'              	movwf	___llmod@divisor^(0+256)
 24933  0344' 0023               	movlb	3	; select bank3
 24934  0345' 0800'              	movf	(sprintf@tmpval+3)^(0+384),w
 24935  0346' 0022               	movlb	2	; select bank2
 24936  0347' 0080'              	movwf	(___llmod@dividend+3)^(0+256)
 24937  0348' 0023               	movlb	3	; select bank3
 24938  0349' 0800'              	movf	(sprintf@tmpval+2)^(0+384),w
 24939  034A' 0022               	movlb	2	; select bank2
 24940  034B' 0080'              	movwf	(___llmod@dividend+2)^(0+256)
 24941  034C' 0023               	movlb	3	; select bank3
 24942  034D' 0800'              	movf	(sprintf@tmpval+1)^(0+384),w
 24943  034E' 0022               	movlb	2	; select bank2
 24944  034F' 0080'              	movwf	(___llmod@dividend+1)^(0+256)
 24945  0350' 0023               	movlb	3	; select bank3
 24946  0351' 0800'              	movf	sprintf@tmpval^(0+384),w
 24947  0352' 0022               	movlb	2	; select bank2
 24948  0353' 0080'              	movwf	___llmod@dividend^(0+256)
 24949  0354' 3180' 2000' 3180'  	fcall	___llmod
 24950  0357' 0022               	movlb	2	; select bank2
 24951  0358' 0800'              	movf	(?___llmod+3)^(0+256),w
 24952  0359' 0023               	movlb	3	; select bank3
 24953  035A' 0080'              	movwf	(sprintf@tmpval+3)^(0+384)
 24954  035B' 0022               	movlb	2	; select bank2
 24955  035C' 0800'              	movf	(?___llmod+2)^(0+256),w
 24956  035D' 0023               	movlb	3	; select bank3
 24957  035E' 0080'              	movwf	(sprintf@tmpval+2)^(0+384)
 24958  035F' 0022               	movlb	2	; select bank2
 24959  0360' 0800'              	movf	(?___llmod+1)^(0+256),w
 24960  0361' 0023               	movlb	3	; select bank3
 24961  0362' 0080'              	movwf	(sprintf@tmpval+1)^(0+384)
 24962  0363' 0022               	movlb	2	; select bank2
 24963  0364' 0800'              	movf	?___llmod^(0+256),w
 24964  0365' 0023               	movlb	3	; select bank3
 24965  0366' 0080'              	movwf	sprintf@tmpval^(0+384)
 24966  0367'                    l9116:
 24967                           
 24968                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)));
 24969  0367' 0800'              	movf	sprintf@tmpval^(0+384),w
 24970  0368' 3E30               	addlw	48
 24971  0369' 0080'              	movwf	??_sprintf^(0+384)
 24972  036A' 0800'              	movf	sprintf@sp^(0+384),w
 24973  036B' 0086               	movwf	6
 24974  036C' 0800'              	movf	(sprintf@sp+1)^(0+384),w
 24975  036D' 0087               	movwf	7
 24976  036E' 0800'              	movf	??_sprintf^(0+384),w
 24977  036F' 0081               	movwf	1
 24978  0370'                    l9118:
 24979  0370' 3001               	movlw	1
 24980  0371' 0780'              	addwf	sprintf@sp^(0+384),f
 24981  0372' 3000               	movlw	0
 24982  0373' 3D80'              	addwfc	(sprintf@sp+1)^(0+384),f
 24983  0374'                    l9120:
 24984                           
 24985                           ;doprnt.c: 1258: val %= dpowers[c];
 24986  0374' 0800'              	movf	sprintf@c^(0+384),w
 24987  0375' 0080'              	movwf	??_sprintf^(0+384)
 24988  0376' 0181'              	clrf	(??_sprintf^(0+384)+1)
 24989  0377' 3580'              	lslf	??_sprintf^(0+384),f
 24990  0378' 0D81'              	rlf	(??_sprintf^(0+384)+1),f
 24991  0379' 3580'              	lslf	??_sprintf^(0+384),f
 24992  037A' 0D81'              	rlf	(??_sprintf^(0+384)+1),f
 24993  037B' 3000'              	movlw	low (_dpowers| (0+32768))
 24994  037C' 0700'              	addwf	??_sprintf^(0+384),w
 24995  037D' 0084               	movwf	4
 24996  037E' 3000'              	movlw	high (_dpowers| (0+32768))
 24997  037F' 3D00'              	addwfc	(??_sprintf+1)^(0+384),w
 24998  0380' 0085               	movwf	5
 24999  0381' 3F00               	moviw [0]fsr0
 25000  0382' 0022               	movlb	2	; select bank2
 25001  0383' 0080'              	movwf	___llmod@divisor^(0+256)
 25002  0384' 3F01               	moviw [1]fsr0
 25003  0385' 0080'              	movwf	(___llmod@divisor+1)^(0+256)
 25004  0386' 3F02               	moviw [2]fsr0
 25005  0387' 0080'              	movwf	(___llmod@divisor+2)^(0+256)
 25006  0388' 3F03               	moviw [3]fsr0
 25007  0389' 0080'              	movwf	(___llmod@divisor+3)^(0+256)
 25008  038A' 0023               	movlb	3	; select bank3
 25009  038B' 0800'              	movf	(sprintf@val+3)^(0+384),w
 25010  038C' 0022               	movlb	2	; select bank2
 25011  038D' 0080'              	movwf	(___llmod@dividend+3)^(0+256)
 25012  038E' 0023               	movlb	3	; select bank3
 25013  038F' 0800'              	movf	(sprintf@val+2)^(0+384),w
 25014  0390' 0022               	movlb	2	; select bank2
 25015  0391' 0080'              	movwf	(___llmod@dividend+2)^(0+256)
 25016  0392' 0023               	movlb	3	; select bank3
 25017  0393' 0800'              	movf	(sprintf@val+1)^(0+384),w
 25018  0394' 0022               	movlb	2	; select bank2
 25019  0395' 0080'              	movwf	(___llmod@dividend+1)^(0+256)
 25020  0396' 0023               	movlb	3	; select bank3
 25021  0397' 0800'              	movf	sprintf@val^(0+384),w
 25022  0398' 0022               	movlb	2	; select bank2
 25023  0399' 0080'              	movwf	___llmod@dividend^(0+256)
 25024  039A' 3180' 2000' 3180'  	fcall	___llmod
 25025  039D' 0022               	movlb	2	; select bank2
 25026  039E' 0800'              	movf	(?___llmod+3)^(0+256),w
 25027  039F' 0023               	movlb	3	; select bank3
 25028  03A0' 0080'              	movwf	(sprintf@val+3)^(0+384)
 25029  03A1' 0022               	movlb	2	; select bank2
 25030  03A2' 0800'              	movf	(?___llmod+2)^(0+256),w
 25031  03A3' 0023               	movlb	3	; select bank3
 25032  03A4' 0080'              	movwf	(sprintf@val+2)^(0+384)
 25033  03A5' 0022               	movlb	2	; select bank2
 25034  03A6' 0800'              	movf	(?___llmod+1)^(0+256),w
 25035  03A7' 0023               	movlb	3	; select bank3
 25036  03A8' 0080'              	movwf	(sprintf@val+1)^(0+384)
 25037  03A9' 0022               	movlb	2	; select bank2
 25038  03AA' 0800'              	movf	?___llmod^(0+256),w
 25039  03AB' 0023               	movlb	3	; select bank3
 25040  03AC' 0080'              	movwf	sprintf@val^(0+384)
 25041  03AD'                    l9122:
 25042  03AD' 3001               	movlw	1
 25043  03AE' 0280'              	subwf	sprintf@c^(0+384),f
 25044  03AF' 0A00'              	incf	sprintf@c^(0+384),w
 25045  03B0' 1D03               	btfss	3,2
 25046  03B1' 2800'              	goto	u14731
 25047  03B2' 2800'              	goto	u14730
 25048  03B3'                    u14731:
 25049  03B3' 2800'              	goto	l9112
 25050  03B4'                    u14730:
 25051  03B4' 2800'              	goto	l9130
 25052  03B5'                    l9124:
 25053                           
 25054                           ;doprnt.c: 1262: ((*sp++ = ('0')));
 25055  03B5' 0800'              	movf	sprintf@sp^(0+384),w
 25056  03B6' 0086               	movwf	6
 25057  03B7' 0800'              	movf	(sprintf@sp+1)^(0+384),w
 25058  03B8' 0087               	movwf	7
 25059  03B9' 3030               	movlw	48
 25060  03BA' 0081               	movwf	1
 25061  03BB'                    l9126:
 25062  03BB' 3001               	movlw	1
 25063  03BC' 0780'              	addwf	sprintf@sp^(0+384),f
 25064  03BD' 3000               	movlw	0
 25065  03BE' 3D80'              	addwfc	(sprintf@sp+1)^(0+384),f
 25066  03BF'                    l9128:
 25067                           
 25068                           ;doprnt.c: 1263: prec--;
 25069  03BF' 30FF               	movlw	255
 25070  03C0' 0780'              	addwf	sprintf@prec^(0+384),f
 25071  03C1' 30FF               	movlw	255
 25072  03C2' 3D80'              	addwfc	(sprintf@prec+1)^(0+384),f
 25073  03C3'                    l9130:
 25074  03C3' 0800'              	movf	sprintf@prec^(0+384),w
 25075  03C4' 0400'              	iorwf	(sprintf@prec+1)^(0+384),w
 25076  03C5' 1D03               	btfss	3,2
 25077  03C6' 2800'              	goto	u14741
 25078  03C7' 2800'              	goto	u14740
 25079  03C8'                    u14741:
 25080  03C8' 2800'              	goto	l9124
 25081  03C9'                    u14740:
 25082  03C9' 2800'              	goto	l9226
 25083  03CA'                    l9132:
 25084                           
 25085                           ;doprnt.c: 1272: };doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_
      +                          arg((*(int **)ap), (int)0));
 25086  03CA' 0800'              	movf	sprintf@ap^(0+384),w
 25087  03CB' 0086               	movwf	6
 25088  03CC' 3001               	movlw	1	; select bank2/3
 25089  03CD' 0087               	movwf	7
 25090  03CE' 3F40               	moviw [0]fsr1
 25091  03CF' 0080'              	movwf	??_sprintf^(0+384)
 25092  03D0' 3F41               	moviw [1]fsr1
 25093  03D1' 0081'              	movwf	(??_sprintf^(0+384)+1)
 25094  03D2' 0800'              	movf	??_sprintf^(0+384),w
 25095  03D3' 0080'              	movwf	sprintf@val^(0+384)
 25096  03D4' 0800'              	movf	(??_sprintf+1)^(0+384),w
 25097  03D5' 0080'              	movwf	(sprintf@val+1)^(0+384)
 25098  03D6' 0D89               	rlf	9,f
 25099  03D7' 3B89               	subwfb	9,f
 25100  03D8' 0989               	comf	9,f
 25101  03D9' 0080'              	movwf	(sprintf@val+2)^(0+384)
 25102  03DA' 0080'              	movwf	(sprintf@val+3)^(0+384)
 25103  03DB'                    l9134:
 25104  03DB' 3002               	movlw	2
 25105  03DC' 0080'              	movwf	??_sprintf^(0+384)
 25106  03DD' 0800'              	movf	??_sprintf^(0+384),w
 25107  03DE' 0780'              	addwf	sprintf@ap^(0+384),f
 25108  03DF'                    l9136:
 25109                           
 25110                           ;doprnt.c: 1287: if((long)val < 0) {
 25111  03DF' 1F80'              	btfss	(sprintf@val+3)^(0+384),7
 25112  03E0' 2800'              	goto	u14751
 25113  03E1' 2800'              	goto	u14750
 25114  03E2'                    u14751:
 25115  03E2' 2800'              	goto	l9142
 25116  03E3'                    u14750:
 25117  03E3'                    l9138:
 25118                           
 25119                           ;doprnt.c: 1288: flag |= 0x03;
 25120  03E3' 3003               	movlw	3
 25121  03E4' 0480'              	iorwf	sprintf@flag^(0+384),f
 25122  03E5' 3000               	movlw	0
 25123  03E6' 0480'              	iorwf	(sprintf@flag+1)^(0+384),f
 25124  03E7'                    l9140:
 25125                           
 25126                           ;doprnt.c: 1289: val = -val;
 25127  03E7' 0980'              	comf	sprintf@val^(0+384),f
 25128  03E8' 0980'              	comf	(sprintf@val+1)^(0+384),f
 25129  03E9' 0980'              	comf	(sprintf@val+2)^(0+384),f
 25130  03EA' 0980'              	comf	(sprintf@val+3)^(0+384),f
 25131  03EB' 0A80'              	incf	sprintf@val^(0+384),f
 25132  03EC' 1903               	skipnz
 25133  03ED' 0A80'              	incf	(sprintf@val+1)^(0+384),f
 25134  03EE' 1903               	skipnz
 25135  03EF' 0A80'              	incf	(sprintf@val+2)^(0+384),f
 25136  03F0' 1903               	skipnz
 25137  03F1' 0A80'              	incf	(sprintf@val+3)^(0+384),f
 25138  03F2'                    l9142:
 25139                           
 25140                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1316: if(prec == 0 && val == 0)
 25141  03F2' 0800'              	movf	sprintf@prec^(0+384),w
 25142  03F3' 0400'              	iorwf	(sprintf@prec+1)^(0+384),w
 25143  03F4' 1D03               	btfss	3,2
 25144  03F5' 2800'              	goto	u14761
 25145  03F6' 2800'              	goto	u14760
 25146  03F7'                    u14761:
 25147  03F7' 2800'              	goto	l9148
 25148  03F8'                    u14760:
 25149  03F8'                    l9144:
 25150  03F8' 0800'              	movf	(sprintf@val+3)^(0+384),w
 25151  03F9' 0400'              	iorwf	(sprintf@val+2)^(0+384),w
 25152  03FA' 0400'              	iorwf	(sprintf@val+1)^(0+384),w
 25153  03FB' 0400'              	iorwf	sprintf@val^(0+384),w
 25154  03FC' 1D03               	skipz
 25155  03FD' 2800'              	goto	u14771
 25156  03FE' 2800'              	goto	u14770
 25157  03FF'                    u14771:
 25158  03FF' 2800'              	goto	l9148
 25159  0400'                    u14770:
 25160  0400'                    l9146:
 25161                           
 25162                           ;doprnt.c: 1317: prec++;
 25163  0400' 3001               	movlw	1
 25164  0401' 0780'              	addwf	sprintf@prec^(0+384),f
 25165  0402' 3000               	movlw	0
 25166  0403' 3D80'              	addwfc	(sprintf@prec+1)^(0+384),f
 25167  0404'                    l9148:
 25168                           
 25169                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 25170  0404' 0180'              	clrf	sprintf@c^(0+384)
 25171  0405' 0A80'              	incf	sprintf@c^(0+384),f
 25172  0406'                    l9154:
 25173                           
 25174                           ;doprnt.c: 1332: if(val < dpowers[c])
 25175  0406' 0800'              	movf	sprintf@c^(0+384),w
 25176  0407' 0080'              	movwf	??_sprintf^(0+384)
 25177  0408' 0181'              	clrf	(??_sprintf^(0+384)+1)
 25178  0409' 3580'              	lslf	??_sprintf^(0+384),f
 25179  040A' 0D81'              	rlf	(??_sprintf^(0+384)+1),f
 25180  040B' 3580'              	lslf	??_sprintf^(0+384),f
 25181  040C' 0D81'              	rlf	(??_sprintf^(0+384)+1),f
 25182  040D' 3000'              	movlw	low (_dpowers| (0+32768))
 25183  040E' 0700'              	addwf	??_sprintf^(0+384),w
 25184  040F' 0084               	movwf	4
 25185  0410' 3000'              	movlw	high (_dpowers| (0+32768))
 25186  0411' 3D00'              	addwfc	(??_sprintf+1)^(0+384),w
 25187  0412' 0085               	movwf	5
 25188  0413' 3F00               	moviw [0]fsr0
 25189  0414' 0080'              	movwf	(??_sprintf+2)^(0+384)
 25190  0415' 3F01               	moviw [1]fsr0
 25191  0416' 0081'              	movwf	((??_sprintf+2)^(0+384)+1)
 25192  0417' 3F02               	moviw [2]fsr0
 25193  0418' 0082'              	movwf	((??_sprintf+2)^(0+384)+2)
 25194  0419' 3F03               	moviw [3]fsr0
 25195  041A' 0083'              	movwf	((??_sprintf+2)^(0+384)+3)
 25196  041B' 0800'              	movf	(??_sprintf+5)^(0+384),w
 25197  041C' 0200'              	subwf	(sprintf@val+3)^(0+384),w
 25198  041D' 1D03               	skipz
 25199  041E' 2800'              	goto	u14785
 25200  041F' 0800'              	movf	(??_sprintf+4)^(0+384),w
 25201  0420' 0200'              	subwf	(sprintf@val+2)^(0+384),w
 25202  0421' 1D03               	skipz
 25203  0422' 2800'              	goto	u14785
 25204  0423' 0800'              	movf	(??_sprintf+3)^(0+384),w
 25205  0424' 0200'              	subwf	(sprintf@val+1)^(0+384),w
 25206  0425' 1D03               	skipz
 25207  0426' 2800'              	goto	u14785
 25208  0427' 0800'              	movf	(??_sprintf+2)^(0+384),w
 25209  0428' 0200'              	subwf	sprintf@val^(0+384),w
 25210  0429'                    u14785:
 25211  0429' 1803               	skipnc
 25212  042A' 2800'              	goto	u14781
 25213  042B' 2800'              	goto	u14780
 25214  042C'                    u14781:
 25215  042C' 2800'              	goto	l9158
 25216  042D'                    u14780:
 25217  042D' 2800'              	goto	l9160
 25218  042E'                    l9158:
 25219  042E' 3001               	movlw	1
 25220  042F' 0080'              	movwf	??_sprintf^(0+384)
 25221  0430' 0800'              	movf	??_sprintf^(0+384),w
 25222  0431' 0780'              	addwf	sprintf@c^(0+384),f
 25223  0432' 300A               	movlw	10
 25224  0433' 0600'              	xorwf	sprintf@c^(0+384),w
 25225  0434' 1D03               	btfss	3,2
 25226  0435' 2800'              	goto	u14791
 25227  0436' 2800'              	goto	u14790
 25228  0437'                    u14791:
 25229  0437' 2800'              	goto	l9154
 25230  0438'                    u14790:
 25231  0438'                    l9160:
 25232                           
 25233                           ;doprnt.c: 1365: if(c < prec)
 25234  0438' 0800'              	movf	(sprintf@prec+1)^(0+384),w
 25235  0439' 3A80               	xorlw	128
 25236  043A' 3C80               	sublw	128
 25237  043B' 1D03               	skipz
 25238  043C' 2800'              	goto	u14805
 25239  043D' 0800'              	movf	sprintf@prec^(0+384),w
 25240  043E' 0200'              	subwf	sprintf@c^(0+384),w
 25241  043F'                    u14805:
 25242  043F' 1803               	skipnc
 25243  0440' 2800'              	goto	u14801
 25244  0441' 2800'              	goto	u14800
 25245  0442'                    u14801:
 25246  0442' 2800'              	goto	l9164
 25247  0443'                    u14800:
 25248  0443'                    l9162:
 25249                           
 25250                           ;doprnt.c: 1366: c = (char)prec;
 25251  0443' 0023               	movlb	3	; select bank3
 25252  0444' 0800'              	movf	sprintf@prec^(0+384),w
 25253  0445' 0080'              	movwf	??_sprintf^(0+384)
 25254  0446' 0800'              	movf	??_sprintf^(0+384),w
 25255  0447' 0080'              	movwf	sprintf@c^(0+384)
 25256  0448' 2800'              	goto	l9168
 25257  0449'                    l9164:
 25258                           
 25259                           ;doprnt.c: 1367: else if(prec < c)
 25260  0449' 0023               	movlb	3	; select bank3
 25261  044A' 0800'              	movf	(sprintf@prec+1)^(0+384),w
 25262  044B' 3A80               	xorlw	128
 25263  044C' 0080'              	movwf	??_sprintf^(0+384)
 25264  044D' 3080               	movlw	128
 25265  044E' 0200'              	subwf	??_sprintf^(0+384),w
 25266  044F' 1D03               	skipz
 25267  0450' 2800'              	goto	u14815
 25268  0451' 0800'              	movf	sprintf@c^(0+384),w
 25269  0452' 0200'              	subwf	sprintf@prec^(0+384),w
 25270  0453'                    u14815:
 25271  0453' 1803               	skipnc
 25272  0454' 2800'              	goto	u14811
 25273  0455' 2800'              	goto	u14810
 25274  0456'                    u14811:
 25275  0456' 2800'              	goto	l9168
 25276  0457'                    u14810:
 25277  0457'                    l9166:
 25278                           
 25279                           ;doprnt.c: 1368: prec = c;
 25280  0457' 0023               	movlb	3	; select bank3
 25281  0458' 0800'              	movf	sprintf@c^(0+384),w
 25282  0459' 0080'              	movwf	??_sprintf^(0+384)
 25283  045A' 0181'              	clrf	(??_sprintf^(0+384)+1)
 25284  045B' 0800'              	movf	??_sprintf^(0+384),w
 25285  045C' 0080'              	movwf	sprintf@prec^(0+384)
 25286  045D' 0800'              	movf	(??_sprintf+1)^(0+384),w
 25287  045E' 0080'              	movwf	(sprintf@prec+1)^(0+384)
 25288  045F'                    l9168:
 25289                           
 25290                           ;doprnt.c: 1371: if(width && flag & 0x03)
 25291  045F' 0023               	movlb	3	; select bank3
 25292  0460' 0800'              	movf	sprintf@width^(0+384),w
 25293  0461' 0400'              	iorwf	(sprintf@width+1)^(0+384),w
 25294  0462' 1903               	btfsc	3,2
 25295  0463' 2800'              	goto	u14821
 25296  0464' 2800'              	goto	u14820
 25297  0465'                    u14821:
 25298  0465' 2800'              	goto	l9174
 25299  0466'                    u14820:
 25300  0466'                    l9170:
 25301  0466' 3003               	movlw	3
 25302  0467' 0500'              	andwf	sprintf@flag^(0+384),w
 25303  0468' 0080'              	movwf	??_sprintf^(0+384)
 25304  0469' 3000               	movlw	0
 25305  046A' 0500'              	andwf	(sprintf@flag+1)^(0+384),w
 25306  046B' 0080'              	movwf	(??_sprintf+1)^(0+384)
 25307  046C' 0800'              	movf	??_sprintf^(0+384),w
 25308  046D' 0401'              	iorwf	(??_sprintf^(0+384)+1),w
 25309  046E' 1903               	btfsc	3,2
 25310  046F' 2800'              	goto	u14831
 25311  0470' 2800'              	goto	u14830
 25312  0471'                    u14831:
 25313  0471' 2800'              	goto	l9174
 25314  0472'                    u14830:
 25315  0472'                    l9172:
 25316                           
 25317                           ;doprnt.c: 1372: width--;
 25318  0472' 30FF               	movlw	255
 25319  0473' 0780'              	addwf	sprintf@width^(0+384),f
 25320  0474' 30FF               	movlw	255
 25321  0475' 3D80'              	addwfc	(sprintf@width+1)^(0+384),f
 25322  0476'                    l9174:
 25323                           
 25324                           ;doprnt.c: 1374: if(flag & 0x4000) {
 25325  0476' 1F00'              	btfss	(sprintf@flag+1)^(0+384),6
 25326  0477' 2800'              	goto	u14841
 25327  0478' 2800'              	goto	u14840
 25328  0479'                    u14841:
 25329  0479' 2800'              	goto	l9182
 25330  047A'                    u14840:
 25331  047A'                    l9176:
 25332                           
 25333                           ;doprnt.c: 1375: if(width > prec)
 25334  047A' 0800'              	movf	(sprintf@prec+1)^(0+384),w
 25335  047B' 3A80               	xorlw	128
 25336  047C' 0080'              	movwf	??_sprintf^(0+384)
 25337  047D' 0800'              	movf	(sprintf@width+1)^(0+384),w
 25338  047E' 3A80               	xorlw	128
 25339  047F' 0200'              	subwf	??_sprintf^(0+384),w
 25340  0480' 1D03               	skipz
 25341  0481' 2800'              	goto	u14855
 25342  0482' 0800'              	movf	sprintf@width^(0+384),w
 25343  0483' 0200'              	subwf	sprintf@prec^(0+384),w
 25344  0484'                    u14855:
 25345  0484' 1803               	skipnc
 25346  0485' 2800'              	goto	u14851
 25347  0486' 2800'              	goto	u14850
 25348  0487'                    u14851:
 25349  0487' 2800'              	goto	l9180
 25350  0488'                    u14850:
 25351  0488'                    l9178:
 25352                           
 25353                           ;doprnt.c: 1376: width -= prec;
 25354  0488' 0023               	movlb	3	; select bank3
 25355  0489' 0800'              	movf	sprintf@prec^(0+384),w
 25356  048A' 0280'              	subwf	sprintf@width^(0+384),f
 25357  048B' 0800'              	movf	(sprintf@prec+1)^(0+384),w
 25358  048C' 3B80'              	subwfb	(sprintf@width+1)^(0+384),f
 25359  048D' 2800'              	goto	l9182
 25360  048E'                    l9180:
 25361                           
 25362                           ;doprnt.c: 1377: else;doprnt.c: 1378: width = 0;
 25363  048E' 0023               	movlb	3	; select bank3
 25364  048F' 0180'              	clrf	sprintf@width^(0+384)
 25365  0490' 0180'              	clrf	(sprintf@width+1)^(0+384)
 25366  0491'                    l9182:
 25367                           
 25368                           ;doprnt.c: 1379: };doprnt.c: 1407: if(width > c)
 25369  0491' 0800'              	movf	(sprintf@width+1)^(0+384),w
 25370  0492' 3A80               	xorlw	128
 25371  0493' 3C80               	sublw	128
 25372  0494' 1D03               	skipz
 25373  0495' 2800'              	goto	u14865
 25374  0496' 0800'              	movf	sprintf@width^(0+384),w
 25375  0497' 0200'              	subwf	sprintf@c^(0+384),w
 25376  0498'                    u14865:
 25377  0498' 1803               	skipnc
 25378  0499' 2800'              	goto	u14861
 25379  049A' 2800'              	goto	u14860
 25380  049B'                    u14861:
 25381  049B' 2800'              	goto	l9186
 25382  049C'                    u14860:
 25383  049C'                    l9184:
 25384                           
 25385                           ;doprnt.c: 1408: width -= c;
 25386  049C' 0023               	movlb	3	; select bank3
 25387  049D' 0800'              	movf	sprintf@c^(0+384),w
 25388  049E' 0080'              	movwf	??_sprintf^(0+384)
 25389  049F' 0181'              	clrf	(??_sprintf^(0+384)+1)
 25390  04A0' 0800'              	movf	??_sprintf^(0+384),w
 25391  04A1' 0280'              	subwf	sprintf@width^(0+384),f
 25392  04A2' 0800'              	movf	(??_sprintf+1)^(0+384),w
 25393  04A3' 3B80'              	subwfb	(sprintf@width+1)^(0+384),f
 25394  04A4' 2800'              	goto	l9188
 25395  04A5'                    l9186:
 25396                           
 25397                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 25398  04A5' 0023               	movlb	3	; select bank3
 25399  04A6' 0180'              	clrf	sprintf@width^(0+384)
 25400  04A7' 0180'              	clrf	(sprintf@width+1)^(0+384)
 25401  04A8'                    l9188:
 25402                           
 25403                           ;doprnt.c: 1413: if(flag & 0x04) {
 25404  04A8' 1D00'              	btfss	sprintf@flag^(0+384),2
 25405  04A9' 2800'              	goto	u14871
 25406  04AA' 2800'              	goto	u14870
 25407  04AB'                    u14871:
 25408  04AB' 2800'              	goto	l9204
 25409  04AC'                    u14870:
 25410  04AC'                    l9190:
 25411                           
 25412                           ;doprnt.c: 1418: if(flag & 0x03)
 25413  04AC' 3003               	movlw	3
 25414  04AD' 0500'              	andwf	sprintf@flag^(0+384),w
 25415  04AE' 0080'              	movwf	??_sprintf^(0+384)
 25416  04AF' 3000               	movlw	0
 25417  04B0' 0500'              	andwf	(sprintf@flag+1)^(0+384),w
 25418  04B1' 0080'              	movwf	(??_sprintf+1)^(0+384)
 25419  04B2' 0800'              	movf	??_sprintf^(0+384),w
 25420  04B3' 0401'              	iorwf	(??_sprintf^(0+384)+1),w
 25421  04B4' 1903               	btfsc	3,2
 25422  04B5' 2800'              	goto	u14881
 25423  04B6' 2800'              	goto	u14880
 25424  04B7'                    u14881:
 25425  04B7' 2800'              	goto	l9196
 25426  04B8'                    u14880:
 25427  04B8'                    l9192:
 25428                           
 25429                           ;doprnt.c: 1419: ((*sp++ = ('-')));
 25430  04B8' 0800'              	movf	sprintf@sp^(0+384),w
 25431  04B9' 0086               	movwf	6
 25432  04BA' 0800'              	movf	(sprintf@sp+1)^(0+384),w
 25433  04BB' 0087               	movwf	7
 25434  04BC' 302D               	movlw	45
 25435  04BD' 0081               	movwf	1
 25436  04BE'                    l9194:
 25437  04BE' 3001               	movlw	1
 25438  04BF' 0780'              	addwf	sprintf@sp^(0+384),f
 25439  04C0' 3000               	movlw	0
 25440  04C1' 3D80'              	addwfc	(sprintf@sp+1)^(0+384),f
 25441  04C2'                    l9196:
 25442                           
 25443                           ;doprnt.c: 1441: if(width)
 25444  04C2' 0800'              	movf	sprintf@width^(0+384),w
 25445  04C3' 0400'              	iorwf	(sprintf@width+1)^(0+384),w
 25446  04C4' 1903               	btfsc	3,2
 25447  04C5' 2800'              	goto	u14891
 25448  04C6' 2800'              	goto	u14890
 25449  04C7'                    u14891:
 25450  04C7' 2800'              	goto	l9224
 25451  04C8'                    u14890:
 25452  04C8'                    l9198:
 25453                           
 25454                           ;doprnt.c: 1443: ((*sp++ = ('0')));
 25455  04C8' 0800'              	movf	sprintf@sp^(0+384),w
 25456  04C9' 0086               	movwf	6
 25457  04CA' 0800'              	movf	(sprintf@sp+1)^(0+384),w
 25458  04CB' 0087               	movwf	7
 25459  04CC' 3030               	movlw	48
 25460  04CD' 0081               	movwf	1
 25461  04CE'                    l9200:
 25462  04CE' 3001               	movlw	1
 25463  04CF' 0780'              	addwf	sprintf@sp^(0+384),f
 25464  04D0' 3000               	movlw	0
 25465  04D1' 3D80'              	addwfc	(sprintf@sp+1)^(0+384),f
 25466  04D2'                    l9202:
 25467                           
 25468                           ;doprnt.c: 1444: while(--width);
 25469  04D2' 30FF               	movlw	255
 25470  04D3' 0780'              	addwf	sprintf@width^(0+384),f
 25471  04D4' 30FF               	movlw	255
 25472  04D5' 3D80'              	addwfc	(sprintf@width+1)^(0+384),f
 25473  04D6' 0800'              	movf	sprintf@width^(0+384),w
 25474  04D7' 0400'              	iorwf	(sprintf@width+1)^(0+384),w
 25475  04D8' 1D03               	btfss	3,2
 25476  04D9' 2800'              	goto	u14901
 25477  04DA' 2800'              	goto	u14900
 25478  04DB'                    u14901:
 25479  04DB' 2800'              	goto	l9198
 25480  04DC'                    u14900:
 25481  04DC' 2800'              	goto	l9224
 25482  04DD'                    l9204:
 25483                           
 25484                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
 25485  04DD' 0800'              	movf	sprintf@width^(0+384),w
 25486  04DE' 0400'              	iorwf	(sprintf@width+1)^(0+384),w
 25487  04DF' 1903               	btfsc	3,2
 25488  04E0' 2800'              	goto	u14911
 25489  04E1' 2800'              	goto	u14910
 25490  04E2'                    u14911:
 25491  04E2' 2800'              	goto	l9212
 25492  04E3'                    u14910:
 25493  04E3'                    l9206:
 25494                           
 25495                           ;doprnt.c: 1456: ((*sp++ = (' ')));
 25496  04E3' 0800'              	movf	sprintf@sp^(0+384),w
 25497  04E4' 0086               	movwf	6
 25498  04E5' 0800'              	movf	(sprintf@sp+1)^(0+384),w
 25499  04E6' 0087               	movwf	7
 25500  04E7' 3020               	movlw	32
 25501  04E8' 0081               	movwf	1
 25502  04E9'                    l9208:
 25503  04E9' 3001               	movlw	1
 25504  04EA' 0780'              	addwf	sprintf@sp^(0+384),f
 25505  04EB' 3000               	movlw	0
 25506  04EC' 3D80'              	addwfc	(sprintf@sp+1)^(0+384),f
 25507  04ED'                    l9210:
 25508                           
 25509                           ;doprnt.c: 1457: while(--width);
 25510  04ED' 30FF               	movlw	255
 25511  04EE' 0780'              	addwf	sprintf@width^(0+384),f
 25512  04EF' 30FF               	movlw	255
 25513  04F0' 3D80'              	addwfc	(sprintf@width+1)^(0+384),f
 25514  04F1' 0800'              	movf	sprintf@width^(0+384),w
 25515  04F2' 0400'              	iorwf	(sprintf@width+1)^(0+384),w
 25516  04F3' 1D03               	btfss	3,2
 25517  04F4' 2800'              	goto	u14921
 25518  04F5' 2800'              	goto	u14920
 25519  04F6'                    u14921:
 25520  04F6' 2800'              	goto	l9206
 25521  04F7'                    u14920:
 25522  04F7'                    l9212:
 25523                           
 25524                           ;doprnt.c: 1464: if(flag & 0x03)
 25525  04F7' 3003               	movlw	3
 25526  04F8' 0500'              	andwf	sprintf@flag^(0+384),w
 25527  04F9' 0080'              	movwf	??_sprintf^(0+384)
 25528  04FA' 3000               	movlw	0
 25529  04FB' 0500'              	andwf	(sprintf@flag+1)^(0+384),w
 25530  04FC' 0080'              	movwf	(??_sprintf+1)^(0+384)
 25531  04FD' 0800'              	movf	??_sprintf^(0+384),w
 25532  04FE' 0401'              	iorwf	(??_sprintf^(0+384)+1),w
 25533  04FF' 1903               	btfsc	3,2
 25534  0500' 2800'              	goto	u14931
 25535  0501' 2800'              	goto	u14930
 25536  0502'                    u14931:
 25537  0502' 2800'              	goto	l9224
 25538  0503'                    u14930:
 25539  0503'                    l9214:
 25540                           
 25541                           ;doprnt.c: 1465: ((*sp++ = ('-')));
 25542  0503' 0800'              	movf	sprintf@sp^(0+384),w
 25543  0504' 0086               	movwf	6
 25544  0505' 0800'              	movf	(sprintf@sp+1)^(0+384),w
 25545  0506' 0087               	movwf	7
 25546  0507' 302D               	movlw	45
 25547  0508' 0081               	movwf	1
 25548  0509'                    l9216:
 25549  0509' 3001               	movlw	1
 25550  050A' 0780'              	addwf	sprintf@sp^(0+384),f
 25551  050B' 3000               	movlw	0
 25552  050C' 3D80'              	addwfc	(sprintf@sp+1)^(0+384),f
 25553  050D' 2800'              	goto	l9224
 25554  050E'                    l9218:
 25555                           
 25556                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
 25557  050E' 3000               	movlw	0
 25558  050F' 0022               	movlb	2	; select bank2
 25559  0510' 0080'              	movwf	(___llmod@divisor+3)^(0+256)
 25560  0511' 3000               	movlw	0
 25561  0512' 0080'              	movwf	(___llmod@divisor+2)^(0+256)
 25562  0513' 3000               	movlw	0
 25563  0514' 0080'              	movwf	(___llmod@divisor+1)^(0+256)
 25564  0515' 300A               	movlw	10
 25565  0516' 0080'              	movwf	___llmod@divisor^(0+256)
 25566  0517' 0023               	movlb	3	; select bank3
 25567  0518' 0800'              	movf	(sprintf@prec+1)^(0+384),w
 25568  0519' 0085               	movwf	5
 25569  051A' 0800'              	movf	sprintf@prec^(0+384),w
 25570  051B' 0084               	movwf	4
 25571  051C' 3584               	lslf	4,f
 25572  051D' 0D85               	rlf	5,f
 25573  051E' 3584               	lslf	4,f
 25574  051F' 0D85               	rlf	5,f
 25575  0520' 3000'              	movlw	low (_dpowers| (0+32768))
 25576  0521' 0784               	addwf	4,f
 25577  0522' 3000'              	movlw	high (_dpowers| (0+32768))
 25578  0523' 3D85               	addwfc	5,f
 25579  0524' 3F00               	moviw [0]fsr0
 25580  0525' 0022               	movlb	2	; select bank2
 25581  0526' 0080'              	movwf	___lldiv@divisor^(0+256)
 25582  0527' 3F01               	moviw [1]fsr0
 25583  0528' 0080'              	movwf	(___lldiv@divisor+1)^(0+256)
 25584  0529' 3F02               	moviw [2]fsr0
 25585  052A' 0080'              	movwf	(___lldiv@divisor+2)^(0+256)
 25586  052B' 3F03               	moviw [3]fsr0
 25587  052C' 0080'              	movwf	(___lldiv@divisor+3)^(0+256)
 25588  052D' 0023               	movlb	3	; select bank3
 25589  052E' 0800'              	movf	(sprintf@val+3)^(0+384),w
 25590  052F' 0022               	movlb	2	; select bank2
 25591  0530' 0080'              	movwf	(___lldiv@dividend+3)^(0+256)
 25592  0531' 0023               	movlb	3	; select bank3
 25593  0532' 0800'              	movf	(sprintf@val+2)^(0+384),w
 25594  0533' 0022               	movlb	2	; select bank2
 25595  0534' 0080'              	movwf	(___lldiv@dividend+2)^(0+256)
 25596  0535' 0023               	movlb	3	; select bank3
 25597  0536' 0800'              	movf	(sprintf@val+1)^(0+384),w
 25598  0537' 0022               	movlb	2	; select bank2
 25599  0538' 0080'              	movwf	(___lldiv@dividend+1)^(0+256)
 25600  0539' 0023               	movlb	3	; select bank3
 25601  053A' 0800'              	movf	sprintf@val^(0+384),w
 25602  053B' 0022               	movlb	2	; select bank2
 25603  053C' 0080'              	movwf	___lldiv@dividend^(0+256)
 25604  053D' 3180' 2000' 3180'  	fcall	___lldiv
 25605  0540' 0022               	movlb	2	; select bank2
 25606  0541' 0800'              	movf	(?___lldiv+3)^(0+256),w
 25607  0542' 0080'              	movwf	(___llmod@dividend+3)^(0+256)
 25608  0543' 0800'              	movf	(?___lldiv+2)^(0+256),w
 25609  0544' 0080'              	movwf	(___llmod@dividend+2)^(0+256)
 25610  0545' 0800'              	movf	(?___lldiv+1)^(0+256),w
 25611  0546' 0080'              	movwf	(___llmod@dividend+1)^(0+256)
 25612  0547' 0800'              	movf	?___lldiv^(0+256),w
 25613  0548' 0080'              	movwf	___llmod@dividend^(0+256)
 25614  0549' 3180' 2000' 3180'  	fcall	___llmod
 25615  054C' 0022               	movlb	2	; select bank2
 25616  054D' 0800'              	movf	?___llmod^(0+256),w
 25617  054E' 3E30               	addlw	48
 25618  054F' 0023               	movlb	3	; select bank3
 25619  0550' 0080'              	movwf	??_sprintf^(0+384)
 25620  0551' 0800'              	movf	??_sprintf^(0+384),w
 25621  0552' 0080'              	movwf	sprintf@c^(0+384)
 25622  0553'                    l9220:
 25623                           
 25624                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
 25625  0553' 0800'              	movf	sprintf@sp^(0+384),w
 25626  0554' 0086               	movwf	6
 25627  0555' 0800'              	movf	(sprintf@sp+1)^(0+384),w
 25628  0556' 0087               	movwf	7
 25629  0557' 0800'              	movf	sprintf@c^(0+384),w
 25630  0558' 0081               	movwf	1
 25631  0559'                    l9222:
 25632  0559' 3001               	movlw	1
 25633  055A' 0780'              	addwf	sprintf@sp^(0+384),f
 25634  055B' 3000               	movlw	0
 25635  055C' 3D80'              	addwfc	(sprintf@sp+1)^(0+384),f
 25636  055D'                    l9224:
 25637  055D' 30FF               	movlw	255
 25638  055E' 0780'              	addwf	sprintf@prec^(0+384),f
 25639  055F' 30FF               	movlw	255
 25640  0560' 3D80'              	addwfc	(sprintf@prec+1)^(0+384),f
 25641  0561' 0A00'              	incf	sprintf@prec^(0+384),w
 25642  0562' 1D03               	skipz
 25643  0563' 2800'              	goto	u14941
 25644  0564' 0A00'              	incf	(sprintf@prec+1)^(0+384),w
 25645  0565' 1D03               	btfss	3,2
 25646  0566' 2800'              	goto	u14941
 25647  0567' 2800'              	goto	u14940
 25648  0568'                    u14941:
 25649  0568' 2800'              	goto	l9218
 25650  0569'                    u14940:
 25651  0569'                    l9226:
 25652  0569' 0800'              	movf	(sprintf@f+1)^(0+384),w
 25653  056A' 0081'              	movwf	(??_sprintf^(0+384)+1)
 25654  056B' 0800'              	movf	sprintf@f^(0+384),w
 25655  056C' 0080'              	movwf	??_sprintf^(0+384)
 25656  056D' 0A80'              	incf	sprintf@f^(0+384),f
 25657  056E' 1903               	skipnz
 25658  056F' 0A80'              	incf	(sprintf@f+1)^(0+384),f
 25659  0570' 0800'              	movf	??_sprintf^(0+384),w
 25660  0571' 0084               	movwf	4
 25661  0572' 0800'              	movf	(??_sprintf+1)^(0+384),w
 25662  0573' 0085               	movwf	5
 25663  0574' 0800               	movf	0,w	;code access
 25664  0575' 0080'              	movwf	(??_sprintf+2)^(0+384)
 25665  0576' 0800'              	movf	(??_sprintf+2)^(0+384),w
 25666  0577' 0080'              	movwf	sprintf@c^(0+384)
 25667  0578' 0800'              	movf	sprintf@c^(0+384),w
 25668  0579' 1D03               	btfss	3,2
 25669  057A' 2800'              	goto	u14951
 25670  057B' 2800'              	goto	u14950
 25671  057C'                    u14951:
 25672  057C' 3180' 2800'        	goto	l8906
 25673  057E'                    u14950:
 25674  057E'                    l9228:
 25675                           
 25676                           ;doprnt.c: 1564: *sp = 0;
 25677  057E' 0800'              	movf	sprintf@sp^(0+384),w
 25678  057F' 0086               	movwf	6
 25679  0580' 0800'              	movf	(sprintf@sp+1)^(0+384),w
 25680  0581' 0087               	movwf	7
 25681  0582' 0181               	clrf	1
 25682  0583'                    l1177:
 25683  0583' 0008               	return
 25684  0584'                    __end_of_sprintf:

Data Sizes:
    Strings     41
    Constant    144
    Data        0
    BSS         11
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     77      79
    BANK1            80     57      63
    BANK2            80     77      78
    BANK3            80     71      77
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler$0	PTR FTN()void  size(2) Largest target is 1
		 -> sensor_ISR(), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_7(CODE[8]), STR_6(CODE[7]), STR_5(CODE[5]), STR_4(CODE[6]), 
		 -> STR_3(CODE[11]), STR_2(CODE[6]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 17
		 -> sensor_ISR@buf(BANK0[17]), count_time_ISR@buf(BANK1[17]), main@buf(BANK3[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK3[2]), 

    LCDstr@p	PTR unsigned char  size(2) Largest target is 17
		 -> sensor_ISR@buf(BANK0[17]), count_time_ISR@buf(BANK1[17]), main@buf(BANK3[17]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> count_time_ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> count_time_ISR(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _count_time_ISR->i1_LCDstr
    i1_sprintf->i1___lldiv
    i1_sprintf->i1___xxtofl
    i1___awdiv->i1___awmod
    i1_fround->i1___lwdiv
    i1___lwdiv->i1___lwmod
    i1___flmul->i1___lwdiv
    i1___llmod->i1___lldiv
    i1___flsub->i1___xxtofl
    i1_LCDstr->i1_LCDchar
    i1_LCDchar->i1_LCDsend2x4
    i1_LCDcmd->i1_LCDsend2x4
    i1_LCDsend2x4->i1_WriteI2C

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    i1_sprintf->i1___flsub
    i1_scale->i1___flmul
    i1_fround->i1___flmul
    i1___flmul->i1___awdiv
    i1___fltol->i1___flmul
    i1___flsub->i1___fladd
    i1___fladd->i1_fround

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    _TMR1_ISR->_count_time_ISR
    _count_time_ISR->i1_sprintf

Critical Paths under _main in BANK2

    _sprintf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _Timer1->_TMR1_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _LCDstr->_LCDchar
    _LCDchar->_LCDsend2x4
    _LCDinit->_LCDsend2x4
    _LCDsend->_WriteI2C
    _LCDcmd->_LCDsend2x4
    _LCDsend2x4->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_sprintf
    _sprintf->___flsub
    ___flsub->___fladd

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0   47124
                                             54 BANK3     17    17      0
                             _LCDcmd
                            _LCDinit
                             _LCDstr
                  _SYSTEM_Initialize
                             _Timer1
                   _i2c1_driver_open
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             47    37     10   43764
                                             12 BANK3     42    32     10
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               21    17      4    9720
                                             42 BANK2     21    17      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1513
                                              0 BANK2      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1705
                                              7 BANK2      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              0 BANK2      2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              19    15      4    7776
                                             42 BANK2     19    15      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     772
                                              0 BANK2      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                              6 BANK2      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    5873
                                             16 BANK2     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              0 BANK2      9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     634
                                              0 BANK2     18    10      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              0 BANK2     15     7      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     656
                                              0 BANK2     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     676
                                              0 BANK2      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     952
                                             14 BANK2     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     781
                                              0 BANK2     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     697
                                             63 BANK2     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3547
                                              4 BANK3      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3302
                                             61 BANK2     16     8      8
                                              0 BANK3      4     4      0
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     155
                                              0 BANK2      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     986
                                              0 BANK2     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              0 BANK2     12     4      8
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1                                               0     0      0     186
           _TMR0_SetInterruptHandler
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2      12
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
                    _ADCC_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDstr                                               6     4      2    1098
                                              9 BANK2      6     4      2
                            _LCDchar
 ---------------------------------------------------------------------------------
 (2) _LCDchar                                              1     1      0     810
                                              8 BANK2      1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     832
                                              8 BANK2      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 BANK2      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _LCDcmd                                               1     1      0     810
                                              8 BANK2      1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (3) _LCDsend2x4                                           6     5      1     788
                                              2 BANK2      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (4) _WriteI2C                                             2     2      0      22
                                              0 BANK2      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0   22609
                            _INT_ISR
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0   22609
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                     _count_time_ISR *
 ---------------------------------------------------------------------------------
 (7) _count_time_ISR                                      17    17      0   22369
                                             40 BANK1     17    17      0
                           i1_LCDcmd
                           i1_LCDstr
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (8) i1_sprintf                                           45    37      8   21254
                                              0 BANK1     40    32      8
                          i1___awdiv
                          i1___fladd
                           i1___fleq
                           i1___flge
                          i1___flmul
                          i1___flneg
                          i1___flsub
                          i1___fltol
                          i1___lldiv
                          i1___llmod
                           i1___wmul
                         i1___xxtofl
                       i1__div_to_l_
                      i1__tdiv_to_l_
                           i1_fround
                          i1_isdigit
                            i1_scale
 ---------------------------------------------------------------------------------
 (9) i1_scale                                             21    17      4    4258
                                             30 BANK0     21    17      4
                          i1___awdiv
                          i1___awmod
                          i1___flmul
 ---------------------------------------------------------------------------------
 (10) i1___awmod                                           7     3      4     608
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (10) i1___awdiv                                           9     5      4     664
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                          i1___awmod (ARG)
 ---------------------------------------------------------------------------------
 (9) i1_isdigit                                            2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) i1_fround                                            19    15      4    3421
                                             30 BANK0     19    15      4
                          i1___flmul
                          i1___lwdiv
                          i1___lwmod
 ---------------------------------------------------------------------------------
 (10) i1___lwmod                                           6     2      4     315
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (10) i1___lwdiv                                           8     4      4     318
                                              6 COMMON     8     4      4
                          i1___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (10) i1___flmul                                          26    18      8    2543
                                              4 BANK0     26    18      8
                        i1__Umul8_16
                          i1___awdiv (ARG)
                          i1___awmod (ARG)
                          i1___lwdiv (ARG)
                          i1___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (11) i1__Umul8_16                                         9     7      2     349
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (9) i1__tdiv_to_l_                                       18    10      8     355
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (9) i1__div_to_l_                                        15     7      8     355
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (9) i1___xxtofl                                          14    10      4     348
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (9) i1___wmul                                             6     2      4     248
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) i1___llmod                                           10     2      8     367
                                              0 BANK0     10     2      8
                          i1___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (9) i1___lldiv                                           14     6      8     318
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (9) i1___fltol                                           11     7      4     307
                                             30 BANK0     11     7      4
                          i1___flmul (ARG)
 ---------------------------------------------------------------------------------
 (9) i1___flsub                                            8     0      8    2185
                                             69 BANK0      8     0      8
                          i1___fladd
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (10) i1___fladd                                          20    12      8    2088
                                             49 BANK0     20    12      8
                           i1_fround (ARG)
 ---------------------------------------------------------------------------------
 (9) i1___flneg                                            4     0      4      71
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (9) i1___flge                                            12     4      8     390
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (9) i1___fleq                                            12     4      8     194
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (8) i1_LCDstr                                             6     4      2     467
                                              9 COMMON     5     3      2
                                              0 BANK0      1     1      0
                          i1_LCDchar
 ---------------------------------------------------------------------------------
 (9) i1_LCDchar                                            1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (8) i1_LCDcmd                                             1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (10) i1_LCDsend2x4                                        6     5      1     384
                                              2 COMMON     6     5      1
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (11) i1_WriteI2C                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDcmd
     _LCDsend2x4
       _WriteI2C
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _LCDstr
     _LCDchar
       _LCDsend2x4
         _WriteI2C
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EXT_INT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _Timer1
     _TMR0_SetInterruptHandler
     _TMR1_SetInterruptHandler
   _i2c1_driver_open
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _INT_ISR
   _TMR0_ISR
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _count_time_ISR *
       i1_LCDcmd
         i1_LCDsend2x4
           i1_WriteI2C
       i1_LCDstr
         i1_LCDchar
           i1_LCDsend2x4
             i1_WriteI2C
       i1_sprintf
         i1___awdiv
           i1___awmod (ARG)
         i1___fladd
           i1_fround (ARG)
             i1___flmul
               i1__Umul8_16
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___lwdiv (ARG)
                 i1___lwmod (ARG)
               i1___lwmod (ARG)
             i1___lwdiv
               i1___lwmod (ARG)
             i1___lwmod
         i1___fleq
         i1___flge
         i1___flmul
           i1__Umul8_16
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
           i1___lwdiv (ARG)
             i1___lwmod (ARG)
           i1___lwmod (ARG)
         i1___flneg
         i1___flsub
           i1___fladd
             i1_fround (ARG)
               i1___flmul
                 i1__Umul8_16
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___lwdiv (ARG)
                   i1___lwmod (ARG)
                 i1___lwmod (ARG)
               i1___lwdiv
                 i1___lwmod (ARG)
               i1___lwmod
           i1___xxtofl (ARG)
         i1___fltol
           i1___flmul (ARG)
             i1__Umul8_16
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___lwdiv (ARG)
               i1___lwmod (ARG)
             i1___lwmod (ARG)
         i1___lldiv
         i1___llmod
           i1___lldiv (ARG)
         i1___wmul
         i1___xxtofl
         i1__div_to_l_
         i1__tdiv_to_l_
         i1_fround
           i1___flmul
             i1__Umul8_16
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___lwdiv (ARG)
               i1___lwmod (ARG)
             i1___lwmod (ARG)
           i1___lwdiv
             i1___lwmod (ARG)
           i1___lwmod
         i1_isdigit
         i1_scale
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___flmul
             i1__Umul8_16
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___lwdiv (ARG)
               i1___lwmod (ARG)
             i1___lwmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     39      3F       7       78.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     4D      4E       9       97.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50     47      4D      11       96.2%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     137      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     137      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Oct 31 16:23:37 2020

                             i1___fladd@a 0035                               i1___fladd@b 0031  
                              i1_WriteI2C 0000                     __size_ofi1__div_to_l_ 00AF  
                                      l30 0059                                        l33 0021  
                                      l42 0043                                        l35 0026  
                                      l47 0057                              ___awdiv@sign 000D  
                             i1___flmul@a 0008                               i1___flmul@b 0004  
                             i1___flsub@a 0045                               i1___flsub@b 0049  
                     ___wmul@multiplicand 0002                              i1___flge@ff1 0000  
                            i1___flge@ff2 0004                          i1___wmul@product 0004  
                            i1___fleq@ff1 0000                              i1___fleq@ff2 0004  
                     __Umul8_16@word_mpld 0006                                i1___xxtofl 0000  
                            i1___flneg@f1 0000                                       l124 003E  
                                     l170 0015                                       l501 0015  
                                     l173 0008                                       l237 000B  
                                     l176 0007                                       l419 0008  
                                     l640 0013                                       l651 004C  
                                     l803 0018                                       l652 004E  
                                     l741 0022                                       l389 001E  
                                     l742 0024                                       l655 0052  
                                     l639 0011                                       l771 00D0  
                                     l772 00D3                                       l756 0074  
                                     l765 00B4                                       l781 0008  
                                     l775 0073                                       l768 00CA  
                                     l769 00CC                                       l778 0007  
                                     l787 001A                                       l796 0038  
                                     l797 0038                           _timer1ReloadVal 0002  
                            i1___fltol@f1 001E                   __size_of_PMD_Initialize 0008  
                            ___awmod@sign 0006                                       wreg 0009  
                           i1___fladd@grs 0044                              ___flmul@aexp 001E  
                            ___flmul@bexp 0023                              ___flmul@sign 001D  
                            ___flmul@temp 0028                              ___flmul@prod 0024  
                             ?_LCDsend2x4 0002                              ___fltol@exp1 0049  
                         __end_of_LCDchar 0009                                      l1103 023D  
                                    l1060 0188                                      l1141 0299  
                                    l1080 001D                                      l1217 005A  
                                    l1402 0076                                      l1067 027D  
                                    l1181 000B                                      l1334 005F  
                                    l1183 001F                                      l1351 00AE  
                                    l1095 00C0                                      l1512 013A  
                                    l1352 0021                                      l1521 0296  
                                    l1409 00A2                                      l1177 0583  
                                    l1514 0110                                      l1362 00A1  
                                    l1610 01D2                                      l1355 0075  
                                    l1347 0053                                      l1372 001D  
                                    l1380 000B                                      l1508 0070  
                                    l1604 0256                                      l1533 01FF  
                                    l1437 004A                                      l1550 0289  
                                    l1542 0262                                      l1367 001D  
                                    l1375 0071                                      l1551 0296  
                                    l1391 005F                                      l1623 0013  
                                    l1368 0039                                      l1376 008A  
                                    l1384 0074                                      l1616 024A  
                                    l1369 004E                                      l1529 01D8  
                                    l1625 0023                                      l1554 0035  
                                    l1394 0074                                      l1650 00AC  
                                    l1539 0225                                      l1661 0078  
                                    l1662 0084                                      l1654 005E  
                                    l1398 00AF                                      l1399 002D  
                                    l1487 003C                                      l1648 0023  
                                    l1497 0034                                      l1668 0012  
                         __end_of_LCDinit 0074                                      l5530 000A  
                                    l5522 0002                                      l5532 0014  
                                    l5524 0005                                      l7300 0000  
                                    l8100 0022                                      l5534 001F  
                                    l5542 002D                                      l7310 000F  
                                    l7302 0003                                      l8110 0041  
                                    l8102 0025                                      l5544 0038  
                                    l5536 002B                                      l7400 0000  
                                    l7312 0012                                      l7304 0006  
                                    l7320 0008                                      l8200 0017  
                                    l8120 0056                                      l8112 0045  
                                    l8104 002A                                      l9000 024B  
                                    l5546 0048                                      l7410 0025  
                                    l7402 0009                                      l7306 0009  
                                    l7314 0000                                      l8202 0021  
                                    l8122 005B                                      l8114 0046  
                                    l8106 002E                                      l8130 0006  
                                    l9010 0049                                      l9002 027C  
                                    l7420 0040                                      l7412 0029  
                                    l7404 000D                                      l7308 000C  
                                    l7316 0005                                      l8300 011E  
                                    l8220 0014                                      l8212 0000  
                                    l8204 0025                                      l8116 004B  
                                    l8108 0032                                      l8140 001C  
                                    l8132 000B                                      l9100 0294  
                                    l9012 0068                                      l9004 0000  
                                    l7430 0063                                      l7422 004B  
                                    l7414 0030                                      l7406 0015  
                                    l7318 0006                                      l8310 013E  
                                    l8302 0123                                      l8222 001A  
                                    l8230 002C                                      l8214 0007  
                                    l8070 0004                                      l8206 002A  
                                    l8118 0051                                      l8150 0036  
                                    l8142 001F                                      l8134 000D  
                                    l8126 0000                                      l9110 02C3  
                                    l9102 02A0                                      l9022 00B9  
                                    l9014 006E                                      l9006 001F  
                                    l7432 0069                                      l7424 004F  
                                    l7416 0034                                      l7408 0019  
                                    l7440 0005                                      l6800 002B  
                                    l8400 0284                                      l8320 015A  
                                    l8312 0143                                      l8304 0125  
                                    l8240 0048                                      l8232 0035  
                                    l8224 001F                                      l8216 000D  
                                    l8072 000B                                      l8208 0030  
                                    l8160 004F                                      l8152 003A  
                                    l8144 0024                                      l8136 0011  
                                    l8128 0002                                      l9200 04CE  
                                    l9120 0374                                      l9112 0302  
                                    l9104 02A5                                      l9040 0152  
                                    l9016 0073                                      l9008 003B  
                                    l9024 00C2                                      l5930 0007  
                                    l7434 0002                                      l7426 0057  
                                    l7418 003C                                      l6810 0037  
                                    l6802 002D                                      l8402 028F  
                                    l8330 0170                                      l8322 015F  
                                    l8306 012E                                      l8250 0063  
                                    l8242 004D                                      l8234 003B  
                                    l8226 0028                                      l8218 0012  
                                    l8074 000F                                      l8410 000A  
                                    l8170 000C                                      l8090 000D  
                                    l8082 0000                                      l8154 003F  
                                    l8146 0028                                      l8138 0016  
                                    l9210 04ED                                      l9202 04D2  
                                    l9130 03C3                                      l9114 033B  
                                    l9122 03AD                                      l9106 02AB  
                                    l9050 0181                                      l9042 0169  
                                    l9034 0120                                      l9026 011C  
                                    l9018 0087                                      l5940 004A  
                                    l5932 0013                                      l7428 005D  
                                    l7436 0000                                      l6820 0003  
                                    l6812 0039                                      l6804 002F  
                                    l8404 0294                                      l8340 01C1  
                                    l8332 0179                                      l8324 0167  
                                    l8316 014D                                      l8308 0133  
                                    l8260 0081                                      l8252 0065  
                                    l8244 004F                                      l8236 0041  
                                    l8228 002A                                      l8076 001A  
                                    l8068 0002                                      l8500 01AE  
                                    l8420 0021                                      l8412 000E  
                                    l8180 002C                                      l8172 0011  
                                    l8164 0000                                      l8092 0011  
                                    l8084 0002                                      l8148 002C  
                                    l8156 0045                                      l9220 0553  
                                    l9212 04F7                                      l9204 04DD  
                                    l9140 03E7                                      l9124 03B5  
                                    l9116 0367                                      l9108 02AF  
                                    l9060 01A3                                      l9052 018D  
                                    l9044 016D                                      l9028 011E  
                                    l9132 03CA                                      l5950 007B  
                                    l5942 0050                                      l5934 0028  
                                    l7438 0001                                      l6830 0014  
                                    l6822 0004                                      l6814 003C  
                                    l6806 0032                                      l5926 0000  
                                    l8342 01C6                                      l8326 0169  
                                    l8318 0156                                      l8334 017F  
                                    l8270 009E                                      l8262 0087  
                                    l8246 0055                                      l8254 0067  
                                    l8238 0042                                      l8078 001F  
                                    l8510 01CF                                      l8502 01B2  
                                    l8430 0038                                      l8422 0023  
                                    l8414 000F                                      l8406 0000  
                                    l8182 002D                                      l8174 0015  
                                    l8166 0003                                      l8190 0000  
                                    l8094 0016                                      l8086 0006  
                                    l8158 004A                                      l9222 0559  
                                    l9214 0503                                      l9206 04E3  
                                    l9142 03F2                                      l9134 03DB  
                                    l9126 03BB                                      l9118 0370  
                                    l9054 0193                                      l9062 01A7  
                                    l9070 01C4                                      l9046 0179  
                                    l9038 0148                                      l5960 00B4  
                                    l5952 008A                                      l5944 005F  
                                    l5936 0037                                      l5928 0002  
                                    l6824 0007                                      l6808 0034  
                                    l6816 0000                                      l6840 0009  
                                    l6832 0000                                      l9232 0000  
                                    l8360 0207                                      l8352 01F1  
                                    l8336 0196                                      l8344 01D0  
                                    l8328 016E                                      l8280 00B9  
                                    l8272 00A4                                      l8264 008D  
                                    l8256 0077                                      l8248 005A  
                                    l8520 01E8                                      l8504 01B6  
                                    l8440 004D                                      l8432 0039  
                                    l8424 002B                                      l8416 0014  
                                    l8408 0006                                      l8184 0032  
                                    l8176 0019                                      l8168 0009  
                                    l8192 0007                                      l8096 001A  
                                    l8088 000B                                      l8600 0260  
                                    l9216 0509                                      l9208 04E9  
                                    l9224 055D                                      l9160 0438  
                                    l9144 03F8                                      l9136 03DF  
                                    l9128 03BF                                      l9080 0222  
                                    l9072 01D1                                      l9064 01B5  
                                    l9056 0198                                      l9048 017D  
                                    l5962 00BB                                      l5954 0090  
                                    l5946 0065                                      l5938 003B  
                                    l6826 0000                                      l6818 0000  
                                    l6842 0010                                      l6834 0003  
                                    l9234 0006                                      l8370 0217  
                                    l8362 0209                                      l8354 01F8  
                                    l8346 01E1                                      l8338 01BA  
                                    l8282 00BE                                      l8274 00A9  
                                    l8266 0093                                      l8258 007B  
                                    l8290 00D4                                      l8530 0229  
                                    l8522 0200                                      l8514 01D7  
                                    l8506 01B7                                      l8450 0068  
                                    l8442 0055                                      l8434 003E  
                                    l8426 0030                                      l8418 0019  
                                    l8178 0028                                      l8186 0038  
                                    l8194 000A                                      l8610 000F  
                                    l8098 001C                                      l9218 050E  
                                    l9170 0466                                      l9162 0443  
                                    l9154 0406                                      l9146 0400  
                                    l9138 03E3                                      l9090 026B  
                                    l9082 024E                                      l9074 01DE  
                                    l9066 01BC                                      l9058 019F  
                                    l9226 0569                                      l5956 009F  
                                    l5948 0074                                      l6828 0012  
                                    l6780 000C                                      l6772 0000  
                                    l6844 0012                                      l6836 0005  
                                    l9236 000D                                      l8380 0231  
                                    l8372 021B                                      l8364 020E  
                                    l8356 01FD                                      l8348 01E7  
                                    l8292 00D6                                      l8284 00C4  
                                    l8276 00AE                                      l8268 0099  
                                    l8700 0079                                      l8540 0246  
                                    l8532 0232                                      l8516 01DC  
                                    l8524 0204                                      l8508 01BB  
                                    l8460 00C3                                      l8452 0075  
                                    l8444 005A                                      l8436 0043  
                                    l8428 0034                                      l8196 000F  
                                    l8612 0011                                      l8604 0002  
                                    l9180 048E                                      l9172 0472  
                                    l9164 0449                                      l9148 0404  
                                    l9092 026F                                      l9084 0257  
                                    l9076 01E4                                      l9068 01C0  
                                    l9228 057E                                      l9260 0005  
                                    l5958 00A5                                      l6790 0017  
                                    l6782 000E                                      l6774 0006  
                                    l6846 0013                                      l6838 0007  
                                    l9238 0015                                      l8390 026D  
                                    l8382 023A                                      l8374 0221  
                                    l8358 0204                                      l8366 0210  
                                    l8294 00F0                                      l8286 00C9  
                                    l8278 00B4                                      l8630 0034  
                                    l8622 001B                                      l8542 024E  
                                    l8534 0234                                      l8526 0211  
                                    l8518 01E4                                      l8470 00F8  
                                    l8462 00D0                                      l8454 0082  
                                    l8446 005F                                      l8438 004B  
                                    l8198 0013                                      l8606 0003  
                                    l9190 04AC                                      l9182 0491  
                                    l9174 0476                                      l9166 0457  
                                    l9158 042E                                      l9094 0273  
                                    l9078 01E9                                      l9086 025B  
                                    l9270 000E                                      l9262 0008  
                                    l9254 0000                                      l6880 0002  
                                    l6792 0019                                      l6784 0010  
                                    l6776 0008                                      l6848 001B  
                                    l8392 0276                                      l8384 023E  
                                    l8368 0215                                      l8296 0114  
                                    l8288 00CE                                      l8800 000C  
                                    l8720 0000                                      l8640 0063  
                                    l8632 0043                                      l8616 0000  
                                    l8536 0241                                      l8528 021B  
                                    l8480 013B                                      l8472 0105  
                                    l8464 00DD                                      l8456 009C  
                                    l8560 0157                                      l8608 0009  
                                    l9192 04B8                                      l9184 049C  
                                    l9176 047A                                      l9168 045F  
                                    l9096 0280                                      l9088 0264  
                                    l9272 0011                                      l9264 000A  
                                    l9256 0003                                      l6890 003D  
                                    l6882 0017                                      l6794 0025  
                                    l6786 0013                                      l6778 000A  
                                    l8394 027C                                      l8386 025C  
                                    l8378 022B                                      l8298 011C  
                                    l8810 0031                                      l8730 001B  
                                    l8722 0003                                      l8714 0098  
                                    l8706 0081                                      l8642 0069  
                                    l8634 0045                                      l8618 0012  
                                    l8538 0245                                      l8490 018F  
                                    l8482 0148                                      l8474 010C  
                                    l8466 00E4                                      l8458 00A9  
                                    l8554 00D2                                      l8546 0002  
                                    l8570 000F                                      l9194 04BE  
                                    l9186 04A5                                      l9178 0488  
                                    l9098 028E                                      l9274 0015  
                                    l9266 000B                                      l9258 0004  
                                    l6884 0026                                      l6892 0002  
                                    l6796 0027                                      l6788 0015  
                                    l8396 027D                                      l8388 0268  
                                    l8820 003F                                      l8812 0033  
                                    l8804 0015                                      l8740 001F  
                                    l8724 0007                                      l8900 00A4  
                                    l8716 00A6                                      l8708 0091  
                                    l8644 006A                                      l8636 004E  
                                    l8628 002E                                      l8492 019B  
                                    l8484 015C                                      l8476 0120  
                                    l8468 00F1                                      l8556 00D8  
                                    l8548 0008                                      l8564 0002  
                                    l9196 04C2                                      l9188 04A8  
                                    l9276 002D                                      l9268 000D  
                                    l6886 002A                                      l6878 0002  
                                    l6798 0029                                      l8398 0281  
                                    l8830 0064                                      l8814 0037  
                                    l8822 004F                                      l8806 0028  
                                    l8750 0045                                      l8742 0023  
                                    l8734 0000                                      l8726 0010  
                                    l8670 000C                                      l8662 0099  
                                    l8654 0082                                      l8646 0070  
                                    l8638 0055                                      l8494 01A2  
                                    l8486 0171                                      l8478 0127  
                                    l8582 0125                                      l8566 0006  
                                    l9198 04C8                                      l8910 0013  
                                    l9278 0035                           __end_of_LCDsend 0053  
                                    l6888 0039                                      l8760 0015  
                                    l8832 0069                                      l8808 0029  
                                    l8752 004C                                      l8744 002A  
                                    l8736 0011                                      l8840 0017  
                                    l8728 0015                                      l8680 0022  
                                    l8664 00A7                                      l8648 007A  
                                    l8656 0092                                      l8496 01A6  
                                    l8488 0188                                      l8576 00BC  
                                    l8568 0008                                      l8920 002B  
                                    l8912 0018                                      l8904 0000  
                                    l8762 0031                                      l8770 0000  
                                    l8746 003C                                      l8738 0014  
                                    l8754 0052                                      l8842 001B  
                                    l8850 0042                                      l8834 0000  
                                    l8690 004D                                      l8682 002A  
                                    l8674 0015                                      l8498 01A7  
                                    l8594 01F7                                      l8578 00C3  
                                    l8586 0143                                      l8930 0065  
                                    l8922 0037                                      l8914 001E  
                                    l8906 0007                                      l8764 004B  
                                    l8780 0055                                      l8772 0015  
                                    l8828 0056                                      l8748 0044  
                                    l8844 002D                                      l8836 0009  
                                    l8860 0002                                      l8692 005F  
                                    l8684 003B                                      l8668 0000  
                                    l8596 01FE                                      l8588 014A  
                                    l8940 0084                                      l8924 003A  
                                    l8932 0071                                      l8908 000D  
                                    l8766 004D                                      l8758 0000  
                                    l8782 0059                                      l8774 0031  
                                    l8790 0000                                      l8854 0000  
                                    l8846 0035                                      l8838 000C  
                                    l8862 0007                                      l8694 0067  
                                    l8686 003D                                      l8950 00BE  
                                    l8942 009C                                      l8934 007C  
                                    l8926 0052                                      l8918 0022  
                                    l8784 0087                                      l8776 0039  
                                    l8792 0009                                      l8856 0003  
                                    l8848 003C                                      l8880 004F  
                                    l8872 0034                                      l8864 000B  
                                    l8696 0068                                      l8688 0046  
                                    l8960 00EE                                      l8944 00AB  
                                    l8936 007D                                      l8928 0061  
                                    l8786 0089                                      l8778 003D  
                                    l8794 000B                                      l8890 007C  
                                    l8882 0057                                      l8874 0039  
                                    l8866 001B                                      l8698 006F  
                                    l8970 0143                                      l8962 00F2  
                                    l8954 00C2                                      l8946 00AF  
                                    l8938 0081                                      l8892 0086  
                                    l8884 0065                                      l8876 0044  
                                    l8868 002B                                      l8980 0176  
                                    l8972 0147                                      l8964 00FE  
                                    l8956 00DD                                      l8948 00BC  
                                    l8798 0000                                      l8894 009A  
                                    l8886 006E                                      l8878 004B  
                                    l8990 01C3                                      l8982 018E  
                                    l8974 014A                                      l8966 0102  
                                    l8958 00EA                                      STR_1 0000  
                                    l8896 009F                                      l8888 0072  
                                    l8992 01F5                                      l8984 01A6  
                                    l8976 0168                                      l8968 0120  
                                    STR_2 0005                                      STR_3 0000  
                                    l8898 00A3                                      l8994 0213  
                                    l8986 01AA                                      l8978 0172  
                                    STR_4 0005                                      STR_5 000A  
                                    l8996 0219                                      l8988 01AE  
                                    STR_6 0000                                      STR_7 0000  
                                    l8998 0238                                      _LATA 0016  
                                    _LATB 0017                                      _LATC 0018  
                                    _LATD 0019                                      _LATE 001A  
                                    _PMD0 0796                                      _PMD1 0797  
                                    i1l30 004A                                      _PMD2 0798  
                                    _PMD3 0799                                      _PMD4 079A  
                                    i1l33 001C                                      _PMD5 079B  
                                    i1l42 003A                                      i1l35 0021  
                                    i1l47 0049                                      u7400 0014  
                                    u7401 0013                                      u7410 001F  
                                    u7411 001E                                      u7420 0026  
                                    u7421 0025                                      u7430 002B  
                                    u7431 002A                                      u7440 0038  
                                    u8400 004A                                      u7441 0037  
                                    u8401 0049                                      u7450 0043  
                                    u8410 005F                                      u7451 0042  
                                    u8411 005E                                      u7460 0048  
                                    u8420 0074                                      u7461 0047  
                                    u8421 0073                                      u7470 0057  
                                    u7390 0009                                      u8430 008A  
                                    u7471 0056                                      u7391 0008  
                                    u8431 0089                                      u8440 009F  
                                    u8441 009E                                      u8450 00B4  
                                    u8370 0022                                      u8451 00B3  
                                    u8371 0021                                      u8460 00CA  
                                    u8380 0028                                      u8461 00C9  
                                    u8381 0027                                      u8365 000A  
                                    u8470 00D0                                      u8390 0037  
                                    u8471 00CF                                      u8391 0036  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                                      _WPUD 0F5A  
                                    _WPUE 0F65                         i1___lldiv@divisor 0000  
                                    _main 0000                             i1___flmul@grs 0012  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                         i1___lldiv@counter 000D  
                          i1___fladd@aexp 0042                            i1___fladd@bexp 0043  
                                    start 0000*                             i1__div_to_l_ 0000  
                         __end_ofi1_scale 027C                              _sprintf$2539 001C  
              ??_TMR1_SetInterruptHandler 0002                        __size_ofi1_LCDchar 0008  
          __size_of_OSCILLATOR_Initialize 0009             __end_of_OSCILLATOR_Initialize 0009  
                           ___fltol@sign1 0048                                     _ADACQ 009D  
                                   _ADCAP 009B                                     _ADACT 0099  
                __end_of_i2c1_driver_open 000C                           __end_of___fladd 0297  
                                   ?_main 0000                                     _ADCLK 0098  
                          i1___awdiv@sign 0001                                     _ADCNT 010C  
                                   _ADPCH 009E                                     _ADREF 009A  
                         __end_of___awdiv 0060                           __end_of___flneg 000C  
                                   _ADPRE 009C                           __end_of___awmod 0054  
                                   _ADRPT 010D                           __end_of___flmul 0257  
                         __end_of___flsub 0036                           __end_of___fltol 0075  
                         __end_of___lldiv 005B                                     u10100 0017  
                                   u10101 0016                                     u10110 0026  
                                   u10111 0025                                     u10120 0039  
                                   u10121 0038                                     u10130 004C  
                                   u10131 004B                                     u10140 0052  
                                   u10141 0051                                     u11030 0005  
                                   u11031 0004                                     u10090 0011  
                                   u10091 0010                                     _T1CLK 0211  
                                   u11320 001A                                     u13000 0114  
                                   u11321 0019                                     u13001 0113  
                                   u13010 0123                                     u13011 0122  
                                   u13100 0196                           ___awdiv@divisor 0007  
                                   u13101 0195                                     u13110 01C6  
                                   u13030 013A                                     u13111 01C5  
                                   u13103 0192                                     u13031 0139  
                                   u13200 0221                                     u13120 01E1  
                                   u13040 013E                                     u14000 003C  
                                   _T1CON 020E                                     u13201 0220  
                                   u13121 01E0                                     u13041 013D  
                                   u13025 0128                                     u14001 003B  
                         __end_of___llmod 004B                                     u13210 022A  
                                   u13130 01E7                                     u13050 0143  
                                   u13211 0229                                     u13131 01E6  
                                   u13051 0142                                     u14100 0087  
                                   u13300 0294                                     u13220 0231  
                                   u13060 015A                                     u14020 0052  
                                   u14101 0086                                     u13301 0293  
                                   u13221 0230                                     u13061 0159  
                                   u14021 0051                                     u14005 0038  
                                   u14030 0015                                     u14110 0009  
                                   u13230 023E                                     u13150 01FD  
                                   u13070 015F                                     u13310 000E  
                                   u14031 0014                                     u14111 0008  
                                   u13231 023D                                     u13151 01FC  
                                   u13071 015E                                     u14015 0046  
                                   u13311 000D                                     u14040 0031  
                                   u13240 024C                                     u13160 0204  
                                   u13080 016E                                     u14200 0064  
                                   u14120 000C                                     u13320 0014  
                                   u12600 0032                                     u14041 0030  
                                   u14105 0083                                     u13161 0203  
                                   u13145 01F2                                     u13081 016D  
                                   u14201 0063                                     u14121 000B  
                                   u13321 0013                                     u12601 0031  
                                   u14050 004B                                     u13250 025C  
                                   u13170 020E                                     u14210 0069  
                                   u14130 0022                                     u12530 000F  
                                   u13410 0167                                     u13330 0019  
                                   u14051 004A                                     u13251 025B  
                                   u13171 020D                                     u14211 0068  
                                   u12531 000E                                     u13331 0018  
                                   u14060 0015                                     u13260 0268  
                                   u13180 0215                                     u14140 0037  
                                   u14220 0009                                     u14300 002B  
                                   u13500 01D6                                     u13420 017E  
                                   u13340 0038                                     u12620 0041  
                                   u12700 002C                                     u14061 0014  
                                   u13261 0267                                     u13245 0248  
                                   u13181 0214                                     u14141 0036  
                                   u14221 0008                                     u14301 002A  
                                   u13501 01D5                                     u13405 010D  
                                   u13341 0037                                     u12621 0040  
                                   u12701 002B                                     u14070 0031  
                                   u13270 026D                                     u13190 021B  
                                   u14150 003E                                     u12550 001F  
                                   u13510 01DC                                     u13350 003E  
                                   u12710 0036                                     u15007 0026  
                                   u14055 0047                                     u14071 0030  
                                   u13271 026C                                     u13191 021A  
                                   u13095 0173                                     u14151 003D  
                                   u14135 001E                                     u12551 001E  
                                   u13511 01DB                                     u13415 0163  
                                   u13351 003D                                     u12615 0033  
                                   u12711 0035                          __end_ofi1_LCDcmd 0007  
                                   u14080 003D                                     u13280 027C  
                                   u14240 001B                                     u14400 009F  
                                   u14320 004A                                     u13520 01E8  
                                   u13360 0043                                     u12640 0051  
                                   u12560 0006                                     u13600 000F  
                                   u15017 002E                                     u14081 003C  
                                   u13281 027B                                     u14241 001A  
                                   u14401 009E                                     u14321 0049  
                                   u12545 0014                                     u13521 01E7  
                                   u13425 017A                                     u13361 0042  
                                   u12641 0050                                     u12625 003D  
                                   u12561 0005                                     u13601 000E  
                                   u14090 0059                                     u13290 0281  
                                   u14170 004E                                     u14250 002D  
                                   u14410 00A3                                     u13530 01F6  
                                   u13450 01A6                                     u13370 005A  
                                   u12810 0038                                     u12650 0056  
                                   u12570 0011                                     u12730 0045  
                                   u13610 00C3                                     u15027 0039  
                                   u14091 0058                                     u13291 0280  
                                   u14171 004D                                     u14251 002C  
                                   u14235 000D                                     u14411 00A2  
                                   u14315 003E                                     u13451 01A5  
                                   u13435 0189                                     u13371 0059  
                                   u12811 0037                                     u12651 0055  
                                   u12635 0047                                     u12571 0010  
                                   u12731 0044                                     u12715 0032  
                                   u13611 00C2                                     u12900 001F  
                                   u14180 0055                                     u14340 0064  
                                   u13540 0211                                     u13380 005F  
                                   u12820 0007                                     u12580 0022  
                                   u12740 004A                                     u12660 0006  
                                   u13620 014A                                     u14500 0168  
                                   u14420 000D                                     u15037 0041  
                                   u12901 001E                                     u14181 0054  
                                   u14165 0040                                     u14341 0063  
                                   u13541 0210                                     u13445 019C  
                                   u13381 005E                                     u12805 002E  
                                   u12821 0006                                     u12581 0021  
                                   u12741 0049                                     u12725 003B  
                                   u12661 0005                                     u13621 0149  
                                   u14501 0167                                     u14421 000C  
                                   u12910 0041                                     u14270 0042  
                                   u13710 0076                                     u13550 0229  
                                   u13470 01B6                                     u12750 0009  
                                   u12670 0011                                     u13630 01FE  
                                   u14510 01AA                                     u14430 0037  
                                   u15047 004C                                     u12911 0040  
                                   u14271 0041                                     u14255 0029  
                                   u14335 0058                                     u13711 0075  
                                   u13551 0228                                     u13535 01F2  
                                   u13471 01B5                                     u12751 0008  
                                   u12671 0010                                     u13631 01FD  
                                   u14511 01A9                                     u14431 0036  
                                   u12920 004D                                     u14360 0072  
                                   u14280 0007                                     u13800 0020  
                                   u13720 007A                                     u13560 0245  
                                   u13480 01BB                                     u12840 0017  
                                   u13640 0009                                     u12680 001C  
                                   u14600 0147                                     u14520 0213  
                                   u14440 0071                                     u15057 0054  
                                   u12921 004C                                     u14265 0036  
                                   u14361 0071                                     u14281 0006  
                                   u13801 001F                                     u13721 0079  
                                   u13705 006B                                     u13561 0244  
                                   u13545 020D                                     u13481 01BA  
                                   u13465 01A8                                     u12841 0016  
                                   u13641 0008                                     u12681 001B  
                                   u14601 0146                                     u14521 0212  
                                   u14441 0070                                     u12930 0055  
                                   u14370 0078                                     u14290 000B  
                                   u13730 0081                                     u13490 01CF  
                                   u12770 0019                                     u12850 0021  
                                   u13570 0008                                     u13650 000F  
                                   u14610 0152                                     u14530 0238  
                                   u14450 007C                                     u15067 0070  
                                   u12931 0054                                     u14195 0057  
                                   u14371 0077                                     u14355 0068  
                                   u14291 000A                                     u13731 0080  
                                   u13555 0225                                     u13491 01CE  
                                   u13395 00DE                                     u12771 0018  
                                   u12851 0020                                     u12835 000B  
                                   u13571 0007                                     u13651 000E  
                                   u12595 0026                                     u14611 0151  
                                   u14531 0237                                     u14451 007B  
                                   u12940 005A                                     u14380 007C  
                                   u13820 005F                                     u13660 0012  
                                   u13580 00D8                                     u14700 0280  
                                   u14620 0169                                     u14540 024B  
                                   u14460 00BB                                     u12941 0059  
                                   u14381 007B                                     u13821 005E  
                                   u13661 0011                                     u12765 000D  
                                   u13581 00D7                                     u14701 027F  
                                   u14621 0168                                     u14605 0143  
                                   u14541 024A                                     u14461 00BA  
                                   u12950 0077                                     u14390 0090  
                                   u13910 00A6                                     u13750 0091  
                                   u13670 002C                                     u12790 0028  
                                   u12870 0030                                     u13590 0006  
                                   u14710 028E                                     u14630 0179  
                                   u14550 0000                                     u14470 00EA  
                                   u12951 0076                                     u13911 00A5  
                                   u13815 0047                                     u13751 0090  
                                   u13671 002B                                     u12791 0027  
                                   u12871 002F                                     u12855 001D  
                                   u12695 0020                                     u13591 0005  
                                   u14711 028D                                     u14631 0178  
                                   u14551 028A                                     u14471 00E8  
                                   u12960 007B                                     u12880 0012  
                                   u13920 0007                                     u13840 0075  
                                   u13760 0098                                     u14800 0443  
                                   u14720 02A5                                     u14640 0181  
                                   u14560 001F                                     u14480 00EE  
                                   u12961 007A                                     u12881 0011  
                                   u13921 0006                                     u13905 0099  
                                   u13841 0074                                     u13825 005B  
                                   u13761 0097                                     u13745 0083  
                                   u12785 001A                                     u12865 0026  
                                   u14801 0442                                     u14721 02A4  
                                   u14705 027C                                     u14641 0180  
                                   u14561 001E                                     u14545 0247  
                                   u14481 00ED                                     u12970 00F0  
                                   u12890 001A                                     u13850 0079  
                                   u13690 0063                                     u14810 0457  
                                   u14730 03B4                                     u14650 018D  
                                   u14570 003B                                     u14490 0120  
                                   u12971 00EF                                     u12891 0019  
                                   u14395 008C                                     u13851 0078  
                                   u13835 0069                                     u13691 0062  
                                   u12795 0024                                     u14811 0456  
                                   u14731 03B3                                     u14715 028A  
                                   u14651 018C                                     u14571 003A  
                                   u14555 0286                                     u14491 011F  
                                   u12980 00FA                                     u13860 0080  
                                   u13780 00A7                                     u14900 04DC  
                                   u14820 0466                                     u14740 03C9  
                                   u14660 01B4                                     u14580 0049  
                                   u12981 00F8                                     u13861 007F  
                                   u13781 00A6                                     u13685 004F  
                                   u14901 04DB                                     u14821 0465  
                                   u14805 043F                                     u14741 03C8  
                                   u14661 01B3                                     u14581 0048  
                                   u12990 00FB                                     u13950 001B  
                                   u13790 000C                                     u14910 04E3  
                                   u14830 0472                                     u14750 03E3  
                                   u14670 01D1                                     u14590 0068  
                                   u12975 00EC                                     u13951 001A  
                                   u13935 000C                                     u13791 000B  
                                   u13775 009A                                     u13695 005F  
                                   u14911 04E2                                     u14831 0471  
                                   u14815 0453                                     u14751 03E2  
                                   u14671 01D0                                     u14591 0067  
                                   u13960 0011                                     u13880 0090  
                                   u14920 04F7                                     u14840 047A  
                                   u14760 03F8                                     u14680 01DE  
                                   u13961 0010                                     u13945 0011  
                                   u13881 008F                                     u14921 04F6  
                                   u14841 0479                                     u14761 03F7  
                                   u14681 01DD                                     u14665 01B0  
                                   u14585 0045                                     u13890 0097  
                                   u14930 0503                                     u14850 0488  
                                   u14770 0400                                     u14690 0263  
                                   u13891 0096                                     u13875 0082  
                                   u14931 0502                                     u14851 0487  
                                   u14771 03FF                                     u14691 0262  
                                   u14675 01CD                                     u13980 0023  
                                   u14940 0569                                     u14860 049C  
                                   u14780 042D                                     u13981 0022  
                                   u14941 0568                                     u14861 049B  
                                   u14781 042C                                     u14950 057E  
                                   u14870 04AC                                     u14790 0438  
                                   u13975 0015                                     u14951 057C  
                                   u14871 04AB                                     u14855 0484  
                                   u14791 0437                                     u14960 0006  
                                   u14880 04B8                                     u14961 0005  
                                   u14881 04B7                                     u14865 0498  
                                   u14785 0429                                     u14890 04C8  
                                   u13995 0024                                     u14891 04C7  
                                   u14977 0004                                     u14987 0012  
                         __end_of___lwdiv 003D                                     u14997 001A  
                                   i1l403 0010                                     i1l422 0000  
                                   i1l351 0028                                     i1l416 0016  
                                   i1l353 0031                           __end_of___lwmod 0035  
                                   i1l346 000F                                     i1l348 001B  
                                   i1l349 003D                                     i1l358 003D  
                                   i1l741 001E                                     i1l742 001F  
                                   i1l771 00AF                                     i1l772 00B2  
                                   i1l756 0062                          __end_ofi1_LCDstr 001B  
                                   i1l765 0098                                     i1l781 0007  
                                   i1l768 00AA                                     i1l769 00AB  
                                   i1l778 0006                                     i1l787 001A  
                                   i1l889 00B4                           ___awdiv@counter 000C  
                                   _OSCEN 0891                                     _TMR1H 020D  
                                   _TMR1L 020C                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                                   _WPUC3 7A7B                                     _WPUC4 7A7C  
                              i1isdigit@c 0001                        i1__tdiv_to_l_@exp1 0005  
                      i1__tdiv_to_l_@cntr 0004                 ?_TMR0_SetInterruptHandler 0000  
                              i1scale@scl 0032                        i1__tdiv_to_l_@quot 0000  
                        __end_of_TMR1_ISR 0017                        i1___lwmod@dividend 0002  
                          i1___awmod@sign 0006                        i1___lldiv@dividend 0004  
                         __end_of_dpowers 0028                            i1___flmul@aexp 0016  
                          i1___flmul@bexp 0017                                     _scale 0000  
                         __end_of_isdigit 0013                                     _hours 0004  
                          i1___flmul@sign 0011                            i1___flmul@temp 001C  
                          i1___flmul@prod 0018                          __end_ofi1___flge 008A  
                        __end_ofi1___fleq 004E                   __end_of_TMR1_Initialize 001F  
                                   pclath 000A                          __end_ofi1___wmul 001F  
                          i1___fltol@exp1 0028                _TMR0_SetInterruptHandler$0 0000  
                                   status 0003                       i1___wmul@multiplier 0000  
                                   wtemp0 007E                           __end_of_sprintf 0584  
                      __size_ofi1___fladd 0238                        __size_ofi1___awdiv 0060  
                      __size_ofi1___flneg 000B                        __size_ofi1___awmod 0053  
                        __end_ofi1_fround 0188                           i1___fladd@signs 0041  
                      __size_ofi1___flmul 0257                        __size_ofi1___flsub 0020  
                      __size_ofi1___fltol 0075                        __size_ofi1___lldiv 005A  
                  __size_ofi1__tdiv_to_l_ 00B0                        __size_ofi1___llmod 004B  
                         _TMR1_WriteTimer 0000                        __size_ofi1___lwdiv 003C  
                      __size_ofi1___lwmod 0034                   __size_of_count_time_ISR 00B5  
                         __initialization 0000                              __end_of_main 003B  
                          i1_sprintf$2783 000E                               ?i1_WriteI2C 0000  
                      __size_ofi1_isdigit 0012                        i1___lldiv@quotient 0009  
                     __size_of_LCDsend2x4 00D4               ?_INTERRUPT_InterruptManager 0000  
                              i1sprintf@c 0027                                i1sprintf@f 0002  
                                  ??_main 004D                               ?i1___xxtofl 0000  
                      __size_ofi1_sprintf 0777                      __size_of__tdiv_to_l_ 00B0  
                               ??_LCDchar 0008                                 ??_LCDinit 0008  
                               ??_LCDsend 0002                                 ??_INT_ISR 0000  
                            i1_scale$2782 002E                                    _ADACCH 0091  
                                  _ADACCL 0090                                    _ADCON0 0093  
                                  _ADCON1 0094                                    _ADCON2 0095  
                                  _ADCON3 0096                                    _ADERRH 0117  
                                  _ADERRL 0116                          ___llmod@dividend 0012  
                                  _ADLTHH 010F                                    ?_scale 002A  
                                  _ADLTHL 010E                                    _ADRESH 008D  
                                  _ADRESL 008C                                    _ADSTAT 0097  
                                  _ADUTHH 0111                          ___awdiv@dividend 0009  
                                  _ADUTHL 0110                          __end_of_WriteI2C 005A  
                                  _ANSELA 0F38                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                                    _ANSELD 0F59  
                                  _ANSELE 0F64                                    _T1GATE 0210  
                                  _T1GCON 020F                         __end_ofi1_LCDchar 0008  
                                  _RC3PPS 0F23                                    i1l1103 01F3  
                 TMR1_WriteTimer@timerVal 0000                                    _RC4PPS 0F24  
                                  i1l1060 0187                                    i1l1141 04A6  
                                  i1l1080 001C                                    i1l1217 0059  
                                  i1l1402 0076                                    i1l1067 027B  
                                  i1l1181 000A                                    i1l1334 005F  
                                  i1l1183 001E                                    i1l1351 00AE  
                                  i1l1095 00B1                                    i1l1512 00FF  
                                  i1l1352 0021                                    i1l1521 0237  
                                  i1l1409 00A2                                    i1l1177 0776  
                                  _ODCONA 0F3A                                    i1l1514 00DB  
                                  i1l1362 00A1                                    i1l1610 01D2  
                                  _ODCONB 0F45                                    i1l1355 0075  
                                  i1l1347 0052                                    _ODCONC 0F50  
                                  i1l1372 001C                                    i1l1380 000A  
                                  i1l1508 005E                                    i1l1604 0256  
                                  _ODCOND 0F5B                                    i1l1533 01B3  
                                  i1l1437 004A                                    _ODCONE 0F66  
                                  i1l1550 022E                                    i1l1542 020C  
                                  i1l1367 001C                                    i1l1375 0070  
                                  i1l1551 0237                                    i1l1391 005F  
                                  i1l1623 0012                         i1___llmod@divisor 0000  
                                  i1l5000 0031                                    i1l1368 0038  
                                  i1l1376 0089                                    i1l1384 0074  
                                  i1l1616 024A                                    i1l1369 004D  
                                  i1l1529 0191                                    i1l1625 0022  
                                  i1l5002 003E                                    i1l1554 001F  
                                  i1l1394 0074                                    i1l1650 00AB  
                                  i1l5010 0003                                    i1l1539 01D5  
                                  i1l5012 000A                                    i1l1661 0077  
                                  i1l5030 002E                                    i1l5022 0001  
                                  i1l1662 0083                                    i1l1654 005D  
                                  i1l1398 00AF                                    i1l5014 000E  
                                  i1l5110 000C                                    i1l5102 0000  
                                  i1l1399 002D                                    i1l1487 003B  
                                  i1l5040 0056                                    i1l5032 0032  
                                  i1l5024 0006                                    i1l5200 0019  
                                  i1l1648 0022                                    i1l5016 0019  
                                  i1l5008 0001                                    i1l5120 0023  
                                  i1l5112 0010                                    i1l5104 0001  
                                  i1l1497 0033                                    i1l5050 0086  
                                  i1l5042 0062                                    i1l5034 003E  
                                  i1l5026 0012                                    i1l5210 0031  
                                  i1l5202 0021                                    i1l5018 001E  
                                  i1l5130 003E                                    i1l5122 0027  
                                  i1l5114 0015                                    i1l5106 0005  
                                  i1l5052 008C                                    i1l5044 0068  
                                  i1l5036 0044                                    i1l5028 0023  
                                  i1l5300 0127                                    i1l5220 0041  
                                  i1l5212 0037                                    i1l5204 0022  
                                  i1l5140 0000                                    i1l1668 0011  
                                  i1l5060 0002                                    i1l5124 002B  
                                  i1l5116 001B                                    i1l5132 0044  
                                  i1l5108 000A                                    i1l5054 0098  
                                  i1l5046 0074                                    i1l5038 0050  
                                  i1l5302 0129                                    i1l5310 013B  
                                  i1l5222 0046                                    i1l5230 0056  
                                  i1l5214 0038                                    i1l5206 0024  
                                  i1l5150 0014                                    i1l5142 0002  
                                  i1l5070 0016                                    i1l5062 0006  
                                  i1l5134 0049                                    i1l5126 0035  
                                  i1l5118 001E                                    i1l5056 009E  
                                  i1l5048 007A                                    i1l5312 0151  
                                  i1l5320 0189                                    i1l5304 012D  
                                  i1l5240 0074                                    i1l5232 0064  
                                  i1l5224 004B                                    i1l5216 003C  
                                  i1l5208 002C                                    i1l5400 002B  
                                  i1l5160 0031                                    i1l5152 0018  
                                  i1l5144 0008                                    i1l5080 002A  
                                  i1l5072 001A                                    i1l5064 000B  
                                  i1l5136 004E                                    i1l5128 0039  
                                  i1l5330 01AE                                    i1l5322 0199  
                                  i1l5314 0175                                    i1l5306 012E  
                                  i1l5250 0088                                    i1l5242 0078  
                                  i1l5234 0068                                    i1l5226 0053  
                                  i1l5218 0040                                    i1l5410 003E  
                                  i1l5402 0030                                    i1l5154 0027  
                                  i1l5146 000B                                    i1l5162 0037  
                                  i1l5170 0009                                    i1l5090 0046  
                                  i1l5082 002E                                    i1l5074 001C  
                                  i1l5066 000D                                    i1l5058 0000  
                                  i1l5340 01C1                                    i1l5332 01B2  
                                  i1l5324 019E                                    i1l5316 017B  
                                  i1l5308 0136                                    i1l5260 009C  
                                  i1l5252 008C                                    i1l5244 007C  
                                  i1l5236 006C                                    i1l5228 0054  
                                  i1l5500 0204                                    i1l5420 005A  
                                  i1l5412 0043                                    i1l5404 0034  
                                  i1l5156 002B                                    i1l5148 0010  
                                  i1l5180 0024                                    i1l5172 000E  
                                  i1l5092 004B                                    i1l5084 0032  
                                  i1l5076 0022                                    i1l5068 0011  
                                  i1l5350 01D2                                    i1l5334 01B7  
                                  i1l5342 01C3                                    i1l5318 0180  
                                  i1l5270 00C0                                    i1l5262 00A0  
                                  i1l5254 0090                                    i1l5246 0080  
                                  i1l5238 0070                                    i1l5190 0006  
                                  i1l5510 0234                                    i1l5502 0211  
                                  i1l5430 0082                                    i1l5422 005F  
                                  i1l5414 004B                                    i1l5406 0038  
                                  i1l5158 002C                                    i1l5182 0029  
                                  i1l5174 0012                                    i1l5166 0000  
                                  i1l5086 0041                                    i1l5078 0025  
                                  i1l5094 0051                                    i1l5360 01EB  
                                  i1l5336 01BA                                    i1l5328 01A7  
                                  i1l5344 01C7                                    i1l5280 00EC  
                                  i1l5272 00DF                                    i1l5264 00A4  
                                  i1l5256 0094                                    i1l5248 0084  
                                  i1l5192 000A                                    i1l5512 0241  
                                  i1l5504 021B                                    i1l5440 00DD  
                                  i1l5432 009C                                    i1l5416 004D  
                                  i1l5408 0039                                    i1l5176 0016  
                                  i1l5168 0006                                    i1l5184 002F  
                                  i1l5096 0056                                    i1l5088 0045  
                                  i1l5600 00C2                                    i1l5370 0223  
                                  i1l5362 0208                                    i1l5354 01DA  
                                  i1l5346 01C8                                    i1l5338 01BC  
                                  i1l5282 00F4                                    i1l5274 00E5  
                                  i1l5258 0098                                    i1l5266 00A8  
                                  i1l5194 000E                                    i1l5514 0245  
                                  i1l5506 0229                                    i1l5450 010C  
                                  i1l5442 00E4                                    i1l5434 00A9  
                                  i1l5426 0068                                    i1l5418 0055  
                                  i1l5178 0020                                    i1l5098 005B  
                                  i1l5610 0149                                    i1l5380 0236  
                                  i1l5372 0224                                    i1l5364 0211  
                                  i1l5356 01DF                                    i1l5348 01CC  
                                  i1l5292 0111                                    i1l5276 00E7  
                                  i1l5284 00F8                                    i1l5268 00A9  
                                  i1l5196 000F                                    i1l5188 0000  
                                  i1l5516 0246                                    i1l5508 0232  
                                  i1l5460 015C                                    i1l5452 0120  
                                  i1l5444 00F1                                    i1l5436 00C3  
                                  i1l5428 0075                                    i1l5604 0124  
                                  i1l6500 0109                                    i1l6430 0000  
                                  i1l5374 0228                                    i1l5366 0216  
                                  i1l5358 01E7                                    i1l5294 0119  
                                  i1l5286 0103                                    i1l5278 00EB  
                                  i1l5198 0014                                    i1l5630 0006  
                                  i1l5710 0098                                    i1l5702 0081  
                                  i1l5518 024E                                    i1l5470 01A2  
                                  i1l5462 0171                                    i1l5454 0127  
                                  i1l5446 00F8                                    i1l5438 00D0  
                                  i1l5390 000F                                    i1l5382 0000  
                                  i1l5622 025E                                    i1l6510 0146  
                                  i1l6502 011E                                    i1l6432 0001  
                                  i1l5720 0030                                    i1l5376 022A  
                                  i1l5368 021E                                    i1l5296 011D  
                                  i1l5288 0108                                    i1l5640 0000  
                                  i1l5632 000F                                    i1l5712 00A6  
                                  i1l5704 0091                                    i1l5480 01B6  
                                  i1l5472 01A6                                    i1l5464 0188  
                                  i1l5456 013B                                    i1l5448 0105  
                                  i1l5392 0014                                    i1l5384 0006  
                                  i1l5616 01F5                                    i1l5608 0142  
                                  i1l6600 03DD                                    i1l6520 0172  
                                  i1l6512 014A                                    i1l6504 0122  
                                  i1l6440 000C                                    i1l6434 0005  
                                  i1l5722 004A                                    i1l5730 0014  
                                  i1l5378 0232                                    i1l5298 0121  
                                  i1l5650 0029                                    i1l5642 0010  
                                  i1l5634 0014                                    i1l5626 0000  
                                  i1l5810 0045                                    i1l5490 01D7  
                                  i1l5482 01B7                                    i1l5474 01A7  
                                  i1l5466 018F                                    i1l5458 0148  
                                  i1l5394 0019                                    i1l5386 000A  
                                  i1l5570 0008                                    i1l5618 01FC  
                                  i1l6610 0406                                    i1l6602 03E1  
                                  i1l6530 01EE                                    i1l6522 0187  
                                  i1l6514 015A                                    i1l6506 0125  
                                  i1l6450 0021                                    i1l6442 0012  
                                  i1l7330 000A                                    i1l6428 0001  
                                  i1l5724 004C                                    i1l5716 0000  
                                  i1l5740 0058                                    i1l5732 0030  
                                  i1l5652 003B                                    i1l5644 0013  
                                  i1l5660 0051                                    i1l5636 001A  
                                  i1l5628 0002                                    i1l5900 007B  
                                  i1l5820 006A                                    i1l5812 004E  
                                  i1l5804 002E                                    i1l5492 01DC  
                                  i1l5484 01BB                                    i1l5476 01AE  
                                  i1l5468 019B                                    i1l5396 0021  
                                  i1l5388 000E                                    i1l6700 065C  
                                  i1l6620 0471                                    i1l6612 042F  
                                  i1l6604 03EE                                    i1l6540 0274  
                                  i1l6532 0201                                    i1l6524 01B9  
                                  i1l6516 016A                                    i1l6508 013C  
                                  i1l6460 0059                                    i1l6452 002A  
                                  i1l6444 0017                                    i1l6436 0000  
                                  i1l7332 0011                                    i1l5566 0001  
                                  i1l5718 0014                                    i1l5742 0086  
                                  i1l5734 0038                                    i1l5750 0008  
                                  i1l5654 0043                                    i1l5646 001E  
                                  i1l5910 00A3                                    i1l5902 0085  
                                  i1l5670 0015                                    i1l5830 0082  
                                  i1l5822 0070                                    i1l5814 0055  
                                  i1l5806 0034                                    i1l5494 01E4  
                                  i1l5486 01CF                                    i1l5478 01B2  
                                  i1l5398 0023                                    i1l5582 0156  
                                  i1l5590 0008                                    i1l6710 0685  
                                  i1l6702 0663                                    i1l6630 049B  
                                  i1l6622 0478                                    i1l6614 045B  
                                  i1l6606 03FB                                    i1l6550 02B9  
                                  i1l6542 0282                                    i1l6534 0232  
                                  i1l6526 01D0                                    i1l6518 016E  
                                  i1l6470 0079                                    i1l6462 005D  
                                  i1l6454 0036                                    i1l6446 001D  
                                  i1l6438 0006                                    i1l7326 0000  
                                  i1l5744 0088                                    i1l5736 003C  
                                  i1l5728 0000                                    i1l5752 000A  
                                  i1l5656 0044                                    i1l5648 0022  
                                  i1l5904 0099                                    i1l5680 003B  
                                  i1l5664 0000                                    i1l5840 00A7  
                                  i1l5824 007A                                    i1l5832 0092  
                                  i1l5816 0063                                    i1l5808 0043  
                                  i1l5496 01E8                                    i1l5576 00D1  
                                  i1l5568 0002                                    i1l5920 000E  
                                  i1l5592 000F                                    i1l6720 06A5  
                                  i1l6712 068B                                    i1l6704 066F  
                                  i1l6640 04BC                                    i1l6632 04A1  
                                  i1l6624 047C                                    i1l6616 0464  
                                  i1l6608 0401                                    i1l6560 033B  
                                  i1l6544 029A                                    i1l6536 0240  
                                  i1l6528 01D6                                    i1l6472 007C  
                                  i1l6480 00AD                                    i1l6456 0039  
                                  i1l6464 0069                                    i1l7328 0002  
                                  i1l5738 0054                                    i1l5770 0033  
                                  i1l5762 0015                                    i1l5658 004B  
                                  i1l5850 0017                                    i1l5906 009E  
                                  i1l5690 0067                                    i1l5682 003D  
                                  i1l5666 000C                                    i1l5818 0069  
                                  i1l5498 0200                                    i1l5578 00D7  
                                  i1l5922 0010                                    i1l5914 0001  
                                  i1l5586 0002                                    i1l6730 06C5  
                                  i1l6722 06A9                                    i1l6714 068E  
                                  i1l6706 0673                                    i1l6650 056D  
                                  i1l6642 04D0                                    i1l6634 04AD  
                                  i1l6626 0480                                    i1l6618 0468  
                                  i1l6570 0365                                    i1l6554 02D5  
                                  i1l6546 02A0                                    i1l6538 0258  
                                  i1l6490 00DA                                    i1l6482 00AF  
                                  i1l6474 008D                                    i1l6466 0074  
                                  i1l6458 004A                                    i1l4980 0004  
                                  i1l5748 0000                                    i1l5772 0037  
                                  i1l5780 004F                                    i1l5764 0028  
                                  i1l5756 0000                                    i1l5852 001B  
                                  i1l5860 0042                                    i1l5844 0000  
                                  i1l5908 00A2                                    i1l5692 0068  
                                  i1l5684 0046                                    i1l5676 0022  
                                  i1l5916 0002                                    i1l5588 0006  
                                  i1l6740 06E6                                    i1l6732 06CB  
                                  i1l6724 06B5                                    i1l6716 0699  
                                  i1l6708 0677                                    i1l6660 05BC  
                                  i1l6652 0571                                    i1l6644 050F  
                                  i1l6636 04B2                                    i1l6628 048D  
                                  i1l6580 039A                                    i1l6572 036F  
                                  i1l6548 02A5                                    i1l6556 02DE  
                                  i1l6492 00DE                                    i1l6476 009C  
                                  i1l6468 0075                                    i1l6900 0013  
                                  i1l4990 001B                                    i1l5790 0069  
                                  i1l5766 0029                                    i1l5758 000C  
                                  i1l5854 002D                                    i1l5846 0009  
                                  i1l5870 0001                                    i1l5694 006F  
                                  i1l5686 004D                                    i1l5678 002A  
                                  i1l5838 0099                                    i1l5918 0008  
                                  i1l5598 00BB                                    i1l6750 070B  
                                  i1l6742 06EA                                    i1l6734 06CF  
                                  i1l6726 06BB                                    i1l6718 06A2  
                                  i1l6670 05E0                                    i1l6662 05C0  
                                  i1l6646 0538                                    i1l6654 05AA  
                                  i1l6638 04B8                                    i1l6590 03BC  
                                  i1l6582 039E                                    i1l6574 0386  
                                  i1l6566 033D                                    i1l6558 0339  
                                  i1l6494 00E2                                    i1l6486 00B3  
                                  i1l6478 00A0                                    i1l6910 003C  
                                  i1l6902 0017                                    i1l4992 0026  
                                  i1l5864 0000                                    i1l5768 0031  
                                  i1l5856 0035                                    i1l5848 000C  
                                  i1l5872 0006                                    i1l5696 0079  
                                  i1l5688 005F                                    i1l5792 0000  
                                  i1l6752 0747                                    i1l6744 06F4  
                                  i1l6728 06BF                                    i1l6736 06DA  
                                  i1l6680 0601                                    i1l6672 05E4  
                                  i1l6656 05B2                                    i1l6648 0564  
                                  i1l6592 03C0                                    i1l6584 03AA  
                                  i1l6576 038A                                    i1l6496 00EE  
                                  i1l6664 05C7                                    i1l6760 0771  
                                  i1l6488 00CE                                    i1l6920 0063  
                                  i1l6912 0040                                    i1l6904 002B  
                                  i1l6850 0000                                    i1l4986 0009  
                                  i1l4978 0001                                    i1l5866 0003  
                                  i1l5786 0056                                    i1l5778 003F  
                                  i1l5858 003C                                    i1l5890 004E  
                                  i1l5882 0033                                    i1l5874 000A  
                                  i1l5794 0012                                    i1l6754 074D  
                                  i1l6746 0700                                    i1l6738 06E0  
                                  i1l6690 062B                                    i1l6674 05EF  
                                  i1l6666 05D8                                    i1l6658 05B8  
                                  i1l6586 03B0                                    i1l6594 03C4  
                                  i1l6578 0396                                    i1l6498 00F2  
                                  i1l6930 0079                                    i1l6914 0042  
                                  i1l6922 006A                                    i1l6906 0032  
                                  i1l6852 0005                                    i1l6860 000C  
                                  i1l4988 0012                                    i1l5788 0064  
                                  i1l5892 0056                                    i1l5884 0038  
                                  i1l5876 001A                                    i1l6748 0706  
                                  i1l6756 0751                                    i1l6692 0635  
                                  i1l6676 05F5                                    i1l6668 05DC  
                                  i1l6596 03D2                                    i1l6588 03B5  
                                  i1l6940 00AD                                    i1l6932 008D  
                                  i1l6924 0072                                    i1l6916 0043  
                                  i1l6908 0035                                    i1l6862 000E  
                                  i1l6854 0006                                    i1l4998 0028  
                                  i1l5894 0064                                    i1l5886 0043  
                                  i1l5878 002A                                    i1l5798 001B  
                                  i1l6694 0640                                    i1l6686 0603  
                                  i1l6678 05FD                                    i1l6598 03D9  
                                  i1l6758 075D                                    i1l6926 0074  
                                  i1l6934 0094                                    i1l6918 0047  
                                  i1l6856 0008                                    i1l5896 006D  
                                  i1l5888 004A                                    i1l6696 0646  
                                  i1l6936 0095                                    i1l6928 0075  
                                  i1l6858 000A                                    i1l5898 0071  
                                  i1l6698 0654                                    i1l6938 0099  
                                  i1l7850 0007                                    i1l7860 0023  
                                  i1l7852 000B                                    i1l6894 0000  
                                  i1l7870 0039                                    i1l7854 0013  
                                  i1l6896 000E                                    i1l7864 002C  
                                  i1l7856 0017                                    i1l7848 0002  
                                  i1l6898 0012                                    i1l7858 001F  
                                  _LCDcmd 0000                                    i1l7868 0035  
                               ??i1_scale 0022                                    _INTPPS 0E90  
                       i1___llmod@counter 0009                                    u620_20 003A  
                                  u700_20 01C7                                    u620_21 0039  
                                  u700_21 01C6                                    _LCDstr 0000  
                                  u621_20 003E                                    u701_20 01CC  
                                  u621_21 003D                                    u701_21 01CB  
                                  u622_20 0049                                    u614_20 0008  
                                  u630_20 003E                                    u710_20 0223  
                                  u702_20 01D2                                    u622_21 0048  
                                  u614_21 0007                                    u630_21 003D  
                                  u710_21 0222                                    u702_21 01D1  
                                  u615_20 0012                                    u631_20 0050  
                                  u711_20 0228                                    u703_20 01D9  
                                  u623_20 000E                                    u615_21 0011  
                                  u631_21 004F                                    u711_21 0227  
                                  u703_21 01D8                                    u623_21 000D  
                                  u616_20 001B                                    u632_20 0062  
                                  u712_20 0236                                    u704_20 01DF  
                                  u800_20 0069                                    u720_20 005F  
                                  u640_20 0022                                    u616_21 001A  
                                  u632_21 0061                                    u712_21 0235  
                                  u704_21 01DE                                    u800_21 0068  
                                  u720_21 005E                                    u640_21 0021  
                                  u624_25 0013                                    u617_20 0021  
                                  u633_20 0074                                    u705_20 01EB  
                                  u801_20 0012                                    u625_20 001E  
                                  u713_20 000E                                    u617_21 0020  
                                  u633_21 0073                                    u705_21 01EA  
                                  u801_21 0011                                    u625_21 001D  
                                  u713_21 000D                                    u721_25 00DE  
                                  u641_25 0026                                    u618_20 0026  
                                  u634_20 0086                                    u706_20 01F9  
                                  u810_20 0091                                    u802_20 002C  
                                  u730_20 01BB                                    u714_20 0014  
                                  u642_20 0032                                    u650_20 001B  
                                  u618_21 0025                                    u634_21 0085  
                                  u810_21 0090                                    u802_21 002B  
                                  u730_21 01BA                                    u714_21 0013  
                                  u642_21 0031                                    u650_21 001A  
                                  u626_25 0009                                    u706_25 01F5  
                                  u722_25 010D                                    u619_20 0031  
                                  u635_20 0098                                    u627_20 001E  
                                  u707_20 0208                                    u811_20 0098  
                                  u731_20 01CF                                    u723_20 0167  
                                  u715_20 0019                                    u619_21 0030  
                                  u635_21 0097                                    u627_21 001D  
                                  u707_21 0207                                    u811_21 0097  
                                  u731_21 01CE                                    u715_21 0018  
                                  u803_25 004F                                    u723_25 0163  
                                  u643_25 0033                                    u651_25 001F  
                                  u636_20 00AA                                    u628_20 0023  
                                  u708_20 0211                                    u820_20 0006  
                                  u804_20 0063                                    u732_20 01D6  
                                  u724_20 017E                                    u716_20 0038  
                                  u644_20 0041                                    u652_20 002B  
                                  u636_21 00A9                                    u628_21 0022  
                                  u708_21 0210                                    u820_21 0005  
                                  u804_21 0062                                    u732_21 01D5  
                                  u716_21 0037                                    u644_21 0040  
                                  u652_21 002A                                    u812_25 009A  
                                  u804_25 005F                                    u724_25 017A  
                                  u660_25 0019                                    u644_25 003D  
                                  _OSCFRQ 0893                                    u637_20 00AF  
                                  u629_20 002E                                    u709_20 0216  
                                  u821_20 000A                                    u813_20 00A7  
                                  u733_20 01DC                                    u717_20 003E  
                                  u661_20 0027                                    u653_20 0035  
                                  u637_21 00AE                                    u629_21 002D  
                                  u709_21 0215                                    u821_21 0009  
                                  u813_21 00A6                                    u733_21 01DB  
                                  u717_21 003D                                    u661_21 0026  
                                  u653_21 0034                                    u805_25 006B  
                                  u725_25 0189                                    u661_25 0023  
                                  u645_25 0047                                    u653_25 0031  
                                  u670_20 000E                                    u814_20 0009  
                                  u830_20 007B                                    u822_20 002A  
                                  u806_20 0076                                    u734_20 01E8  
                                  u718_20 0043                                    u646_20 0051  
                                  u638_20 0006                                    u670_21 000D  
                                  u814_21 0008                                    u830_21 007A  
                                  u822_21 0029                                    u806_21 0075  
                                  u734_21 01E7                                    u718_21 0042  
                                  u646_21 0050                                    u638_21 0005  
                                  u726_25 019C                                    u662_25 002D  
                                  u654_25 003A                                    u671_20 0014  
                                  u831_20 008F                                    u807_20 007A  
                                  u735_20 01F6                                    u727_20 01A6  
                                  u719_20 005A                                    u663_20 0037  
                                  u751_20 0008                                    u647_20 0056  
                                  u639_20 0011                                    u655_20 0044  
                                  u671_21 0013                                    u807_21 0079  
                                  u727_21 01A5                                    u719_21 0059  
                                  u663_21 0036                                    u751_21 0007  
                                  u647_21 0055                                    u639_21 0010  
                                  u655_21 0043                                    u815_25 000D  
                                  u831_25 008B                                    u823_25 003D  
                                  u735_25 01F2                                    u680_20 00CA  
                                  u672_20 0019                                    u816_20 001B  
                                  u832_20 009E                                    u824_20 0049  
                                  u808_20 0081                                    u736_20 0211  
                                  u664_20 0006                                    u752_20 00D7  
                                  u656_20 0049                                    u648_20 0005  
                                  u680_21 00C8                                    u672_21 0018  
                                  u816_21 001A                                    u832_21 009D  
                                  u824_21 0048                                    u808_21 0080  
                                  u736_21 0210                                    u664_21 0005  
                                  u752_21 00D6                                    u656_21 0048  
                                  u648_21 0004                                    u760_25 0010  
                                  u736_25 020D                                    u728_25 01A8  
                                  u681_20 00CB                                    u673_20 0037  
                                  u817_20 002D                                    u761_20 001A  
                                  u833_20 00A2                                    u737_20 0229  
                                  u729_20 01B6                                    u657_20 0008  
                                  u649_20 0010                                    u753_20 0006  
                                  u673_21 0036                                    u817_21 002C  
                                  u761_21 0019                                    u833_21 00A1  
                                  u737_21 0228                                    u729_21 01B5  
                                  u657_21 0007                                    u649_21 000F  
                                  u753_21 0005                                    u817_25 0029  
                                  u825_25 0057                                    u809_25 0083  
                                  u737_25 0225                                    u665_25 000A  
                                  u690_20 012D                                    u682_20 00DF  
                                  u674_20 0040                                    u762_20 0010  
                                  u826_20 0063                                    u770_20 0020  
                                  u738_20 0245                                    u666_20 0016  
                                  u834_20 0008                                    u754_20 000F  
                                  u690_21 012C                                    u682_21 00DE  
                                  u674_21 003F                                    u762_21 000F  
                                  u826_21 0062                                    u770_21 001F  
                                  u738_21 0244                                    u666_21 0015  
                                  u834_21 0007                                    u754_21 000E  
                                  u818_25 0036                                    u658_25 000C  
                                  u683_20 00EB                                    u675_20 0046  
                                  u819_20 0042                                    u659_20 0018  
                                  u667_20 0020                                    u835_20 000E  
                                  u755_20 00C2                                    u683_21 00EA  
                                  u675_21 0045                                    u819_21 0041  
                                  u659_21 0017                                    u667_21 001F  
                                  u835_21 000D                                    u755_21 00C1  
                                  u691_25 0130                                    u763_25 0014  
                                  u827_25 0067                                    u771_25 0047  
                                  u667_25 001C                                    u692_20 0151  
                                  u676_20 004B                                    u764_20 0022  
                                  u828_20 0071                                    u772_20 005F  
                                  u756_20 0149                                    u692_21 0150  
                                  u676_21 004A                                    u764_21 0021  
                                  u828_21 0070                                    u772_21 005E  
                                  u756_21 0148                                    u692_23 014D  
                                  u684_25 00EE                                    u780_25 0099  
                                  u772_25 005B                                    u668_25 0025  
                                  u693_20 0180                                    u685_20 00FF  
                                  u677_20 0064                                    u829_20 0077  
                                  u781_20 00A6                                    u669_20 002F  
                                  u757_20 01FC                                    u693_21 017F  
                                  u685_21 00FE                                    u677_21 0063  
                                  u829_21 0076                                    u781_21 00A5  
                                  u669_21 002E                                    u757_21 01FB  
                                  u765_25 0023                                    u773_25 0069  
                                  u782_20 0014                                    u790_20 0008  
                                  u694_20 0199                                    u686_20 0103  
                                  u678_20 0068                                    u766_20 003B  
                                  u758_20 0006                                    u774_20 0075  
                                  u950_20 000C                                    u782_21 0013  
                                  u790_21 0007                                    u694_21 0198  
                                  u686_21 0102                                    u678_21 0067  
                                  u766_21 003A                                    u758_21 0005  
                                  u774_21 0074                                    u950_21 000B  
                                  u766_25 0037                                    u783_20 0030  
                                  u695_20 019E                                    u687_20 0108  
                                  u679_20 00C0                                    u791_20 000C  
                                  u775_20 0079                                    u951_20 0036  
                                  u783_21 002F                                    u695_21 019D  
                                  u687_21 0107                                    u679_21 00BF  
                                  u791_21 000B                                    u775_21 0078  
                                  u951_21 0035                                    u679_25 00BC  
                                  u767_25 0045                                    u759_25 000B  
                                  u784_20 004A                                    u688_20 011D  
                                  u792_20 0022                                    u768_20 0051  
                                  u776_20 0080                                    u960_20 01D0  
                                  u952_20 0069                                    u784_21 0049  
                                  u688_21 011C                                    u768_21 0050  
                                  u776_21 007F                                    u960_21 01CF  
                                  u952_21 0068                                    u784_25 0046  
                                  u696_25 01A8                                    u792_25 001E  
                                  u785_20 0014                                    u697_20 01B2  
                                  u689_20 0121                                    u793_20 0037  
                                  u769_20 000C                                    u961_20 01EE  
                                  u953_20 0074                                    u785_21 0013  
                                  u697_21 01B1                                    u689_21 0120  
                                  u793_21 0036                                    u769_21 000B  
                                  u961_21 01ED                                    u953_21 0073  
                                  u777_25 0082                                    u786_20 0030  
                                  u698_20 01B7                                    u794_20 003E  
                                  u778_20 0090                                    u970_20 0386  
                                  u962_20 0201                                    u954_20 00AC  
                                  u786_21 002F                                    u698_21 01B6  
                                  u794_21 003D                                    u778_21 008F  
                                  u970_21 0385                                    u962_21 0200  
                                  u954_21 00AB                                    u962_25 01FD  
                                  u787_20 003C                                    u699_20 01C1  
                                  u779_20 0097                                    u971_20 0396  
                                  u963_20 0240                                    u955_20 00DA  
                                  u787_21 003B                                    u699_21 01C0  
                                  u779_21 0096                                    u971_21 0395  
                                  u963_21 023F                                    u955_21 00D9  
                                  u795_25 0040                                    u963_25 023C  
                                  u788_20 0058                                    u796_20 004E  
                                  u980_20 04B2                                    u972_20 039E  
                                  u964_20 0258                                    u956_20 00DE  
                                  u788_21 0057                                    u796_21 004D  
                                  u980_21 04B1                                    u972_21 039D  
                                  u964_21 0257                                    u956_21 00DD  
                                  u949_20 001A                                    u789_20 0086  
                                  u797_20 0055                                    u981_20 05B1  
                                  u973_20 03AA                                    u965_20 0274  
                                  u957_20 0109                                    u949_21 0019  
                                  u789_21 0085                                    u797_21 0054  
                                  u981_21 05B0                                    u973_21 03A9  
                                  u965_21 0273                                    u957_21 0108  
                                  u789_25 0082                                    u990_20 0663  
                                  u982_20 05C6                                    u974_20 03D1  
                                  u966_20 0282                                    u958_20 013C  
                                  u990_21 0662                                    u982_21 05C5  
                                  u974_21 03D0                                    u966_21 0281  
                                  u958_21 013B                                    u798_25 0057  
                                  u974_25 03CD                                    u966_25 027E  
                                  u799_20 0064                                    u991_20 066F  
                                  u983_20 05E0                                    u975_20 03EE  
                                  u967_20 029A                                    u959_20 016E  
                                  u799_21 0063                                    u991_21 066E  
                                  u983_21 05DF                                    u975_21 03ED  
                                  u967_21 0299                                    u959_21 016D  
                                  u975_25 03EA                                    u992_20 0677  
                                  u984_20 05F5                                    u976_20 03FB  
                                  u968_20 0364                                    u992_21 0676  
                                  u984_21 05F4                                    u976_21 03FA  
                                  u968_21 0363                                    u968_25 0360  
                                  u993_20 0685                                    u985_20 05FD  
                                  u977_20 0470                                    u969_20 036F  
                                  u993_21 0684                                    u985_21 05FC  
                                  u977_21 046F                                    u969_21 036E  
                                  u993_25 0681                                    u994_20 0699  
                                  u986_20 062A                                    u978_20 048D  
                                  u994_21 0698                                    u986_21 0629  
                                  u978_21 048C                                    u994_25 0695  
                                  u986_25 0626                                    u978_25 0489  
                                  u995_20 06A9                                    u987_20 0635  
                                  u979_20 049B                                    u995_21 06A8  
                                  u987_21 0634                                    u979_21 049A  
                                  u979_25 0497                                    u996_20 06B5  
                                  u988_20 0640                                    u996_21 06B4  
                                  u988_21 063F                                    u988_25 063C  
                                  u997_20 06C5                                    u989_20 0654  
                                  u997_21 06C4                                    u989_21 0653  
                                  u989_25 0650                                    u998_20 06D9  
                                  u998_21 06D8                                    u999_20 06E0  
                                  u999_21 06DF                          __end_of___xxtofl 00AD  
                           i1sprintf@flag 001D                             i1sprintf@eexp 001B  
                           i1sprintf@fval 0021                               LCDsend2x4@c 0005  
                           i1sprintf@prec 0025                          __end_of__powers_ 0034  
                                  _Timer1 0000      __end_of_TMR1_DefaultInterruptHandler 0001  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 0000  
                                  ___flge 0000                                    ___fleq 0000  
                               ??___fladd 0045                             ?i1_LCDsend2x4 0002  
                                  ___wmul 0000                                 ??___awdiv 000B  
                               ??___flneg 0004                                 ??___awmod 0004  
                               ??___flmul 0018                                 ??___flsub 004D  
                               ??___fltol 0043                                 ??___lldiv 0008  
                               ??___llmod 0016                                 ??___lwdiv 000A  
                               ??___lwmod 0004                          ?_TMR0_Initialize 0000  
                                  _fround 0000                          ___awdiv@quotient 000E  
                         ___awmod@divisor 0000                           ___awmod@counter 0005  
                           i1__tdiv_to_l_ 0000                         __end_ofi1___fladd 0238  
                       __end_ofi1___awdiv 0060                         __end_ofi1___flneg 000B  
                       __end_ofi1___awmod 0053                           _ADCC_Initialize 0000  
                       __end_ofi1___flmul 0257                         __end_ofi1___flsub 0020  
                       __end_ofi1___fltol 0075                         __end_ofi1___lldiv 005A  
                       __end_ofi1___llmod 004B                            _PMD_Initialize 0000  
                       __end_ofi1___lwdiv 003C                         __end_ofi1___lwmod 0034  
                               ??_isdigit 0000                        __size_of__Umul8_16 0024  
                         i1___fltol@sign1 0027  TMR1_SetInterruptHandler@InterruptHandler 0000  
                               ??_sprintf 0016                   __end_of_TMR1_WriteTimer 0011  
                       __end_ofi1_isdigit 0012                       __size_ofi1_WriteI2C 004B  
                              ___flge@ff1 0000                                ___flge@ff2 0004  
                        ?_TMR1_Initialize 0000                              ___xxtofl@arg 000A  
                            ___xxtofl@exp 0009                         _SYSTEM_Initialize 0000  
                            ___xxtofl@val 0000                                ___fleq@ff1 0000  
                              ___fleq@ff2 0004                   __end_of__initialization 000F  
                              ___flneg@f1 0000                        ?_SYSTEM_Initialize 0000  
                       __end_ofi1_sprintf 0777                       __size_ofi1___xxtofl 00AC  
                              ___fltol@f1 003F                              ?i1__Umul8_16 0000  
                               ?i1_LCDcmd 0000                                 ?i1_LCDstr 0009  
                          __pcstackCOMMON 0000                            ??i1_LCDsend2x4 0003  
                     ??_SYSTEM_Initialize 0002                                 ?_TMR0_ISR 0000  
                               ?_TMR1_ISR 0000             ?_TMR1_DefaultInterruptHandler 0000  
                           __end_of_scale 027E                    __end_of_PMD_Initialize 0008  
                               ?i1___flge 0000                                 ?i1___fleq 0000  
                          ?i1__tdiv_to_l_ 0000                                 ?i1___wmul 0000  
                              __div_to_l_ 0000                                 ?i1_fround 001E  
                             i1sprintf@ap 0012                               i1sprintf@sp 0000  
                            ??_LCDsend2x4 0003                           __div_to_l_@exp1 000E  
                         __div_to_l_@cntr 000D                                   ??_scale 002E  
               __end_of_SYSTEM_Initialize 0016                           __div_to_l_@quot 0009  
                            sprintf@width 002D                                __pbssBANK0 0000  
                              __pbssBANK1 0000                                __pbssBANK2 0000  
                              __pbssBANK3 0000                                   ?_LCDcmd 0000  
                                 ?_LCDstr 0009                                   LCDcmd@c 0008  
                          i1___xxtofl@arg 000A                            i1___xxtofl@exp 0009  
                          i1___xxtofl@val 0000                            _count_time_ISR 0000  
                           __div_to_l_@f1 0000                             __div_to_l_@f2 0004  
                                 LCDstr@c 000E                                   LCDstr@p 0009  
                              ??i1_LCDcmd 0008                                ??i1_LCDstr 000B  
                       __end_of__Umul8_16 0024                                   ?_Timer1 0000  
                              __pmaintext 0000                                   ?___flge 0000  
                                 ?___fleq 0000                                   ?___wmul 0000  
                              ??_TMR0_ISR 0000                                ??_TMR1_ISR 000E  
                 __end_of_ADCC_Initialize 0016                                __pintentry 0000  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                      __end_of_LCDsend2x4 00D4                                   ?_fround 002A  
                                 _ADPREVH 008F                                   _ADPREVL 008E  
                               ?_WriteI2C 0000                                   _ADSTPTH 0113  
                                 _ADSTPTL 0112                                ??i1___flge 0008  
                              ??i1___fleq 0008                           ?_PMD_Initialize 0000  
                              ??i1___wmul 0004                                   u1000_20 06F4  
                                 u1000_21 06F3                                   u1001_20 0700  
                                 u1001_21 06FF                                   u1002_20 075D  
                                 u1002_21 075C                                   u1003_20 0771  
                                 u1003_21 0770                                   u1007_20 0005  
                                 u1015_20 000E                                   u1007_21 0004  
                                 u1015_21 000D                                   u1016_20 003C  
                                 u1104_20 0011                                   u1016_21 003B  
                                 u1104_21 0010                             i1_fround$2780 002C  
                           i1_fround$2781 0028                                   u1017_20 0072  
                                 u1017_21 0071                                   u1220_20 002C  
                                 u1220_21 002B                         ?_i2c1_driver_open 0000  
                                 u1221_20 0030                                   u1213_20 0007  
                                 u1221_21 002F                                   u1213_21 0006  
                                 u1222_20 0035                                   u1214_20 000B  
                                 u1222_21 0034                                   u1214_21 000A  
                                 u1223_20 0039                                   u1215_20 0013  
                                 u1223_21 0038                                   u1215_21 0012  
                                 u1216_20 0017                                   u1216_21 0016  
                                 u1217_20 001F                                   u1217_21 001E  
                                 u1218_20 0023                                   u1218_21 0022  
                                 u1219_20 0027                                   u1219_21 0026  
                      i1___llmod@dividend 0004                        i1___awdiv@dividend 0009  
                               ?___xxtofl 0000                                   _LCDchar 0000  
                              ??i1_fround 0022                                   _LCDinit 0000  
                                 _LCDsend 0000                        ??_i2c1_driver_open 0000  
                                 _INT_ISR 0000*                                  _OSCCON1 088D  
                                 _OSCCON3 088F                       i1__Umul8_16@product 0004  
                                 _OSCTUNE 0892                                   _SSP1ADD 018D  
                                 _SLRCONA 0F3B                                   _SLRCONB 0F46  
                                 _SLRCONC 0F51                                   _SLRCOND 0F5C  
                                 _SLRCONE 0F67                                   _SSP1BUF 018C  
                                 _SSP1MSK 018E                          ?_TMR1_WriteTimer 0000  
                            LCDsend2x4@hc 0006                              LCDsend2x4@lc 0007  
                                 i1_scale 0000                    __end_of_count_time_ISR 00B5  
                          i1sprintf@width 001F                           __size_of_LCDcmd 0008  
                      _i2c1_driver_i2cISR 0000                           __size_of_LCDstr 001B  
                            i1fround@prec 0030                         __end_of__npowers_ 0034  
                              _scale$2538 003A                        i1___awdiv@quotient 0002  
                         __size_of_Timer1 0019                           __size_of___flge 008B  
                         __size_of___fleq 004F                                   ___fladd 0000  
                            ??i1_WriteI2C 0000                                   ___awdiv 0000  
                                 ___flneg 0000                                   ___awmod 0000  
                                 ___flmul 0000                                   ___flsub 0000  
                                 ___fltol 0000                                   ___lldiv 0000  
                         __size_of___wmul 0020                                   ___llmod 0000  
                                 ___lwdiv 0000                                   ___lwmod 0000  
                         ??i1__tdiv_to_l_ 0008                                ??_WriteI2C 0000  
                         __size_of_fround 0189                                 i1LCDcmd@c 0008  
                            ??i1___xxtofl 0004                                   __ptext1 0000  
                                 __ptext2 0000                                   __ptext3 0000  
                                 __ptext4 0000                                   __ptext5 0000  
                                 __ptext6 0000                                   __ptext7 0000  
                                 __ptext8 0000                                   __ptext9 0000  
          ??_TMR1_DefaultInterruptHandler 0000                                 i1LCDstr@c 0000  
                               i1LCDstr@p 0009                                 _T1CONbits 020E  
                             ?__div_to_l_ 0000                                   _dpowers 0000  
                       i1___lwdiv@divisor 0006                     _OSCILLATOR_Initialize 0000  
                                 _isdigit 0000                         i1___lwdiv@counter 000D  
                              ??___xxtofl 0004                          ___awmod@dividend 0002  
       __size_of_TMR1_SetInterruptHandler 0009                                   _minutes 0002  
                ??_PIN_MANAGER_Initialize 0000                                   _seconds 0000  
               ?_TMR1_SetInterruptHandler 0000                      __end_ofi1_LCDsend2x4 00B3  
                                 main@buf 0036                __size_of_SYSTEM_Initialize 0016  
                                 _sprintf 0000                      end_of_initialization 000F  
                      __end_ofi1_WriteI2C 004B                           ?_count_time_ISR 0000  
                          i1LCDsend2x4@hc 0006                            i1LCDsend2x4@lc 0007  
                               i1_LCDchar 0000                           ___lldiv@divisor 0000  
                      __end_ofi1___xxtofl 00AC                           ___lldiv@counter 000D  
                    __size_ofi1__Umul8_16 0023                                   psplit$0 16005D  
                         i1__div_to_l_@f1 0000                           i1__div_to_l_@f2 0004  
                              _sensor_ISR 0000                          ?_ADCC_Initialize 0000  
                          __tdiv_to_l_@f1 0000                            __tdiv_to_l_@f2 0004  
                   i1___wmul@multiplicand 0002                             ??__tdiv_to_l_ 0008  
                   i1__Umul8_16@word_mpld 0006                  _TMR0_SetInterruptHandler 0000* 
                       count_time_ISR@buf 0028                               ___fladd@grs 0003  
                           ___xxtofl@sign 0008                                 _TRISCbits 0013  
                               i1___fladd 0000                                 i1___awdiv 0000  
                               i1___flneg 0000                                 i1___awmod 0000  
                               i1___flmul 0000                                 i1___flsub 0000  
                               i1___fltol 0000                                 i1___lldiv 0000  
                               i1___llmod 0000                                 i1___lwdiv 0000  
                               i1___lwmod 0000                               ___flmul@grs 001F  
                          __end_of_LCDcmd 0008                            __end_of_LCDstr 001B  
                               i1_isdigit 0000                                ?i1_LCDchar 0000  
                          LCDsend2x4@mode 0002                       __size_of__div_to_l_ 00AF  
                               i1_sprintf 0000                         __size_ofi1_LCDcmd 0007  
                       __size_ofi1_LCDstr 001B                            __end_of_Timer1 0019  
                          __end_of___flge 008B                            __end_of___fleq 004F  
                          __end_of___wmul 0020                         pnum$text1_split_1 005D  
                       __size_of_TMR1_ISR 0017                         i1___lwmod@divisor 0000  
                  ?_OSCILLATOR_Initialize 0000                            __end_of_fround 0189  
                       i1___lwmod@counter 0005                         __size_ofi1___flge 008A  
                       __size_ofi1___fleq 004E                       start_initialization 0000  
                       __size_ofi1___wmul 001F           __size_of_PIN_MANAGER_Initialize 003F  
                     __end_of__tdiv_to_l_ 00B0                                ?i1___fladd 0031  
                              ?i1___awdiv 0007                                ?i1___flneg 0000  
                              ?i1___awmod 0000                                ?i1___flmul 0004  
                              ?i1___flsub 0045                                ?i1___fltol 001E  
                              ?i1___lldiv 0000                                ?i1___llmod 0000  
                       __size_ofi1_fround 0188                                ?i1___lwdiv 0006  
                              ?i1___lwmod 0000                          WriteI2C@data_out 0001  
                                ??_LCDcmd 0008                                  ??_LCDstr 000B  
                         ___llmod@divisor 000E                                ?i1_isdigit 0000  
                         ___llmod@counter 0017                             ?i1__div_to_l_ 0000  
                            i1sprintf@val 0017                                  ??_Timer1 0002  
                __size_of_TMR1_Initialize 001F                                ?i1_sprintf 0000  
                                ??___flge 0008                                  ??___fleq 0008  
                        ??_PMD_Initialize 0000                                  ??___wmul 0004  
                               __Umul8_16 0000                        i1___awmod@dividend 0002  
                                ??_fround 002E                             sprintf@tmpval 0021  
                               ___fladd@a 0041                                 ___fladd@b 003D  
                              fround@prec 003C                         __size_of_WriteI2C 005A  
                   __size_ofi1_LCDsend2x4 00B3                                  ?_LCDchar 0000  
                               ___flmul@a 0014                                 ___flmul@b 0010  
                                ?_LCDinit 0000                                 ___flsub@a 0004  
                               ___flsub@b 0008                                  ?_LCDsend 0000  
                               ___latbits 0002                                  ?_INT_ISR 0000  
                           __pcstackBANK0 0000                             __pcstackBANK1 0000  
                           __pcstackBANK2 0000                             __pcstackBANK3 0000  
                       __size_of___xxtofl 00AD                              _isdigit$2131 0000  
                                LCDchar@c 0008                           i1___xxtofl@sign 0008  
                                ?i1_scale 001E                                  LCDsend@c 0003  
                             sprintf@flag 002B                               sprintf@eexp 0029  
               __size_of_i2c1_driver_open 000C                               sprintf@fval 002F  
                             sprintf@prec 0033                            ??i1__div_to_l_ 0008  
                             ??i1_LCDchar 0008                                 __pnvBANK1 0000  
                        ___lwdiv@dividend 0008                    _PIN_MANAGER_Initialize 0000  
        __end_of_TMR1_SetInterruptHandler 0009                  i1__Umul8_16@multiplicand 0000  
                                ?___fladd 003D                                  ?___awdiv 0007  
                                ?___flneg 0000                                  ?___awmod 0000  
                                ?___flmul 0010                                  ?___flsub 0004  
                                ?___fltol 003F                              i1_LCDsend2x4 0000  
                                ?___lldiv 0000                                  ?___llmod 000E  
                               __npowers_ 0000                                ?__Umul8_16 0000  
                                ?___lwdiv 0006                                  ?___lwmod 0000  
             _i2c1_driver_busCollisionISR 0000                         i1___awdiv@divisor 0007  
                       i1___awdiv@counter 0000              ??_INTERRUPT_InterruptManager 000E  
                             __tdiv_to_l_ 0000                              ??__div_to_l_ 0008  
                                ?_isdigit 0000                          ??_count_time_ISR 000E  
                             ??i1___fladd 0039                               ??i1___awdiv 000B  
                             ??i1___flneg 0004                               ??i1___awmod 0004  
                             ??i1___flmul 000C                               ??i1___flsub 000E  
                             ??i1___fltol 0022                               ??i1___lldiv 0008  
                             ??i1___llmod 0008                          ___lwdiv@quotient 000C  
                             ??i1___lwdiv 000A                               ??i1___lwmod 0004  
                                _T0CKIPPS 0E91                                  ?_sprintf 000C  
                          __size_of_scale 027E                            i1_isdigit$2131 0000  
                       ??_TMR0_Initialize 0000                            ___wmul@product 0004  
                             ??i1_isdigit 0000                                  _PIE0bits 0716  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                           i1LCDsend2x4@c 0005                                  i1_LCDcmd 0000  
                __size_of_TMR1_WriteTimer 0011                                  i1_LCDstr 0000  
     __size_of_INTERRUPT_InterruptManager 003F                ??_TMR0_SetInterruptHandler 0000  
                                _PIR0bits 070C                        __end_of__div_to_l_ 00AF  
                                _PIR3bits 070F                                  _PIR4bits 0710  
                             ??i1_sprintf 0008                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR0_ISR 0000* 
                                _TMR1_ISR 0000                                  _SSP1STAT 018F  
                       ??_TMR1_Initialize 0002                                  i1___flge 0000  
                   __end_ofi1__tdiv_to_l_ 00B0                                  i1___fleq 0000  
                              _ADCON0bits 0093                                _ADCON1bits 0094  
                              _ADCON2bits 0095                                _ADCON3bits 0096  
                       ___wmul@multiplier 0000                                  i1___wmul 0000  
                      i1WriteI2C@data_out 0001                                  i1_fround 0000  
                        __size_of_LCDchar 0009                           i1sprintf@tmpval 0013  
                        __size_of_LCDinit 0074                          __size_of_LCDsend 0053  
                        i1__tdiv_to_l_@f1 0000                          i1__tdiv_to_l_@f2 0004  
                        __size_ofi1_scale 027C                             ??i1__Umul8_16 0002  
                              _ADSTATbits 0097                         i1___awmod@divisor 0000  
                 ??_OSCILLATOR_Initialize 0000                               ??__Umul8_16 0002  
                       i1___awmod@counter 0005                          __size_of___fladd 0297  
                        __size_of___awdiv 0060                          __size_of___flneg 000C  
                        __size_of___awmod 0054                          __size_of___flmul 0257  
                        __size_of___flsub 0036                          __size_of___fltol 0075  
                        __size_of___lldiv 005B                          __size_of___llmod 004B  
                        __size_of___lwdiv 003D                          __size_of___lwmod 0035  
                                _WriteI2C 0000                               _fround$2536 0038  
                             _fround$2537 0034                  _TMR1_SetInterruptHandler 0000  
                        i1LCDsend2x4@mode 0002                     _TMR1_InterruptHandler 0000  
                    __end_ofi1__div_to_l_ 00AF                                sprintf@val 0025  
                                ___xxtofl 0000                  __size_of_ADCC_Initialize 0016  
                        __size_of_isdigit 0013                                i1LCDchar@c 0008  
                         ___lwdiv@divisor 0006                           ___lwdiv@counter 000B  
                                __ptext10 0000                                  __ptext11 0000  
                                __ptext20 0000                                  __ptext12 0000  
                                __ptext21 0000                                  __ptext13 0000  
                              _T1GCONbits 020F                                  __ptext30 0000  
                                __ptext22 0000                                  __ptext14 0000  
                                __ptext31 0000                                  __ptext23 0000  
                                __ptext15 0000                                  __ptext40 0000  
                                __ptext32 0000                                  __ptext24 0000  
                                __ptext16 0000                                  __ptext41 0000  
                                __ptext33 0000                                  __ptext25 0000  
                                __ptext17 0000                                  __ptext50 0000  
                                __ptext42 0000                                  __ptext34 0000  
                                __ptext26 0000                                  __ptext18 0000  
                                __ptext51 0000                                  __ptext43 0000  
                                __ptext35 0000                                  __ptext27 0000  
                                __ptext19 0000                                  __ptext60 0000  
                                __ptext52 0000                                  __ptext44 0000  
                                __ptext36 0000                                  __ptext28 0000  
                                __ptext61 0000                                  __ptext53 0000  
                                __ptext45 0000                                  __ptext37 0000  
                                __ptext29 0000                                  __ptext70 0000  
                                __ptext62 0000                                  __ptext54 0000  
                                __ptext46 0000                                  __ptext38 0000  
                                __ptext63 0000                                  __ptext55 0000  
                                __ptext47 0000                                  __ptext64 0000  
                                __ptext56 0000                                  __ptext48 0000  
                                __ptext65 0000                                  __ptext57 0000  
                                __ptext49 0000                                  __ptext66 0000  
                                __ptext58 0000                                  __ptext67 0000  
                                __ptext59 0000                                  __ptext68 0000  
                                __ptext69 0000                              _SSP1CON1bits 0190  
                            _SSP1CON2bits 0191                                  __powers_ 0000  
                        __size_of_sprintf 0000                        i1___lwdiv@dividend 0008  
                        _i2c1_driver_open 0000                             __size_of_main 003B  
                               pnum$text1 0016                                  int$flags 007E  
                     __end_ofi1__Umul8_16 0023        __end_of_INTERRUPT_InterruptManager 003F  
              _INTERRUPT_InterruptManager 0000                              _SSP1STATbits 018F  
                       ??_TMR1_WriteTimer 0002                        i1___lwdiv@quotient 000B  
                              _INTCONbits 000B                         i1__div_to_l_@exp1 0005  
                       i1__div_to_l_@cntr 0004                         i1__div_to_l_@quot 0000  
                                isdigit@c 0001                                  scale@scl 003E  
                              _LCDsend2x4 0000                        _EXT_INT_Initialize 0000* 
                                intlevel1 0000*                                sprintf@ap 0020  
                        __tdiv_to_l_@exp1 0011                          __tdiv_to_l_@cntr 0010  
                               sprintf@sp 000C                          __tdiv_to_l_@quot 000C  
                  i1__Umul8_16@multiplier 0008                          ___lwmod@dividend 0002  
                        ___lldiv@dividend 0004                   ?_PIN_MANAGER_Initialize 0000  
                     ?_EXT_INT_Initialize 0000                              ?__tdiv_to_l_ 0000  
                           __pstringtext1 0000                             __pstringtext2 0000  
                           __pstringtext3 0000                             __pstringtext4 0000  
                           __pstringtext5 0000                             __pstringtext6 0000  
                           __pstringtext7 0000                             __pstringtext8 0000  
                  __Umul8_16@multiplicand 0000                      ??_EXT_INT_Initialize 0000  
                                sprintf@c 0035                                  sprintf@f 000E  
                              _SSP1DATPPS 0EC6                                _SSP1CLKPPS 0EC5  
                        ___lldiv@quotient 0009                           ___lwmod@divisor 0000  
                         _TMR0_Initialize 0000*                          ___lwmod@counter 0005  
                            _projectState 0000                             ___fladd@signs 0000  
          __end_of_PIN_MANAGER_Initialize 003F                         ??_ADCC_Initialize 0000  
                            ___fladd@aexp 0001                              ___fladd@bexp 0002  
                    __Umul8_16@multiplier 0008                               i1__Umul8_16 0000  
                         _TMR1_Initialize 0000                         __Umul8_16@product 0004  
